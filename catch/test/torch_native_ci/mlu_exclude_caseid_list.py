MLU_EXCLUDE_CASEID_LIST = [
"test_ao_sparsity_py_TestQuantizedSparseKernels_test_sparse_qlinear",
"test_ao_sparsity_py_TestQuantizedSparseLayers_test_sparse_qlinear",
"test_ao_sparsity_py_TestQuantizedSparseLayers_test_sparse_qlinear_serdes",
"test_ao_sparsity_py_TestFakeSparsity_test_jit_trace",
"test_ao_sparsity_py_TestFakeSparsity_test_masking_logic",
"test_ao_sparsity_py_TestFakeSparsity_test_state_dict_preserved",
"test_ao_sparsity_py_TestFakeSparsity_test_weights_parametrized",
"test_ao_sparsity_py_TestBaseSparsifier_test_constructor",
"test_ao_sparsity_py_TestBaseSparsifier_test_mask_squash",
"test_ao_sparsity_py_TestBaseSparsifier_test_mask_squash_with_params1",
"test_ao_sparsity_py_TestBaseSparsifier_test_mask_squash_with_params2",
"test_ao_sparsity_py_TestBaseSparsifier_test_mask_squash_with_params3",
"test_ao_sparsity_py_TestBaseSparsifier_test_prepare_config",
"test_ao_sparsity_py_TestBaseSparsifier_test_state_dict",
"test_ao_sparsity_py_TestBaseSparsifier_test_step",
"test_ao_sparsity_py_TestWeightNormSparsifier_test_constructor",
"test_ao_sparsity_py_TestWeightNormSparsifier_test_mask_squash",
"test_ao_sparsity_py_TestWeightNormSparsifier_test_prepare",
"test_ao_sparsity_py_TestWeightNormSparsifier_test_sparsity_levels",
"test_ao_sparsity_py_TestWeightNormSparsifier_test_step",
"test_ao_sparsity_py_TestWeightNormSparsifier_test_step_2_of_4",
"test_ao_sparsity_py_TestNearlyDiagonalSparsifier_test_constructor",
"test_ao_sparsity_py_TestNearlyDiagonalSparsifier_test_mask_squash",
"test_ao_sparsity_py_TestNearlyDiagonalSparsifier_test_prepare",
"test_ao_sparsity_py_TestNearlyDiagonalSparsifier_test_sparsity_levels",
"test_ao_sparsity_py_TestNearlyDiagonalSparsifier_test_step",
"test_ao_sparsity_py_TestBasePruner_test_constructor",
"test_ao_sparsity_py_TestBasePruner_test_prepare_conv2d",
"test_ao_sparsity_py_TestBasePruner_test_prepare_linear",
"test_ao_sparsity_py_TestBasePruner_test_squash_mask_conv2d",
"test_ao_sparsity_py_TestBasePruner_test_squash_mask_linear",
"test_ao_sparsity_py_TestBasePruner_test_step_conv2d",
"test_ao_sparsity_py_TestBasePruner_test_step_linear",
"test_ao_sparsity_py_TestScheduler_test_constructor",
"test_ao_sparsity_py_TestScheduler_test_lambda_scheduler",
"test_ao_sparsity_py_TestScheduler_test_order_of_steps",
"test_ao_sparsity_py_TestScheduler_test_step",
"test_ao_sparsity_py_TestCubicScheduler_test_constructor",
"test_ao_sparsity_py_TestCubicScheduler_test_step",
"test_ao_sparsity_py_TestComposability_test_convert_without_squash_mask",
"test_ao_sparsity_py_TestComposability_test_fusion_before_s_prep",
"test_ao_sparsity_py_TestComposability_test_q_prep_before_s_prep",
"test_ao_sparsity_py_TestComposability_test_qat_prep_before_s_prep",
"test_ao_sparsity_py_TestComposability_test_s_prep_before_fusion",
"test_ao_sparsity_py_TestComposability_test_s_prep_before_q_prep",
"test_ao_sparsity_py_TestComposability_test_s_prep_before_qat_prep",
"test_ao_sparsity_py_TestFxComposability_test_q_prep_fx_before_s_prep",
"test_ao_sparsity_py_TestFxComposability_test_q_prep_fx_s_prep_ref_conv",
"test_ao_sparsity_py_TestFxComposability_test_s_prep_before_q_prep_fx",
"test_ao_sparsity_py_TestFxComposability_test_s_prep_before_qat_prep_fx",
"test_ao_sparsity_py_TestFxComposability_test_s_prep_q_prep_fx_ref",
"test_ao_sparsity_py_TestSparsityUtilFunctions_test_fqn_to_module",
"test_ao_sparsity_py_TestSparsityUtilFunctions_test_fqn_to_module_fail",
"test_ao_sparsity_py_TestSparsityUtilFunctions_test_fqn_to_module_for_tensors",
"test_ao_sparsity_py_TestSparsityUtilFunctions_test_get_arg_info_from_tensor_fqn",
"test_ao_sparsity_py_TestSparsityUtilFunctions_test_get_arg_info_from_tensor_fqn_fail",
"test_ao_sparsity_py_TestSparsityUtilFunctions_test_module_to_fqn",
"test_ao_sparsity_py_TestSparsityUtilFunctions_test_module_to_fqn_fail",
"test_ao_sparsity_py_TestSparsityUtilFunctions_test_module_to_fqn_root",
"test_ao_sparsity_py_TestBaseDataSparsifier_test_nn_embeddings",
"test_ao_sparsity_py_TestBaseDataSparsifier_test_nn_parameters",
"test_ao_sparsity_py_TestBaseDataSparsifier_test_tensors",
"test_ao_sparsity_py_TestNormDataSparsifiers_test_nn_embeddings",
"test_ao_sparsity_py_TestNormDataSparsifiers_test_nn_parameters",
"test_ao_sparsity_py_TestNormDataSparsifiers_test_tensors",
"test_ao_sparsity_py_TestQuantizationUtils_test_ptq_quantize_first",
"test_ao_sparsity_py_TestQuantizationUtils_test_ptq_sparsify_first",
"test_ao_sparsity_py_TestBaseDataScheduler_test_constructor",
"test_ao_sparsity_py_TestBaseDataScheduler_test_order_of_steps",
"test_ao_sparsity_py_TestBaseDataScheduler_test_state_dict",
"test_ao_sparsity_py_TestBaseDataScheduler_test_step",
"test_ao_sparsity_py_TestActivationSparsifier_test_activation_sparsifier",
"test_autograd_py_TestAutograd_test_access_saved_tensor_twice_without_recomputation_works",
"test_autograd_py_TestAutograd_test_accumulate_grad",
"test_autograd_py_TestAutograd_test_accumulate_grad_tensor_reference",
"test_autograd_py_TestAutograd_test_accumulate_grad_with_zero_numel_grad",
"test_autograd_py_TestAutograd_test_anomaly_assign_parent_cleanup",
"test_autograd_py_TestAutograd_test_anomaly_detect_nan",
"test_autograd_py_TestAutograd_test_anomaly_grad_warnings",
"test_autograd_py_TestAutograd_test_anomaly_mode_no_check_nan",
"test_autograd_py_TestAutograd_test_attribute_deletion",
"test_autograd_py_TestAutograd_test_autograd_inplace_views_creation_meta",
"test_autograd_py_TestAutograd_test_autograd_inplace_views_cross_dtype",
"test_autograd_py_TestAutograd_test_autograd_multiple_views_python",
"test_autograd_py_TestAutograd_test_autograd_python_custom_function_inplace",
"test_autograd_py_TestAutograd_test_autograd_simple_views_python",
"test_autograd_py_TestAutograd_test_autograd_views_codegen",
"test_autograd_py_TestAutograd_test_backward",
"test_autograd_py_TestAutograd_test_backward_badcalls",
"test_autograd_py_TestAutograd_test_backward_copy",
"test_autograd_py_TestAutograd_test_backward_create_graph_warns",
"test_autograd_py_TestAutograd_test_backward_no_grad",
"test_autograd_py_TestAutograd_test_backward_twice_retained_graph_with_saved_values",
"test_autograd_py_TestAutograd_test_backward_twice_retained_graph_without_saved_values",
"test_autograd_py_TestAutograd_test_backward_twice_with_saved_values",
"test_autograd_py_TestAutograd_test_backward_twice_without_saved_values",
"test_autograd_py_TestAutograd_test_backward_with_inputs",
"test_autograd_py_TestAutograd_test_backward_with_nonleaf_inputs",
"test_autograd_py_TestAutograd_test_calculate_shape_util",
"test_autograd_py_TestAutograd_test_callback_adds_callback",
"test_autograd_py_TestAutograd_test_cant_create_saved_tensors",
"test_autograd_py_TestAutograd_test_checkpoint_valid_reset_on_error",
"test_autograd_py_TestAutograd_test_checkpointing",
"test_autograd_py_TestAutograd_test_checkpointing_non_reentrant_autocast_cpu",
"test_autograd_py_TestAutograd_test_checkpointing_non_reentrant_autocast_mlu",
"test_autograd_py_TestAutograd_test_checkpointing_without_reentrant_arbitrary_input_output",
"test_autograd_py_TestAutograd_test_checkpointing_without_reentrant_correct_grad",
"test_autograd_py_TestAutograd_test_checkpointing_without_reentrant_custom_function_works",
"test_autograd_py_TestAutograd_test_checkpointing_without_reentrant_dataparallel",
"test_autograd_py_TestAutograd_test_checkpointing_without_reentrant_detached_tensor_use_reentrant_False",
"test_autograd_py_TestAutograd_test_checkpointing_without_reentrant_detached_tensor_use_reentrant_True",
"test_autograd_py_TestAutograd_test_checkpointing_without_reentrant_input_requires_grad_False",
"test_autograd_py_TestAutograd_test_checkpointing_without_reentrant_input_requires_grad_True",
"test_autograd_py_TestAutograd_test_checkpointing_without_reentrant_memory_savings",
"test_autograd_py_TestAutograd_test_checkpointing_without_reentrant_parameter_used_in_an_out",
"test_autograd_py_TestAutograd_test_create_graph_and_full_backward_hook_cycle",
"test_autograd_py_TestAutograd_test_custom_autograd_no_early_free",
"test_autograd_py_TestAutograd_test_custom_autograd_repeated_grad_grad",
"test_autograd_py_TestAutograd_test_custom_function_cycle",
"test_autograd_py_TestAutograd_test_custom_function_error",
"test_autograd_py_TestAutograd_test_custom_function_exception",
"test_autograd_py_TestAutograd_test_custom_function_forward_mode_forward_is_no_op",
"test_autograd_py_TestAutograd_test_custom_function_forward_mode_inplace_checks",
"test_autograd_py_TestAutograd_test_custom_function_forward_mode_non_tensor_before_tensor_args",
"test_autograd_py_TestAutograd_test_custom_function_forward_mode_view_checks",
"test_autograd_py_TestAutograd_test_custom_function_forward_mode_wrong_formula",
"test_autograd_py_TestAutograd_test_custom_function_local_inplace",
"test_autograd_py_TestAutograd_test_custom_function_no_tensors",
"test_autograd_py_TestAutograd_test_custom_function_non_tensor_inputs_outputs",
"test_autograd_py_TestAutograd_test_custom_function_return_view_in_nograd",
"test_autograd_py_TestAutograd_test_custom_function_save_for_forward",
"test_autograd_py_TestAutograd_test_custom_function_saved_tensors",
"test_autograd_py_TestAutograd_test_deep_reentrant",
"test_autograd_py_TestAutograd_test_default_saved_variable_hooks_double_backward",
"test_autograd_py_TestAutograd_test_dep_nograd",
"test_autograd_py_TestAutograd_test_dependent_backward",
"test_autograd_py_TestAutograd_test_detach",
"test_autograd_py_TestAutograd_test_detach_base",
"test_autograd_py_TestAutograd_test_detach_then_inplace_raises_in_autograd",
"test_autograd_py_TestAutograd_test_diagonal_derivative_requires_grad",
"test_autograd_py_TestAutograd_test_diagonal_expanded_v",
"test_autograd_py_TestAutograd_test_dir",
"test_autograd_py_TestAutograd_test_disabling_saved_tensor_hooks",
"test_autograd_py_TestAutograd_test_disabling_saved_tensor_hooks_nested",
"test_autograd_py_TestAutograd_test_dont_materialize_grads",
"test_autograd_py_TestAutograd_test_duplicate_backward_root",
"test_autograd_py_TestAutograd_test_first_grad_fn_access_in_no_grad_mode",
"test_autograd_py_TestAutograd_test_free_deep_graph",
"test_autograd_py_TestAutograd_test_free_deep_graph_complicated",
"test_autograd_py_TestAutograd_test_free_deep_graph_pyfunction",
"test_autograd_py_TestAutograd_test_full_backward_hook_double_backward",
"test_autograd_py_TestAutograd_test_function",
"test_autograd_py_TestAutograd_test_function_returns_input",
"test_autograd_py_TestAutograd_test_function_returns_undefined_tensor",
"test_autograd_py_TestAutograd_test_gc_in_destructor",
"test_autograd_py_TestAutograd_test_grad",
"test_autograd_py_TestAutograd_test_grad_badcalls",
"test_autograd_py_TestAutograd_test_grad_batched_grad",
"test_autograd_py_TestAutograd_test_grad_empty_inputs",
"test_autograd_py_TestAutograd_test_grad_fn_attr_bindings",
"test_autograd_py_TestAutograd_test_grad_fn_badcalls",
"test_autograd_py_TestAutograd_test_grad_fn_prehooks",
"test_autograd_py_TestAutograd_test_grad_fn_prehooks_multiple_outputs",
"test_autograd_py_TestAutograd_test_grad_fn_prehooks_remove_hooks",
"test_autograd_py_TestAutograd_test_grad_mode_restored_reentrant",
"test_autograd_py_TestAutograd_test_grad_nonleaf",
"test_autograd_py_TestAutograd_test_grad_nonleaf_many_outputs",
"test_autograd_py_TestAutograd_test_grad_nonleaf_register_hook",
"test_autograd_py_TestAutograd_test_grad_unreachable",
"test_autograd_py_TestAutograd_test_grad_unreachable_discovery",
"test_autograd_py_TestAutograd_test_gradcheck_backward_mul_by_grad_output",
"test_autograd_py_TestAutograd_test_gradcheck_check_batched_grad",
"test_autograd_py_TestAutograd_test_gradcheck_check_forward_or_backward_only",
"test_autograd_py_TestAutograd_test_gradcheck_check_no_differentiable_outputs",
"test_autograd_py_TestAutograd_test_gradcheck_complex_non_complex_outputs",
"test_autograd_py_TestAutograd_test_gradcheck_custom_error",
"test_autograd_py_TestAutograd_test_gradcheck_dense_and_sparse_inputs",
"test_autograd_py_TestAutograd_test_gradcheck_forward_ad",
"test_autograd_py_TestAutograd_test_gradcheck_forward_ad_batched_grad",
"test_autograd_py_TestAutograd_test_gradcheck_forward_ad_respects_requires_grad",
"test_autograd_py_TestAutograd_test_gradcheck_forward_ad_runs_with_no_requires_grad",
"test_autograd_py_TestAutograd_test_gradcheck_get_analytical_jacobian",
"test_autograd_py_TestAutograd_test_gradcheck_get_numerical_jacobian",
"test_autograd_py_TestAutograd_test_gradcheck_jacobian_mismatch",
"test_autograd_py_TestAutograd_test_gradcheck_multiple_mkldnn_inputs",
"test_autograd_py_TestAutograd_test_gradcheck_nondeterministic",
"test_autograd_py_TestAutograd_test_gradcheck_output_shape_or_dtype_depend_on_values",
"test_autograd_py_TestAutograd_test_gradcheck_single_input",
"test_autograd_py_TestAutograd_test_gradcheck_sparse_csr_input",
"test_autograd_py_TestAutograd_test_gradcheck_sparse_input",
"test_autograd_py_TestAutograd_test_gradcheck_test_outputs",
"test_autograd_py_TestAutograd_test_gradcheck_undefined_grad",
"test_autograd_py_TestAutograd_test_gradcheck_validates_input_mkldnn",
"test_autograd_py_TestAutograd_test_gradcheck_validates_inputs",
"test_autograd_py_TestAutograd_test_graph_save_on_cpu",
"test_autograd_py_TestAutograd_test_graph_save_on_cpu_mlu",
"test_autograd_py_TestAutograd_test_hessian_vector",
"test_autograd_py_TestAutograd_test_hook_none",
"test_autograd_py_TestAutograd_test_hook_with_no_name",
"test_autograd_py_TestAutograd_test_hooks",
"test_autograd_py_TestAutograd_test_hooks_cpp",
"test_autograd_py_TestAutograd_test_index_backward_does_not_save_tensor",
"test_autograd_py_TestAutograd_test_indexing",
"test_autograd_py_TestAutograd_test_indexing_duplicates",
"test_autograd_py_TestAutograd_test_inplace",
"test_autograd_py_TestAutograd_test_inplace_not_requires_grad",
"test_autograd_py_TestAutograd_test_inplace_on_view_backward",
"test_autograd_py_TestAutograd_test_inplace_on_view_leaf_errors",
"test_autograd_py_TestAutograd_test_inplace_on_view_saved_output",
"test_autograd_py_TestAutograd_test_inplace_on_view_weak_grad_fn",
"test_autograd_py_TestAutograd_test_input_buffer_accum",
"test_autograd_py_TestAutograd_test_integer_outputs",
"test_autograd_py_TestAutograd_test_invalid_gradients",
"test_autograd_py_TestAutograd_test_isolated_node",
"test_autograd_py_TestAutograd_test_leaf_assignment",
"test_autograd_py_TestAutograd_test_legacy_function_deprecation_exception",
"test_autograd_py_TestAutograd_test_lobpcg",
"test_autograd_py_TestAutograd_test_mark_non_differentiable",
"test_autograd_py_TestAutograd_test_mark_non_differentiable_mixed",
"test_autograd_py_TestAutograd_test_mark_non_differentiable_none",
"test_autograd_py_TestAutograd_test_materialize_grads",
"test_autograd_py_TestAutograd_test_multi_backward",
"test_autograd_py_TestAutograd_test_multi_backward_no_grad",
"test_autograd_py_TestAutograd_test_named_tensor_for_complex_views",
"test_autograd_py_TestAutograd_test_naughty_anomaly_access",
"test_autograd_py_TestAutograd_test_naughty_autograd_function_attribute_access",
"test_autograd_py_TestAutograd_test_naughty_autograd_function_stashing_ctx",
"test_autograd_py_TestAutograd_test_nested_anomaly_detect_nan",
"test_autograd_py_TestAutograd_test_nested_anomaly_printstack_cleanup",
"test_autograd_py_TestAutograd_test_next_functions",
"test_autograd_py_TestAutograd_test_no_grad",
"test_autograd_py_TestAutograd_test_no_grad_assignment",
"test_autograd_py_TestAutograd_test_no_grad_copy",
"test_autograd_py_TestAutograd_test_no_grad_copy_sparse",
"test_autograd_py_TestAutograd_test_no_grad_input",
"test_autograd_py_TestAutograd_test_no_grad_modifies_version",
"test_autograd_py_TestAutograd_test_no_grad_python_function",
"test_autograd_py_TestAutograd_test_no_requires_grad_inplace",
"test_autograd_py_TestAutograd_test_no_unnecessary_save",
"test_autograd_py_TestAutograd_test_no_unnecessary_unwrapping",
"test_autograd_py_TestAutograd_test_not_implemented_fwad",
"test_autograd_py_TestAutograd_test_not_implemented_grad",
"test_autograd_py_TestAutograd_test_numpy_requires_grad",
"test_autograd_py_TestAutograd_test_once_differentiable",
"test_autograd_py_TestAutograd_test_out_variant_raises_when_inputs_require_grad",
"test_autograd_py_TestAutograd_test_pack_hook_with_inplace_modification_should_fail",
"test_autograd_py_TestAutograd_test_pickle",
"test_autograd_py_TestAutograd_test_pow_zero_tensor_gradient",
"test_autograd_py_TestAutograd_test_power_function",
"test_autograd_py_TestAutograd_test_profiler",
"test_autograd_py_TestAutograd_test_profiler_aggregation_fake",
"test_autograd_py_TestAutograd_test_profiler_aggregation_table",
"test_autograd_py_TestAutograd_test_profiler_function_event_avg",
"test_autograd_py_TestAutograd_test_profiler_propagation",
"test_autograd_py_TestAutograd_test_profiler_seq_nr",
"test_autograd_py_TestAutograd_test_profiler_shapes",
"test_autograd_py_TestAutograd_test_profiler_unboxed_only",
"test_autograd_py_TestAutograd_test_pynode_destruction_deadlock",
"test_autograd_py_TestAutograd_test_record_function",
"test_autograd_py_TestAutograd_test_record_function_callbacks",
"test_autograd_py_TestAutograd_test_record_function_multithreaded",
"test_autograd_py_TestAutograd_test_record_function_new_signatures",
"test_autograd_py_TestAutograd_test_reentrant_child_error",
"test_autograd_py_TestAutograd_test_reentrant_priority",
"test_autograd_py_TestAutograd_test_reentrant_with_callbacks_both_depths",
"test_autograd_py_TestAutograd_test_reentrant_with_callbacks_depth_0",
"test_autograd_py_TestAutograd_test_reentrant_with_callbacks_depth_1",
"test_autograd_py_TestAutograd_test_reentrant_with_leaf_variable_hook",
"test_autograd_py_TestAutograd_test_reentrant_with_non_leaf_variable_hook",
"test_autograd_py_TestAutograd_test_requires_grad",
"test_autograd_py_TestAutograd_test_requires_grad_",
"test_autograd_py_TestAutograd_test_requires_grad_inplace",
"test_autograd_py_TestAutograd_test_retain_grad",
"test_autograd_py_TestAutograd_test_retain_grad_cycle",
"test_autograd_py_TestAutograd_test_retain_grad_inplace",
"test_autograd_py_TestAutograd_test_retain_grad_inplace_over_view",
"test_autograd_py_TestAutograd_test_return_duplicate",
"test_autograd_py_TestAutograd_test_return_duplicate_inplace",
"test_autograd_py_TestAutograd_test_return_leaf",
"test_autograd_py_TestAutograd_test_return_leaf_inplace",
"test_autograd_py_TestAutograd_test_save_none_for_backward",
"test_autograd_py_TestAutograd_test_save_on_cpu_and_checkpoint",
"test_autograd_py_TestAutograd_test_save_output_nr",
"test_autograd_py_TestAutograd_test_saved_variable_packing_unpacking_did_not_save_original_with_default_hooks",
"test_autograd_py_TestAutograd_test_saved_variable_packing_unpacking_did_not_save_original_with_hooks",
"test_autograd_py_TestAutograd_test_saved_variable_packing_unpacking_saved_original_with_default_hooks",
"test_autograd_py_TestAutograd_test_saved_variable_packing_unpacking_saved_original_with_hooks",
"test_autograd_py_TestAutograd_test_saved_variable_version_counter",
"test_autograd_py_TestAutograd_test_saved_variables_deprecated",
"test_autograd_py_TestAutograd_test_saving_variable_to_disk",
"test_autograd_py_TestAutograd_test_select_expanded_v",
"test_autograd_py_TestAutograd_test_select_sum",
"test_autograd_py_TestAutograd_test_set_data_preserve_pyobj",
"test_autograd_py_TestAutograd_test_set_data_self_requires_grad",
"test_autograd_py_TestAutograd_test_set_data_tensorimpl_type",
"test_autograd_py_TestAutograd_test_set_grad_coroutines",
"test_autograd_py_TestAutograd_test_set_grad_coroutines_benign_exceptions",
"test_autograd_py_TestAutograd_test_set_grad_coroutines_critical_exceptions",
"test_autograd_py_TestAutograd_test_set_grad_coroutines_exit",
"test_autograd_py_TestAutograd_test_set_grad_enabled",
"test_autograd_py_TestAutograd_test_set_grad_generator_functions",
"test_autograd_py_TestAutograd_test_set_grad_generator_functions_recursive",
"test_autograd_py_TestAutograd_test_setitem",
"test_autograd_py_TestAutograd_test_setitem_mask",
"test_autograd_py_TestAutograd_test_setting_default_saved_variable_hooks_twice_should_not_fail",
"test_autograd_py_TestAutograd_test_setting_default_saved_variable_hooks_twice_should_use_inner",
"test_autograd_py_TestAutograd_test_shape",
"test_autograd_py_TestAutograd_test_sharded_grad",
"test_autograd_py_TestAutograd_test_simple_reentrant",
"test_autograd_py_TestAutograd_test_slice_expanded_v",
"test_autograd_py_TestAutograd_test_sparse_gather_both_scalar",
"test_autograd_py_TestAutograd_test_sparse_gather_dim0",
"test_autograd_py_TestAutograd_test_sparse_gather_dim1",
"test_autograd_py_TestAutograd_test_sparse_gather_dim_neg",
"test_autograd_py_TestAutograd_test_sparse_gather_ind_scalar",
"test_autograd_py_TestAutograd_test_sparse_gather_x_scalar",
"test_autograd_py_TestAutograd_test_sparse_mm_backward",
"test_autograd_py_TestAutograd_test_symeig_no_eigenvectors",
"test_autograd_py_TestAutograd_test_tensor_grad_warnings",
"test_autograd_py_TestAutograd_test_thread_shutdown",
"test_autograd_py_TestAutograd_test_too_many_grads",
"test_autograd_py_TestAutograd_test_type_conversions",
"test_autograd_py_TestAutograd_test_unrelated_inputs",
"test_autograd_py_TestAutograd_test_unused_output",
"test_autograd_py_TestAutograd_test_var_mean_differentiable",
"test_autograd_py_TestAutograd_test_variable_traverse",
"test_autograd_py_TestAutograd_test_version_counter",
"test_autograd_py_TestAutograd_test_volatile_deprecated",
"test_autograd_py_TestAutograd_test_will_engine_execute_node",
"test_autograd_py_TestAutogradForwardModeBatchedGrad_test_inplace_on_view_not_same_layout",
"test_autograd_py_TestAutogradForwardModeBatchedGrad_test_inplace_on_view_same_layout",
"test_autograd_py_TestAutogradForwardModeBatchedGrad_test_metadata_check_for_storage_numel_skipped",
"test_autograd_py_TestAutogradForwardModeBatchedGrad_test_out_of_place_basic",
"test_autograd_py_TestAutogradForwardModeBatchedGrad_test_out_of_place_not_same_layout",
"test_autograd_py_TestAutogradForwardMode_test_advanced_packing_unpacking",
"test_autograd_py_TestAutogradForwardMode_test_backward_graph_destruction",
"test_autograd_py_TestAutogradForwardMode_test_basic_packing_unpacking",
"test_autograd_py_TestAutogradForwardMode_test_codegen_ignores_undefined_outputs",
"test_autograd_py_TestAutogradForwardMode_test_create_new_zeros_with_same_meta",
"test_autograd_py_TestAutogradForwardMode_test_default_level",
"test_autograd_py_TestAutogradForwardMode_test_detach_view_tracking",
"test_autograd_py_TestAutogradForwardMode_test_forward_level_cleanup",
"test_autograd_py_TestAutogradForwardMode_test_grad_cleanup",
"test_autograd_py_TestAutogradForwardMode_test_make_dual_forbid_integral_dtype",
"test_autograd_py_TestAutogradForwardMode_test_make_dual_inference_tensor_in_inference_mode",
"test_autograd_py_TestAutogradForwardMode_test_make_dual_torch_dispatch",
"test_autograd_py_TestAutogradForwardMode_test_metadata_check_check_conj",
"test_autograd_py_TestAutogradForwardMode_test_metadata_check_checks_ignores_size_zero",
"test_autograd_py_TestAutogradForwardMode_test_metadata_check_checks_storage_numel",
"test_autograd_py_TestAutogradForwardMode_test_metadata_check_ignore_storage_offset_for_zero_numel_tensor",
"test_autograd_py_TestAutogradForwardMode_test_metadata_check_when_primal_has_conj_bit",
"test_autograd_py_TestAutogradForwardMode_test_metadata_check_when_primal_has_neg_bit",
"test_autograd_py_TestAutogradForwardMode_test_nested_level",
"test_autograd_py_TestAutogradForwardMode_test_non_differentiable",
"test_autograd_py_TestAutogradForwardMode_test_out_variant",
"test_autograd_py_TestAutogradForwardMode_test_print",
"test_autograd_py_TestAutogradForwardMode_test_set_fw_grad_having_own_fw_grad_at_same_level",
"test_autograd_py_TestAutogradForwardMode_test_size_check",
"test_autograd_py_TestAutogradForwardMode_test_view_inplace_always_creates_a_view",
"test_autograd_py_TestAutogradForwardMode_test_view_inplace_differentiable_views",
"test_autograd_py_TestAutogradForwardMode_test_view_inplace_non_differentiable_views",
"test_autograd_py_TestAutogradInferenceMode_test_inference_mode_context_manager",
"test_autograd_py_TestAutogradInferenceMode_test_inference_mode_decorator",
"test_autograd_py_TestAutogradInferenceMode_test_inference_mode_existing_autograd_session",
"test_autograd_py_TestAutogradInferenceMode_test_inference_mode_handle_direct_view_on_rebase",
"test_autograd_py_TestAutogradInferenceMode_test_inference_mode_handle_indirect_view_on_rebase",
"test_autograd_py_TestAutogradInferenceMode_test_inference_mode_inf_tensor_in_inf_mode_functional_op",
"test_autograd_py_TestAutogradInferenceMode_test_inference_mode_inf_tensor_in_inf_mode_inplace_op",
"test_autograd_py_TestAutogradInferenceMode_test_inference_mode_inf_tensor_in_inf_mode_view_op",
"test_autograd_py_TestAutogradInferenceMode_test_inference_mode_inf_tensor_in_normal_mode_functional_op",
"test_autograd_py_TestAutogradInferenceMode_test_inference_mode_inf_tensor_in_normal_mode_inplace_op",
"test_autograd_py_TestAutogradInferenceMode_test_inference_mode_inf_tensor_in_normal_mode_view_op",
"test_autograd_py_TestAutogradInferenceMode_test_inference_mode_tensor_creation",
"test_autograd_py_TestAutogradInferenceMode_test_mix_inference_and_normal_tensor_functional_op",
"test_autograd_py_TestAutogradInferenceMode_test_mix_inference_and_normal_tensor_inplace_op",
"test_autograd_py_TestAutogradInferenceMode_test_mix_inference_and_normal_tensor_view_op",
"test_autograd_py_TestAutogradInferenceMode_test_normal_tensor_inplace_output_in_inference_mode",
"test_autograd_py_TestAutogradInferenceMode_test_normal_tensor_inplace_output_in_normal_mode",
"test_autograd_py_TestAutogradInferenceMode_test_normal_tensor_view_output_in_inference_mode",
"test_autograd_py_TestAutogradInferenceMode_test_normal_tensor_view_output_in_normal_mode",
"test_autograd_py_TestMultithreadAutograd_test_cat_stack_r_to_c",
"test_autograd_py_TestMultithreadAutograd_test_dataparallel_saved_tensors_hooks",
"test_autograd_py_TestMultithreadAutograd_test_fork_join_in_middle",
"test_autograd_py_TestMultithreadAutograd_test_multithread_saved_tensors_hooks",
"test_autograd_py_TestMultithreadAutograd_test_multithreaded_exception_propagation",
"test_autograd_py_TestMultithreadAutograd_test_preserve_backtrace",
"test_autograd_py_TestMultithreadAutograd_test_python_thread_in_middle",
"test_autograd_py_TestMultithreadAutograd_test_simple_backward",
"test_autograd_py_TestMultithreadAutograd_test_simple_backward_same_input",
"test_autograd_py_TestAutogradComplex_test_view_func_for_complex_views",
"test_autograd_py_TestAutogradComplex_test_view_with_multi_output",
"test_autograd_py_TestAutogradFunctional_test_construct_standard_basis_for_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_construct_standard_basis_for_mlu_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_construct_standard_basis_for_mlu_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_construct_standard_basis_for_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_create_graph_vectorize_False_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_create_graph_vectorize_False_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_create_graph_vectorize_True_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_create_graph_vectorize_True_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_err_check_strict_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_err_check_strict_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_err_check_strict_vectorize_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_err_check_strict_vectorize_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_err_check_vectorize_False_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_err_check_vectorize_False_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_err_check_vectorize_True_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_err_check_vectorize_True_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_match_vhp_hvp_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_match_vhp_hvp_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_no_grad_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_no_grad_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_output_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_output_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_output_vectorized_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_output_vectorized_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_scalar_vectorize_False_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_scalar_vectorize_False_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_scalar_vectorize_True_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_scalar_vectorize_True_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_vectorize_correctness_multi_input_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_vectorize_correctness_multi_input_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_vectorize_correctness_simple_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_vectorize_correctness_simple_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_vectorize_correctness_unrelated_outputs_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_vectorize_correctness_unrelated_outputs_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_vectorize_raises_no_warnings_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_hessian_vectorize_raises_no_warnings_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_hvp_create_graph_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_hvp_create_graph_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_hvp_err_check_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_hvp_err_check_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_hvp_err_check_strict_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_hvp_err_check_strict_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_hvp_no_grad_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_hvp_no_grad_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_hvp_output_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_hvp_output_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_hvp_scalar_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_hvp_scalar_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_create_graph_vectorize_False_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_create_graph_vectorize_False_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_create_graph_vectorize_True_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_create_graph_vectorize_True_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_err_check_strict_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_err_check_strict_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_err_check_strict_vectorize_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_err_check_strict_vectorize_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_err_check_vectorize_False_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_err_check_vectorize_False_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_err_check_vectorize_True_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_err_check_vectorize_True_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_match_vjp_jvp_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_match_vjp_jvp_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_no_grad_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_no_grad_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_output_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_output_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_output_vectorized_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_output_vectorized_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_scalar_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_scalar_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_scalar_vectorized_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_scalar_vectorized_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_vectorize_correctness_different_devices_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_vectorize_correctness_different_devices_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_vectorize_correctness_different_dtype_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_vectorize_correctness_different_dtype_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_vectorize_correctness_multi_input_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_vectorize_correctness_multi_input_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_vectorize_correctness_multi_input_multi_output_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_vectorize_correctness_multi_input_multi_output_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_vectorize_correctness_simple_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_vectorize_correctness_simple_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_vectorize_correctness_unrelated_outputs_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_vectorize_correctness_unrelated_outputs_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_vectorize_correctness_zero_dim_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_vectorize_correctness_zero_dim_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_vectorize_raises_no_warnings_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_jacobian_vectorize_raises_no_warnings_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_jvp_create_graph_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_jvp_create_graph_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_jvp_err_check_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_jvp_err_check_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_jvp_err_check_strict_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_jvp_err_check_strict_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_jvp_no_grad_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_jvp_no_grad_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_jvp_output_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_jvp_output_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_jvp_scalar_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_jvp_scalar_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_vhp_create_graph_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_vhp_create_graph_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_vhp_err_check_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_vhp_err_check_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_vhp_err_check_strict_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_vhp_err_check_strict_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_vhp_no_grad_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_vhp_no_grad_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_vhp_output_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_vhp_output_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_vhp_scalar_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_vhp_scalar_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_vjp_create_graph_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_vjp_create_graph_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_vjp_err_check_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_vjp_err_check_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_vjp_err_check_strict_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_vjp_err_check_strict_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_vjp_no_grad_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_vjp_no_grad_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_vjp_output_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_vjp_output_logging_tensor",
"test_autograd_py_TestAutogradFunctional_test_vjp_scalar_base_tensor",
"test_autograd_py_TestAutogradFunctional_test_vjp_scalar_logging_tensor",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_advanced_indexing_backwards_large_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_advanced_indexing_backwards_memory_format_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_backward_device_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_copy__mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_copy_forward_ad_broadcasting_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_copy_forward_ad_same_layout_copies_grad_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_copy_r_to_c_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_cross_device_reentrant_autograd_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_free_unneeded_tensor_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_grad_assignment_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_gradcheck_input_output_different_device_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_inplace_multiple_output_view_of_view_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_inplace_on_view_backprop_base_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_inplace_on_view_backprop_view_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_inplace_on_view_backprop_view_of_view_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_inplace_on_view_gradcheck_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_inplace_on_view_makes_base_require_grad_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_inplace_on_view_modify_base_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_inplace_on_view_multi_output_safe_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_inplace_on_view_multi_output_unsafe_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_inplace_on_view_multiple_outputs_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_inplace_on_view_non_contig_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_inplace_on_view_of_multiple_output_view_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_inplace_on_view_of_view_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_inplace_on_view_python_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_inplace_on_view_then_no_grad_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_inputbuffer_add_multidevice_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_min_max_median_backprops_to_all_values_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_mv_grad_stride_0_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_non_differentiable_ops_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_parameter_resize_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_pin_memory_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_profiler_emit_itt_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_profiler_emit_nvtx_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_pyscalar_conversions_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_reentrant_parent_error_on_cpu_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_requires_grad_factory_mlu_float32",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_scatter_index_reduce_amin_amax_backprops_to_all_values_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_scatter_index_reduce_prod_gradgrad_error_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_set_requires_grad_only_for_floats_mlu_float16",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_set_requires_grad_only_for_floats_mlu_float32",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_set_requires_grad_only_for_floats_mlu_int16",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_set_requires_grad_only_for_floats_mlu_int32",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_set_requires_grad_only_for_floats_mlu_int8",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_simple_reentrant_cross_device_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_sparse_mask_autograd_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_strided_leaf_grad_layout_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_to_r_to_c_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_unused_output_device_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_warning_in_backward_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_where_functional_mlu",
"test_autograd_py_TestAutogradDeviceTypeMLU_test_where_scalar_mlu",
"test_autograd_py_TestAutogradMultipleDispatchMLU_test_autograd_composite_implicit_and_dispatch_registration_mlu",
"test_autograd_py_TestAutogradMultipleDispatchMLU_test_autograd_multiple_dispatch_registrations_mlu",
"test_autograd_py_TestAutogradMultipleDispatchMLU_test_foward_mode_AD_mlu",
"test_autograd_py_TestAutogradMultipleDispatchMLU_test_per_dispatch_key_input_saving_mlu",
"test_autograd_py_TestAutogradMultipleDispatchMLU_test_view_copy_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___eq___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___eq___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___eq___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___eq___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___eq___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___eq___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ge___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ge___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ge___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ge___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ge___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ge___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___gt___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___gt___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___gt___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___gt___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___gt___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___gt___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___iand___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___iand___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___iand___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___iand___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___iand___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___iand___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ilshift___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ilshift___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ilshift___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ilshift___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ilshift___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ilshift___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___imod___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___imod___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___imod___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___imod___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___imod___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___imod___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ior___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ior___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ior___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ior___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ior___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ior___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ipow___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ipow___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ipow___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ipow___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ipow___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ipow___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___irshift___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___irshift___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___irshift___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___irshift___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___irshift___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___irshift___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___itruediv___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___itruediv___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___itruediv___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___itruediv___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___itruediv___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___itruediv___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ixor___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ixor___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ixor___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ixor___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ixor___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ixor___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___le___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___le___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___le___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___le___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___le___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___le___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___lshift___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___lshift___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___lshift___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___lshift___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___lshift___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___lshift___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___lt___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___lt___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___lt___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___lt___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___lt___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___lt___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___matmul___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___matmul___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___matmul___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___matmul___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___matmul___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___matmul___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___mod___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___mod___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___mod___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___mod___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___mod___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___mod___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ne___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ne___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ne___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ne___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ne___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ne___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___or___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___or___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___or___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___or___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___or___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___or___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___pow___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___pow___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___pow___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___pow___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___pow___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___pow___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rand___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rand___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rand___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rand___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rand___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rand___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rlshift___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rlshift___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rlshift___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rlshift___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rlshift___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rlshift___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rmatmul___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rmatmul___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rmatmul___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rmatmul___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rmatmul___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rmatmul___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rmod___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rmod___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rmod___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rmod___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rmod___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rmod___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ror___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ror___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ror___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ror___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ror___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___ror___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rpow___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rpow___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rpow___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rpow___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rpow___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rpow___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rrshift___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rrshift___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rrshift___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rrshift___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rrshift___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rrshift___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rshift___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rshift___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rshift___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rshift___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rshift___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rshift___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rtruediv___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rtruediv___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rtruediv___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rtruediv___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rtruediv___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rtruediv___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rxor___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rxor___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rxor___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rxor___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rxor___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___rxor___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___truediv___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___truediv___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___truediv___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___truediv___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___truediv___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___truediv___not_implemented_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___xor___not_implemented_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___xor___not_implemented_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___xor___not_implemented_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___xor___not_implemented_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___xor___not_implemented_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test___xor___not_implemented_mlu_uint8",
# TODO: (CNNLCORE-12770) gpu will promote half to float.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_addsub_half_tensor_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_atan2_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_atan2_edgecases_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___rand___mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___rand___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___rand___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___rand___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___rand___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___rdiv___mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___rdiv___mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___rmod___mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___rmod___mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___rmod___mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___rmod___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___rmod___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___rmod___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___rmod___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___ror___mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___ror___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___ror___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___ror___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___ror___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___rpow___mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___rpow___mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___rpow___mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___rpow___mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___rpow___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___rpow___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___rpow___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___rpow___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___rxor___mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___rxor___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___rxor___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___rxor___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing___rxor___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_add_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_add_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_add_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_atan2_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_atan2_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_atan2_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_atan2_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_atan2_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_atan2_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_atan2_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_atan2_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_clamp_max_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_clamp_min_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_complex_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_complex_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_copysign_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_copysign_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_copysign_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_copysign_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_copysign_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_copysign_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_copysign_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_copysign_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_div_floor_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_div_no_rounding_mode_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_div_no_rounding_mode_mlu_complex32", # TODO(PYTORCH-8724): div not support complex dtypes
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_div_no_rounding_mode_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_div_trunc_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_eq_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_eq_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_eq_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_float_power_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_float_power_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_float_power_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_float_power_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_float_power_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_float_power_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_float_power_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_float_power_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_float_power_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_floor_divide_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_fmax_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_fmax_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_fmax_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_fmax_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_fmax_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_fmax_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_fmax_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_fmax_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_fmin_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_fmin_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_fmin_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_fmin_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_fmin_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_fmin_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_fmin_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_fmin_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_fmod_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_gcd_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_gcd_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_gcd_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_gcd_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_ge_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_gt_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_heaviside_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_heaviside_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_heaviside_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_heaviside_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_heaviside_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_heaviside_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_heaviside_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_heaviside_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_hypot_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_hypot_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_hypot_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_igamma_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_igammac_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_isclose_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_isclose_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_isclose_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_isclose_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_isclose_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_isclose_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_isclose_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_isclose_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_isclose_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_jiterator_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_jiterator_binary_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_jiterator_binary_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_jiterator_binary_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_jiterator_binary_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_jiterator_binary_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_jiterator_binary_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_jiterator_binary_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_jiterator_binary_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_jiterator_binary_return_by_ref_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_jiterator_binary_return_by_ref_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_jiterator_binary_return_by_ref_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_jiterator_binary_return_by_ref_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_jiterator_binary_return_by_ref_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_jiterator_binary_return_by_ref_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_jiterator_binary_return_by_ref_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_jiterator_binary_return_by_ref_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_jiterator_binary_return_by_ref_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_lcm_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_lcm_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_lcm_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_lcm_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_ldexp_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_ldexp_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_ldexp_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_ldexp_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_ldexp_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_ldexp_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_ldexp_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_ldexp_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_ldexp_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_le_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_logical_and_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_logical_and_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_logical_or_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_logical_or_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_logical_xor_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_logical_xor_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_lt_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_max_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_maximum_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_min_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_minimum_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_ne_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_ne_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_nextafter_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_nextafter_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_polar_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_pow_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_pow_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_pow_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_pow_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_pow_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_pow_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_pow_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_remainder_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_chebyshev_polynomial_t_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_chebyshev_polynomial_t_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_chebyshev_polynomial_t_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_chebyshev_polynomial_t_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_chebyshev_polynomial_t_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_chebyshev_polynomial_t_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_chebyshev_polynomial_u_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_chebyshev_polynomial_u_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_chebyshev_polynomial_u_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_chebyshev_polynomial_u_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_chebyshev_polynomial_u_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_chebyshev_polynomial_u_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_chebyshev_polynomial_v_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_chebyshev_polynomial_v_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_chebyshev_polynomial_v_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_chebyshev_polynomial_v_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_chebyshev_polynomial_v_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_chebyshev_polynomial_v_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_chebyshev_polynomial_w_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_chebyshev_polynomial_w_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_chebyshev_polynomial_w_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_chebyshev_polynomial_w_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_chebyshev_polynomial_w_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_chebyshev_polynomial_w_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_hermite_polynomial_h_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_hermite_polynomial_h_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_hermite_polynomial_h_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_hermite_polynomial_h_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_hermite_polynomial_h_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_hermite_polynomial_h_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_hermite_polynomial_he_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_hermite_polynomial_he_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_hermite_polynomial_he_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_hermite_polynomial_he_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_hermite_polynomial_he_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_hermite_polynomial_he_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_laguerre_polynomial_l_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_laguerre_polynomial_l_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_laguerre_polynomial_l_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_laguerre_polynomial_l_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_laguerre_polynomial_l_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_laguerre_polynomial_l_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_legendre_polynomial_p_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_legendre_polynomial_p_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_legendre_polynomial_p_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_legendre_polynomial_p_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_legendre_polynomial_p_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_legendre_polynomial_p_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_shifted_chebyshev_polynomial_t_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_shifted_chebyshev_polynomial_t_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_shifted_chebyshev_polynomial_t_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_shifted_chebyshev_polynomial_t_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_shifted_chebyshev_polynomial_t_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_shifted_chebyshev_polynomial_t_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_shifted_chebyshev_polynomial_u_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_shifted_chebyshev_polynomial_u_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_shifted_chebyshev_polynomial_u_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_shifted_chebyshev_polynomial_u_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_shifted_chebyshev_polynomial_u_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_shifted_chebyshev_polynomial_u_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_shifted_chebyshev_polynomial_v_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_shifted_chebyshev_polynomial_v_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_shifted_chebyshev_polynomial_v_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_shifted_chebyshev_polynomial_v_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_shifted_chebyshev_polynomial_v_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_shifted_chebyshev_polynomial_v_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_shifted_chebyshev_polynomial_w_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_shifted_chebyshev_polynomial_w_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_shifted_chebyshev_polynomial_w_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_shifted_chebyshev_polynomial_w_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_shifted_chebyshev_polynomial_w_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_shifted_chebyshev_polynomial_w_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_xlog1py_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_xlog1py_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_xlog1py_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_xlog1py_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_xlog1py_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_xlog1py_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_xlog1py_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_xlog1py_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_zeta_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_zeta_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_zeta_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_zeta_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_zeta_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_special_zeta_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_true_divide_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_true_divide_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_true_divide_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_true_divide_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_true_divide_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_true_divide_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_true_divide_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_true_divide_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_true_divide_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_true_divide_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_batch_vs_slicing_xlogy_mlu_bfloat16", # TODO(PYTORCH-8751): xlog not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_broadcasting_float_power_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_broadcasting_heaviside_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_broadcasting_isclose_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_broadcasting_jiterator_binary_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_broadcasting_jiterator_binary_return_by_ref_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_broadcasting_pow_mlu_float32", # PYTORCH-9430
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_cdiv_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_cmul_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_bfloat16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_bfloat16_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_bool_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_complex64_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_complex64_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_complex64_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_complex64_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_float16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_float16_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_float16_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_float32_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_float32_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_float32_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_float32_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_float32_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_float32_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_float32_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_float32_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_float32_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_int16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_int16_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_int16_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_int16_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_int16_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_int16_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_int32_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_int32_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_int32_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_int32_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_int8_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_int8_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_int8_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_int8_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_int8_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_int8_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_int8_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_uint8_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_uint8_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_uint8_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_uint8_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_uint8_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_uint8_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_uint8_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_comparison_ops_type_promotion_and_broadcasting_mlu_uint8_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_complex_scalar_pow_tensor_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_complex_scalar_pow_tensor_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_complex_scalar_pow_tensor_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_complex_scalar_pow_tensor_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_complex_scalar_pow_tensor_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_complex_scalar_pow_tensor_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_complex_scalar_pow_tensor_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___rand___mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___rand___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___rand___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___rand___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___rand___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___rdiv___mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___rdiv___mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___rmod___mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___rmod___mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___rmod___mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___rmod___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___rmod___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___rmod___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___rmod___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___ror___mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___ror___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___ror___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___ror___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___ror___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___rpow___mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___rpow___mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___rpow___mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___rpow___mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___rpow___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___rpow___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___rpow___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___rpow___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___rxor___mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___rxor___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___rxor___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___rxor___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1___rxor___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_atan2_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_atan2_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_atan2_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_atan2_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_atan2_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_atan2_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_atan2_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_atan2_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_clamp_max_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_clamp_min_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_complex_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_complex_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_copysign_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_copysign_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_copysign_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_copysign_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_copysign_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_copysign_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_copysign_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_copysign_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_div_floor_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_div_no_rounding_mode_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_div_no_rounding_mode_mlu_complex32", # TODO(PYTORCH-8724): div not support complex dtypes
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_div_no_rounding_mode_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_div_trunc_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_eq_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_eq_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_eq_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_float_power_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_float_power_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_float_power_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_float_power_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_float_power_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_float_power_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_float_power_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_float_power_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_float_power_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_floor_divide_mlu_bfloat16", # TODO(PYTORCH-8724): floor divide not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_fmax_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_fmax_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_fmax_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_fmax_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_fmax_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_fmax_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_fmax_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_fmax_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_fmin_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_fmin_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_fmin_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_fmin_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_fmin_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_fmin_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_fmin_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_fmin_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_fmod_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_gcd_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_gcd_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_gcd_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_gcd_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_ge_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_gt_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_heaviside_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_heaviside_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_heaviside_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_heaviside_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_heaviside_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_heaviside_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_heaviside_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_heaviside_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_hypot_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_hypot_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_hypot_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_igamma_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_igammac_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_isclose_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_isclose_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_isclose_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_isclose_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_isclose_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_isclose_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_isclose_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_isclose_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_isclose_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_jiterator_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_jiterator_binary_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_jiterator_binary_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_jiterator_binary_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_jiterator_binary_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_jiterator_binary_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_jiterator_binary_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_jiterator_binary_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_jiterator_binary_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_jiterator_binary_return_by_ref_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_jiterator_binary_return_by_ref_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_jiterator_binary_return_by_ref_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_jiterator_binary_return_by_ref_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_jiterator_binary_return_by_ref_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_jiterator_binary_return_by_ref_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_jiterator_binary_return_by_ref_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_jiterator_binary_return_by_ref_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_jiterator_binary_return_by_ref_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___rand___mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___rand___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___rand___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___rand___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___rand___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___rdiv___mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___rdiv___mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___rmod___mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___rmod___mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___rmod___mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___rmod___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___rmod___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___rmod___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___rmod___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___ror___mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___ror___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___ror___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___ror___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___ror___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___rpow___mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___rpow___mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___rpow___mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___rpow___mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___rpow___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___rpow___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___rpow___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___rpow___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___rxor___mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___rxor___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___rxor___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___rxor___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim___rxor___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_atan2_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_atan2_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_atan2_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_atan2_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_atan2_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_atan2_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_atan2_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_atan2_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_clamp_max_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_clamp_min_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_complex_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_complex_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_copysign_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_copysign_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_copysign_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_copysign_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_copysign_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_copysign_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_copysign_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_copysign_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_div_floor_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_div_no_rounding_mode_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_div_no_rounding_mode_mlu_complex32", # TODO(PYTORCH-8724): div not support complex dtypes
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_div_no_rounding_mode_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_div_trunc_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_eq_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_eq_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_eq_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_float_power_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_float_power_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_float_power_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_float_power_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_float_power_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_float_power_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_float_power_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_float_power_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_float_power_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_floor_divide_mlu_bfloat16", # TODO(PYTORCH-8724): floor divide not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_fmax_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_fmax_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_fmax_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_fmax_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_fmax_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_fmax_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_fmax_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_fmax_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_fmin_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_fmin_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_fmin_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_fmin_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_fmin_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_fmin_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_fmin_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_fmin_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_fmod_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_gcd_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_gcd_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_gcd_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_gcd_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_ge_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_gt_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_heaviside_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_heaviside_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_heaviside_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_heaviside_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_heaviside_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_heaviside_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_heaviside_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_heaviside_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_hypot_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_hypot_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_hypot_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_igamma_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_igammac_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_isclose_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_isclose_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_isclose_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_isclose_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_isclose_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_isclose_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_isclose_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_isclose_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_isclose_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_jiterator_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_jiterator_binary_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_jiterator_binary_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_jiterator_binary_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_jiterator_binary_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_jiterator_binary_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_jiterator_binary_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_jiterator_binary_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_jiterator_binary_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_jiterator_binary_return_by_ref_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_jiterator_binary_return_by_ref_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_jiterator_binary_return_by_ref_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_jiterator_binary_return_by_ref_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_jiterator_binary_return_by_ref_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_jiterator_binary_return_by_ref_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_jiterator_binary_return_by_ref_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_jiterator_binary_return_by_ref_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_jiterator_binary_return_by_ref_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_lcm_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_lcm_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_lcm_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_lcm_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_ldexp_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_ldexp_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_ldexp_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_ldexp_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_ldexp_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_ldexp_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_ldexp_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_ldexp_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_ldexp_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_le_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_logical_and_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_logical_and_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_logical_or_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_logical_or_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_logical_xor_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_logical_xor_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_lt_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_max_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_maximum_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_min_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_minimum_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_ne_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_ne_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_nextafter_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_nextafter_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_polar_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_pow_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_pow_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_pow_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_pow_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_pow_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_pow_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_pow_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_remainder_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_rsub_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_chebyshev_polynomial_t_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_chebyshev_polynomial_t_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_chebyshev_polynomial_t_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_chebyshev_polynomial_t_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_chebyshev_polynomial_t_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_chebyshev_polynomial_t_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_chebyshev_polynomial_u_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_chebyshev_polynomial_u_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_chebyshev_polynomial_u_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_chebyshev_polynomial_u_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_chebyshev_polynomial_u_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_chebyshev_polynomial_u_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_chebyshev_polynomial_v_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_chebyshev_polynomial_v_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_chebyshev_polynomial_v_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_chebyshev_polynomial_v_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_chebyshev_polynomial_v_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_chebyshev_polynomial_v_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_chebyshev_polynomial_w_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_chebyshev_polynomial_w_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_chebyshev_polynomial_w_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_chebyshev_polynomial_w_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_chebyshev_polynomial_w_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_chebyshev_polynomial_w_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_hermite_polynomial_h_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_hermite_polynomial_h_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_hermite_polynomial_h_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_hermite_polynomial_h_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_hermite_polynomial_h_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_hermite_polynomial_h_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_hermite_polynomial_he_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_hermite_polynomial_he_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_hermite_polynomial_he_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_hermite_polynomial_he_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_hermite_polynomial_he_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_hermite_polynomial_he_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_laguerre_polynomial_l_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_laguerre_polynomial_l_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_laguerre_polynomial_l_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_laguerre_polynomial_l_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_laguerre_polynomial_l_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_laguerre_polynomial_l_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_legendre_polynomial_p_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_legendre_polynomial_p_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_legendre_polynomial_p_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_legendre_polynomial_p_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_legendre_polynomial_p_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_legendre_polynomial_p_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_shifted_chebyshev_polynomial_t_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_shifted_chebyshev_polynomial_t_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_shifted_chebyshev_polynomial_t_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_shifted_chebyshev_polynomial_t_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_shifted_chebyshev_polynomial_t_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_shifted_chebyshev_polynomial_t_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_shifted_chebyshev_polynomial_u_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_shifted_chebyshev_polynomial_u_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_shifted_chebyshev_polynomial_u_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_shifted_chebyshev_polynomial_u_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_shifted_chebyshev_polynomial_u_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_shifted_chebyshev_polynomial_u_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_shifted_chebyshev_polynomial_v_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_shifted_chebyshev_polynomial_v_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_shifted_chebyshev_polynomial_v_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_shifted_chebyshev_polynomial_v_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_shifted_chebyshev_polynomial_v_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_shifted_chebyshev_polynomial_v_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_shifted_chebyshev_polynomial_w_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_shifted_chebyshev_polynomial_w_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_shifted_chebyshev_polynomial_w_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_shifted_chebyshev_polynomial_w_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_shifted_chebyshev_polynomial_w_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_shifted_chebyshev_polynomial_w_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_xlog1py_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_xlog1py_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_xlog1py_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_xlog1py_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_xlog1py_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_xlog1py_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_xlog1py_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_xlog1py_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_zeta_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_zeta_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_zeta_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_zeta_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_zeta_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_special_zeta_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_true_divide_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_true_divide_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_true_divide_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_true_divide_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_true_divide_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_true_divide_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_true_divide_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_true_divide_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_true_divide_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_true_divide_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_large_dim_xlogy_mlu_bfloat16", # TODO(PYTORCH-8751): xlog not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_lcm_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_lcm_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_lcm_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_lcm_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_ldexp_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_ldexp_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_ldexp_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_ldexp_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_ldexp_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_ldexp_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_ldexp_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_ldexp_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_ldexp_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_le_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_logical_and_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_logical_and_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_logical_or_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_logical_or_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_logical_xor_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_logical_xor_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_lt_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_max_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_maximum_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_min_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_minimum_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_ne_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_ne_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_nextafter_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_nextafter_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_polar_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_pow_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_pow_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_pow_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_pow_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_pow_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_pow_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_pow_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_remainder_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_chebyshev_polynomial_t_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_chebyshev_polynomial_t_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_chebyshev_polynomial_t_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_chebyshev_polynomial_t_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_chebyshev_polynomial_t_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_chebyshev_polynomial_t_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_chebyshev_polynomial_u_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_chebyshev_polynomial_u_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_chebyshev_polynomial_u_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_chebyshev_polynomial_u_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_chebyshev_polynomial_u_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_chebyshev_polynomial_u_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_chebyshev_polynomial_v_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_chebyshev_polynomial_v_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_chebyshev_polynomial_v_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_chebyshev_polynomial_v_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_chebyshev_polynomial_v_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_chebyshev_polynomial_v_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_chebyshev_polynomial_w_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_chebyshev_polynomial_w_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_chebyshev_polynomial_w_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_chebyshev_polynomial_w_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_chebyshev_polynomial_w_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_chebyshev_polynomial_w_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_hermite_polynomial_h_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_hermite_polynomial_h_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_hermite_polynomial_h_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_hermite_polynomial_h_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_hermite_polynomial_h_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_hermite_polynomial_h_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_hermite_polynomial_he_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_hermite_polynomial_he_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_hermite_polynomial_he_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_hermite_polynomial_he_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_hermite_polynomial_he_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_hermite_polynomial_he_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_laguerre_polynomial_l_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_laguerre_polynomial_l_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_laguerre_polynomial_l_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_laguerre_polynomial_l_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_laguerre_polynomial_l_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_laguerre_polynomial_l_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_legendre_polynomial_p_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_legendre_polynomial_p_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_legendre_polynomial_p_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_legendre_polynomial_p_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_legendre_polynomial_p_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_legendre_polynomial_p_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_shifted_chebyshev_polynomial_t_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_shifted_chebyshev_polynomial_t_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_shifted_chebyshev_polynomial_t_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_shifted_chebyshev_polynomial_t_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_shifted_chebyshev_polynomial_t_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_shifted_chebyshev_polynomial_t_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_shifted_chebyshev_polynomial_u_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_shifted_chebyshev_polynomial_u_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_shifted_chebyshev_polynomial_u_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_shifted_chebyshev_polynomial_u_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_shifted_chebyshev_polynomial_u_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_shifted_chebyshev_polynomial_u_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_shifted_chebyshev_polynomial_v_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_shifted_chebyshev_polynomial_v_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_shifted_chebyshev_polynomial_v_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_shifted_chebyshev_polynomial_v_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_shifted_chebyshev_polynomial_v_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_shifted_chebyshev_polynomial_v_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_shifted_chebyshev_polynomial_w_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_shifted_chebyshev_polynomial_w_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_shifted_chebyshev_polynomial_w_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_shifted_chebyshev_polynomial_w_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_shifted_chebyshev_polynomial_w_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_shifted_chebyshev_polynomial_w_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_xlog1py_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_xlog1py_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_xlog1py_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_xlog1py_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_xlog1py_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_xlog1py_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_xlog1py_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_xlog1py_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_zeta_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_zeta_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_zeta_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_zeta_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_zeta_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_special_zeta_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_true_divide_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_true_divide_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_true_divide_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_true_divide_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_true_divide_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_true_divide_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_true_divide_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_true_divide_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_true_divide_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_true_divide_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_size1_xlogy_mlu_bfloat16", # TODO(PYTORCH-8751): xlog not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___rand___mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___rand___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___rand___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___rand___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___rand___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___rdiv___mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___rdiv___mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___rmod___mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___rmod___mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___rmod___mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___rmod___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___rmod___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___rmod___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___rmod___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___ror___mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___ror___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___ror___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___ror___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___ror___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___rpow___mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___rpow___mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___rpow___mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___rpow___mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___rpow___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___rpow___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___rpow___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___rpow___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___rxor___mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___rxor___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___rxor___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___rxor___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other___rxor___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_atan2_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_atan2_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_atan2_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_atan2_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_atan2_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_atan2_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_atan2_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_atan2_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_clamp_max_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_clamp_min_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_complex_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_complex_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_copysign_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_copysign_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_copysign_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_copysign_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_copysign_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_copysign_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_copysign_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_copysign_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_div_floor_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_div_no_rounding_mode_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_div_no_rounding_mode_mlu_complex32", # TODO(PYTORCH-8724): div not support complex dtypes
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_div_no_rounding_mode_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_div_trunc_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_eq_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_eq_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_eq_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_float_power_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_float_power_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_float_power_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_float_power_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_float_power_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_float_power_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_float_power_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_float_power_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_float_power_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_floor_divide_mlu_bfloat16", # TODO(PYTORCH-8724): floor divide not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_fmax_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_fmax_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_fmax_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_fmax_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_fmax_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_fmax_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_fmax_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_fmax_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_fmin_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_fmin_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_fmin_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_fmin_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_fmin_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_fmin_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_fmin_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_fmin_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_fmod_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_gcd_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_gcd_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_gcd_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_gcd_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_ge_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_gt_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_heaviside_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_heaviside_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_heaviside_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_heaviside_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_heaviside_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_heaviside_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_heaviside_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_heaviside_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_hypot_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_hypot_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_hypot_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_igamma_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_igammac_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_isclose_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_isclose_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_isclose_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_isclose_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_isclose_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_isclose_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_isclose_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_isclose_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_isclose_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_jiterator_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_jiterator_binary_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_jiterator_binary_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_jiterator_binary_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_jiterator_binary_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_jiterator_binary_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_jiterator_binary_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_jiterator_binary_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_jiterator_binary_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_jiterator_binary_return_by_ref_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_jiterator_binary_return_by_ref_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_jiterator_binary_return_by_ref_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_jiterator_binary_return_by_ref_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_jiterator_binary_return_by_ref_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_jiterator_binary_return_by_ref_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_jiterator_binary_return_by_ref_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_jiterator_binary_return_by_ref_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_jiterator_binary_return_by_ref_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_lcm_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_lcm_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_lcm_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_lcm_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_ldexp_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_ldexp_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_ldexp_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_ldexp_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_ldexp_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_ldexp_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_ldexp_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_ldexp_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_ldexp_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_le_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_logical_and_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_logical_and_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_logical_or_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_logical_or_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_logical_xor_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_logical_xor_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_lt_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_max_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_maximum_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_min_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_minimum_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_ne_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_ne_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_nextafter_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_nextafter_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_polar_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_pow_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_pow_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_pow_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_pow_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_pow_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_pow_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_pow_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_remainder_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_chebyshev_polynomial_t_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_chebyshev_polynomial_t_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_chebyshev_polynomial_t_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_chebyshev_polynomial_t_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_chebyshev_polynomial_t_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_chebyshev_polynomial_t_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_chebyshev_polynomial_u_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_chebyshev_polynomial_u_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_chebyshev_polynomial_u_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_chebyshev_polynomial_u_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_chebyshev_polynomial_u_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_chebyshev_polynomial_u_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_chebyshev_polynomial_v_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_chebyshev_polynomial_v_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_chebyshev_polynomial_v_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_chebyshev_polynomial_v_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_chebyshev_polynomial_v_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_chebyshev_polynomial_v_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_chebyshev_polynomial_w_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_chebyshev_polynomial_w_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_chebyshev_polynomial_w_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_chebyshev_polynomial_w_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_chebyshev_polynomial_w_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_chebyshev_polynomial_w_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_hermite_polynomial_h_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_hermite_polynomial_h_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_hermite_polynomial_h_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_hermite_polynomial_h_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_hermite_polynomial_h_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_hermite_polynomial_h_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_hermite_polynomial_he_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_hermite_polynomial_he_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_hermite_polynomial_he_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_hermite_polynomial_he_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_hermite_polynomial_he_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_hermite_polynomial_he_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_laguerre_polynomial_l_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_laguerre_polynomial_l_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_laguerre_polynomial_l_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_laguerre_polynomial_l_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_laguerre_polynomial_l_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_laguerre_polynomial_l_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_legendre_polynomial_p_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_legendre_polynomial_p_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_legendre_polynomial_p_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_legendre_polynomial_p_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_legendre_polynomial_p_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_legendre_polynomial_p_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_shifted_chebyshev_polynomial_t_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_shifted_chebyshev_polynomial_t_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_shifted_chebyshev_polynomial_t_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_shifted_chebyshev_polynomial_t_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_shifted_chebyshev_polynomial_t_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_shifted_chebyshev_polynomial_t_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_shifted_chebyshev_polynomial_u_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_shifted_chebyshev_polynomial_u_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_shifted_chebyshev_polynomial_u_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_shifted_chebyshev_polynomial_u_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_shifted_chebyshev_polynomial_u_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_shifted_chebyshev_polynomial_u_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_shifted_chebyshev_polynomial_v_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_shifted_chebyshev_polynomial_v_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_shifted_chebyshev_polynomial_v_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_shifted_chebyshev_polynomial_v_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_shifted_chebyshev_polynomial_v_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_shifted_chebyshev_polynomial_v_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_shifted_chebyshev_polynomial_w_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_shifted_chebyshev_polynomial_w_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_shifted_chebyshev_polynomial_w_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_shifted_chebyshev_polynomial_w_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_shifted_chebyshev_polynomial_w_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_shifted_chebyshev_polynomial_w_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_xlog1py_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_xlog1py_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_xlog1py_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_xlog1py_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_xlog1py_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_xlog1py_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_xlog1py_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_xlog1py_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_zeta_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_zeta_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_zeta_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_zeta_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_zeta_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_special_zeta_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_true_divide_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_true_divide_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_true_divide_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_true_divide_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_true_divide_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_true_divide_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_true_divide_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_true_divide_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_true_divide_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_true_divide_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_every_other_xlogy_mlu_bfloat16", # TODO(PYTORCH-8751): xlog not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___rand___mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___rand___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___rand___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___rand___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___rand___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___rdiv___mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___rdiv___mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___rmod___mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___rmod___mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___rmod___mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___rmod___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___rmod___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___rmod___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___rmod___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___ror___mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___ror___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___ror___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___ror___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___ror___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___rpow___mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___rpow___mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___rpow___mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___rpow___mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___rpow___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___rpow___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___rpow___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___rpow___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___rxor___mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___rxor___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___rxor___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___rxor___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed___rxor___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_atan2_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_atan2_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_atan2_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_atan2_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_atan2_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_atan2_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_atan2_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_atan2_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_clamp_max_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_clamp_min_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_complex_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_complex_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_copysign_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_copysign_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_copysign_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_copysign_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_copysign_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_copysign_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_copysign_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_copysign_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_div_floor_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_div_no_rounding_mode_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_div_no_rounding_mode_mlu_complex32", # TODO(PYTORCH-8724): div not support complex dtypes
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_div_no_rounding_mode_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_div_trunc_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_eq_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_eq_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_eq_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_float_power_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_float_power_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_float_power_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_float_power_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_float_power_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_float_power_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_float_power_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_float_power_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_float_power_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_floor_divide_mlu_bfloat16", # TODO(PYTORCH-8724): floor divide not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_fmax_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_fmax_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_fmax_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_fmax_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_fmax_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_fmax_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_fmax_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_fmax_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_fmin_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_fmin_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_fmin_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_fmin_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_fmin_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_fmin_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_fmin_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_fmin_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_fmod_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_gcd_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_gcd_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_gcd_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_gcd_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_ge_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_gt_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_heaviside_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_heaviside_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_heaviside_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_heaviside_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_heaviside_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_heaviside_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_heaviside_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_heaviside_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_hypot_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_hypot_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_hypot_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_igamma_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_igammac_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_isclose_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_isclose_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_isclose_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_isclose_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_isclose_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_isclose_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_isclose_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_isclose_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_isclose_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_jiterator_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_jiterator_binary_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_jiterator_binary_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_jiterator_binary_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_jiterator_binary_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_jiterator_binary_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_jiterator_binary_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_jiterator_binary_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_jiterator_binary_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_jiterator_binary_return_by_ref_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_jiterator_binary_return_by_ref_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_jiterator_binary_return_by_ref_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_jiterator_binary_return_by_ref_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_jiterator_binary_return_by_ref_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_jiterator_binary_return_by_ref_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_jiterator_binary_return_by_ref_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_jiterator_binary_return_by_ref_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_jiterator_binary_return_by_ref_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_lcm_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_lcm_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_lcm_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_lcm_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_ldexp_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_ldexp_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_ldexp_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_ldexp_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_ldexp_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_ldexp_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_ldexp_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_ldexp_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_ldexp_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_le_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_logical_and_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_logical_and_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_logical_or_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_logical_or_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_logical_xor_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_logical_xor_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_lt_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_max_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_maximum_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_min_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_minimum_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_ne_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_ne_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_nextafter_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_nextafter_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_polar_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_pow_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_pow_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_pow_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_pow_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_pow_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_pow_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_pow_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_remainder_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_chebyshev_polynomial_t_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_chebyshev_polynomial_t_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_chebyshev_polynomial_t_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_chebyshev_polynomial_t_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_chebyshev_polynomial_t_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_chebyshev_polynomial_t_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_chebyshev_polynomial_u_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_chebyshev_polynomial_u_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_chebyshev_polynomial_u_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_chebyshev_polynomial_u_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_chebyshev_polynomial_u_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_chebyshev_polynomial_u_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_chebyshev_polynomial_v_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_chebyshev_polynomial_v_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_chebyshev_polynomial_v_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_chebyshev_polynomial_v_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_chebyshev_polynomial_v_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_chebyshev_polynomial_v_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_chebyshev_polynomial_w_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_chebyshev_polynomial_w_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_chebyshev_polynomial_w_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_chebyshev_polynomial_w_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_chebyshev_polynomial_w_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_chebyshev_polynomial_w_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_hermite_polynomial_h_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_hermite_polynomial_h_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_hermite_polynomial_h_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_hermite_polynomial_h_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_hermite_polynomial_h_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_hermite_polynomial_h_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_hermite_polynomial_he_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_hermite_polynomial_he_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_hermite_polynomial_he_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_hermite_polynomial_he_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_hermite_polynomial_he_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_hermite_polynomial_he_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_laguerre_polynomial_l_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_laguerre_polynomial_l_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_laguerre_polynomial_l_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_laguerre_polynomial_l_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_laguerre_polynomial_l_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_laguerre_polynomial_l_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_legendre_polynomial_p_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_legendre_polynomial_p_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_legendre_polynomial_p_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_legendre_polynomial_p_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_legendre_polynomial_p_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_legendre_polynomial_p_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_shifted_chebyshev_polynomial_t_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_shifted_chebyshev_polynomial_t_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_shifted_chebyshev_polynomial_t_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_shifted_chebyshev_polynomial_t_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_shifted_chebyshev_polynomial_t_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_shifted_chebyshev_polynomial_t_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_shifted_chebyshev_polynomial_u_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_shifted_chebyshev_polynomial_u_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_shifted_chebyshev_polynomial_u_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_shifted_chebyshev_polynomial_u_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_shifted_chebyshev_polynomial_u_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_shifted_chebyshev_polynomial_u_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_shifted_chebyshev_polynomial_v_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_shifted_chebyshev_polynomial_v_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_shifted_chebyshev_polynomial_v_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_shifted_chebyshev_polynomial_v_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_shifted_chebyshev_polynomial_v_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_shifted_chebyshev_polynomial_v_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_shifted_chebyshev_polynomial_w_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_shifted_chebyshev_polynomial_w_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_shifted_chebyshev_polynomial_w_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_shifted_chebyshev_polynomial_w_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_shifted_chebyshev_polynomial_w_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_shifted_chebyshev_polynomial_w_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_xlog1py_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_xlog1py_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_xlog1py_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_xlog1py_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_xlog1py_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_xlog1py_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_xlog1py_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_xlog1py_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_zeta_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_zeta_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_zeta_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_zeta_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_zeta_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_special_zeta_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_true_divide_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_true_divide_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_true_divide_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_true_divide_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_true_divide_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_true_divide_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_true_divide_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_true_divide_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_true_divide_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_true_divide_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_contig_vs_transposed_xlogy_mlu_bfloat16", # TODO(PYTORCH-8751): xlog not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_copysign_mlu_bfloat16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_copysign_mlu_bfloat16_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_copysign_mlu_bfloat16_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_copysign_mlu_bfloat16_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_copysign_mlu_bfloat16_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_copysign_mlu_bfloat16_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_copysign_mlu_bfloat16_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_copysign_mlu_bfloat16_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_copysign_mlu_bool_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_copysign_mlu_float16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_copysign_mlu_float32_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_copysign_mlu_int16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_copysign_mlu_int32_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_copysign_mlu_int8_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_copysign_mlu_uint8_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_copysign_subgradient_mlu_bfloat16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_copysign_subgradient_mlu_bfloat16_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_copysign_subgradient_mlu_bfloat16_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_copysign_subgradient_mlu_float16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_copysign_subgradient_mlu_float32_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_cpow_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_cremainder_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_div_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_div_rounding_modes_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_div_rounding_modes_mlu_int32", # CNNLCORE-2677: MLU370 series may have precision problem for div
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_div_rounding_modes_mlu_int8", # CNNLCORE-2677: MLU370 series may have precision problem for div
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_div_rounding_modes_mlu_uint8", # TODO(PYTORCH-10149): where op uint8 dtype problem
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_div_rounding_nonfinite_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_div_rounding_numpy_mlu_int32", # Compare results with torch.double dtype, MLU may have precision problem
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_div_rounding_numpy_mlu_int8", # Compare results with torch.double dtype, MLU may have precision problem
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_div_rounding_numpy_mlu_uint8", # Compare with torch.double dtype, MLU may have precision problem
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_divide_by_zero_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_divmul_scalar_mlu_float16", # CTR-4559: Mul op problem while process value exceed half
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_bfloat16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_bfloat16_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_bfloat16_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_bfloat16_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_bfloat16_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_bfloat16_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_bfloat16_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_bfloat16_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_complex64_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_complex64_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_complex64_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_complex64_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_complex64_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_complex64_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_complex64_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_complex64_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_float16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_float16_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_float16_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_float16_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_float16_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_float16_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_float16_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_float16_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_float32_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_float32_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_float32_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_float32_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_float32_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_float32_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_float32_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_float32_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_int16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_int16_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_int16_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_int16_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_int16_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_int16_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_int16_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_int16_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_int32_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_int32_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_int32_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_int32_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_int32_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_int32_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_int32_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_int32_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_int8_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_int8_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_int8_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_int8_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_int8_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_int8_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_int8_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_int8_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_uint8_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_uint8_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_uint8_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_uint8_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_uint8_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_uint8_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_uint8_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_mlu_uint8_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_float_power_exceptions_mlu",
# fmod success, but remainder op failed. begin
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_fmod_remainder_by_zero_integral_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_fmod_remainder_by_zero_integral_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_fmod_remainder_by_zero_integral_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_fmod_remainder_by_zero_integral_mlu_uint8",
# fmod success, but remainder op failed. end
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_gcd_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_gcd_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_heaviside_mlu_bfloat16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_heaviside_mlu_bfloat16_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_heaviside_mlu_bfloat16_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_heaviside_mlu_bfloat16_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_heaviside_mlu_bfloat16_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_heaviside_mlu_bfloat16_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_heaviside_mlu_bfloat16_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_heaviside_mlu_bfloat16_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_heaviside_mlu_bool_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_heaviside_mlu_float16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_heaviside_mlu_float32_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_heaviside_mlu_int16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_heaviside_mlu_int32_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_heaviside_mlu_int8_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_heaviside_mlu_uint8_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_int_and_float_pow_mlu", # pow input only support floating type
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_lcm_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_ldexp_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_lerp_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_lerp_lowp_cpu_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_lerp_lowp_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_lerp_lowp_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logaddexp2_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logaddexp_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_bfloat16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_bfloat16_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_bfloat16_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_bfloat16_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_bfloat16_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_bfloat16_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_bfloat16_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_bfloat16_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_bfloat16_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_bool_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_bool_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_complex64_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_complex64_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_complex64_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_complex64_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_complex64_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_complex64_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_complex64_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_complex64_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_complex64_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_float16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_float16_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_float32_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_float32_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_int16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_int16_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_int32_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_int32_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_int8_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_int8_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_uint8_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_and_mlu_uint8_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_bfloat16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_bfloat16_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_bfloat16_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_bfloat16_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_bfloat16_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_bfloat16_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_bfloat16_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_bfloat16_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_bfloat16_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_bool_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_bool_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_complex64_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_complex64_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_complex64_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_complex64_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_complex64_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_complex64_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_complex64_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_complex64_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_complex64_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_float16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_float16_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_float32_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_float32_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_int16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_int16_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_int32_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_int32_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_int8_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_int8_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_uint8_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_or_mlu_uint8_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_bfloat16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_bfloat16_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_bfloat16_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_bfloat16_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_bfloat16_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_bfloat16_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_bfloat16_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_bfloat16_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_bfloat16_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_bool_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_bool_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_complex64_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_complex64_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_complex64_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_complex64_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_complex64_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_complex64_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_complex64_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_complex64_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_complex64_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_float16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_float16_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_float32_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_float32_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_int16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_int16_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_int32_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_int32_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_int8_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_int8_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_uint8_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_logical_xor_mlu_uint8_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_maximum_and_minimum_subgradient_mlu_bfloat16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_maximum_and_minimum_subgradient_mlu_bfloat16_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_maximum_and_minimum_subgradient_mlu_bfloat16_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_maximum_and_minimum_subgradient_mlu_float16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_maximum_and_minimum_subgradient_mlu_float32_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_maximum_minimum_complex_mlu_complex64_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_maximum_minimum_float_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_maximum_minimum_float_nan_and_inf_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_maximum_minimum_type_promotion_mlu_bfloat16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_maximum_minimum_type_promotion_mlu_bfloat16_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_maximum_minimum_type_promotion_mlu_bfloat16_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_maximum_minimum_type_promotion_mlu_bfloat16_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_maximum_minimum_type_promotion_mlu_bfloat16_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_maximum_minimum_type_promotion_mlu_bfloat16_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_maximum_minimum_type_promotion_mlu_bfloat16_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_maximum_minimum_type_promotion_mlu_bfloat16_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_maximum_minimum_type_promotion_mlu_bool_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_maximum_minimum_type_promotion_mlu_float16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_maximum_minimum_type_promotion_mlu_float32_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_maximum_minimum_type_promotion_mlu_int16_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_maximum_minimum_type_promotion_mlu_int32_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_maximum_minimum_type_promotion_mlu_int8_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_maximum_minimum_type_promotion_mlu_uint8_bfloat16",
# TODO(PYTORCH-9105): complex is not support.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_mul_chalf_tensor_and_cpu_scalar_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_muldiv_scalar_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_muldiv_scalar_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_nextafter_bfloat16_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___rand___mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___rand___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___rand___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___rand___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___rand___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___rdiv___mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___rdiv___mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___rmod___mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___rmod___mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___rmod___mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___rmod___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___rmod___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___rmod___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___rmod___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___ror___mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___ror___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___ror___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___ror___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___ror___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___rpow___mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___rpow___mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___rpow___mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___rpow___mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___rpow___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___rpow___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___rpow___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___rpow___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___rxor___mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___rxor___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___rxor___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___rxor___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig___rxor___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_atan2_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_atan2_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_atan2_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_atan2_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_atan2_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_atan2_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_atan2_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_atan2_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_clamp_max_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_clamp_min_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_complex_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_complex_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_copysign_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_copysign_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_copysign_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_copysign_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_copysign_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_copysign_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_copysign_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_copysign_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_div_floor_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_div_no_rounding_mode_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_div_no_rounding_mode_mlu_complex32", # TODO(PYTORCH-8724): div not support complex dtypes
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_div_no_rounding_mode_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_div_trunc_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_eq_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_eq_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_eq_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand___rdiv___mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand___rdiv___mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand___rpow___mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand___rpow___mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand___rpow___mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand___rpow___mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand___rpow___mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_atan2_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_complex_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_complex_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_copysign_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_copysign_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_copysign_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_copysign_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_copysign_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_copysign_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_copysign_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_copysign_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_div_floor_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_div_no_rounding_mode_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_div_no_rounding_mode_mlu_complex32", # TODO(PYTORCH-8724): div not support complex dtypes
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_div_no_rounding_mode_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_div_trunc_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_eq_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_eq_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_eq_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_float_power_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_floor_divide_mlu_bfloat16", # TODO(PYTORCH-8724): floor divide not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_fmax_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_fmax_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_fmax_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_fmax_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_fmax_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_fmax_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_fmax_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_fmax_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_fmin_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_fmin_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_fmin_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_fmin_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_fmin_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_fmin_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_fmin_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_fmin_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_fmod_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_gcd_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_gcd_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_gcd_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_gcd_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_ge_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_gt_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_heaviside_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_heaviside_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_heaviside_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_heaviside_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_heaviside_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_heaviside_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_heaviside_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_heaviside_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_hypot_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_hypot_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_hypot_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_igamma_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_igammac_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_isclose_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_isclose_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_jiterator_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_jiterator_binary_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_jiterator_binary_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_jiterator_binary_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_jiterator_binary_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_jiterator_binary_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_jiterator_binary_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_jiterator_binary_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_jiterator_binary_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_jiterator_binary_return_by_ref_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_jiterator_binary_return_by_ref_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_jiterator_binary_return_by_ref_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_jiterator_binary_return_by_ref_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_jiterator_binary_return_by_ref_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_jiterator_binary_return_by_ref_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_jiterator_binary_return_by_ref_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_jiterator_binary_return_by_ref_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_jiterator_binary_return_by_ref_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_lcm_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_lcm_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_lcm_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_lcm_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_ldexp_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_ldexp_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_le_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_logical_and_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_logical_and_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_logical_or_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_logical_or_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_logical_xor_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_logical_xor_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_lt_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_max_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_maximum_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_ne_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_ne_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_nextafter_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_nextafter_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_polar_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_pow_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_pow_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_pow_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_pow_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_pow_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_pow_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_pow_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_chebyshev_polynomial_t_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_chebyshev_polynomial_t_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_chebyshev_polynomial_t_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_chebyshev_polynomial_t_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_chebyshev_polynomial_t_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_chebyshev_polynomial_t_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_chebyshev_polynomial_u_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_chebyshev_polynomial_u_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_chebyshev_polynomial_u_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_chebyshev_polynomial_u_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_chebyshev_polynomial_u_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_chebyshev_polynomial_u_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_chebyshev_polynomial_v_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_chebyshev_polynomial_v_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_chebyshev_polynomial_v_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_chebyshev_polynomial_v_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_chebyshev_polynomial_v_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_chebyshev_polynomial_v_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_chebyshev_polynomial_w_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_chebyshev_polynomial_w_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_chebyshev_polynomial_w_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_chebyshev_polynomial_w_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_chebyshev_polynomial_w_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_chebyshev_polynomial_w_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_hermite_polynomial_h_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_hermite_polynomial_h_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_hermite_polynomial_h_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_hermite_polynomial_h_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_hermite_polynomial_h_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_hermite_polynomial_h_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_hermite_polynomial_he_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_hermite_polynomial_he_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_hermite_polynomial_he_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_hermite_polynomial_he_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_hermite_polynomial_he_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_hermite_polynomial_he_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_laguerre_polynomial_l_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_laguerre_polynomial_l_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_laguerre_polynomial_l_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_laguerre_polynomial_l_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_laguerre_polynomial_l_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_laguerre_polynomial_l_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_legendre_polynomial_p_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_legendre_polynomial_p_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_legendre_polynomial_p_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_legendre_polynomial_p_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_legendre_polynomial_p_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_legendre_polynomial_p_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_shifted_chebyshev_polynomial_t_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_shifted_chebyshev_polynomial_t_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_shifted_chebyshev_polynomial_t_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_shifted_chebyshev_polynomial_t_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_shifted_chebyshev_polynomial_t_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_shifted_chebyshev_polynomial_t_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_shifted_chebyshev_polynomial_u_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_shifted_chebyshev_polynomial_u_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_shifted_chebyshev_polynomial_u_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_shifted_chebyshev_polynomial_u_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_shifted_chebyshev_polynomial_u_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_shifted_chebyshev_polynomial_u_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_shifted_chebyshev_polynomial_v_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_shifted_chebyshev_polynomial_v_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_shifted_chebyshev_polynomial_v_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_shifted_chebyshev_polynomial_v_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_shifted_chebyshev_polynomial_v_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_shifted_chebyshev_polynomial_v_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_shifted_chebyshev_polynomial_w_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_shifted_chebyshev_polynomial_w_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_shifted_chebyshev_polynomial_w_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_shifted_chebyshev_polynomial_w_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_shifted_chebyshev_polynomial_w_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_shifted_chebyshev_polynomial_w_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_xlog1py_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_xlog1py_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_xlog1py_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_xlog1py_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_xlog1py_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_xlog1py_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_xlog1py_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_xlog1py_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_zeta_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_zeta_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_zeta_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_zeta_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_zeta_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_special_zeta_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_true_divide_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_true_divide_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_true_divide_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_expand_xlogy_mlu_bfloat16", # TODO(PYTORCH-8751): xlog not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_float_power_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_float_power_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_float_power_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_float_power_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_float_power_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_float_power_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_float_power_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_float_power_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_float_power_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_floor_divide_mlu_bfloat16", # TODO(PYTORCH-8724): floor divide not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_fmax_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_fmax_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_fmax_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_fmax_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_fmax_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_fmax_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_fmax_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_fmax_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_fmin_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_fmin_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_fmin_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_fmin_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_fmin_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_fmin_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_fmin_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_fmin_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_fmod_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_gcd_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_gcd_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_gcd_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_gcd_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_ge_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_gt_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_heaviside_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_heaviside_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_heaviside_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_heaviside_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_heaviside_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_heaviside_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_heaviside_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_heaviside_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_hypot_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_hypot_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_hypot_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_igamma_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_igammac_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___rand___mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___rand___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___rand___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___rand___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___rand___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___rdiv___mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___rdiv___mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___rmod___mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___rmod___mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___rmod___mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___rmod___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___rmod___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___rmod___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___rmod___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___ror___mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___ror___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___ror___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___ror___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___ror___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___rpow___mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___rpow___mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___rpow___mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___rpow___mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___rpow___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___rpow___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___rpow___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___rpow___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___rxor___mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___rxor___mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___rxor___mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___rxor___mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index___rxor___mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_atan2_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_atan2_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_atan2_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_atan2_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_atan2_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_atan2_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_atan2_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_atan2_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_clamp_max_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_clamp_min_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_complex_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_complex_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_copysign_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_copysign_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_copysign_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_copysign_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_copysign_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_copysign_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_copysign_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_copysign_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_div_floor_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_div_no_rounding_mode_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_div_no_rounding_mode_mlu_complex32", # TODO(PYTORCH-8724): div not support complex dtypes
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_div_no_rounding_mode_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_div_trunc_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_eq_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_eq_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_eq_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_float_power_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_float_power_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_float_power_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_float_power_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_float_power_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_float_power_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_float_power_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_float_power_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_float_power_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_floor_divide_mlu_bfloat16", # TODO(PYTORCH-8724): floor divide not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_fmax_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_fmax_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_fmax_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_fmax_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_fmax_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_fmax_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_fmax_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_fmax_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_fmin_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_fmin_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_fmin_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_fmin_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_fmin_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_fmin_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_fmin_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_fmin_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_fmod_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_gcd_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_gcd_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_gcd_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_gcd_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_ge_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_gt_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_heaviside_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_heaviside_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_heaviside_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_heaviside_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_heaviside_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_heaviside_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_heaviside_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_heaviside_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_hypot_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_hypot_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_hypot_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_igamma_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_igammac_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_isclose_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_isclose_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_isclose_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_isclose_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_isclose_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_isclose_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_isclose_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_isclose_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_isclose_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_jiterator_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_jiterator_binary_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_jiterator_binary_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_jiterator_binary_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_jiterator_binary_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_jiterator_binary_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_jiterator_binary_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_jiterator_binary_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_jiterator_binary_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_jiterator_binary_return_by_ref_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_jiterator_binary_return_by_ref_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_jiterator_binary_return_by_ref_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_jiterator_binary_return_by_ref_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_jiterator_binary_return_by_ref_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_jiterator_binary_return_by_ref_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_jiterator_binary_return_by_ref_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_jiterator_binary_return_by_ref_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_jiterator_binary_return_by_ref_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_lcm_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_lcm_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_lcm_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_lcm_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_ldexp_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_ldexp_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_ldexp_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_ldexp_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_ldexp_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_ldexp_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_ldexp_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_ldexp_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_ldexp_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_le_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_logical_and_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_logical_and_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_logical_or_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_logical_or_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_logical_xor_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_logical_xor_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_lt_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_max_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_maximum_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_min_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_minimum_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_ne_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_ne_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_nextafter_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_nextafter_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_polar_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_pow_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_pow_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_pow_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_pow_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_pow_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_pow_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_pow_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_remainder_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_chebyshev_polynomial_t_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_chebyshev_polynomial_t_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_chebyshev_polynomial_t_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_chebyshev_polynomial_t_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_chebyshev_polynomial_t_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_chebyshev_polynomial_t_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_chebyshev_polynomial_u_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_chebyshev_polynomial_u_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_chebyshev_polynomial_u_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_chebyshev_polynomial_u_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_chebyshev_polynomial_u_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_chebyshev_polynomial_u_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_chebyshev_polynomial_v_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_chebyshev_polynomial_v_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_chebyshev_polynomial_v_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_chebyshev_polynomial_v_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_chebyshev_polynomial_v_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_chebyshev_polynomial_v_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_chebyshev_polynomial_w_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_chebyshev_polynomial_w_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_chebyshev_polynomial_w_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_chebyshev_polynomial_w_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_chebyshev_polynomial_w_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_chebyshev_polynomial_w_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_hermite_polynomial_h_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_hermite_polynomial_h_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_hermite_polynomial_h_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_hermite_polynomial_h_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_hermite_polynomial_h_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_hermite_polynomial_h_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_hermite_polynomial_he_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_hermite_polynomial_he_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_hermite_polynomial_he_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_hermite_polynomial_he_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_hermite_polynomial_he_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_hermite_polynomial_he_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_laguerre_polynomial_l_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_laguerre_polynomial_l_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_laguerre_polynomial_l_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_laguerre_polynomial_l_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_laguerre_polynomial_l_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_laguerre_polynomial_l_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_legendre_polynomial_p_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_legendre_polynomial_p_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_legendre_polynomial_p_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_legendre_polynomial_p_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_legendre_polynomial_p_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_legendre_polynomial_p_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_shifted_chebyshev_polynomial_t_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_shifted_chebyshev_polynomial_t_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_shifted_chebyshev_polynomial_t_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_shifted_chebyshev_polynomial_t_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_shifted_chebyshev_polynomial_t_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_shifted_chebyshev_polynomial_t_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_shifted_chebyshev_polynomial_u_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_shifted_chebyshev_polynomial_u_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_shifted_chebyshev_polynomial_u_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_shifted_chebyshev_polynomial_u_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_shifted_chebyshev_polynomial_u_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_shifted_chebyshev_polynomial_u_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_shifted_chebyshev_polynomial_v_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_shifted_chebyshev_polynomial_v_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_shifted_chebyshev_polynomial_v_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_shifted_chebyshev_polynomial_v_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_shifted_chebyshev_polynomial_v_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_shifted_chebyshev_polynomial_v_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_shifted_chebyshev_polynomial_w_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_shifted_chebyshev_polynomial_w_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_shifted_chebyshev_polynomial_w_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_shifted_chebyshev_polynomial_w_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_shifted_chebyshev_polynomial_w_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_shifted_chebyshev_polynomial_w_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_xlog1py_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_xlog1py_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_xlog1py_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_xlog1py_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_xlog1py_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_xlog1py_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_xlog1py_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_xlog1py_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_zeta_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_zeta_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_zeta_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_zeta_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_zeta_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_special_zeta_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_true_divide_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_true_divide_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_true_divide_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_true_divide_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_true_divide_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_true_divide_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_true_divide_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_true_divide_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_true_divide_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_true_divide_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_index_xlogy_mlu_bfloat16", # TODO(PYTORCH-8751): xlog not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_isclose_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_isclose_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_isclose_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_isclose_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_isclose_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_isclose_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_isclose_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_isclose_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_isclose_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_jiterator_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_jiterator_binary_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_jiterator_binary_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_jiterator_binary_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_jiterator_binary_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_jiterator_binary_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_jiterator_binary_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_jiterator_binary_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_jiterator_binary_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_jiterator_binary_return_by_ref_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_jiterator_binary_return_by_ref_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_jiterator_binary_return_by_ref_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_jiterator_binary_return_by_ref_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_jiterator_binary_return_by_ref_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_jiterator_binary_return_by_ref_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_jiterator_binary_return_by_ref_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_jiterator_binary_return_by_ref_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_jiterator_binary_return_by_ref_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_lcm_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_lcm_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_lcm_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_lcm_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_ldexp_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_ldexp_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_ldexp_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_ldexp_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_ldexp_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_ldexp_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_ldexp_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_ldexp_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_ldexp_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_le_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_logical_and_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_logical_and_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_logical_or_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_logical_or_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_logical_xor_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_logical_xor_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_lt_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_max_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_maximum_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_min_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_minimum_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_ne_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_ne_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_nextafter_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_nextafter_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_polar_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_pow_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_pow_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_pow_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_pow_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_pow_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_pow_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_pow_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_remainder_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_chebyshev_polynomial_t_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_chebyshev_polynomial_t_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_chebyshev_polynomial_t_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_chebyshev_polynomial_t_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_chebyshev_polynomial_t_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_chebyshev_polynomial_t_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_chebyshev_polynomial_u_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_chebyshev_polynomial_u_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_chebyshev_polynomial_u_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_chebyshev_polynomial_u_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_chebyshev_polynomial_u_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_chebyshev_polynomial_u_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_chebyshev_polynomial_v_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_chebyshev_polynomial_v_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_chebyshev_polynomial_v_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_chebyshev_polynomial_v_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_chebyshev_polynomial_v_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_chebyshev_polynomial_v_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_chebyshev_polynomial_w_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_chebyshev_polynomial_w_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_chebyshev_polynomial_w_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_chebyshev_polynomial_w_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_chebyshev_polynomial_w_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_chebyshev_polynomial_w_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_hermite_polynomial_h_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_hermite_polynomial_h_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_hermite_polynomial_h_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_hermite_polynomial_h_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_hermite_polynomial_h_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_hermite_polynomial_h_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_hermite_polynomial_he_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_hermite_polynomial_he_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_hermite_polynomial_he_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_hermite_polynomial_he_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_hermite_polynomial_he_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_hermite_polynomial_he_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_laguerre_polynomial_l_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_laguerre_polynomial_l_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_laguerre_polynomial_l_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_laguerre_polynomial_l_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_laguerre_polynomial_l_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_laguerre_polynomial_l_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_legendre_polynomial_p_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_legendre_polynomial_p_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_legendre_polynomial_p_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_legendre_polynomial_p_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_legendre_polynomial_p_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_legendre_polynomial_p_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_shifted_chebyshev_polynomial_t_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_shifted_chebyshev_polynomial_t_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_shifted_chebyshev_polynomial_t_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_shifted_chebyshev_polynomial_t_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_shifted_chebyshev_polynomial_t_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_shifted_chebyshev_polynomial_t_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_shifted_chebyshev_polynomial_u_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_shifted_chebyshev_polynomial_u_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_shifted_chebyshev_polynomial_u_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_shifted_chebyshev_polynomial_u_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_shifted_chebyshev_polynomial_u_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_shifted_chebyshev_polynomial_u_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_shifted_chebyshev_polynomial_v_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_shifted_chebyshev_polynomial_v_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_shifted_chebyshev_polynomial_v_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_shifted_chebyshev_polynomial_v_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_shifted_chebyshev_polynomial_v_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_shifted_chebyshev_polynomial_v_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_shifted_chebyshev_polynomial_w_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_shifted_chebyshev_polynomial_w_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_shifted_chebyshev_polynomial_w_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_shifted_chebyshev_polynomial_w_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_shifted_chebyshev_polynomial_w_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_shifted_chebyshev_polynomial_w_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_xlog1py_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_xlog1py_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_xlog1py_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_xlog1py_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_xlog1py_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_xlog1py_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_xlog1py_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_xlog1py_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_zeta_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_zeta_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_zeta_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_zeta_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_zeta_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_special_zeta_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_true_divide_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_true_divide_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_true_divide_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_true_divide_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_true_divide_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_true_divide_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_true_divide_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_true_divide_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_true_divide_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_true_divide_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_non_contig_xlogy_mlu_bfloat16", # TODO(PYTORCH-8751): xlog not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable___rmod___mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable___rpow___mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_atan2_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_complex_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_copysign_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_float_power_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_fmax_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_fmin_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_heaviside_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_hypot_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_igamma_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_igammac_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_isclose_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_jiterator_binary_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_jiterator_binary_return_by_ref_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_ldexp_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_nextafter_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_polar_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_special_chebyshev_polynomial_t_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_special_chebyshev_polynomial_u_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_special_chebyshev_polynomial_v_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_special_chebyshev_polynomial_w_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_special_hermite_polynomial_h_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_special_hermite_polynomial_he_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_special_laguerre_polynomial_l_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_special_legendre_polynomial_p_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_special_shifted_chebyshev_polynomial_t_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_special_shifted_chebyshev_polynomial_u_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_special_shifted_chebyshev_polynomial_v_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_special_shifted_chebyshev_polynomial_w_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_special_xlog1py_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_special_zeta_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_not_broadcastable_true_divide_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_pow_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_pow_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_pow_mlu_complex_extremal_failing_mlu_complex64", #  pow input only support floating type
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_pow_mlu_float16", # PYTORCH-9430
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_pow_mlu_float32", # CNNL cast currently do not support complex type
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_pow_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_pow_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_pow_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_pow_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_pow_scalar_base_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_pow_scalar_type_promotion_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_rdiv_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_clamp_max_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_clamp_min_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_eq_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_eq_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_eq_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_clamp_max_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_clamp_min_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_eq_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_eq_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_float_power_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_float_power_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_float_power_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_float_power_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_floor_divide_mlu_bfloat16", # TODO(PYTORCH-8724): floor divide not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_fmod_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_ge_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_gt_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_heaviside_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_heaviside_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_heaviside_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_isclose_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_isclose_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_isclose_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_isclose_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_jiterator_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_jiterator_binary_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_jiterator_binary_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_jiterator_binary_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_jiterator_binary_return_by_ref_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_jiterator_binary_return_by_ref_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_jiterator_binary_return_by_ref_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_jiterator_binary_return_by_ref_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_le_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_logical_and_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_logical_and_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_logical_or_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_logical_or_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_logical_xor_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_logical_xor_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_lt_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_max_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_maximum_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_min_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_minimum_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_ne_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_ne_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_pow_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_pow_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_pow_mlu_float32", # PYTORCH-9430
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_extremal_values_remainder_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_float_power_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_float_power_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_float_power_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_float_power_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_float_power_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_float_power_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_float_power_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_float_power_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_float_power_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_floor_divide_mlu_bfloat16", # TODO(PYTORCH-8724): floor divide not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_fmod_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_gcd_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_gcd_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_gcd_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_gcd_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_ge_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_gt_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_heaviside_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_heaviside_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_heaviside_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_heaviside_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_heaviside_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_heaviside_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_heaviside_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_heaviside_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_isclose_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_isclose_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_isclose_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_isclose_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_isclose_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_isclose_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_isclose_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_isclose_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_isclose_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_jiterator_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_jiterator_binary_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_jiterator_binary_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_jiterator_binary_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_jiterator_binary_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_jiterator_binary_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_jiterator_binary_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_jiterator_binary_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_jiterator_binary_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_jiterator_binary_return_by_ref_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_jiterator_binary_return_by_ref_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_jiterator_binary_return_by_ref_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_jiterator_binary_return_by_ref_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_jiterator_binary_return_by_ref_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_jiterator_binary_return_by_ref_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_jiterator_binary_return_by_ref_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_jiterator_binary_return_by_ref_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_jiterator_binary_return_by_ref_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_clamp_max_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_clamp_min_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_eq_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_eq_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_float_power_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_float_power_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_float_power_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_float_power_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_float_power_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_float_power_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_floor_divide_mlu_bfloat16", # TODO(PYTORCH-8724): floor divide not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_fmod_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_gcd_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_gcd_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_ge_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_gt_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_heaviside_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_heaviside_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_heaviside_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_heaviside_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_heaviside_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_isclose_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_isclose_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_isclose_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_isclose_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_isclose_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_isclose_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_jiterator_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_jiterator_binary_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_jiterator_binary_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_jiterator_binary_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_jiterator_binary_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_jiterator_binary_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_jiterator_binary_return_by_ref_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_jiterator_binary_return_by_ref_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_jiterator_binary_return_by_ref_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_jiterator_binary_return_by_ref_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_jiterator_binary_return_by_ref_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_jiterator_binary_return_by_ref_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_lcm_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_lcm_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_le_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_logical_and_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_logical_and_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_logical_or_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_logical_or_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_logical_xor_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_logical_xor_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_lt_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_max_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_maximum_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_min_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_minimum_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_ne_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_ne_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_pow_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_pow_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_pow_mlu_float32", # PYTORCH-9430
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_pow_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_pow_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_large_values_remainder_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_lcm_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_lcm_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_lcm_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_lcm_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_le_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_logical_and_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_logical_and_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_logical_or_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_logical_or_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_logical_xor_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_logical_xor_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_lt_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_max_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_maximum_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_min_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_minimum_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_ne_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_ne_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_pow_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_pow_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_pow_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_pow_mlu_float32", # PYTORCH-9430
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_pow_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_pow_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_pow_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_pow_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_remainder_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_bitwise_and_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_bitwise_or_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_bitwise_xor_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_clamp_max_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_clamp_min_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_eq_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_eq_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_eq_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_float_power_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_float_power_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_float_power_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_float_power_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_float_power_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_float_power_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_float_power_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_float_power_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_float_power_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_floor_divide_mlu_bfloat16", # TODO(PYTORCH-8724): floor divide not support bf16
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_fmod_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_gcd_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_gcd_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_gcd_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_gcd_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_ge_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_gt_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_heaviside_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_heaviside_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_heaviside_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_heaviside_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_heaviside_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_heaviside_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_heaviside_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_heaviside_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_isclose_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_isclose_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_isclose_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_isclose_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_isclose_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_isclose_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_isclose_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_isclose_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_isclose_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_jiterator_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_jiterator_binary_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_jiterator_binary_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_jiterator_binary_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_jiterator_binary_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_jiterator_binary_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_jiterator_binary_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_jiterator_binary_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_jiterator_binary_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_jiterator_binary_return_by_ref_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_jiterator_binary_return_by_ref_mlu_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_jiterator_binary_return_by_ref_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_jiterator_binary_return_by_ref_mlu_float16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_jiterator_binary_return_by_ref_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_jiterator_binary_return_by_ref_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_jiterator_binary_return_by_ref_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_jiterator_binary_return_by_ref_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_jiterator_binary_return_by_ref_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_lcm_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_lcm_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_lcm_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_lcm_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_le_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_logical_and_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_logical_and_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_logical_or_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_logical_or_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_logical_xor_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_logical_xor_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_lt_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_max_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_maximum_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_min_binary_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_minimum_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_ne_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_ne_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_pow_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_pow_mlu_complex32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_pow_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_pow_mlu_float16", # PYTORCH-9430
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_pow_mlu_float32", # PYTORCH-9430
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_pow_mlu_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_pow_mlu_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_pow_mlu_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_pow_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_remainder_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_reference_numerics_small_values_remainder_mlu_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_remainder_overflow_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_scalar_support_eq_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_scalar_support_float_power_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_scalar_support_float_power_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_scalar_support_heaviside_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_scalar_support_isclose_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_scalar_support_isclose_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_scalar_support_jiterator_binary_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_scalar_support_jiterator_binary_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_scalar_support_jiterator_binary_return_by_ref_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_scalar_support_jiterator_binary_return_by_ref_mlu_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_scalar_support_logical_and_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_scalar_support_logical_or_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_scalar_support_logical_xor_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_scalar_support_ne_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_scalar_support_pow_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_scalar_support_sub_mlu_complex64",
# TODO(PYTORCH-9105): complex and bfloat16 are not support.
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_sub_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_sub_mlu_complex64",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_tensor_pow_tensor_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_true_divide_out_mlu_bfloat16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion___rand___mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion___rmod___mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion___ror___mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion___rpow___mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion___rxor___mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion__refs_atan2_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion__refs_copysign_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion__refs_float_power_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion__refs_fmax_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion__refs_fmin_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion__refs_gcd_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion__refs_heaviside_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion__refs_hypot_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion__refs_igamma_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion__refs_igammac_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion__refs_isclose_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion__refs_lcm_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion__refs_nextafter_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion__refs_special_zeta_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion__refs_true_divide_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_atan2_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_bitwise_left_shift_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_bitwise_right_shift_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_complex_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_copysign_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_float_power_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_fmax_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_fmin_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_gcd_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_heaviside_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_hypot_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_igamma_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_igammac_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_isclose_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_jiterator_binary_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_jiterator_binary_return_by_ref_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_lcm_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_ldexp_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_nextafter_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_polar_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_rsub_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_special_chebyshev_polynomial_t_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_special_chebyshev_polynomial_u_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_special_chebyshev_polynomial_v_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_special_chebyshev_polynomial_w_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_special_hermite_polynomial_h_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_special_hermite_polynomial_he_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_special_laguerre_polynomial_l_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_special_legendre_polynomial_p_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_special_shifted_chebyshev_polynomial_t_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_special_shifted_chebyshev_polynomial_u_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_special_shifted_chebyshev_polynomial_v_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_special_shifted_chebyshev_polynomial_w_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_special_xlog1py_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_special_zeta_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_type_promotion_true_divide_mlu",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_bfloat16_mlu", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_bool_bool", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_bool_float16", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_bool_float32", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_bool_int16", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_bool_int32", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_bool_int8", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_bool_uint8", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_float16_bool", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_float16_float16", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_float16_float32", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_float16_int16", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_float16_int32", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_float16_int8", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_float16_uint8", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_float32_bool", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_float32_float16", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_float32_float32", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_float32_int16", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_float32_int32", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_float32_int8", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_float32_uint8", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_int16_bool", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_int16_float16", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_int16_float32", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_int16_int16", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_int16_int32", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_int16_int8", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_int16_uint8", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_int32_bool", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_int32_float16", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_int32_float32", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_int32_int16", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_int32_int32", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_int32_int8", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_int32_uint8", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_int8_bool", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_int8_float16", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_int8_float32", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_int8_int16", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_int8_int32", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_int8_int8", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_int8_uint8", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_uint8_bool", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_uint8_float16", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_uint8_float32", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_uint8_int16", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_uint8_int32", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_uint8_int8", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_mlu_uint8_uint8", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_xlogy_xlog1py_scalar_type_promotion_mlu", # TODO(PYTORCH-10309): xlog1py is not supported
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_bool_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_bool_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_bool_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_bool_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_bool_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_bool_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_float32_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_float32_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_float32_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_float32_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_float32_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_float32_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_int16_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_int16_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_int16_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_int16_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_int16_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_int16_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_int32_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_int32_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_int32_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_int32_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_int32_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_int32_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_int8_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_int8_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_int8_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_int8_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_int8_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_int8_uint8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_uint8_bool",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_uint8_float32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_uint8_int16",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_uint8_int32",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_uint8_int8",
"test_binary_ufuncs_py_TestBinaryUfuncsMLU_test_zeta_mlu_uint8_uint8",
"test_comparison_utils_py_TestComparisonUtils_test_all_equal_no_assert",
"test_comparison_utils_py_TestComparisonUtils_test_all_equal_no_assert_nones",
"test_comparison_utils_py_TestComparisonUtils_test_assert_dtype",
"test_comparison_utils_py_TestComparisonUtils_test_assert_sizes",
"test_comparison_utils_py_TestComparisonUtils_test_assert_strides",
"test_complex_py_TestComplexTensorMLU_test_dtype_inference_mlu_float32",
"test_complex_py_TestComplexTensorMLU_test_to_list_mlu_complex64",
"test_mlu_py_TestMlu_test_arithmetic_large_tensor",
"test_mlu_py_TestMlu_test_autocast_nn_bf16",
"test_mlu_py_TestMlu_test_autocast_rnn",    # TODO(PYTORCH-10254): do not support AMP
"test_mlu_py_TestMlu_test_autocast_torch_bf16",
"test_mlu_py_TestMlu_test_autocast_torch_fp16",
"test_mlu_py_TestMlu_test_autocast_torch_fp32",
"test_mlu_py_TestMlu_test_caching_pinned_memory", # MLU does not support get_cycles_per_ms
"test_mlu_py_TestMlu_test_caching_pinned_memory_multi_mlu", ## MLU not support get_cycles_per_ms
"test_mlu_py_TestMlu_test_copy_streams", # module 'torch.mlu' has no attribute '_sleep'
"test_mlu_py_TestMlu_test_check_error", # module 'torch.mlu' has no attribute 'check_error'
"test_mlu_py_TestMlu_test_copy_non_blocking", # The host chunk is not in MLUCachingHostAllocator.
"test_mlu_py_TestMlu_test_cublas_allow_fp16_reduced_precision_reduction_get_set", # mlu does not support torch.backends.mlu.matmul.allow_fp16_reduced_precision_reduction
"test_mlu_py_TestMlu_test_mlu_kernel_loop_overflow_large", # not support large tensor on MLU370
"test_mlu_py_TestMlu_test_mlu_memory_leak_detection", # Needs _internal/common_utils.py for MLU
"test_mlu_py_TestMlu_test_mlu_memory_leak_detection_propagates_errors", # Needs _internal/common_utils.py for MLU
"test_mlu_py_TestMlu_test_mlurt_register", # module 'torch.mlu' has no attribute 'mlurt'
"test_mlu_py_TestMlu_test_cudnn_multiple_threads_same_device", # MLU does not support cudnn.flags
"test_mlu_py_TestMlu_test_cusparse_multiple_threads_same_device", # MLU does not support sparse
"test_mlu_py_TestMlu_test_events", # module 'torch.mlu' has no attribute '_sleep'
"test_mlu_py_TestMlu_test_events_multi_mlu_elapsed_time", # # module 'torch.mlu' has no attribute '_sleep'
"test_mlu_py_TestMlu_test_events_multi_mlu_query", # module 'torch.mlu' has no attribute '_sleep'
"test_mlu_py_TestMlu_test_events_wait", # module 'torch.mlu' has no attribute '_sleep'
"test_mlu_py_TestMlu_test_external_streams", # module 'torch.mlu' has no attribute 'mlurt'
"test_mlu_py_TestMlu_test_external_streams_multi_device", # module 'torch.mlu' has no attribute 'mlurt'
"test_mlu_py_TestMlu_test_get_device_index", # No module named 'torch.mlu._utils'
"test_mlu_py_TestMlu_test_graph_adam_adamw", # MLU does not support adam optim
"test_mlu_py_TestMlu_test_graph_capture_oom", # MLU does not support CUDAGraph
"test_mlu_py_TestMlu_test_graph_capture_simple", # MLU does not support CUDAGraph
"test_mlu_py_TestMlu_test_graph_concurrent_replay", # MLU does not support CUDAGraph
"test_mlu_py_TestMlu_test_graph_cudnn_dropout", # MLU does not support CUDAGraph
"test_mlu_py_TestMlu_test_graph_grad_scaling", # MLU does not support CUDAGraph
"test_mlu_py_TestMlu_test_graph_is_current_stream_capturing", # MLU does not support CUDAGraph
"test_mlu_py_TestMlu_test_graph_make_graphed_callables_with_amp_cache_disabled", # MLU does not support CUDAGraph
"test_mlu_py_TestMlu_test_graph_make_graphed_callables_with_amp_cache_enabled", # MLU does not support CUDAGraph
"test_mlu_py_TestMlu_test_graph_make_graphed_callables_without_amp", # MLU does not support CUDAGraph
"test_mlu_py_TestMlu_test_graph_memory_stats_and_use_result_after_destroy_graph", # MLU does not support CUDAGraph
"test_mlu_py_TestMlu_test_graph_record_stream", # MLU does not support CUDAGraph
"test_mlu_py_TestMlu_test_graph_rng_distributions", # MLU does not support CUDAGraph
"test_mlu_py_TestMlu_test_graph_rng_functional", # MLU does not support CUDAGraph
"test_mlu_py_TestMlu_test_graph_scaling_fusedadam", # MLU does not support adam optim
"test_mlu_py_TestMlu_test_graph_three_successive", # MLU does not support CUDAGraph
"test_mlu_py_TestMlu_test_graph_two_successive", # MLU does not support CUDAGraph
"test_mlu_py_TestMlu_test_max_large_axis", # Large tensor not supported on MLU370
"test_mlu_py_TestMlu_test_mem_get_info", # PYTORCH-9620
"test_mlu_py_TestMlu_test_memory_allocation", # PYTORCH-9620
"test_mlu_py_TestMlu_test_memory_stats", # PYTORCH-9620
"test_mlu_py_TestMlu_test_min_max_inits", # max with dim does not support uint8
"test_mlu_py_TestMlu_test_multinomial_ext", # PYTORCH-10293
"test_mlu_py_TestMlu_test_multinomial_invalid_probs_mlu", # PYTORCH-10293
"test_mlu_py_TestMlu_test_norm_type_conversion", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_mlu_py_TestMlu_test_nvtx",# module 'torch.mlu' has no attribute 'nvtx'
"test_mlu_py_TestMlu_test_out_of_memory", # PYTORCH-9620
"test_mlu_py_TestMlu_test_prod_large", # fill does not support complex
"test_mlu_py_TestMlu_test_record_stream", # MLU does not support get_cycles_per_ms
"test_mlu_py_TestMlu_test_record_stream_on_shifted_view", # module 'torch.mlu' has no attribute '_sleep'
"test_mlu_py_TestMlu_test_rocm_backward_pass_guard",
"test_mlu_py_TestMlu_test_stream_event_nogil", # module 'torch.mlu' has no attribute '_sleep'
"test_mlu_py_TestMlu_test_streaming_backwards_callback", # module 'torch.mlu' has no attribute '_sleep'
"test_mlu_py_TestMlu_test_streaming_backwards_device_transfer", # module 'torch.mlu' has no attribute '_sleep'
"test_mlu_py_TestMlu_test_streaming_backwards_multiple_streams",# module 'torch.mlu' has no attribute '_sleep'
"test_mlu_py_TestMlu_test_streaming_backwards_sync", # module 'torch.mlu' has no attribute '_sleep'
"test_mlu_py_TestMlu_test_streaming_backwards_sync_graph_root", # module 'torch.mlu' has no attribute '_sleep'
"test_mlu_py_TestMlu_test_streams_multi_mlu_query", # module 'torch.mlu' has no attribute '_sleep'
"test_mlu_py_TestMlu_test_to_cpu_blocking_by_default", # module 'torch.mlu' has no attribute '_sleep'
"test_mlu_py_TestMlu_test_to_non_blocking", # module 'torch.mlu' has no attribute '_sleep'
"test_mlu_py_TestMluComm_test_allocator_settings", # module 'torch.mlu' has no attribute 'memory'
"test_mlu_py_TestMluComm_test_broadcast_coalesced", # module 'torch.mlu' has no attribute 'sparse'
"test_mlu_py_TestMluComm_test_broadcast_coalesced_dense_only",# module 'torch._C' has no attribute '_broadcast'
"test_mlu_py_TestMluComm_test_broadcast_coalesced_empty_tensors",# module 'torch._C' has no attribute '_broadcast'
"test_mlu_py_TestMluComm_test_broadcast_cpu", # module 'torch._C' has no attribute '_broadcast'
"test_mlu_py_TestMluComm_test_broadcast_mlu", # module 'torch._C' has no attribute '_broadcast'
"test_mlu_py_TestMluComm_test_cpp_memory_snapshot_pickle", # MLU  does not support c++ API
"test_mlu_py_TestMluComm_test_gather", # MLU does not support cuda.comm
"test_mlu_py_TestMluComm_test_gather_dim", # MLU does not support cuda.comm
"test_mlu_py_TestMluComm_test_gather_namedtuple", # MLU does not support cuda.comm
"test_mlu_py_TestMluComm_test_gather_neg_dim", # MLU does not support cuda.comm
"test_mlu_py_TestMluComm_test_memory_format_scatter_gather",  # MLU does not support cuda.comm
"test_mlu_py_TestMluComm_test_memory_snapshot", # module 'torch.mlu' has no attribute 'memory'
"test_mlu_py_TestMluComm_test_raises_oom", # module 'torch.mlu' has no attribute 'OutOfMemoryError'
"test_mlu_py_TestMluComm_test_reduce_add_coalesced", # MLU does not support sparse
"test_mlu_py_TestMluComm_test_scatter_cpu", # MLU does not support cuda.comm
"test_mlu_py_TestMluComm_test_scatter_cpu_dim", # MLU does not support cuda.comm
"test_mlu_py_TestMluComm_test_scatter_cpu_neg_dim", # MLU does not support cuda.comm
"test_mlu_py_TestMluComm_test_scatter_cpu_sizes", # MLU does not support cuda.comm
"test_mlu_py_TestMluComm_test_scatter_mlu", # MLU does not support cuda.comm
"test_mlu_py_TestMluComm_test_scatter_mlu_dim", # MLU does not support cuda.comm
"test_mlu_py_TestMluComm_test_scatter_mlu_neg_dim", # MLU does not support cuda.comm
"test_mlu_py_TestMluComm_test_scatter_mlu_sizes", # MLU does not support cuda.comm
"test_mlu_py_TestMluComm_test_scatter_namedtuple", # MLU does not support cuda.comm
"test_mlu_primary_ctx_py_TestMluPrimaryCtx_test_copy",
"test_mlu_primary_ctx_py_TestMluPrimaryCtx_test_pin_memory",
"test_mlu_primary_ctx_py_TestMluPrimaryCtx_test_str_repr",
"test_mlu_sanitizer_py_TestArgumentHandler_test_add",
"test_mlu_sanitizer_py_TestArgumentHandler_test_cat",
"test_mlu_sanitizer_py_TestArgumentHandler_test_inplace",
"test_mlu_sanitizer_py_TestArgumentHandler_test_nonzero",
"test_mlu_sanitizer_py_TestArgumentHandler_test_out",
"test_mlu_sanitizer_py_TestArgumentHandler_test_split",
"test_mlu_sanitizer_py_TestArgumentHandler_test_tensor_names",
"test_mlu_sanitizer_py_TestEventHandler_test_all_reads_checked_failing",
"test_mlu_sanitizer_py_TestEventHandler_test_all_reads_checked_passing",
"test_mlu_sanitizer_py_TestEventHandler_test_branch_sync",
"test_mlu_sanitizer_py_TestEventHandler_test_chain_sync",
"test_mlu_sanitizer_py_TestEventHandler_test_correct_state_merging",
"test_mlu_sanitizer_py_TestEventHandler_test_deleted_record",
"test_mlu_sanitizer_py_TestEventHandler_test_device_synchronization_expired",
"test_mlu_sanitizer_py_TestEventHandler_test_device_synchronize",
"test_mlu_sanitizer_py_TestEventHandler_test_empty_kernel_launch",
"test_mlu_sanitizer_py_TestEventHandler_test_event_synchronize",
"test_mlu_sanitizer_py_TestEventHandler_test_expired_record",
"test_mlu_sanitizer_py_TestEventHandler_test_multiple_errors",
"test_mlu_sanitizer_py_TestEventHandler_test_multiple_wait",
"test_mlu_sanitizer_py_TestEventHandler_test_new_stream_is_synchronized",
"test_mlu_sanitizer_py_TestEventHandler_test_reads_check_last_write",
"test_mlu_sanitizer_py_TestEventHandler_test_record_override",
"test_mlu_sanitizer_py_TestEventHandler_test_simple_error",
"test_mlu_sanitizer_py_TestEventHandler_test_simple_passing",
"test_mlu_sanitizer_py_TestEventHandler_test_simple_sync",
"test_mlu_sanitizer_py_TestEventHandler_test_stream_synchronize",
"test_mlu_sanitizer_py_TestMessages_test_ensure_does_not_exist",
"test_mlu_sanitizer_py_TestMessages_test_ensure_exists",
"test_mlu_sanitizer_py_TestMessages_test_error_message",
"test_mlu_trace_py_TestMluTrace_test_all_trace_callbacks_called",
"test_mlu_trace_py_TestMluTrace_test_device_synchronization_callback",
"test_mlu_trace_py_TestMluTrace_test_event_creation_callback",
"test_mlu_trace_py_TestMluTrace_test_event_deletion_callback",
"test_mlu_trace_py_TestMluTrace_test_event_record_callback",
"test_mlu_trace_py_TestMluTrace_test_event_synchronization_callback",
"test_mlu_trace_py_TestMluTrace_test_event_wait_callback",
"test_mlu_trace_py_TestMluTrace_test_memcpy_synchronization",
"test_mlu_trace_py_TestMluTrace_test_memory_allocation_callback",
"test_mlu_trace_py_TestMluTrace_test_memory_deallocation_callback",
"test_mlu_trace_py_TestMluTrace_test_stream_creation_callback",
"test_mlu_trace_py_TestMluTrace_test_stream_synchronization_callback",
"test_dataloader_py_TestDatasetRandomSplit_test_incomplete_fractional_splits",
"test_dataloader_py_TestDatasetRandomSplit_test_lengths_must_equal_dataset_size",
"test_dataloader_py_TestDatasetRandomSplit_test_slicing_of_subset_of_dataset",
"test_dataloader_py_TestDatasetRandomSplit_test_slicing_of_subset_of_subset",
"test_dataloader_py_TestDatasetRandomSplit_test_splits_are_mutually_exclusive",
"test_dataloader_py_TestDatasetRandomSplit_test_splits_generator",
"test_dataloader_py_TestDatasetRandomSplit_test_splits_have_correct_size",
"test_dataloader_py_TestDatasetRandomSplit_test_splits_indexing_type",
"test_dataloader_py_TestDatasetRandomSplit_test_splits_reproducibility",
"test_dataloader_py_TestTensorDataset_test_getitem",
"test_dataloader_py_TestTensorDataset_test_getitem_1d",
"test_dataloader_py_TestTensorDataset_test_len",
"test_dataloader_py_TestTensorDataset_test_many_tensors",
"test_dataloader_py_TestTensorDataset_test_single_tensor",
"test_dataloader_py_TestConcatDataset_test_add_dataset",
"test_dataloader_py_TestConcatDataset_test_concat_raises_index_error",
"test_dataloader_py_TestConcatDataset_test_concat_two_non_singletons",
"test_dataloader_py_TestConcatDataset_test_concat_two_non_singletons_with_empty",
"test_dataloader_py_TestConcatDataset_test_concat_two_singletons",
"test_dataloader_py_TestConcatDataset_test_iterable_dataset_err",
"test_dataloader_py_TestDataLoader_test_batch_sampler",
"test_dataloader_py_TestDataLoader_test_builtin_collection_conversion",
"test_dataloader_py_TestDataLoader_test_bulk_loading_nobatch",
"test_dataloader_py_TestDataLoader_test_chain_iterable_style_dataset",
"test_dataloader_py_TestDataLoader_test_default_collate_bad_numpy_types",
"test_dataloader_py_TestDataLoader_test_default_collate_bad_sequence_type",
"test_dataloader_py_TestDataLoader_test_default_collate_dtype",
"test_dataloader_py_TestDataLoader_test_default_collate_mapping_keep_type",
"test_dataloader_py_TestDataLoader_test_default_collate_numpy_memmap",
"test_dataloader_py_TestDataLoader_test_default_collate_sequence_dont_keep_type",
"test_dataloader_py_TestDataLoader_test_default_collate_sequence_keep_type",
"test_dataloader_py_TestDataLoader_test_default_collate_shared_tensor",
"test_dataloader_py_TestDataLoader_test_default_convert_mapping_keep_type",
"test_dataloader_py_TestDataLoader_test_default_convert_sequence_dont_keep_type",
"test_dataloader_py_TestDataLoader_test_default_convert_sequence_keep_type",
"test_dataloader_py_TestDataLoader_test_distributed_sampler_invalid_rank",
"test_dataloader_py_TestDataLoader_test_duplicating_data_with_drop_last",
"test_dataloader_py_TestDataLoader_test_error",
"test_dataloader_py_TestDataLoader_test_error_in_init",
"test_dataloader_py_TestDataLoader_test_error_workers",
"test_dataloader_py_TestDataLoader_test_excessive_thread_creation_warning",
"test_dataloader_py_TestDataLoader_test_fd_limit_exceeded",
"test_dataloader_py_TestDataLoader_test_get_worker_info",
"test_dataloader_py_TestDataLoader_test_growing_dataset",
"test_dataloader_py_TestDataLoader_test_invalid_assign_after_init",
"test_dataloader_py_TestDataLoader_test_invalid_ctor_args_combinations",
"test_dataloader_py_TestDataLoader_test_iterable_style_dataset",
"test_dataloader_py_TestDataLoader_test_iterabledataset_len",
"test_dataloader_py_TestDataLoader_test_large_sampler_indices",
"test_dataloader_py_TestDataLoader_test_len",
"test_dataloader_py_TestDataLoader_test_multi_epochs_reproducibility",
"test_dataloader_py_TestDataLoader_test_multiple_dataloaders",
"test_dataloader_py_TestDataLoader_test_multiprocessing_contexts",
"test_dataloader_py_TestDataLoader_test_multiprocessing_iterdatapipe",
"test_dataloader_py_TestDataLoader_test_no_segfault",
"test_dataloader_py_TestDataLoader_test_numpy",
"test_dataloader_py_TestDataLoader_test_numpy_gen_state",
"test_dataloader_py_TestDataLoader_test_numpy_scalars",
"test_dataloader_py_TestDataLoader_test_partial_workers",
"test_dataloader_py_TestDataLoader_test_proper_exit",
"test_dataloader_py_TestDataLoader_test_random_sampler",
"test_dataloader_py_TestDataLoader_test_random_sampler_len_with_replacement",
"test_dataloader_py_TestDataLoader_test_random_sampler_len_without_replacement",
"test_dataloader_py_TestDataLoader_test_sampler",
"test_dataloader_py_TestDataLoader_test_sampler_reproducibility",
"test_dataloader_py_TestDataLoader_test_segfault",
"test_dataloader_py_TestDataLoader_test_seqential_batch_workers",
"test_dataloader_py_TestDataLoader_test_seqential_batch_workers_prefetch",
"test_dataloader_py_TestDataLoader_test_sequential_batch",
"test_dataloader_py_TestDataLoader_test_sequential_nonbatch",
"test_dataloader_py_TestDataLoader_test_sequential_pin_memory",
"test_dataloader_py_TestDataLoader_test_sequential_workers",
"test_dataloader_py_TestDataLoader_test_shuffle",
"test_dataloader_py_TestDataLoader_test_shuffle_batch",
"test_dataloader_py_TestDataLoader_test_shuffle_batch_none",
"test_dataloader_py_TestDataLoader_test_shuffle_batch_workers",
"test_dataloader_py_TestDataLoader_test_shuffle_batch_workers_prefetch",
"test_dataloader_py_TestDataLoader_test_shuffle_pin_memory",
"test_dataloader_py_TestDataLoader_test_shuffle_reproducibility",
"test_dataloader_py_TestDataLoader_test_shuffle_workers",
"test_dataloader_py_TestDataLoader_test_timeout",
"test_dataloader_py_TestDataLoader_test_typing",
"test_dataloader_py_TestDataLoader_test_worker_init_fn",
"test_dataloader_py_TestDataLoader_test_worker_seed",
"test_dataloader_py_TestDataLoader_test_worker_seed_reproducibility",
"test_dataloader_py_TestDataLoader2_test_basics",
"test_dataloader_py_TestDataLoader2_test_shuffle",
"test_dataloader_py_TestDataLoader2_EventLoop_test_basic_mapdatapipe_threading",
"test_dataloader_py_TestDataLoader2_EventLoop_test_basic_threading",
"test_dataloader_py_IntegrationTestDataLoaderDataPipe_test_shuffler_iterdatapipe",
"test_dataloader_py_TestStringDataLoader_test_shuffle_pin_memory",
"test_dataloader_py_TestDictDataLoader_test_pin_memory",
"test_dataloader_py_TestDictDataLoader_test_pin_memory_device",
"test_dataloader_py_TestDictDataLoader_test_pin_memory_with_only_device",
"test_dataloader_py_TestDictDataLoader_test_sequential_batch",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_batch_sampler",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_builtin_collection_conversion",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_bulk_loading_nobatch",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_chain_iterable_style_dataset",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_dataset_not_reset",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_default_collate_bad_numpy_types",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_default_collate_bad_sequence_type",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_default_collate_dtype",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_default_collate_mapping_keep_type",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_default_collate_numpy_memmap",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_default_collate_sequence_dont_keep_type",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_default_collate_sequence_keep_type",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_default_collate_shared_tensor",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_default_convert_mapping_keep_type",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_default_convert_sequence_dont_keep_type",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_default_convert_sequence_keep_type",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_distributed_sampler_invalid_rank",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_duplicating_data_with_drop_last",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_early_exit",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_error",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_error_in_init",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_error_workers",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_excessive_thread_creation_warning",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_fd_limit_exceeded",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_get_worker_info",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_growing_dataset",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_invalid_assign_after_init",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_invalid_ctor_args_combinations",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_iterable_style_dataset",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_iterabledataset_len",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_large_sampler_indices",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_len",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_multi_epochs_reproducibility",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_multiple_dataloaders",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_multiprocessing_contexts",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_multiprocessing_iterdatapipe",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_no_segfault",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_numpy",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_numpy_gen_state",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_numpy_scalars",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_partial_workers",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_proper_exit",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_random_sampler",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_random_sampler_len_with_replacement",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_random_sampler_len_without_replacement",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_sampler",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_sampler_reproducibility",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_segfault",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_seqential_batch_workers",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_seqential_batch_workers_prefetch",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_sequential_batch",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_sequential_nonbatch",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_sequential_pin_memory",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_sequential_workers",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_shuffle",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_shuffle_batch",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_shuffle_batch_none",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_shuffle_batch_workers",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_shuffle_batch_workers_prefetch",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_shuffle_pin_memory",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_shuffle_reproducibility",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_shuffle_workers",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_timeout",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_typing",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_worker_init_fn",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_worker_seed",
"test_dataloader_py_TestDataLoaderPersistentWorkers_test_worker_seed_reproducibility",
"test_dataloader_py_TestNamedTupleDataLoader_test_dataloader_with_namedtuple",
"test_dataloader_py_TestCustomPinFn_test_custom_batch_pin",
"test_dataloader_py_TestCustomPinFn_test_custom_batch_pin_worker",
"test_dataloader_py_TestIndividualWorkerQueue_test_ind_worker_queue",
"test_dataloader_py_TestSetAffinity_test_set_affinity_in_worker_init",
# "test_dataloader_py_TestConvAfterFork_test_conv_after_fork",
"test_datapipe_py_TestDataChunk_test_as_string",
"test_datapipe_py_TestDataChunk_test_getitem",
"test_datapipe_py_TestDataChunk_test_iter",
"test_datapipe_py_TestDataChunk_test_len",
"test_datapipe_py_TestDataChunk_test_random_shuffle",
"test_datapipe_py_TestDataChunk_test_reverse",
"test_datapipe_py_TestStreamWrapper_test_api",
"test_datapipe_py_TestStreamWrapper_test_dir",
"test_datapipe_py_TestStreamWrapper_test_pickle",
"test_datapipe_py_TestStreamWrapper_test_repr",
"test_datapipe_py_TestIterableDataPipeBasic_test_demux_mux_datapipe",
"test_datapipe_py_TestIterableDataPipeBasic_test_groupby_iterable_datapipe",
"test_datapipe_py_TestIterableDataPipeBasic_test_listdirfiles_iterable_datapipe",
"test_datapipe_py_TestIterableDataPipeBasic_test_listdirfilesdeterministic_iterable_datapipe",
"test_datapipe_py_TestIterableDataPipeBasic_test_map_with_col_file_handle_datapipe",
"test_datapipe_py_TestIterableDataPipeBasic_test_openfilesfromdisk_iterable_datapipe",
"test_datapipe_py_TestIterableDataPipeBasic_test_routeddecoder_iterable_datapipe",
"test_datapipe_py_TestCaptureDataFrame_test_basic_capture",
"test_datapipe_py_TestDataFramesPipes_test_batch",
"test_datapipe_py_TestDataFramesPipes_test_capture",
"test_datapipe_py_TestDataFramesPipes_test_collate",
"test_datapipe_py_TestDataFramesPipes_test_filter",
"test_datapipe_py_TestDataFramesPipes_test_shuffle",
"test_datapipe_py_TestDataFramesPipes_test_unbatch",
"test_datapipe_py_TestFunctionalIterDataPipe_test_batch_iterdatapipe",
"test_datapipe_py_TestFunctionalIterDataPipe_test_collate_iterdatapipe",
"test_datapipe_py_TestFunctionalIterDataPipe_test_concat_iterdatapipe",
"test_datapipe_py_TestFunctionalIterDataPipe_test_demux_iterdatapipe",
"test_datapipe_py_TestFunctionalIterDataPipe_test_filter_datapipe",
"test_datapipe_py_TestFunctionalIterDataPipe_test_fork_iterdatapipe",
"test_datapipe_py_TestFunctionalIterDataPipe_test_iterable_wrapper_datapipe",
"test_datapipe_py_TestFunctionalIterDataPipe_test_map_dict_with_col_iterdatapipe",
"test_datapipe_py_TestFunctionalIterDataPipe_test_map_iterdatapipe",
"test_datapipe_py_TestFunctionalIterDataPipe_test_map_tuple_list_with_col_iterdatapipe",
"test_datapipe_py_TestFunctionalIterDataPipe_test_mux_iterdatapipe",
"test_datapipe_py_TestFunctionalIterDataPipe_test_sampler_iterdatapipe",
"test_datapipe_py_TestFunctionalIterDataPipe_test_serializable",
"test_datapipe_py_TestFunctionalIterDataPipe_test_serializable_with_dill",
"test_datapipe_py_TestFunctionalIterDataPipe_test_shuffler_iterdatapipe",
"test_datapipe_py_TestFunctionalIterDataPipe_test_stream_reader_iterdatapipe",
"test_datapipe_py_TestFunctionalIterDataPipe_test_unbatch_iterdatapipe",
"test_datapipe_py_TestFunctionalIterDataPipe_test_zip_iterdatapipe",
"test_datapipe_py_TestFunctionalMapDataPipe_test_batch_mapdatapipe",
"test_datapipe_py_TestFunctionalMapDataPipe_test_concat_mapdatapipe",
"test_datapipe_py_TestFunctionalMapDataPipe_test_map_mapdatapipe",
"test_datapipe_py_TestFunctionalMapDataPipe_test_sequence_wrapper_datapipe",
"test_datapipe_py_TestFunctionalMapDataPipe_test_serializable",
"test_datapipe_py_TestFunctionalMapDataPipe_test_serializable_with_dill",
"test_datapipe_py_TestFunctionalMapDataPipe_test_shuffler_mapdatapipe",
"test_datapipe_py_TestFunctionalMapDataPipe_test_zip_mapdatapipe",
"test_datapipe_py_TestTyping_test_compile_time",
"test_datapipe_py_TestTyping_test_construct_time",
"test_datapipe_py_TestTyping_test_isinstance",
"test_datapipe_py_TestTyping_test_issubinstance",
"test_datapipe_py_TestTyping_test_protocol",
"test_datapipe_py_TestTyping_test_reinforce",
"test_datapipe_py_TestTyping_test_runtime",
"test_datapipe_py_TestTyping_test_subtype",
"test_datapipe_py_TestGraph_test_simple_traverse",
"test_datapipe_py_TestGraph_test_traverse_circular_datapipe",
"test_datapipe_py_TestGraph_test_traverse_forked",
"test_datapipe_py_TestGraph_test_traverse_mapdatapipe",
"test_datapipe_py_TestGraph_test_traverse_mixdatapipe",
"test_datapipe_py_TestGraph_test_traverse_unhashable_datapipe",
"test_datapipe_py_TestSerialization_test_spawn_lambdas_iter",
"test_datapipe_py_TestSerialization_test_spawn_lambdas_map",
"test_datapipe_py_TestCircularSerialization_test_circular_serialization_with_dill",
"test_datapipe_py_TestCircularSerialization_test_circular_serialization_with_pickle",
"test_datapipe_py_TestSharding_test_old_dataloader",
"test_datapipe_py_TestSharding_test_sharding_length",
"test_datapipe_py_TestSharding_test_simple_sharding",
"test_datapipe_py_TestIterDataPipeSingletonConstraint_test_iterdatapipe_singleton_buggy",
"test_datapipe_py_TestIterDataPipeSingletonConstraint_test_iterdatapipe_singleton_constraint_multiple_outputs",
"test_datapipe_py_TestIterDataPipeSingletonConstraint_test_iterdatapipe_singleton_generator",
"test_datapipe_py_TestIterDataPipeSingletonConstraint_test_iterdatapipe_singleton_new_object",
"test_datapipe_py_TestIterDataPipeSingletonConstraint_test_iterdatapipe_singleton_self_next",
"test_datapipe_py_TestIterDataPipeCountSampleYielded_test_iterdatapipe_sample_yielded_generator_function",
"test_datapipe_py_TestIterDataPipeCountSampleYielded_test_iterdatapipe_sample_yielded_generator_function_exception",
"test_datapipe_py_TestIterDataPipeCountSampleYielded_test_iterdatapipe_sample_yielded_next",
"test_datapipe_py_TestIterDataPipeCountSampleYielded_test_iterdatapipe_sample_yielded_next_exception",
"test_datapipe_py_TestIterDataPipeCountSampleYielded_test_iterdatapipe_sample_yielded_return_self",
"test_datapipe_py_TestIterDataPipeGraphFastForward_test_simple_snapshot_custom_non_generator",
"test_datapipe_py_TestIterDataPipeGraphFastForward_test_simple_snapshot_custom_self_next",
"test_datapipe_py_TestIterDataPipeGraphFastForward_test_simple_snapshot_graph",
"test_datapipe_py_TestIterDataPipeGraphFastForward_test_simple_snapshot_graph_repeated",
"test_datapipe_py_TestIterDataPipeGraphFastForward_test_simple_snapshot_graph_with_serialization",
"test_deploy_py_TestFreezer_test_compile_string",
"test_determination_py_DeterminationTest_test_caffe2_file",
"test_determination_py_DeterminationTest_test_config_change_only",
"test_determination_py_DeterminationTest_test_cpp_file",
"test_determination_py_DeterminationTest_test_new_folder",
"test_determination_py_DeterminationTest_test_new_test_script",
"test_determination_py_DeterminationTest_test_non_code_change",
"test_determination_py_DeterminationTest_test_run_test",
"test_determination_py_DeterminationTest_test_target_det_list_is_sorted",
"test_determination_py_DeterminationTest_test_test_file",
"test_determination_py_DeterminationTest_test_test_internal_file",
"test_determination_py_DeterminationTest_test_torch_file",
"test_dispatch_py_TestDispatch_test_all_invariants",
"test_dispatch_py_TestDispatch_test_computed_table",
"test_dispatch_py_TestDispatch_test_computed_table_with_ambiguous_autogradother",
"test_dispatch_py_TestDispatch_test_computed_table_with_autograd",
"test_dispatch_py_TestDispatch_test_computed_table_with_cpu_autograd_defaultbackend",
"test_dispatch_py_TestDispatch_test_computed_table_with_cpu_autograd_math",
"test_dispatch_py_TestDispatch_test_computed_table_with_cpu_autograd_math_defaultbackend",
"test_dispatch_py_TestDispatch_test_computed_table_with_cpu_defaultbackend",
"test_dispatch_py_TestDispatch_test_computed_table_with_cpu_math",
"test_dispatch_py_TestDispatch_test_computed_table_with_cpu_math_autogradcpu_fallthrough",
"test_dispatch_py_TestDispatch_test_computed_table_with_math",
"test_dispatch_py_TestDispatch_test_def",
"test_dispatch_py_TestDispatch_test_def_impl_schema_mismatch",
"test_dispatch_py_TestDispatch_test_def_only",
"test_dispatch_py_TestDispatch_test_def_with_explicit_alias",
"test_dispatch_py_TestDispatch_test_def_with_inference",
"test_dispatch_py_TestDispatch_test_dispatch_print_registrations_for_dispatch_key_invalid",
"test_dispatch_py_TestDispatch_test_find_dangling_impls",
"test_dispatch_py_TestDispatch_test_find_dangling_impls_ext",
"test_dispatch_py_TestDispatch_test_impl_only",
"test_dispatch_py_TestDispatch_test_multiple_def_alias_defaulting",
"test_dispatch_py_TestDispatch_test_multiple_def_alias_mismatch",
"test_dispatch_py_TestDispatch_test_multiple_def_error",
"test_dispatch_py_TestDispatch_test_multiple_fallback",
"test_dispatch_py_TestDispatch_test_overwrite_math",
"test_dispatch_py_TestPythonDispatcher_test_autogradother",
"test_dispatch_py_TestPythonDispatcher_test_basic",
"test_dispatch_py_TestPythonDispatcher_test_defaultbackend_autogradcpu",
"test_dispatch_py_TestPythonDispatcher_test_defaultbackend_math",
"test_dispatch_py_TestPythonDispatcher_test_duplicate_registrations",
"test_dispatch_py_TestPythonDispatcher_test_math_autogradcpu",
"test_dispatch_py_TestPythonDispatcher_test_quantized_structured_not_implemented",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_capsule_conversion_mlu_bfloat16",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_capsule_conversion_mlu_complex64",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_capsule_conversion_mlu_float16",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_capsule_conversion_mlu_float32",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_capsule_conversion_mlu_int16",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_capsule_conversion_mlu_int32",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_capsule_conversion_mlu_int8",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_capsule_conversion_mlu_uint8",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_conversion_with_diff_streams_mlu_bfloat16",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_conversion_with_diff_streams_mlu_complex64",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_conversion_with_diff_streams_mlu_float16",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_conversion_with_diff_streams_mlu_float32",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_conversion_with_diff_streams_mlu_int16",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_conversion_with_diff_streams_mlu_int32",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_conversion_with_diff_streams_mlu_int8",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_conversion_with_diff_streams_mlu_uint8",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_conversion_with_streams_mlu_bfloat16",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_conversion_with_streams_mlu_complex64",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_conversion_with_streams_mlu_float16",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_conversion_with_streams_mlu_float32",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_conversion_with_streams_mlu_int16",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_conversion_with_streams_mlu_int32",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_conversion_with_streams_mlu_int8",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_conversion_with_streams_mlu_uint8",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_default_stream_mlu",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_error_on_bool_tensor_mlu",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_export_is_conj_mlu",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_export_non_strided_mlu",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_export_requires_grad_mlu",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_normalize_strides_mlu",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_protocol_conversion_mlu_bfloat16",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_protocol_conversion_mlu_complex64",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_protocol_conversion_mlu_float16",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_protocol_conversion_mlu_float32",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_protocol_conversion_mlu_int16",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_protocol_conversion_mlu_int32",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_protocol_conversion_mlu_int8",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_protocol_conversion_mlu_uint8",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_shared_storage_mlu",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_tensor_invalid_stream_mlu_bfloat16",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_tensor_invalid_stream_mlu_complex64",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_tensor_invalid_stream_mlu_float16",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_tensor_invalid_stream_mlu_float32",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_tensor_invalid_stream_mlu_int16",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_tensor_invalid_stream_mlu_int32",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_tensor_invalid_stream_mlu_int8",
"test_dlpack_py_TestTorchDlPackMLU_test_dlpack_tensor_invalid_stream_mlu_uint8",
"test_dlpack_py_TestTorchDlPackMLU_test_from_dlpack_mlu_bfloat16",
"test_dlpack_py_TestTorchDlPackMLU_test_from_dlpack_mlu_complex64",
"test_dlpack_py_TestTorchDlPackMLU_test_from_dlpack_mlu_float16",
"test_dlpack_py_TestTorchDlPackMLU_test_from_dlpack_mlu_float32",
"test_dlpack_py_TestTorchDlPackMLU_test_from_dlpack_mlu_int16",
"test_dlpack_py_TestTorchDlPackMLU_test_from_dlpack_mlu_int32",
"test_dlpack_py_TestTorchDlPackMLU_test_from_dlpack_mlu_int8",
"test_dlpack_py_TestTorchDlPackMLU_test_from_dlpack_mlu_uint8",
"test_dlpack_py_TestTorchDlPackMLU_test_from_dlpack_dtype_mlu_bfloat16",
"test_dlpack_py_TestTorchDlPackMLU_test_from_dlpack_dtype_mlu_complex64",
"test_dlpack_py_TestTorchDlPackMLU_test_from_dlpack_dtype_mlu_float16",
"test_dlpack_py_TestTorchDlPackMLU_test_from_dlpack_dtype_mlu_float32",
"test_dlpack_py_TestTorchDlPackMLU_test_from_dlpack_dtype_mlu_int16",
"test_dlpack_py_TestTorchDlPackMLU_test_from_dlpack_dtype_mlu_int32",
"test_dlpack_py_TestTorchDlPackMLU_test_from_dlpack_dtype_mlu_int8",
"test_dlpack_py_TestTorchDlPackMLU_test_from_dlpack_dtype_mlu_uint8",
"test_dlpack_py_TestTorchDlPackMLU_test_from_dlpack_noncontinguous_mlu_bfloat16",
"test_dlpack_py_TestTorchDlPackMLU_test_from_dlpack_noncontinguous_mlu_complex64",
"test_dlpack_py_TestTorchDlPackMLU_test_from_dlpack_noncontinguous_mlu_float16",
"test_dlpack_py_TestTorchDlPackMLU_test_from_dlpack_noncontinguous_mlu_float32",
"test_dlpack_py_TestTorchDlPackMLU_test_from_dlpack_noncontinguous_mlu_int16",
"test_dlpack_py_TestTorchDlPackMLU_test_from_dlpack_noncontinguous_mlu_int32",
"test_dlpack_py_TestTorchDlPackMLU_test_from_dlpack_noncontinguous_mlu_int8",
"test_dlpack_py_TestTorchDlPackMLU_test_from_dlpack_noncontinguous_mlu_uint8",
"test_dynamic_shapes_py_TestPySymInt_test_arith_ops",
"test_dynamic_shapes_py_TestPySymInt_test_aten_ops",
"test_dynamic_shapes_py_TestPySymInt_test_binary",
"test_dynamic_shapes_py_TestPySymInt_test_fx_trace_intlist",
"test_dynamic_shapes_py_TestPySymInt_test_guard_int",
"test_dynamic_shapes_py_TestPySymInt_test_int_conversion",
"test_dynamic_shapes_py_TestPySymInt_test_int_to_float",
"test_dynamic_shapes_py_TestPySymInt_test_meta_symint",
"test_dynamic_shapes_py_TestPySymInt_test_reverse_arith_ops",
"test_dynamic_shapes_py_TestPySymInt_test_roundtrip",
"test_dynamic_shapes_py_TestPySymInt_test_size_expressions",
"test_dynamic_shapes_py_TestPySymInt_test_stride",
"test_dynamic_shapes_py_TestPySymInt_test_symint_args",
"test_dynamic_shapes_py_TestPySymInt_test_symint_as_scalar",
"test_dynamic_shapes_py_TestPySymInt_test_symint_vargs",
"test_expanded_weights_py_TestExpandedWeightModule_test_Conv1d_mlu_double", # TODO(PYTORCH-10478): conv double test failed.
"test_expanded_weights_py_TestExpandedWeightModule_test_Conv1d_stride_mlu_double", # TODO(PYTORCH-10478): conv double test failed.
"test_expanded_weights_py_TestExpandedWeightModule_test_Conv1d_pad1_mlu_double", # TODO(PYTORCH-10478): conv double test failed.
"test_expanded_weights_py_TestExpandedWeightModule_test_Conv1d_pad2_mlu_double", # TODO(PYTORCH-10478): conv double test failed.
"test_expanded_weights_py_TestExpandedWeightModule_test_Conv2d_mlu_double", # TODO(PYTORCH-10478): conv double test failed.
"test_expanded_weights_py_TestExpandedWeightModule_test_Conv2d_no_bias_mlu_double", # TODO(PYTORCH-10478): conv double test failed.
"test_expanded_weights_py_TestExpandedWeightModule_test_Conv2d_replicate_stride2_pad2_mlu_double", # TODO(PYTORCH-10478): conv double test failed.
"test_expanded_weights_py_TestExpandedWeightModule_test_Conv2d_zeros_stride2_pad2_mlu_double", # TODO(PYTORCH-10478): conv double test failed.
"test_expanded_weights_py_TestExpandedWeightModule_test_Conv2d_dilated_mlu_double", # TODO(PYTORCH-10478): conv double test failed.
"test_expanded_weights_py_TestExpandedWeightModule_test_Conv2d_padding_mlu_double", # TODO(PYTORCH-10478): conv double test failed.
"test_expanded_weights_py_TestExpandedWeightModule_test_Conv2d_reflect_stride2_pad2_mlu_double", # TODO(PYTORCH-10478): conv double test failed.
"test_expanded_weights_py_TestExpandedWeightModule_test_Conv3d_replicate_stride2_pad2_mlu_double", # TODO(PYTORCH-10478): conv double test failed.
"test_expanded_weights_py_TestExpandedWeightModule_test_Conv3d_zeros_stride2_pad2_mlu_double", # TODO(PYTORCH-10478): conv double test failed.
"test_expanded_weights_py_TestExpandedWeightModule_test_Conv3d_circular_stride2_pad2_mlu_double", # TODO(PYTORCH-10478): conv double test failed.
"test_expanded_weights_py_TestExpandedWeightModule_test_Conv3d_mlu_double", # TODO(PYTORCH-10478): conv double test failed.
"test_expanded_weights_py_TestExpandedWeightModule_test_Conv3d_stride_mlu_double", # TODO(PYTORCH-10478): conv double test failed.
"test_expanded_weights_py_TestExpandedWeightModule_test_Conv3d_stride_padding_mlu_double", # TODO(PYTORCH-10478): conv double test failed.
"test_expanded_weights_py_TestExpandedWeightModule_test_GroupNorm_1d_affine_mlu_double", # TODO(PYTORCH-9648): Assertion is not satisfied.
"test_expanded_weights_py_TestExpandedWeightModule_test_GroupNorm_1d_affine_large_batch_mlu_double", # TODO(PYTORCH-9648): Assertion is not satisfied.
"test_expanded_weights_py_TestExpandedWeightModule_test_GroupNorm_1d_no_affine_IN_mlu_double", # TODO(PYTORCH-9648): Assertion is not satisfied.
"test_expanded_weights_py_TestExpandedWeightModule_test_GroupNorm_2d_affine_mlu_double", # TODO(PYTORCH-9648): Assertion is not satisfied.
"test_expanded_weights_py_TestExpandedWeightModule_test_GroupNorm_2d_affine_large_feature_mlu_double", # TODO(PYTORCH-9648): Assertion is not satisfied.
"test_expanded_weights_py_TestExpandedWeightModule_test_GroupNorm_2d_no_affine_LN_mlu_double", # TODO(PYTORCH-9648): Assertion is not satisfied.
"test_expanded_weights_py_TestExpandedWeightModule_test_GroupNorm_2d_no_affine_large_feature_mlu_double", # TODO(PYTORCH-9648): Assertion is not satisfied.
"test_expanded_weights_py_TestExpandedWeightModule_test_LayerNorm_1d_elementwise_affine_mlu_double", # TODO(PYTORCH-10292)
"test_expanded_weights_py_TestExpandedWeightModule_test_LayerNorm_1d_no_elementwise_affine_mlu_double", # TODO(PYTORCH-10292)
"test_expanded_weights_py_TestExpandedWeightModule_test_LayerNorm_3d_no_affine_large_feature_mlu_double", # TODO(PYTORCH-10292)
"test_expanded_weights_py_TestExpandedWeightModule_test_Linear",
"test_expanded_weights_py_TestExpandedWeightModule_test_Linear_mlu_double",
"test_expanded_weights_py_TestExpandedWeightModule_test_Linear_multiple_inputs",
"test_expanded_weights_py_TestExpandedWeightModule_test_Linear_no_batch_dim",
"test_expanded_weights_py_TestExpandedWeightModule_test_Linear_no_batch_dim_mlu_double",
"test_expanded_weights_py_TestExpandedWeightModule_test_Linear_no_batch_dim_multiple_inputs",
"test_expanded_weights_py_TestExpandedWeightModule_test_Linear_no_bias",
"test_expanded_weights_py_TestExpandedWeightModule_test_Linear_no_bias_mlu_double",
"test_expanded_weights_py_TestExpandedWeightModule_test_Linear_no_bias_multiple_inputs",
"test_expanded_weights_py_TestExpandedWeightModule_test_per_sample_api_compute_batch_size",
"test_expanded_weights_py_TestExpandedWeightModule_test_per_sample_api_compute_batch_size_not_pytreeable",
"test_expanded_weights_py_TestExpandedWeightModule_test_per_sample_api_failing",
"test_expanded_weights_py_TestExpandedWeightHelperFunctionMLU_test_forward_helper_mlu",
"test_expanded_weights_py_TestExpandedWeightHelperFunctionMLU_test_forward_helper_failure_args_mlu",
"test_expanded_weights_py_TestExpandedWeightHelperFunctionMLU_test_set_grad_sample_if_exists_mlu",
"test_expanded_weights_py_TestExpandedWeightHelperFunctionMLU_test_set_grad_sample_if_exists_failure_mlu",
"test_expanded_weights_py_TestExpandedWeightHelperFunctionMLU_test_sum_over_all_but_batch_and_last_n_mlu",
"test_expanded_weights_py_TestExpandedWeightHelperFunctionMLU_test_unpack_expanded_weight_or_tensor_mlu",
"test_expanded_weights_py_TestExpandedWeightHelperFunctionMLU_test_unpack_expanded_weight_or_tensor_failure_mlu",
"test_expanded_weights_py_TestExpandedWeightHelperFunctionMLU_test_unpack_expanded_weight_or_tensor_with_custom_function_mlu",
"test_expanded_weights_py_TestExpandedWeightFunctionalMLU_test_cnn_model_mean_mlu",
"test_expanded_weights_py_TestExpandedWeightFunctionalMLU_test_cnn_model_sum_mlu",
"test_expanded_weights_py_TestExpandedWeightFunctionalMLU_test_expanded_weight_error_mlu",
"test_expanded_weights_py_TestExpandedWeightFunctionalMLU_test_expanded_weight_forward_nn_functional_embedding_mlu_bfloat16", # [cnnlTransform] The bfloat16 data type supports only MLU590, CE3225, SD5223 or higher
"test_expanded_weights_py_TestExpandedWeightFunctionalMLU_test_expanded_weight_forward_nn_functional_group_norm_mlu_bfloat16", # TODO(PYTORCH-9186): bfloat16 is not support.
"test_expanded_weights_py_TestExpandedWeightFunctionalMLU_test_expanded_weight_forward_nn_functional_group_norm_mlu_float16", # TODO(PYTORCH-9458): group_norm unsupport eps<0.
"test_expanded_weights_py_TestExpandedWeightFunctionalMLU_test_expanded_weight_forward_nn_functional_group_norm_mlu_float32", # TODO(PYTORCH-9458): group_norm unsupport eps<0.
"test_expanded_weights_py_TestExpandedWeightFunctionalMLU_test_expanded_weight_forward_nn_functional_instance_norm_mlu_bfloat16",
"test_expanded_weights_py_TestExpandedWeightFunctionalMLU_test_expanded_weight_forward_nn_functional_instance_norm_mlu_float16",
"test_expanded_weights_py_TestExpandedWeightFunctionalMLU_test_expanded_weight_forward_nn_functional_instance_norm_mlu_float32",
"test_expanded_weights_py_TestExpandedWeightFunctionalMLU_test_expanded_weight_forward_nn_functional_layer_norm_mlu_bfloat16", # TODO(PYTORCH-10252)
"test_expanded_weights_py_TestExpandedWeightFunctionalMLU_test_expanded_weight_forward_nn_functional_linear_mlu_bfloat16",
"test_expanded_weights_py_TestExpandedWeightFunctionalMLU_test_expanded_weight_forward_nn_functional_linear_mlu_complex64",
"test_expanded_weights_py_TestExpandedWeightFunctionalMLU_test_expanded_weight_forward_nn_functional_linear_mlu_float16",
"test_expanded_weights_py_TestExpandedWeightFunctionalMLU_test_expanded_weight_forward_nn_functional_linear_mlu_float32",
"test_expanded_weights_py_TestExpandedWeightFunctionalMLU_test_group_norm_model_num_dim_1_mlu", # TODO(PYTORCH-9458): Expected input to be a contiguous tensor.
"test_expanded_weights_py_TestExpandedWeightFunctionalMLU_test_instance_norm_model_num_dim_1_mlu",
"test_expanded_weights_py_TestExpandedWeightFunctionalMLU_test_instance_norm_model_num_dim_2_mlu",
"test_expanded_weights_py_TestExpandedWeightFunctionalMLU_test_instance_norm_model_num_dim_3_mlu",
"test_fake_tensor_py_FakeTensorTest_test_basic",
"test_fake_tensor_py_FakeTensorTest_test_binary_op_type_promotion",
"test_fake_tensor_py_FakeTensorTest_test_constructor",
"test_fake_tensor_py_FakeTensorTest_test_cpu_fallback",
"test_fake_tensor_py_FakeTensorTest_test_cudnn_rnn",   # TODO(PYTORCH-9424): do not support number of layer > 1
"test_fake_tensor_py_FakeTensorTest_test_data_dependent_operator",
"test_fake_tensor_py_FakeTensorTest_test_deepcopy",
"test_fake_tensor_py_FakeTensorTest_test_fake_dispatch_keys",
"test_fake_tensor_py_FakeTensorTest_test_fake_grad_copy",
"test_fake_tensor_py_FakeTensorTest_test_fake_mode_error",
"test_fake_tensor_py_FakeTensorTest_test_fallback_memory_prop",
"test_fake_tensor_py_FakeTensorTest_test_from_numpy",
"test_fake_tensor_py_FakeTensorTest_test_index_mlu_with_cpu",
"test_fake_tensor_py_FakeTensorTest_test_like_constructor",
"test_fake_tensor_py_FakeTensorTest_test_mode",
"test_fake_tensor_py_FakeTensorTest_test_new",
"test_fake_tensor_py_FakeTensorTest_test_non_kwarg_device",
"test_fake_tensor_py_FakeTensorTest_test_non_parameter_grad",
"test_fake_tensor_py_FakeTensorTest_test_normalize_device",
"test_fake_tensor_py_FakeTensorTest_test_parameter_instantiation",
"test_fake_tensor_py_FakeTensorTest_test_randperm",
"test_fake_tensor_py_FakeTensorTest_test_recursive_invocation",
"test_fake_tensor_py_FakeTensorTest_test_scalar_inputs",
"test_fake_tensor_py_FakeTensorTest_test_setitem",
"test_fake_tensor_py_FakeTensorTest_test_throw",
"test_fake_tensor_py_FakeTensorTest_test_type_as",
"test_fake_tensor_py_FakeTensorTest_test_zero_dim",
"test_fake_tensor_py_FakeTensorConstHandling_test_aliased_const_write",
"test_fake_tensor_py_FakeTensorConstHandling_test_constant_invalidation",
"test_fake_tensor_py_FakeTensorConstHandling_test_fake_tensor_in_intlist_repro",
"test_fake_tensor_py_FakeTensorConstHandling_test_inplace_add",
"test_fake_tensor_py_FakeTensorConstHandling_test_inplace_view_invalidation",
"test_fake_tensor_py_FakeTensorConstHandling_test_shared_storage_invalidation",
"test_fake_tensor_py_FakeTensorConstHandling_test_shared_storages",
"test_fake_tensor_py_FakeTensorConstHandling_test_simple",
"test_fake_tensor_py_FakeTensorConverterTest_test_dead_key",
"test_fake_tensor_py_FakeTensorConverterTest_test_dead_weak_ref",
"test_fake_tensor_py_FakeTensorConverterTest_test_memoized_conversion_from_meta",
"test_fake_tensor_py_FakeTensorConverterTest_test_memoized_conversion_to_meta",
"test_fake_tensor_py_FakeTensorConverterTest_test_no_active_mode",
"test_fake_tensor_py_FakeTensorConverterTest_test_no_ref_cycle",
"test_fake_tensor_py_FakeTensorConverterTest_test_separate_mode_error",
"test_fake_tensor_py_FakeTensorConverterTest_test_separate_tensor_storages_non_view",
"test_fake_tensor_py_FakeTensorConverterTest_test_separate_tensor_storages_view",
"test_fake_tensor_py_FakeTensorOperatorInvariants_test_like_ops",
"test_fake_tensor_py_FakeTensorOperatorInvariants_test_non_kwarg_only_device",
"test_fake_tensor_py_FakeTensorOperatorInvariants_test_sparse_new",
"test_fake_tensor_py_FakeTensorOperatorInvariants_test_tensor_constructors_all_have_kwarg_device",
"test_foreach_py_TestForeachMLU_test_add_scalar_with_empty_list_and_empty_tensor_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_add_scalar_with_empty_list_and_empty_tensor_mlu_bool",
"test_foreach_py_TestForeachMLU_test_add_scalar_with_empty_list_and_empty_tensor_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_add_scalar_with_empty_list_and_empty_tensor_mlu_float16",
"test_foreach_py_TestForeachMLU_test_add_scalar_with_empty_list_and_empty_tensor_mlu_float32",
"test_foreach_py_TestForeachMLU_test_add_scalar_with_empty_list_and_empty_tensor_mlu_int16",
"test_foreach_py_TestForeachMLU_test_add_scalar_with_empty_list_and_empty_tensor_mlu_int32",
"test_foreach_py_TestForeachMLU_test_add_scalar_with_empty_list_and_empty_tensor_mlu_int8",
"test_foreach_py_TestForeachMLU_test_add_scalar_with_empty_list_and_empty_tensor_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_add_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_add_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_add_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_add_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_add_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_add_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_add_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_add_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_add_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_div_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_div_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_mul_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_mul_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_mul_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_mul_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_mul_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_mul_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_mul_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_mul_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_mul_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_sub_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_sub_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_sub_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_sub_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_sub_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_sub_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_sub_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_sub_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_list_error_cases__foreach_sub_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_add_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_add_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_add_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_add_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_add_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_add_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_add_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_add_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_add_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_div_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_div_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_mul_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_mul_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_mul_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_mul_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_mul_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_mul_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_mul_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_mul_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_mul_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_sub_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_sub_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_sub_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_sub_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_sub_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_sub_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_sub_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_sub_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_list_slow_path__foreach_sub_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_add_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_add_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_add_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_add_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_add_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_add_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_add_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_add_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_add_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_div_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_div_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_mul_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_mul_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_mul_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_mul_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_mul_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_mul_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_mul_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_mul_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_mul_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_sub_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_sub_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_sub_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_sub_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_sub_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_sub_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_sub_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_sub_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_fastpath__foreach_sub_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_add_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_add_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_add_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_add_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_add_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_add_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_add_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_add_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_add_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_div_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_div_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_mul_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_mul_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_mul_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_mul_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_mul_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_mul_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_mul_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_mul_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_mul_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_sub_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_sub_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_sub_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_sub_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_sub_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_sub_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_sub_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_sub_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_slowpath__foreach_sub_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_different_tensor_dtypes__foreach_add_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_different_tensor_dtypes__foreach_mul_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_different_tensor_dtypes__foreach_sub_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_add_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_add_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_add_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_add_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_add_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_add_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_add_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_add_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_add_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_div_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_div_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_mul_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_mul_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_mul_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_mul_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_mul_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_mul_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_mul_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_mul_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_mul_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_sub_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_sub_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_sub_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_sub_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_sub_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_sub_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_sub_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_sub_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalar_with_overlapping_tensors__foreach_sub_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_add_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_add_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_add_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_add_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_add_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_add_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_add_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_add_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_add_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_div_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_div_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_mul_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_mul_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_mul_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_mul_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_mul_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_mul_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_mul_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_mul_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_mul_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_sub_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_sub_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_sub_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_sub_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_sub_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_sub_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_sub_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_sub_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_fastpath__foreach_sub_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_add_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_add_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_add_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_add_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_add_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_add_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_add_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_add_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_add_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_div_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_div_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_mul_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_mul_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_mul_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_mul_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_mul_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_mul_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_mul_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_mul_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_mul_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_sub_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_sub_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_sub_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_sub_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_sub_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_sub_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_sub_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_sub_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_scalarlist_slowpath__foreach_sub_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_add_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_add_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_add_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_add_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_add_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_add_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_add_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_add_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_add_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_div_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_div_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_mul_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_mul_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_mul_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_mul_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_mul_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_mul_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_mul_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_mul_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_mul_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_sub_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_sub_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_sub_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_sub_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_sub_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_sub_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_sub_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_sub_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_fastpath__foreach_sub_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_add_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_add_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_add_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_add_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_add_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_add_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_add_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_add_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_add_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_div_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_div_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_mul_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_mul_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_mul_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_mul_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_mul_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_mul_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_mul_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_mul_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_mul_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_sub_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_sub_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_sub_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_sub_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_sub_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_sub_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_sub_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_sub_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_tensorlists_slowpath__foreach_sub_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_add_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_add_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_add_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_add_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_add_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_add_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_add_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_add_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_add_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_div_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_div_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_mul_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_mul_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_mul_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_mul_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_mul_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_mul_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_mul_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_mul_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_mul_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_sub_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_sub_mlu_bool",
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_sub_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_sub_mlu_float16",
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_sub_mlu_float32",
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_sub_mlu_int16",
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_sub_mlu_int32",
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_sub_mlu_int8",
"test_foreach_py_TestForeachMLU_test_binary_op_tensors_on_different_devices__foreach_sub_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_foreach_l2_large_value_input__foreach_norm_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_foreach_l2_large_value_input__foreach_norm_mlu_float16",
"test_foreach_py_TestForeachMLU_test_minmax_fastpath__foreach_maximum_mlu_bool",
"test_foreach_py_TestForeachMLU_test_minmax_fastpath__foreach_maximum_mlu_float16",
"test_foreach_py_TestForeachMLU_test_minmax_fastpath__foreach_maximum_mlu_float32",
"test_foreach_py_TestForeachMLU_test_minmax_fastpath__foreach_maximum_mlu_int16",
"test_foreach_py_TestForeachMLU_test_minmax_fastpath__foreach_maximum_mlu_int32",
"test_foreach_py_TestForeachMLU_test_minmax_fastpath__foreach_maximum_mlu_int8",
"test_foreach_py_TestForeachMLU_test_minmax_fastpath__foreach_maximum_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_minmax_fastpath__foreach_minimum_mlu_bool",
"test_foreach_py_TestForeachMLU_test_minmax_fastpath__foreach_minimum_mlu_float16",
"test_foreach_py_TestForeachMLU_test_minmax_fastpath__foreach_minimum_mlu_float32",
"test_foreach_py_TestForeachMLU_test_minmax_fastpath__foreach_minimum_mlu_int16",
"test_foreach_py_TestForeachMLU_test_minmax_fastpath__foreach_minimum_mlu_int32",
"test_foreach_py_TestForeachMLU_test_minmax_fastpath__foreach_minimum_mlu_int8",
"test_foreach_py_TestForeachMLU_test_minmax_fastpath__foreach_minimum_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_minmax_float_inf_nan__foreach_maximum_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_minmax_float_inf_nan__foreach_maximum_mlu_float16",
"test_foreach_py_TestForeachMLU_test_minmax_float_inf_nan__foreach_maximum_mlu_float32",
"test_foreach_py_TestForeachMLU_test_minmax_float_inf_nan__foreach_minimum_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_minmax_float_inf_nan__foreach_minimum_mlu_float16",
"test_foreach_py_TestForeachMLU_test_minmax_float_inf_nan__foreach_minimum_mlu_float32",
"test_foreach_py_TestForeachMLU_test_minmax_slowpath__foreach_maximum_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_minmax_slowpath__foreach_maximum_mlu_bool",
"test_foreach_py_TestForeachMLU_test_minmax_slowpath__foreach_maximum_mlu_float16",
"test_foreach_py_TestForeachMLU_test_minmax_slowpath__foreach_maximum_mlu_float32",
"test_foreach_py_TestForeachMLU_test_minmax_slowpath__foreach_maximum_mlu_int16",
"test_foreach_py_TestForeachMLU_test_minmax_slowpath__foreach_maximum_mlu_int32",
"test_foreach_py_TestForeachMLU_test_minmax_slowpath__foreach_maximum_mlu_int8",
"test_foreach_py_TestForeachMLU_test_minmax_slowpath__foreach_maximum_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_minmax_slowpath__foreach_minimum_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_minmax_slowpath__foreach_minimum_mlu_bool",
"test_foreach_py_TestForeachMLU_test_minmax_slowpath__foreach_minimum_mlu_float16",
"test_foreach_py_TestForeachMLU_test_minmax_slowpath__foreach_minimum_mlu_float32",
"test_foreach_py_TestForeachMLU_test_minmax_slowpath__foreach_minimum_mlu_int16",
"test_foreach_py_TestForeachMLU_test_minmax_slowpath__foreach_minimum_mlu_int32",
"test_foreach_py_TestForeachMLU_test_minmax_slowpath__foreach_minimum_mlu_int8",
"test_foreach_py_TestForeachMLU_test_minmax_slowpath__foreach_minimum_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_pointwise_op_fastpath__foreach_addcdiv_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_pointwise_op_fastpath__foreach_addcdiv_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_pointwise_op_fastpath__foreach_addcdiv_mlu_float16",
"test_foreach_py_TestForeachMLU_test_pointwise_op_fastpath__foreach_addcdiv_mlu_float32",
"test_foreach_py_TestForeachMLU_test_pointwise_op_fastpath__foreach_addcdiv_mlu_int16",
"test_foreach_py_TestForeachMLU_test_pointwise_op_fastpath__foreach_addcdiv_mlu_int32",
"test_foreach_py_TestForeachMLU_test_pointwise_op_fastpath__foreach_addcdiv_mlu_int8",
"test_foreach_py_TestForeachMLU_test_pointwise_op_fastpath__foreach_addcdiv_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_pointwise_op_fastpath__foreach_addcmul_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_pointwise_op_fastpath__foreach_addcmul_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_pointwise_op_fastpath__foreach_addcmul_mlu_float16",
"test_foreach_py_TestForeachMLU_test_pointwise_op_fastpath__foreach_addcmul_mlu_float32",
"test_foreach_py_TestForeachMLU_test_pointwise_op_fastpath__foreach_addcmul_mlu_int16",
"test_foreach_py_TestForeachMLU_test_pointwise_op_fastpath__foreach_addcmul_mlu_int32",
"test_foreach_py_TestForeachMLU_test_pointwise_op_fastpath__foreach_addcmul_mlu_int8",
"test_foreach_py_TestForeachMLU_test_pointwise_op_fastpath__foreach_addcmul_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_pointwise_op_slowpath__foreach_addcdiv_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_pointwise_op_slowpath__foreach_addcdiv_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_pointwise_op_slowpath__foreach_addcdiv_mlu_float16",
"test_foreach_py_TestForeachMLU_test_pointwise_op_slowpath__foreach_addcdiv_mlu_float32",
"test_foreach_py_TestForeachMLU_test_pointwise_op_slowpath__foreach_addcdiv_mlu_int16",
"test_foreach_py_TestForeachMLU_test_pointwise_op_slowpath__foreach_addcdiv_mlu_int32",
"test_foreach_py_TestForeachMLU_test_pointwise_op_slowpath__foreach_addcdiv_mlu_int8",
"test_foreach_py_TestForeachMLU_test_pointwise_op_slowpath__foreach_addcdiv_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_pointwise_op_slowpath__foreach_addcmul_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_pointwise_op_slowpath__foreach_addcmul_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_pointwise_op_slowpath__foreach_addcmul_mlu_float16",
"test_foreach_py_TestForeachMLU_test_pointwise_op_slowpath__foreach_addcmul_mlu_float32",
"test_foreach_py_TestForeachMLU_test_pointwise_op_slowpath__foreach_addcmul_mlu_int16",
"test_foreach_py_TestForeachMLU_test_pointwise_op_slowpath__foreach_addcmul_mlu_int32",
"test_foreach_py_TestForeachMLU_test_pointwise_op_slowpath__foreach_addcmul_mlu_int8",
"test_foreach_py_TestForeachMLU_test_pointwise_op_slowpath__foreach_addcmul_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_pointwise_op_tensors_on_different_devices__foreach_addcdiv_mlu_float32",
"test_foreach_py_TestForeachMLU_test_pointwise_op_tensors_on_different_devices__foreach_addcmul_mlu_float32",
"test_foreach_py_TestForeachMLU_test_reduce_fastpath__foreach_norm_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_reduce_fastpath__foreach_norm_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_reduce_fastpath__foreach_norm_mlu_float16",
"test_foreach_py_TestForeachMLU_test_reduce_fastpath__foreach_norm_mlu_float32",
"test_foreach_py_TestForeachMLU_test_reduce_slowpath__foreach_norm_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_reduce_slowpath__foreach_norm_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_reduce_slowpath__foreach_norm_mlu_float16",
"test_foreach_py_TestForeachMLU_test_reduce_slowpath__foreach_norm_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_abs_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_abs_mlu_bool",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_abs_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_abs_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_abs_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_abs_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_abs_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_abs_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_abs_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_acos_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_acos_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_acos_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_asin_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_asin_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_asin_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_atan_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_atan_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_atan_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_ceil_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_ceil_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_ceil_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_ceil_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_ceil_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_ceil_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_ceil_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_cos_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_cos_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_cos_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_cosh_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_cosh_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_cosh_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_erf_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_erf_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_erf_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_erfc_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_erfc_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_erfc_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_exp_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_exp_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_exp_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_expm1_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_expm1_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_expm1_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_floor_mlu_bfloat16", # TODO(PYTORCH-8724): floor not support bf16
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_floor_mlu_int16", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_floor_mlu_int32", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_floor_mlu_int8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_floor_mlu_uint8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_frac_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_frac_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_frac_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_log10_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_log10_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_log10_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_log1p_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_log1p_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_log2_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_log2_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_log2_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_log_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_log_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_log_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_neg_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_neg_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_neg_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_neg_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_neg_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_neg_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_reciprocal_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_reciprocal_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_round_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_round_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_round_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_round_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_round_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_round_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_round_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_sigmoid_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_sigmoid_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_sin_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_sin_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_sin_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_sinh_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_sinh_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_sinh_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_sqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_tan_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_tan_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_tan_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_tanh_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_tanh_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_tanh_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_trunc_mlu_bfloat16", # TODO(PYTORCH-8724): trunc not support bf16
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_trunc_mlu_int16", # TODO(PYTORCH-8724): trunc not support integral types
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_trunc_mlu_int32", # TODO(PYTORCH-8724): trunc not support integral types
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_trunc_mlu_int8", # TODO(PYTORCH-8724): trunc not support integral types
"test_foreach_py_TestForeachMLU_test_unary_fastpath__foreach_trunc_mlu_uint8", # TODO(PYTORCH-8724): trunc not support integral types
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_abs_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_abs_mlu_bool",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_abs_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_abs_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_abs_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_abs_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_abs_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_abs_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_abs_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_acos_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_acos_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_acos_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_asin_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_asin_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_asin_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_atan_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_atan_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_atan_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_ceil_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_ceil_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_ceil_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_ceil_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_ceil_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_ceil_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_ceil_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_cos_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_cos_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_cos_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_cosh_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_cosh_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_cosh_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_erf_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_erf_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_erf_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_erfc_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_erfc_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_erfc_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_exp_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_exp_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_exp_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_expm1_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_expm1_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_expm1_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_floor_mlu_bfloat16", # TODO(PYTORCH-8724): floor not support bf16
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_floor_mlu_int16", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_floor_mlu_int32", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_floor_mlu_int8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_floor_mlu_uint8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_frac_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_frac_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_frac_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_log10_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_log10_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_log10_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_log1p_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_log1p_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_log2_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_log2_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_log2_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_log_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_log_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_log_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_neg_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_neg_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_neg_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_neg_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_neg_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_neg_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_reciprocal_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_reciprocal_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_round_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_round_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_round_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_round_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_round_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_round_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_round_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_sigmoid_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_sigmoid_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_sin_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_sin_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_sin_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_sinh_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_sinh_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_sinh_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_sqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_tan_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_tan_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_tan_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_tanh_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_tanh_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_tanh_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_trunc_mlu_bfloat16", # TODO(PYTORCH-8724): trunc not support bf16
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_trunc_mlu_int16", # TODO(PYTORCH-8724): trunc not support integral types
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_trunc_mlu_int32", # TODO(PYTORCH-8724): trunc not support integral types
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_trunc_mlu_int8", # TODO(PYTORCH-8724): trunc not support integral types
"test_foreach_py_TestForeachMLU_test_unary_op_tensors_on_different_devices__foreach_trunc_mlu_uint8", # TODO(PYTORCH-8724): trunc not support integral types
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_abs_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_abs_mlu_bool",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_abs_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_abs_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_abs_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_abs_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_abs_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_abs_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_abs_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_acos_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_acos_mlu_bool",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_acos_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_acos_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_acos_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_acos_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_acos_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_acos_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_acos_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_asin_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_asin_mlu_bool",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_asin_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_asin_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_asin_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_asin_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_asin_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_asin_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_asin_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_atan_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_atan_mlu_bool",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_atan_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_atan_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_atan_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_atan_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_atan_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_atan_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_atan_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_ceil_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_ceil_mlu_bool",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_ceil_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_ceil_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_ceil_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_ceil_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_ceil_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_ceil_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_ceil_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_cos_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_cos_mlu_bool",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_cos_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_cos_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_cos_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_cos_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_cos_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_cos_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_cos_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_cosh_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_cosh_mlu_bool",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_cosh_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_cosh_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_cosh_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_cosh_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_cosh_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_cosh_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_cosh_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_erf_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_erf_mlu_bool",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_erf_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_erf_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_erf_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_erf_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_erf_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_erf_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_erf_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_erfc_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_erfc_mlu_bool",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_erfc_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_erfc_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_erfc_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_erfc_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_erfc_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_erfc_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_erfc_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_exp_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_exp_mlu_bool",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_exp_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_exp_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_exp_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_exp_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_exp_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_exp_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_exp_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_expm1_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_expm1_mlu_bool",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_expm1_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_expm1_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_expm1_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_expm1_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_expm1_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_expm1_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_expm1_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_floor_mlu_bfloat16", # TODO(PYTORCH-8724): floor not support bf16
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_floor_mlu_bool", # TODO(PYTORCH-8724): floor not support bool
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_floor_mlu_complex64", # TODO(PYTORCH-8724): floor not support complex dtypes
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_floor_mlu_int16", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_floor_mlu_int32", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_floor_mlu_int8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_floor_mlu_uint8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_frac_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_frac_mlu_bool",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_frac_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_frac_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_frac_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_frac_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_frac_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_frac_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_frac_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log10_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log10_mlu_bool",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log10_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log10_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log10_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log10_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log10_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log10_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log10_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log1p_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log1p_mlu_bool",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log1p_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log1p_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log1p_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log1p_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log1p_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log1p_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log1p_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log2_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log2_mlu_bool",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log2_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log2_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log2_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log2_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log2_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log2_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log2_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log_mlu_bool",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_log_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_neg_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_neg_mlu_bool",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_neg_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_neg_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_neg_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_neg_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_neg_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_neg_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_neg_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_reciprocal_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_reciprocal_mlu_bool",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_reciprocal_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_reciprocal_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_reciprocal_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_reciprocal_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_reciprocal_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_reciprocal_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_reciprocal_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_round_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_round_mlu_bool",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_round_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_round_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_round_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_round_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_round_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_round_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_round_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sigmoid_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sigmoid_mlu_bool",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sigmoid_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sigmoid_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sigmoid_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sigmoid_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sigmoid_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sigmoid_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sigmoid_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sin_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sin_mlu_bool",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sin_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sin_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sin_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sin_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sin_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sin_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sin_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sinh_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sinh_mlu_bool",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sinh_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sinh_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sinh_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sinh_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sinh_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sinh_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sinh_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu sqrt not support bf16
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_sqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_tan_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_tan_mlu_bool",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_tan_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_tan_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_tan_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_tan_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_tan_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_tan_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_tan_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_tanh_mlu_bfloat16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_tanh_mlu_bool",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_tanh_mlu_complex64",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_tanh_mlu_float16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_tanh_mlu_float32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_tanh_mlu_int16",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_tanh_mlu_int32",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_tanh_mlu_int8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_tanh_mlu_uint8",
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_trunc_mlu_bfloat16", # TODO(PYTORCH-8724): trunc not support bf16
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_trunc_mlu_bool", # TODO(PYTORCH-8724): trunc not support bool
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_trunc_mlu_complex64", # TODO(PYTORCH-8724): trunc not support complex dtypes
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_trunc_mlu_int16", # TODO(PYTORCH-8724): trunc not support integral types
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_trunc_mlu_int32", # TODO(PYTORCH-8724): trunc not support integral types
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_trunc_mlu_int8", # TODO(PYTORCH-8724): trunc not support integral types
"test_foreach_py_TestForeachMLU_test_unary_slowpath__foreach_trunc_mlu_uint8", # TODO(PYTORCH-8724): trunc not support integral types
"test_function_schema_py_TestFunctionSchema_test_backward_compatible_arguments",
"test_function_schema_py_TestFunctionSchema_test_backward_compatible_outputs",
"test_function_schema_py_TestFunctionSchema_test_backward_compatible_structure",
"test_function_schema_py_TestFunctionSchema_test_backward_compatible_with_smart_serialization",
"test_function_schema_py_TestFunctionSchema_test_forward_compatible_arguments_real_use_case",
"test_function_schema_py_TestFunctionSchema_test_forward_compatible_arguments_with_out",
"test_function_schema_py_TestFunctionSchema_test_forward_compatible_arguments_without_out",
"test_function_schema_py_TestFunctionSchema_test_out_schema",
"test_function_schema_py_TestFunctionSchema_test_schema_error",
"test_function_schema_py_TestFunctionSchema_test_serialize_and_deserialize",
"test_function_schema_py_TestFunctionSchema_test_string_optional_parameter_default_value",
"test_function_schema_py_TestFunctionSchema_test_tensor_list_alias_annotation_properly_parsed",
"test_function_schema_py_TestFunctionSchema_test_tensor_option_arguments_properly_parsed",
"test_functional_autograd_benchmark_py_TestFunctionalAutogradBenchmark_test_fast_tasks",
"test_functional_autograd_benchmark_py_TestFunctionalAutogradBenchmark_test_slow_tasks",
"test_functional_optim_py_TestFunctionalOptimParity_test_functional_optim_parity_adam",
"test_functional_optim_py_TestFunctionalOptimParity_test_functional_optim_parity_adam_w",
"test_functional_optim_py_TestFunctionalOptimParity_test_functional_optim_parity_sgd",
"test_functional_optim_py_TestFunctionalOptimParity_test_functional_optim_registration",
"test_functionalization_py_TestFunctionalization_test_aliases_maintained_after_pass_when_reapplying_views",
"test_functionalization_py_TestFunctionalization_test_as_strided",
"test_functionalization_py_TestFunctionalization_test_cat",
"test_functionalization_py_TestFunctionalization_test_copy_",
"test_functionalization_py_TestFunctionalization_test_diagonal",
"test_functionalization_py_TestFunctionalization_test_diagonal_mutated_input",
"test_functionalization_py_TestFunctionalization_test_everything",
"test_functionalization_py_TestFunctionalization_test_fill_",
"test_functionalization_py_TestFunctionalization_test_index_mutation_on_non_input",
"test_functionalization_py_TestFunctionalization_test_inplace_on_non_view",
"test_functionalization_py_TestFunctionalization_test_metadata_change",
"test_functionalization_py_TestFunctionalization_test_metadata_change_out_op",
"test_functionalization_py_TestFunctionalization_test_mixed_wrappers_invalid",
"test_functionalization_py_TestFunctionalization_test_mixed_wrappers_valid",
"test_functionalization_py_TestFunctionalization_test_multi_out",
"test_functionalization_py_TestFunctionalization_test_multiple_views_of_same_base",
"test_functionalization_py_TestFunctionalization_test_mutable_op_not_inplace_or_other",
"test_functionalization_py_TestFunctionalization_test_nested_functions_propagate_updates",
"test_functionalization_py_TestFunctionalization_test_only_one_view",
"test_functionalization_py_TestFunctionalization_test_optional_tensor_list",
"test_functionalization_py_TestFunctionalization_test_reapply_views_simple",
"test_functionalization_py_TestFunctionalization_test_resize_larger_invalid",
"test_functionalization_py_TestFunctionalization_test_resize_larger_valid",
"test_functionalization_py_TestFunctionalization_test_resize_smaller",
"test_functionalization_py_TestFunctionalization_test_save_for_backwards_segfault",
"test_functionalization_py_TestFunctionalization_test_scalars",
"test_functionalization_py_TestFunctionalization_test_simple",
"test_functionalization_py_TestFunctionalization_test_simple_out",
"test_functionalization_py_TestFunctionalization_test_split",
"test_functionalization_py_TestFunctionalization_test_tensor_ctr",
"test_functionalization_py_TestFunctionalization_test_tensor_list_composite",
"test_functionalization_py_TestFunctionalization_test_tensor_list_mixed_functional_nonfunctional",
"test_functionalization_py_TestFunctionalization_test_view_inplace",
"test_futures_py_TestFuture_test_add_done_callback_error_is_ignored",
"test_futures_py_TestFuture_test_add_done_callback_maintains_callback_order",
"test_futures_py_TestFuture_test_add_done_callback_no_arg_error_is_ignored",
"test_futures_py_TestFuture_test_add_done_callback_simple",
"test_futures_py_TestFuture_test_chained_then",
"test_futures_py_TestFuture_test_collect_all",
"test_futures_py_TestFuture_test_done",
"test_futures_py_TestFuture_test_done_exception",
"test_futures_py_TestFuture_test_interleaving_then_and_add_done_callback_maintains_callback_order",
"test_futures_py_TestFuture_test_interleaving_then_and_add_done_callback_propagates_error",
"test_futures_py_TestFuture_test_mark_future_twice",
"test_futures_py_TestFuture_test_pickle_future",
"test_futures_py_TestFuture_test_set_exception",
"test_futures_py_TestFuture_test_set_exception_multithreading",
"test_futures_py_TestFuture_test_then",
"test_futures_py_TestFuture_test_then_no_arg",
"test_futures_py_TestFuture_test_then_raise",
"test_futures_py_TestFuture_test_then_wrong_arg",
"test_futures_py_TestFuture_test_wait",
"test_futures_py_TestFuture_test_wait_all",
"test_futures_py_TestFuture_test_wait_multi_thread",
"test_futures_py_TestFuture_test_wait_none",
"test_hub_py_TestHub_test_download_url_to_file",
"test_hub_py_TestHub_test_get_set_dir",
"test_hub_py_TestHub_test_hub_parse_repo_info",
"test_hub_py_TestHub_test_list_entrypoints",
"test_hub_py_TestHub_test_load_commit_from_forked_repo",
"test_hub_py_TestHub_test_load_from_branch",
"test_hub_py_TestHub_test_load_from_github",
"test_hub_py_TestHub_test_load_from_local_dir",
"test_hub_py_TestHub_test_load_legacy_zip_checkpoint",
"test_hub_py_TestHub_test_load_state_dict_from_url",
"test_hub_py_TestHub_test_load_zip_1_6_checkpoint",
"test_hub_py_TestHub_test_trust_repo_builtin_trusted_owners",
"test_hub_py_TestHub_test_trust_repo_check_no",
"test_hub_py_TestHub_test_trust_repo_check_yes",
"test_hub_py_TestHub_test_trust_repo_false_emptystring",
"test_hub_py_TestHub_test_trust_repo_false_no",
"test_hub_py_TestHub_test_trust_repo_legacy",
"test_hub_py_TestHub_test_trust_repo_none",
"test_hub_py_TestHub_test_trust_repo_true",
"test_hub_py_TestHub_test_trusted_repo_false_yes",
"test_import_stats_py_TestImportTime_test_time_mlu_device_count",
"test_import_stats_py_TestImportTime_test_time_import_torch",
"test_indexing_py_TestIndexingMLU_test_byte_mask_accumulate_mlu",
"test_indexing_py_TestIndexingMLU_test_empty_ndim_index_mlu", # PYTORCH-10406
"test_indexing_py_TestIndexingMLU_test_index_put_accumulate_large_tensor_mlu", # cnnlIndexPut kernel does not support large tesors
"test_indexing_py_TestIndexingMLU_test_index_put_src_datatype_mlu_bfloat16",
"test_indexing_py_TestIndexingMLU_test_index_put_src_datatype_mlu_bool",
"test_indexing_py_TestIndexingMLU_test_index_put_src_datatype_mlu_complex64",
"test_indexing_py_TestIndexingMLU_test_index_src_datatype_mlu_bfloat16",
"test_indexing_py_NumpyTestsMLU_test_boolean_indexing_weirdness_mlu", # PYTORCH-10406
"test_indexing_py_NumpyTestsMLU_test_boolean_indexing_weirdness_tensors_mlu", # PYTORCH-10406
"test_indexing_py_NumpyTestsMLU_test_boolean_shape_mismatch_mlu", # PYTORCH-10406
"test_indexing_py_NumpyTestsMLU_test_broaderrors_indexing_mlu", # PYTORCH-10406
"test_indexing_py_NumpyTestsMLU_test_empty_fancy_index_mlu", # PYTORCH-10406
"test_itt_py_TestItt_test_itt",
"test_license_py_TestLicense_test_distinfo_license",
"test_license_py_TestLicense_test_license_for_wheel",
"test_linalg_py_TestLinalgMLU_test_addbmm_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_addmm_baddbmm_overflow_mlu_float16", # cuda will overflow , mlu can acquire correct result
"test_linalg_py_TestLinalgMLU_test_addmm_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_addmm_sizes_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_addmv_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_addr_bool_mlu_bool", # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Bool.
"test_linalg_py_TestLinalgMLU_test_addr_float_and_complex_mlu_complex64", # TODO(PYTORCH-8811): MLU addr don't support tensor dtype ComplexFloat.
"test_linalg_py_TestLinalgMLU_test_addr_float_and_complex_mlu_float16", # TODO(PYTORCH-10152):Assertion is not satisfied.
"test_linalg_py_TestLinalgMLU_test_addr_integral_mlu_int16", # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Short.
"test_linalg_py_TestLinalgMLU_test_addr_integral_mlu_int32", # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Int.
"test_linalg_py_TestLinalgMLU_test_addr_integral_mlu_int8", # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Char.
"test_linalg_py_TestLinalgMLU_test_addr_integral_mlu_uint8", # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Byte.
"test_linalg_py_TestLinalgMLU_test_baddbmm_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_blas_alpha_beta_empty_mlu_bfloat16",
"test_linalg_py_TestLinalgMLU_test_blas_alpha_beta_empty_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_blas_alpha_beta_empty_mlu_float16",
"test_linalg_py_TestLinalgMLU_test_blas_alpha_beta_empty_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_blas_empty_mlu",
"test_linalg_py_TestLinalgMLU_test_blas_mv_large_input_mlu",
"test_linalg_py_TestLinalgMLU_test_blas_nan_out_mlu_bfloat16",
"test_linalg_py_TestLinalgMLU_test_blas_nan_out_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_blas_nan_out_mlu_float16",
"test_linalg_py_TestLinalgMLU_test_blas_nan_out_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_bmm_mlu_bfloat16", # randn dose not support bfloat16
"test_linalg_py_TestLinalgMLU_test_bmm_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_broadcast_batched_matmul_mlu",
"test_linalg_py_TestLinalgMLU_test_broadcast_fused_matmul_mlu",
"test_linalg_py_TestLinalgMLU_test_cholesky_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_cholesky_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_cholesky_errors_and_warnings_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_cholesky_errors_and_warnings_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_cholesky_ex_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_cholesky_ex_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_cholesky_ex_non_pd_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_cholesky_ex_non_pd_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_cholesky_inverse_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_cholesky_inverse_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_cholesky_inverse_errors_and_warnings_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_cholesky_inverse_errors_and_warnings_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_cholesky_solve_batched_broadcasting_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_cholesky_solve_batched_broadcasting_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_cholesky_solve_batched_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_cholesky_solve_batched_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_cholesky_solve_batched_many_batches_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_cholesky_solve_batched_many_batches_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_cholesky_solve_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_cholesky_solve_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_cholesky_solve_out_errors_and_warnings_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_cholesky_solve_out_errors_and_warnings_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_cond_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_cond_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_cond_errors_and_warnings_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_cond_errors_and_warnings_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_corner_cases_of_cublasltmatmul_mlu_bfloat16",
"test_linalg_py_TestLinalgMLU_test_corner_cases_of_cublasltmatmul_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_corner_cases_of_cublasltmatmul_mlu_float16",
"test_linalg_py_TestLinalgMLU_test_corner_cases_of_cublasltmatmul_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_cross_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_cross_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_cross_with_and_without_dim_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_cross_with_and_without_dim_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_cublas_addmm_size_10000_mlu_bfloat16",
"test_linalg_py_TestLinalgMLU_test_cublas_addmm_size_10000_mlu_float16",
"test_linalg_py_TestLinalgMLU_test_cublas_addmm_size_10000_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_cublas_addmm_size_1000_mlu_bfloat16",
"test_linalg_py_TestLinalgMLU_test_cublas_addmm_size_1000_mlu_float16",
"test_linalg_py_TestLinalgMLU_test_cublas_addmm_size_1000_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_cublas_addmm_size_100_mlu_bfloat16",
"test_linalg_py_TestLinalgMLU_test_cublas_addmm_size_100_mlu_float16",
"test_linalg_py_TestLinalgMLU_test_cublas_addmm_size_100_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_dot_vs_numpy_mlu_complex64",  # TODO(PYTORCH-8807): MLU dot don't support tensor dtype ComplexFloat.
"test_linalg_py_TestLinalgMLU_test_eig_check_magma_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_eig_compare_backends_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_eig_compare_backends_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_eig_errors_and_warnings_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_eig_errors_and_warnings_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_eig_removed_error_mlu",
"test_linalg_py_TestLinalgMLU_test_eig_with_nan_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_eig_with_nan_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_eigh_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_eigh_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_eigh_errors_and_warnings_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_eigh_errors_and_warnings_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_eigh_lower_uplo_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_eigh_lower_uplo_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_eigvals_compare_backends_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_eigvals_compare_backends_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_eigvals_errors_and_warnings_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_eigvals_errors_and_warnings_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_eigvalsh_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_eigvalsh_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_eigvalsh_errors_and_warnings_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_eigvalsh_errors_and_warnings_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_einsum_corner_cases_mlu",
"test_linalg_py_TestLinalgMLU_test_einsum_error_cases_mlu",
"test_linalg_py_TestLinalgMLU_test_geqrf_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_geqrf_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_householder_product_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_householder_product_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_householder_product_errors_and_warnings_mlu",
"test_linalg_py_TestLinalgMLU_test_inner_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_inner_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_inv_errors_and_warnings_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_inv_errors_and_warnings_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_inv_ex_info_device_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_inv_ex_info_device_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_inv_ex_singular_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_inv_ex_singular_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_inverse_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_inverse_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_inverse_errors_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_inverse_errors_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_inverse_errors_large_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_inverse_errors_large_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_inverse_many_batches_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_inverse_many_batches_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_kron_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_kron_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_kron_empty_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_kron_empty_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_kron_errors_and_warnings_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_kron_errors_and_warnings_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_lapack_empty_mlu",
"test_linalg_py_TestLinalgMLU_test_ldl_factor_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_ldl_factor_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_ldl_solve_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_ldl_solve_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_linalg_cross_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_linalg_cross_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_linalg_cross_with_and_without_dim_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_linalg_cross_with_and_without_dim_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_linalg_lstsq_batch_broadcasting_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_linalg_lstsq_batch_broadcasting_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_linalg_lstsq_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_linalg_lstsq_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_linalg_lstsq_input_checks_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_linalg_lstsq_input_checks_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_linalg_lu_cpu_errors_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_linalg_lu_cpu_errors_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_linalg_lu_family_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_linalg_lu_family_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_linalg_lu_solve_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_linalg_lu_solve_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_linalg_matrix_exp_analytic_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_linalg_matrix_exp_analytic_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_linalg_matrix_exp_batch_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_linalg_matrix_exp_boundary_cases_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_linalg_matrix_exp_boundary_cases_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_linalg_matrix_exp_compare_with_taylor_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_linalg_matrix_exp_compare_with_taylor_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_linalg_matrix_exp_no_warnings_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_linalg_matrix_exp_utils_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_linalg_matrix_exp_utils_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_linalg_qr_autograd_errors_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_linalg_solve_triangular_broadcasting_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_linalg_solve_triangular_broadcasting_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_linalg_solve_triangular_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_linalg_solve_triangular_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_linalg_solve_triangular_large_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_linalg_solve_triangular_large_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_lstsq_removed_error_mlu",
"test_linalg_py_TestLinalgMLU_test_lu_solve_batched_broadcasting_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_lu_solve_batched_broadcasting_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_lu_solve_batched_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_lu_solve_batched_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_lu_solve_batched_many_batches_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_lu_solve_batched_many_batches_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_lu_solve_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_lu_solve_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_lu_solve_large_matrices_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_lu_solve_large_matrices_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_matmul_45724_mlu",
"test_linalg_py_TestLinalgMLU_test_matmul_small_brute_force_1d_Nd_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_matmul_small_brute_force_1d_Nd_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_matmul_small_brute_force_2d_Nd_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_matmul_small_brute_force_2d_Nd_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_matmul_small_brute_force_3d_Nd_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_matmul_small_brute_force_3d_Nd_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_matrix_norm_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_matrix_rank_atol_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_matrix_rank_atol_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_matrix_rank_basic_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_matrix_rank_basic_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_matrix_rank_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_matrix_rank_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_matrix_rank_empty_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_matrix_rank_empty_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_matrix_rank_out_errors_and_warnings_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_matrix_rank_out_errors_and_warnings_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_matrix_rank_removed_error_mlu",
"test_linalg_py_TestLinalgMLU_test_mm_bmm_non_memory_dense_mlu", # PYTORCH-9645: complex is not supported
"test_linalg_py_TestLinalgMLU_test_mm_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_mm_mlu_float32", # slow test, cuda skip it by default
"test_linalg_py_TestLinalgMLU_test_multi_dot_errors_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_norm_complex_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_norm_complex_old_mlu",
"test_linalg_py_TestLinalgMLU_test_norm_dtype_mlu_bfloat16",
"test_linalg_py_TestLinalgMLU_test_norm_dtype_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_norm_dtype_mlu_float16",
"test_linalg_py_TestLinalgMLU_test_norm_dtype_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_norm_errors_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_norm_extreme_values_mlu",
"test_linalg_py_TestLinalgMLU_test_norm_fastpaths_mlu",
"test_linalg_py_TestLinalgMLU_test_norm_fro_2_equivalence_old_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_norm_fused_type_promotion_mlu_bfloat16",
"test_linalg_py_TestLinalgMLU_test_norm_fused_type_promotion_mlu_float16",
"test_linalg_py_TestLinalgMLU_test_norm_matrix_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_norm_matrix_degenerate_shapes_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_norm_matrix_degenerate_shapes_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_norm_old_mlu",
"test_linalg_py_TestLinalgMLU_test_norm_old_nan_propagation_mlu",
"test_linalg_py_TestLinalgMLU_test_norm_vector_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_norm_vector_degenerate_shapes_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_norm_vector_degenerate_shapes_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_nuclear_norm_axes_small_brute_force_old_mlu",
"test_linalg_py_TestLinalgMLU_test_nuclear_norm_exceptions_old_mlu",
"test_linalg_py_TestLinalgMLU_test_nuclear_norm_out_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_old_cholesky_batched_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_old_cholesky_batched_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_old_cholesky_batched_upper_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_old_cholesky_batched_upper_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_old_cholesky_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_old_cholesky_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_old_cholesky_empty_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_old_cholesky_empty_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_ormqr_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_ormqr_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_ormqr_errors_and_warnings_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_ormqr_errors_and_warnings_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_outer_mlu_bfloat16", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_mlu_complex64", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_bfloat16_bfloat16", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_bfloat16_bool", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_bfloat16_complex64", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_bfloat16_int16", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_bfloat16_int32", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_bfloat16_int8", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_bfloat16_uint8", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_bool_bfloat16", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_bool_complex64", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_complex64_bfloat16", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_complex64_bool", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_complex64_complex64", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_complex64_float16", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_complex64_float32", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_complex64_int16", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_complex64_int32", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_complex64_int8", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_complex64_uint8", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_float16_complex64", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_float32_bfloat16", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_float32_complex64", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_int16_bfloat16", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_int16_complex64", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_int32_bfloat16", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_int32_complex64", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_int8_bfloat16", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_int8_complex64", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_uint8_bfloat16", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_outer_type_promotion_mlu_uint8_complex64", #TODO(PYTORCH-10165)
"test_linalg_py_TestLinalgMLU_test_pca_lowrank_mlu",
"test_linalg_py_TestLinalgMLU_test_permute_matmul_mlu",
"test_linalg_py_TestLinalgMLU_test_pinv_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_pinv_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_pinv_errors_and_warnings_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_pinv_errors_and_warnings_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_pinverse_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_pinverse_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_preferred_linalg_library_mlu",
"test_linalg_py_TestLinalgMLU_test_qr_batched_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_qr_batched_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_qr_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_qr_vs_numpy_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_qr_vs_numpy_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_renorm_mlu",
"test_linalg_py_TestLinalgMLU_test_renorm_ps_mlu",
"test_linalg_py_TestLinalgMLU_test_slogdet_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_slogdet_errors_and_warnings_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_solve_batched_broadcasting_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_solve_batched_broadcasting_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_solve_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_solve_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_solve_removed_error_mlu",
"test_linalg_py_TestLinalgMLU_test_svd_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_svd_mlu_float32", # CNNLCORE-13740
"test_linalg_py_TestLinalgMLU_test_svd_memory_allocation_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_svd_memory_allocation_mlu_float32", # CNNLCORE-12428
"test_linalg_py_TestLinalgMLU_test_svd_nan_error_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_symeig_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_symeig_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_symeig_out_errors_and_warnings_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_symeig_out_errors_and_warnings_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_tensordot_mlu",
"test_linalg_py_TestLinalgMLU_test_tensorinv_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_tensorinv_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_tensorinv_empty_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_tensorinv_empty_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_tensorinv_errors_and_warnings_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_tensorinv_errors_and_warnings_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_tensorinv_singular_input_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_tensorinv_singular_input_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_tensorsolve_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_tensorsolve_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_tensorsolve_empty_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_tensorsolve_empty_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_tensorsolve_errors_and_warnings_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_triangular_solve_batched_broadcasting_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_triangular_solve_batched_broadcasting_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_triangular_solve_batched_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_triangular_solve_batched_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_triangular_solve_batched_many_batches_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_triangular_solve_batched_many_batches_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_triangular_solve_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_triangular_solve_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_triangular_solve_out_errors_and_warnings_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_triangular_solve_out_errors_and_warnings_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_vdot_invalid_args_mlu",
"test_linalg_py_TestLinalgMLU_test_vdot_vs_numpy_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_vdot_vs_numpy_mlu_float32",
"test_linalg_py_TestLinalgMLU_test_vector_norm_mlu_bfloat16",
"test_linalg_py_TestLinalgMLU_test_vector_norm_mlu_complex64",
"test_linalg_py_TestLinalgMLU_test_vector_norm_dim_tuple_arg_mlu",
"test_linalg_py_TestLinalgMLU_test_vector_norm_extreme_values_mlu",
"test_logging_py_LoggingTest_testApiUsage",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_amax_mlu_bfloat16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_amax_mlu_float16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_amax_mlu_float32",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_amax_mlu_int16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_amax_mlu_int32",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_amax_mlu_int8",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_amax_mlu_uint8",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_amin_mlu_bfloat16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_amin_mlu_float16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_amin_mlu_float32",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_amin_mlu_int16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_amin_mlu_int32",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_amin_mlu_int8",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_amin_mlu_uint8",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_mean_mlu_bfloat16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_mean_mlu_bool",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_mean_mlu_complex64",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_mean_mlu_float16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_mean_mlu_float32",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_mean_mlu_int16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_mean_mlu_int32",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_mean_mlu_int8",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_mean_mlu_uint8",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_prod_mlu_bfloat16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_prod_mlu_bool",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_prod_mlu_complex64",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_prod_mlu_float16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_prod_mlu_float32",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_prod_mlu_int16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_prod_mlu_int32",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_prod_mlu_int8",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_prod_mlu_uint8",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_sum_mlu_bfloat16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_sum_mlu_bool",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_sum_mlu_complex64",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_sum_mlu_float16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_sum_mlu_float32",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_sum_mlu_int16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_sum_mlu_int32",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_sum_mlu_int8",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_coo_masked_sum_mlu_uint8",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_amax_mlu_bfloat16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_amax_mlu_float16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_amax_mlu_float32",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_amax_mlu_int16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_amax_mlu_int32",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_amax_mlu_int8",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_amax_mlu_uint8",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_amin_mlu_bfloat16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_amin_mlu_float16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_amin_mlu_float32",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_amin_mlu_int16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_amin_mlu_int32",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_amin_mlu_int8",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_amin_mlu_uint8",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_mean_mlu_bfloat16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_mean_mlu_bool",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_mean_mlu_complex64",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_mean_mlu_float16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_mean_mlu_float32",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_mean_mlu_int16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_mean_mlu_int32",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_mean_mlu_int8",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_mean_mlu_uint8",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_prod_mlu_bfloat16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_prod_mlu_bool",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_prod_mlu_complex64",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_prod_mlu_float16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_prod_mlu_float32",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_prod_mlu_int16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_prod_mlu_int32",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_prod_mlu_int8",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_prod_mlu_uint8",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_sum_mlu_bfloat16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_sum_mlu_bool",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_sum_mlu_complex64",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_sum_mlu_float16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_sum_mlu_float32",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_sum_mlu_int16",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_sum_mlu_int32",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_sum_mlu_int8",
"test_masked_py_TestMaskedMLU_test_mask_layout_sparse_csr_masked_sum_mlu_uint8",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_amax_mlu_bfloat16",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_amax_mlu_float16",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_amax_mlu_float32",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_amax_mlu_int16",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_amax_mlu_int32",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_amax_mlu_int8",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_amax_mlu_uint8",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_amin_mlu_bfloat16",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_amin_mlu_float16",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_amin_mlu_float32",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_amin_mlu_int16",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_amin_mlu_int32",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_amin_mlu_int8",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_amin_mlu_uint8",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_mean_mlu_bfloat16",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_mean_mlu_bool",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_mean_mlu_complex64",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_mean_mlu_float16",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_mean_mlu_float32",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_mean_mlu_int16",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_mean_mlu_int32",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_mean_mlu_int8",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_mean_mlu_uint8",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_prod_mlu_bfloat16",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_prod_mlu_bool",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_prod_mlu_complex64",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_prod_mlu_float16",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_prod_mlu_float32",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_prod_mlu_int16",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_prod_mlu_int32",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_prod_mlu_int8",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_prod_mlu_uint8",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_sum_mlu_bfloat16",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_sum_mlu_bool",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_sum_mlu_complex64",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_sum_mlu_float16",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_sum_mlu_float32",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_sum_mlu_int16",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_sum_mlu_int32",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_sum_mlu_int8",
"test_masked_py_TestMaskedMLU_test_mask_layout_strided_masked_sum_mlu_uint8",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_log_softmax_mlu_bfloat16",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_log_softmax_mlu_float16",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_log_softmax_mlu_float32",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_norm_mlu_bfloat16",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_norm_mlu_float16",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_norm_mlu_float32",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_normalize_mlu_bfloat16",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_normalize_mlu_complex64",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_normalize_mlu_float16",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_normalize_mlu_float32",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_softmax_mlu_bfloat16",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_softmax_mlu_float16",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_softmax_mlu_float32",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_softmin_mlu_bfloat16",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_softmin_mlu_float16",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_softmin_mlu_float32",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_std_mlu_bfloat16",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_std_mlu_complex64",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_std_mlu_float16",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_std_mlu_float32",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_std_mlu_int16",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_std_mlu_int32",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_std_mlu_int8",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_std_mlu_uint8",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_var_mlu_bfloat16",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_var_mlu_complex64",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_var_mlu_float16",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_var_mlu_float32",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_var_mlu_int16",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_var_mlu_int32",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_var_mlu_int8",
"test_masked_py_TestMaskedMLU_test_reference_masked_masked_var_mlu_uint8",
"test_masked_py_TestMaskedMLU_test_where_coo_fill_value_0_mlu",
"test_masked_py_TestMaskedMLU_test_where_coo_fill_value_123_mlu",
"test_masked_py_TestMaskedMLU_test_where_csr_fill_value_0_mlu",
"test_masked_py_TestMaskedMLU_test_where_csr_fill_value_123_mlu",
"test_masked_py_TestMaskedMLU_test_where_hybrid_coo_fill_value_0_mlu",
"test_masked_py_TestMaskedMLU_test_where_hybrid_coo_fill_value_123_mlu",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_acos_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_acosh_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_arccos_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_arccosh_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_arcsin_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_arcsinh_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_arctan_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_arctanh_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_asin_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_asinh_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_atan_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_atanh_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_bitwise_not_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_ceil_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_clamp_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_clip_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_conj_physical_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_cos_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_cosh_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_deg2rad_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_digamma_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_erf_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_erfc_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_erfinv_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_exp2_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_exp_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_expm1_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_fix_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_frac_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_i0_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_lgamma_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_log10_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_log1p_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_log2_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_log_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_logit_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_neg_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_negative_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_pow_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_rad2deg_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_reciprocal_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_round_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_sigmoid_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_sin_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_sinc_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_sinh_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_square_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_tan_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_tanh_",
"test_maskedtensor_py_TestUnary_test_inplace_unary_fn_aten_trunc_",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_acos",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_acosh",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_angle",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_arccos",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_arccosh",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_arcsin",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_arcsinh",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_arctan",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_arctanh",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_asin",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_asinh",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_atan",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_atanh",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_bitwise_not",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_ceil",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_clamp",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_clip",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_conj_physical",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_cos",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_cosh",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_deg2rad",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_digamma",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_erf",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_erfc",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_erfinv",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_exp",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_exp2",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_expm1",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_fix",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_frac",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_i0",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_isnan",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_lgamma",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_log",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_log10",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_log1p",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_log2",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_logit",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_neg",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_negative",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_positive",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_pow",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_rad2deg",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_reciprocal",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_round",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_sigmoid",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_signbit",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_sin",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_sinc",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_sinh",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_square",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_tan",
"test_maskedtensor_py_TestUnary_test_unary_fn_aten_tanh",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_add",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_arctan2",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_atan2",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_bitwise_and",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_bitwise_left_shift",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_bitwise_or",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_bitwise_right_shift",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_bitwise_xor",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_eq",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_fmax",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_fmin",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_fmod",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_ge",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_greater",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_greater_equal",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_gt",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_le",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_less",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_less_equal",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_logaddexp",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_logaddexp2",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_lt",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_maximum",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_minimum",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_mul",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_multiply",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_ne",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_nextafter",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_not_equal",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_remainder",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_sub",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_subtract",
"test_maskedtensor_py_TestBinary_test_binary_fn_aten_true_divide",
"test_maskedtensor_py_TestBinary_test_inplace_binary_fn_aten_add_",
"test_maskedtensor_py_TestBinary_test_inplace_binary_fn_aten_arctan2_",
"test_maskedtensor_py_TestBinary_test_inplace_binary_fn_aten_atan2_",
"test_maskedtensor_py_TestBinary_test_inplace_binary_fn_aten_bitwise_and_",
"test_maskedtensor_py_TestBinary_test_inplace_binary_fn_aten_bitwise_left_shift_",
"test_maskedtensor_py_TestBinary_test_inplace_binary_fn_aten_bitwise_or_",
"test_maskedtensor_py_TestBinary_test_inplace_binary_fn_aten_bitwise_right_shift_",
"test_maskedtensor_py_TestBinary_test_inplace_binary_fn_aten_bitwise_xor_",
"test_maskedtensor_py_TestBinary_test_inplace_binary_fn_aten_eq_",
"test_maskedtensor_py_TestBinary_test_inplace_binary_fn_aten_fmod_",
"test_maskedtensor_py_TestBinary_test_inplace_binary_fn_aten_ge_",
"test_maskedtensor_py_TestBinary_test_inplace_binary_fn_aten_greater_",
"test_maskedtensor_py_TestBinary_test_inplace_binary_fn_aten_greater_equal_",
"test_maskedtensor_py_TestBinary_test_inplace_binary_fn_aten_gt_",
"test_maskedtensor_py_TestBinary_test_inplace_binary_fn_aten_le_",
"test_maskedtensor_py_TestBinary_test_inplace_binary_fn_aten_less_",
"test_maskedtensor_py_TestBinary_test_inplace_binary_fn_aten_less_equal_",
"test_maskedtensor_py_TestBinary_test_inplace_binary_fn_aten_lt_",
"test_maskedtensor_py_TestBinary_test_inplace_binary_fn_aten_mul_",
"test_maskedtensor_py_TestBinary_test_inplace_binary_fn_aten_multiply_",
"test_maskedtensor_py_TestBinary_test_inplace_binary_fn_aten_ne_",
"test_maskedtensor_py_TestBinary_test_inplace_binary_fn_aten_nextafter_",
"test_maskedtensor_py_TestBinary_test_inplace_binary_fn_aten_not_equal_",
"test_maskedtensor_py_TestBinary_test_inplace_binary_fn_aten_remainder_",
"test_maskedtensor_py_TestBinary_test_inplace_binary_fn_aten_sub_",
"test_maskedtensor_py_TestBinary_test_inplace_binary_fn_aten_subtract_",
"test_maskedtensor_py_TestBinary_test_inplace_binary_fn_aten_true_divide_",
"test_maskedtensor_py_TestBinary_test_masks_match_fn_name_add",
"test_maskedtensor_py_TestBinary_test_masks_match_fn_name_add_",
"test_maskedtensor_py_TestReductions_test_all",
"test_maskedtensor_py_TestReductions_test_amax",
"test_maskedtensor_py_TestReductions_test_amax_grad",
"test_maskedtensor_py_TestReductions_test_amin",
"test_maskedtensor_py_TestReductions_test_amin_grad",
"test_maskedtensor_py_TestReductions_test_grad_dtype",
"test_maskedtensor_py_TestReductions_test_max_not_implemented",
"test_maskedtensor_py_TestReductions_test_mean",
"test_maskedtensor_py_TestReductions_test_mean_dim_grad",
"test_maskedtensor_py_TestReductions_test_mean_grad_case_1a",
"test_maskedtensor_py_TestReductions_test_mean_grad_case_1b",
"test_maskedtensor_py_TestReductions_test_mean_grad_case_1c",
"test_maskedtensor_py_TestReductions_test_mean_grad_case_1d",
"test_maskedtensor_py_TestReductions_test_mean_grad_case_1e",
"test_maskedtensor_py_TestReductions_test_mean_grad_case_1f",
"test_maskedtensor_py_TestReductions_test_prod",
"test_maskedtensor_py_TestReductions_test_prod_grad",
"test_maskedtensor_py_TestReductions_test_sum",
"test_maskedtensor_py_TestReductions_test_sum_grad",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_add_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_add_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_add_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_add_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_add_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_add_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_atan2_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_atan2_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_atan2_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_atan2_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_atan2_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_atan2_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_div_no_rounding_mode_layout_torch_sparse_coo_mlu_float16", # sparse MLU backend is not supported
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_div_no_rounding_mode_layout_torch_sparse_coo_mlu_float32", # sparse MLU backend is not supported
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_div_no_rounding_mode_layout_torch_sparse_csr_mlu_float16", # sparse MLU backend is not supported
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_div_no_rounding_mode_layout_torch_sparse_csr_mlu_float32", # sparse MLU backend is not supported
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_div_trunc_rounding_layout_torch_sparse_coo_mlu_float16", # sparse MLU backend is not supported
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_div_trunc_rounding_layout_torch_sparse_coo_mlu_float32", # sparse MLU backend is not supported
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_div_trunc_rounding_layout_torch_sparse_csr_mlu_float16", # sparse MLU backend is not supported
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_div_trunc_rounding_layout_torch_sparse_csr_mlu_float32", # sparse MLU backend is not supported
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_div_trunc_rounding_layout_torch_sparse_coo_mlu_float16", # MLU not support sparse yet
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_div_trunc_rounding_layout_torch_sparse_coo_mlu_float32", # MLU not support sparse yet
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_div_trunc_rounding_layout_torch_sparse_csr_mlu_float16", # MLU not support sparse yet
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_div_trunc_rounding_layout_torch_sparse_csr_mlu_float32", # MLU not support sparse yet
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_eq_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_eq_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_eq_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_eq_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_eq_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_eq_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_fmax_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_fmax_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_fmax_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_fmax_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_fmax_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_fmax_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_fmin_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_fmin_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_fmin_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_fmin_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_fmin_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_fmin_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_fmod_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_fmod_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_fmod_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_fmod_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_fmod_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_fmod_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_ge_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_ge_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_ge_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_ge_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_ge_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_ge_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_gt_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_gt_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_gt_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_gt_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_gt_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_gt_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_le_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_le_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_le_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_le_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_le_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_le_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_lt_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_lt_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_lt_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_lt_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_lt_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_lt_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_maximum_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_maximum_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_maximum_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_maximum_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_maximum_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_maximum_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_minimum_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_minimum_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_minimum_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_minimum_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_minimum_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_minimum_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_mul_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_mul_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_mul_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_mul_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_mul_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_mul_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_ne_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_ne_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_ne_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_ne_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_ne_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_ne_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_nextafter_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_nextafter_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_nextafter_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_remainder_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_remainder_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_remainder_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_remainder_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_remainder_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_remainder_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_sub_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_sub_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_sub_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_sub_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_sub_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_sub_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_true_divide_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_true_divide_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_true_divide_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_true_divide_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_true_divide_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_binary_core_true_divide_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_amax_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_amax_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_amax_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_amax_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_amax_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_amax_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_amin_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_amin_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_amin_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_amin_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_amin_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_amin_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_argmax_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_argmax_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_argmax_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_argmax_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_argmax_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_argmax_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_argmin_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_argmin_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_argmin_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_argmin_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_argmin_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_argmin_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_prod_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_prod_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_prod_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_prod_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_prod_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_prod_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_sum_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_sum_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_sum_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_sum_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_sum_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_reduction_all_sum_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_acos_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_acos_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_acos_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_acos_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_acos_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_acos_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_acosh_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_acosh_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_acosh_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_acosh_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_acosh_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_acosh_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_angle_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_angle_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_asin_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_asin_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_asin_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_asin_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_asin_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_asin_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_asinh_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_asinh_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_asinh_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_asinh_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_asinh_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_asinh_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_atan_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_atan_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_atan_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_atan_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_atan_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_atan_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_atanh_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_atanh_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_atanh_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_atanh_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_atanh_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_atanh_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_ceil_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_ceil_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_ceil_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_ceil_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_ceil_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_ceil_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_conj_physical_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_conj_physical_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_conj_physical_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_conj_physical_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_conj_physical_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_conj_physical_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_cos_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_cos_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_cos_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_cos_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_cos_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_cos_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_cosh_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_cosh_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_cosh_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_cosh_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_cosh_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_cosh_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_deg2rad_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_deg2rad_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_deg2rad_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_deg2rad_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_deg2rad_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_deg2rad_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_digamma_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_digamma_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_digamma_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_digamma_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_digamma_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_digamma_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_erf_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_erf_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_erf_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_erf_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_erf_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_erf_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_erfc_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_erfc_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_erfc_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_erfc_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_erfc_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_erfc_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_erfinv_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_erfinv_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_erfinv_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_erfinv_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_erfinv_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_erfinv_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_exp2_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_exp2_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_exp2_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_exp2_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_exp2_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_exp2_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_exp_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_exp_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_exp_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_exp_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_exp_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_exp_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_expm1_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_expm1_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_expm1_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_expm1_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_expm1_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_expm1_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_frac_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_frac_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_frac_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_frac_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_frac_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_frac_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_i0_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_i0_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_i0_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_i0_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_i0_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_i0_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_isnan_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_isnan_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_isnan_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_isnan_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_isnan_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_isnan_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_lgamma_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_lgamma_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_lgamma_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_lgamma_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_lgamma_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_lgamma_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_log10_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_log10_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_log10_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_log10_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_log10_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_log10_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_log1p_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_log1p_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_log1p_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_log1p_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_log1p_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_log1p_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_log2_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_log2_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_log2_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_log2_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_log2_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_log2_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_log_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_log_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_log_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_log_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_log_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_log_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_logit_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_logit_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_logit_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_logit_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_logit_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_logit_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_neg_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_neg_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_neg_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_neg_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_neg_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_neg_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_positive_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_positive_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_positive_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_positive_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_positive_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_positive_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_rad2deg_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_rad2deg_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_rad2deg_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_rad2deg_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_rad2deg_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_rad2deg_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_reciprocal_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_reciprocal_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_reciprocal_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_reciprocal_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_reciprocal_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_reciprocal_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_round_decimals_0_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_round_decimals_0_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_round_decimals_0_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_round_decimals_0_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_round_decimals_0_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_round_decimals_0_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_round_decimals_3_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_round_decimals_3_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_round_decimals_3_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_round_decimals_3_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_round_decimals_3_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_round_decimals_3_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_round_decimals_neg_3_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_round_decimals_neg_3_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_round_decimals_neg_3_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_round_decimals_neg_3_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_round_decimals_neg_3_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_round_decimals_neg_3_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_round_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_round_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_round_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_round_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_round_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_round_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_sigmoid_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_sigmoid_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_sigmoid_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_sigmoid_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_sigmoid_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_sigmoid_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_signbit_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_signbit_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_signbit_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_signbit_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_signbit_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_signbit_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_sin_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_sin_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_sin_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_sin_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_sin_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_sin_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_sinc_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_sinc_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_sinc_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_sinc_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_sinc_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_sinc_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_sinh_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_sinh_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_sinh_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_sinh_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_sinh_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_sinh_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_square_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_square_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_square_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_square_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_square_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_square_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_tan_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_tan_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_tan_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_tan_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_tan_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_tan_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_tanh_layout_torch_sparse_coo_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_tanh_layout_torch_sparse_coo_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_tanh_layout_torch_sparse_csr_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_tanh_layout_torch_sparse_csr_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_tanh_layout_torch_strided_mlu_float16",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_tanh_layout_torch_strided_mlu_float32",
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_trunc_layout_torch_sparse_coo_mlu_float16", # MLU not support sparse yet
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_trunc_layout_torch_sparse_coo_mlu_float32", # MLU not support sparse yet
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_trunc_layout_torch_sparse_csr_mlu_float16", # MLU not support sparse yet
"test_maskedtensor_py_TestOperatorsMLU_test_unary_core_trunc_layout_torch_sparse_csr_mlu_float32", # MLU not support sparse yet
"test_maskedtensor_py_TestBasicsMLU_test_add_mlu",
"test_maskedtensor_py_TestBasicsMLU_test_contiguous_mlu",
"test_maskedtensor_py_TestBasicsMLU_test_diff_dim_mlu",
"test_maskedtensor_py_TestBasicsMLU_test_diff_layouts_mlu",
"test_maskedtensor_py_TestBasicsMLU_test_diff_sizes_mlu",
"test_maskedtensor_py_TestBasicsMLU_test_grad_warning_mlu",
"test_maskedtensor_py_TestBasicsMLU_test_invalid_sparse_coo_values_mlu",
"test_maskedtensor_py_TestBasicsMLU_test_invalid_sparse_csr_values_mlu",
"test_maskedtensor_py_TestBasicsMLU_test_invalid_sparse_layout_mlu",
"test_maskedtensor_py_TestBasicsMLU_test_invalid_tensor_inputs_mlu",
"test_maskedtensor_py_TestBasicsMLU_test_softmax_mlu",
"test_maskedtensor_py_TestBasicsMLU_test_to_dense_and_sparse_coo_mlu",
"test_maskedtensor_py_TestBasicsMLU_test_to_dense_and_sparse_csr_mlu",
"test_maskedtensor_py_TestBasicsMLU_test_to_dense_mlu",
"test_maskedtensor_py_TestBasicsMLU_test_to_sparse_mlu",
"test_maskedtensor_py_TestBasicsMLU_test_where_mlu",
"test_meta_py_TestMetaConverter_test_complex_noncontiguous_bug",
"test_meta_py_TestMetaConverter_test_imag",
"test_meta_py_TestMetaConverter_test_leaf",
"test_meta_py_TestMetaConverter_test_non_leaf",
"test_meta_py_TestMetaConverter_test_requires_grad_false",
"test_meta_py_TestMetaConverter_test_tensor_outlives_converter",
"test_meta_py_TestMetaConverter_test_weakref",
"test_meta_py_TestMetaMLU_test_dispatch_meta_H_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_H_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_H_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_H_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_H_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_H_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_H_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_H_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_H_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_H_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_T_mlu_bfloat16", # T unsupport bf16
"test_meta_py_TestMetaMLU_test_dispatch_meta___getitem___mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta___getitem___mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta___getitem___mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta___getitem___mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta___getitem___mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta___getitem___mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta___getitem___mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta___getitem___mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta___getitem___mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta___getitem___mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rand___mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rand___mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rand___mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rand___mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rand___mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rdiv___mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_meta_py_TestMetaMLU_test_dispatch_meta___rdiv___mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_meta_py_TestMetaMLU_test_dispatch_meta___rmatmul___mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rmatmul___mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rmatmul___mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rmatmul___mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rmod___mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rmod___mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rmod___mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rmod___mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rmod___mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rmod___mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rmod___mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta___ror___mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta___ror___mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta___ror___mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta___ror___mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta___ror___mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rpow___mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rpow___mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rpow___mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rpow___mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rpow___mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rpow___mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rpow___mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rpow___mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rxor___mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rxor___mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rxor___mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rxor___mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta___rxor___mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_abs_mlu_bfloat16", # TODO(PYTORCH-8789)
"test_meta_py_TestMetaMLU_test_dispatch_meta_abs_mlu_bool", # TODO(PYTORCH-8789)
"test_meta_py_TestMetaMLU_test_dispatch_meta_abs_mlu_complex32", # TODO(PYTORCH-8789)
"test_meta_py_TestMetaMLU_test_dispatch_meta_abs_mlu_int16", # TODO(PYTORCH-8789)
"test_meta_py_TestMetaMLU_test_dispatch_meta_abs_mlu_int8", # TODO(PYTORCH-8789)
"test_meta_py_TestMetaMLU_test_dispatch_meta_abs_mlu_uint8", # TODO(PYTORCH-8789)
"test_meta_py_TestMetaMLU_test_dispatch_meta_acos_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_acos_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_acos_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_acos_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_acos_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_acos_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_acos_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_acos_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_acos_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_acos_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_acosh_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_acosh_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_acosh_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_acosh_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_acosh_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_acosh_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_acosh_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_acosh_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_acosh_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_acosh_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_addbmm_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_addcdiv_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_addcdiv_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_addcmul_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_addcmul_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_addcmul_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_addcmul_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_addcmul_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_addcmul_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_addmm_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_addmm_decomposed_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_addmv_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_addr_mlu_bool", # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Bool.
"test_meta_py_TestMetaMLU_test_dispatch_meta_addr_mlu_complex64", # TODO(PYTORCH-8811): MLU addr don't support tensor dtype ComplexFloat.
"test_meta_py_TestMetaMLU_test_dispatch_meta_addr_mlu_int16", # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Short.
"test_meta_py_TestMetaMLU_test_dispatch_meta_addr_mlu_int32", # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Int.
"test_meta_py_TestMetaMLU_test_dispatch_meta_addr_mlu_int8", # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Char.
"test_meta_py_TestMetaMLU_test_dispatch_meta_addr_mlu_uint8", # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Byte.
"test_meta_py_TestMetaMLU_test_dispatch_meta_all_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_all_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_allclose_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_allclose_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_allclose_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_allclose_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_amax_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_amin_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_amin_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_amin_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_amin_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_amin_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_amin_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_amin_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_amin_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_aminmax_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_aminmax_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_aminmax_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_aminmax_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_aminmax_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_aminmax_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_aminmax_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_aminmax_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_any_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_any_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_argmax_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_argmin_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_argsort_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_argsort_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_argsort_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_argsort_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_argsort_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_argsort_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_argsort_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_argwhere_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_argwhere_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_argwhere_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_argwhere_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_argwhere_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_argwhere_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_argwhere_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_argwhere_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_argwhere_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_as_strided_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_as_strided_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_as_strided_scatter_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_as_strided_scatter_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_as_strided_scatter_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_as_strided_scatter_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_as_strided_scatter_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_as_strided_scatter_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_as_strided_scatter_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_as_strided_scatter_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_as_strided_scatter_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_as_strided_scatter_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_asin_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_asin_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_asin_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_asin_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_asin_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_asin_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_asin_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_asin_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_asin_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_asin_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_asinh_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_asinh_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_asinh_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_asinh_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_asinh_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_asinh_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_asinh_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_asinh_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_asinh_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_asinh_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atan2_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atan2_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atan2_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atan2_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atan2_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atan2_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atan2_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atan2_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atan_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atan_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atan_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atan_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atan_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atan_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atan_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atan_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atan_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atan_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atanh_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atanh_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atanh_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atanh_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atanh_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atanh_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atanh_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atanh_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atanh_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atanh_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_1d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_1d_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_1d_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_1d_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_1d_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_1d_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_1d_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_1d_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_1d_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_1d_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_2d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_2d_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_2d_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_2d_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_2d_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_2d_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_2d_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_2d_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_2d_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_2d_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_3d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_3d_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_3d_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_3d_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_3d_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_3d_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_3d_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_3d_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_3d_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_atleast_3d_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_baddbmm_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_bernoulli_mlu_bfloat16", # TODO(PYTORCH-10285)
"test_meta_py_TestMetaMLU_test_dispatch_meta_bfloat16_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_bfloat16_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_bfloat16_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_bfloat16_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_bfloat16_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_bfloat16_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_bfloat16_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_bfloat16_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_bfloat16_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_bfloat16_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_block_diag_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_block_diag_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_block_diag_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_block_diag_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_block_diag_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_block_diag_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_block_diag_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_block_diag_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_block_diag_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_block_diag_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_bmm_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_bool_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_bool_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_bool_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_bool_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_bool_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_bool_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_bool_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_bool_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_bool_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_bool_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_broadcast_shapes_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_broadcast_tensors_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_broadcast_tensors_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_broadcast_tensors_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_broadcast_tensors_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_broadcast_tensors_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_broadcast_tensors_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_broadcast_tensors_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_broadcast_tensors_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_broadcast_tensors_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_broadcast_to_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_broadcast_to_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_broadcast_to_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_broadcast_to_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_broadcast_to_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_broadcast_to_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_broadcast_to_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_broadcast_to_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_broadcast_to_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_bucketize_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_bucketize_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_bucketize_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_bucketize_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_bucketize_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_bucketize_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_byte_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_byte_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_byte_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_byte_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_byte_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_byte_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_byte_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_byte_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_byte_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cartesian_prod_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cartesian_prod_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cartesian_prod_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cartesian_prod_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cartesian_prod_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cartesian_prod_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cartesian_prod_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cartesian_prod_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cartesian_prod_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cat_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cdist_mlu_float32", #TODO(PYTORCH-8665): cdist only supports p=1 now.
"test_meta_py_TestMetaMLU_test_dispatch_meta_ceil_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ceil_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ceil_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ceil_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ceil_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_chalf_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_chalf_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_chalf_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_chalf_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_chalf_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_chalf_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_chalf_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_chalf_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_chalf_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_chalf_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_char_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_char_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_char_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_char_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_char_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_char_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_char_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_char_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_char_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_char_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cholesky_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cholesky_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cholesky_inverse_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cholesky_inverse_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cholesky_solve_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cholesky_solve_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_clamp_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_clamp_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_clamp_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_clamp_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_clamp_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_clamp_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_clamp_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_clamp_max_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_clamp_min_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_clone_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_clone_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_column_stack_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_column_stack_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_column_stack_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_column_stack_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_column_stack_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_column_stack_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_column_stack_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_column_stack_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_column_stack_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_column_stack_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_combinations_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_combinations_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_combinations_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_combinations_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_combinations_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_combinations_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_combinations_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_combinations_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_combinations_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_complex_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_complex_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_conj_physical_mlu_bfloat16",  # TODO(PYTORCH-10338)
"test_meta_py_TestMetaMLU_test_dispatch_meta_constant_pad_nd_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_constant_pad_nd_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_contiguous_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_copysign_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_copysign_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_copysign_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_copysign_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_copysign_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_copysign_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_copysign_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_copysign_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_corrcoef_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_corrcoef_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_corrcoef_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_corrcoef_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_corrcoef_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_corrcoef_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_corrcoef_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_corrcoef_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cos_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cos_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cos_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cos_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cos_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cos_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cos_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cos_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cos_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cos_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cosh_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cosh_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cosh_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cosh_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cosh_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cosh_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cosh_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cosh_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cosh_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cosh_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_count_nonzero_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_count_nonzero_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_count_nonzero_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_count_nonzero_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_count_nonzero_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_count_nonzero_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_count_nonzero_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_count_nonzero_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_count_nonzero_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cov_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cov_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cov_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cov_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cov_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cov_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cov_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cov_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cross_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cross_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cross_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cross_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cross_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cross_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cross_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cummax_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cummax_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cummax_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cummax_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cummax_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cummax_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cummax_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cummax_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cumprod_mlu_bfloat16", # cumprod op does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_cumprod_mlu_complex64", # cumprod op does not support complex64 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_cumprod_mlu_uint8", # cumprod op does not support uint8 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_cummin_mlu_bfloat16", # cummin does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_cumsum_mlu_bfloat16", # cumsum op does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_cumsum_mlu_complex64", # cumsum op does not support complex64 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_cumsum_mlu_uint8", # cumsum op does not support uint8 output on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_cumulative_trapezoid_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cumulative_trapezoid_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cumulative_trapezoid_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cumulative_trapezoid_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cumulative_trapezoid_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cumulative_trapezoid_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cumulative_trapezoid_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_cumulative_trapezoid_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_deg2rad_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_deg2rad_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_deg2rad_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_deg2rad_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_deg2rad_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_deg2rad_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_deg2rad_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_deg2rad_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_diag_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_diag_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_diag_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_diag_embed_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_diag_embed_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_diag_embed_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_diagflat_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_diagflat_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_diagonal_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_diagonal_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_diagonal_scatter_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_diff_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_diff_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_diff_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_diff_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_diff_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_diff_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_diff_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_diff_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_diff_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_digamma_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_digamma_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_digamma_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_digamma_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_digamma_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_digamma_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_digamma_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_dist_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_dist_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_dist_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_dist_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_div_floor_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_meta_py_TestMetaMLU_test_dispatch_meta_div_no_rounding_mode_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_meta_py_TestMetaMLU_test_dispatch_meta_div_no_rounding_mode_mlu_complex32", # TODO(PYTORCH-8724): div not support complex dtypes
"test_meta_py_TestMetaMLU_test_dispatch_meta_div_no_rounding_mode_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_meta_py_TestMetaMLU_test_dispatch_meta_div_trunc_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_meta_py_TestMetaMLU_test_dispatch_meta_dot_mlu_bfloat16",  # TODO(PYTORCH-8807): MLU dot don't support tensor dtype Bfloat16.
"test_meta_py_TestMetaMLU_test_dispatch_meta_dot_mlu_complex64",  # TODO(PYTORCH-8807): MLU dot don't support tensor dtype ComplexFloat.
"test_meta_py_TestMetaMLU_test_dispatch_meta_double_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_double_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_double_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_double_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_double_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_double_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_double_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_double_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_double_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_double_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_dsplit_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_dsplit_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_dsplit_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_dsplit_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_dsplit_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_dsplit_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_dsplit_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_dsplit_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_dsplit_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_dsplit_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_dstack_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_dstack_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_dstack_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_dstack_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_dstack_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_dstack_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_dstack_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_dstack_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_dstack_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_dstack_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_einsum_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_einsum_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_einsum_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_einsum_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_empty_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_empty_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_empty_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_empty_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_empty_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_empty_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_empty_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_empty_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_empty_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_empty_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_empty_like_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_empty_like_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_empty_like_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_empty_like_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_empty_like_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_empty_like_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_empty_like_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_empty_like_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_empty_like_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_empty_like_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_eq_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_eq_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_eq_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_equal_mlu_bfloat16", # TODO(PYTORCH-8756): eq not support
"test_meta_py_TestMetaMLU_test_dispatch_meta_equal_mlu_complex64", # TODO(PYTORCH-8756)
"test_meta_py_TestMetaMLU_test_dispatch_meta_erf_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_erfc_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_erfc_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_erfc_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_erfc_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_erfc_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_erfc_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_erfc_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_erfc_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_exp2_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_exp2_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_exp2_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_exp2_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_exp2_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_exp2_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_exp2_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_exp2_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_exp_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_exp_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_exp_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_expm1_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_eye_mlu_complex64",  # TODO(PYTORCH-8910): MLU eye don't support tensor dtype ComplexFloat.
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fft2_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fft2_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fft2_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fft2_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fft2_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fft2_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fft2_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fft2_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fft2_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fft_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fft_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fft_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fft_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fft_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fft_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fft_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fft_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fft_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fftn_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fftn_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fftn_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fftn_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fftn_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fftn_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fftn_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fftn_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fftn_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fftshift_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fftshift_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fftshift_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fftshift_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fftshift_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fftshift_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fftshift_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fftshift_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fftshift_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_fftshift_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_hfft2_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_hfft2_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_hfft2_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_hfft2_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_hfft2_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_hfft2_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_hfft2_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_hfft2_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_hfft2_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_hfft_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_hfft_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_hfft_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_hfft_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_hfft_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_hfft_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_hfft_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_hfft_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_hfft_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_hfftn_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_hfftn_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_hfftn_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_hfftn_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_hfftn_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_hfftn_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_hfftn_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_hfftn_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_hfftn_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifft2_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifft2_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifft2_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifft2_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifft2_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifft2_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifft2_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifft2_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifft2_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifft_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifft_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifft_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifft_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifft_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifft_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifft_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifft_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifft_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifftn_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifftn_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifftn_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifftn_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifftn_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifftn_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifftn_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifftn_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifftn_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifftshift_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifftshift_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifftshift_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifftshift_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifftshift_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifftshift_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifftshift_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifftshift_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifftshift_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ifftshift_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ihfft2_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ihfft2_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ihfft2_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ihfft2_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ihfft2_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ihfft2_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ihfft2_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ihfft_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ihfft_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ihfft_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ihfft_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ihfft_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ihfft_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ihfft_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ihfftn_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ihfftn_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ihfftn_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ihfftn_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ihfftn_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ihfftn_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_ihfftn_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_irfft2_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_irfft2_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_irfft2_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_irfft2_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_irfft2_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_irfft2_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_irfft2_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_irfft2_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_irfft2_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_irfft_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_irfft_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_irfft_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_irfft_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_irfft_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_irfft_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_irfft_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_irfft_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_irfft_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_irfftn_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_irfftn_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_irfftn_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_irfftn_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_irfftn_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_irfftn_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_irfftn_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_irfftn_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_irfftn_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_rfft2_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_rfft2_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_rfft2_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_rfft2_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_rfft2_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_rfft2_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_rfft2_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_rfft_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_rfft_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_rfft_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_rfft_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_rfft_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_rfft_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_rfft_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_rfftn_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_rfftn_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_rfftn_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_rfftn_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_rfftn_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_rfftn_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fft_rfftn_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fill_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fill_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fill_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_flatten_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_flatten_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_flatten_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_flatten_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_flatten_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_flatten_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_flatten_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_flatten_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_flatten_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_flatten_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_flip_mlu_bfloat16", # TODO(PYTORCH-8802): flip not support bf16
"test_meta_py_TestMetaMLU_test_dispatch_meta_flip_mlu_complex64", # TODO(PYTORCH-8802): flip not support complex dtypes
"test_meta_py_TestMetaMLU_test_dispatch_meta_fliplr_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fliplr_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fliplr_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fliplr_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fliplr_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fliplr_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fliplr_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fliplr_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fliplr_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_flipud_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_flipud_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_flipud_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_flipud_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_flipud_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_flipud_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_flipud_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_flipud_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_flipud_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_float_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_float_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_float_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_float_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_float_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_float_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_float_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_float_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_float_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_float_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_float_power_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_float_power_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_float_power_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_float_power_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_float_power_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_float_power_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_float_power_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_float_power_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_float_power_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_floor_mlu_bfloat16", # TODO(PYTORCH-8724): floor not support bf16
"test_meta_py_TestMetaMLU_test_dispatch_meta_floor_mlu_int16", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_meta_py_TestMetaMLU_test_dispatch_meta_floor_mlu_int32", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_meta_py_TestMetaMLU_test_dispatch_meta_floor_mlu_int8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_meta_py_TestMetaMLU_test_dispatch_meta_floor_mlu_uint8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_meta_py_TestMetaMLU_test_dispatch_meta_floor_divide_mlu_bfloat16", # TODO(PYTORCH-8724): floor divide not support bf16
"test_meta_py_TestMetaMLU_test_dispatch_meta_fmax_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fmax_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fmax_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fmax_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fmax_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fmax_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fmax_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fmax_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fmin_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fmin_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fmin_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fmin_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fmin_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fmin_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fmin_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fmin_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_fmod_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_frac_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_frexp_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_frexp_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_full_like_mlu_bfloat16", # TODO(PYTORCH-8738)
"test_meta_py_TestMetaMLU_test_dispatch_meta_full_like_mlu_complex64", # TODO(PYTORCH-8738)
"test_meta_py_TestMetaMLU_test_dispatch_meta_gather_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_gather_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_gcd_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_gcd_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_gcd_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_gcd_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ge_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_geqrf_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_geqrf_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_gradient_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_gradient_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_gradient_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_gradient_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_gradient_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_gradient_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_gradient_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_gt_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_half_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_half_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_half_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_half_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_half_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_half_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_half_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_half_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_half_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_heaviside_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_heaviside_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_heaviside_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_heaviside_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_heaviside_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_heaviside_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_heaviside_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_heaviside_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_histc_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_histc_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_histc_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_histc_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_hsplit_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_hsplit_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_hsplit_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_hsplit_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_hsplit_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_hsplit_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_hsplit_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_hsplit_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_hsplit_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_hsplit_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_hstack_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_hstack_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_hstack_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_hstack_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_hstack_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_hstack_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_hstack_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_hstack_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_hstack_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_hstack_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_hypot_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_hypot_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_hypot_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_i0_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_i0_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_i0_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_i0_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_i0_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_i0_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_i0_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_i0_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_igamma_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_igammac_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_imag_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_imag_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_index_add_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_index_add_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_index_add_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_index_add_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_index_add_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_index_add_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_index_copy_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_index_copy_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_index_fill_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_index_fill_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_index_put_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_index_put_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_index_put_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_index_put_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_index_reduce_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_index_reduce_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_index_reduce_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_index_reduce_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_index_reduce_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_index_reduce_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_index_reduce_mlu_uint8",
# TODO(PYTORCH-9186): bfloat16 and complex64 is not support.
"test_meta_py_TestMetaMLU_test_dispatch_meta_index_select_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_index_select_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_inner_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_inner_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_inner_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_inner_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_int_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_int_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_int_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_int_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_int_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_int_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_int_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_int_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_int_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isclose_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isclose_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isclose_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isclose_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isclose_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isclose_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isclose_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isclose_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isclose_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isfinite_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isin_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isin_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isin_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isin_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isin_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isin_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isinf_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isinf_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isinf_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isinf_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isinf_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isinf_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isinf_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isinf_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isinf_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isinf_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isnan_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isnan_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isneginf_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isneginf_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isneginf_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isneginf_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isneginf_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isneginf_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isneginf_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isneginf_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isposinf_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isposinf_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isposinf_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isposinf_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isposinf_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isposinf_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isposinf_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isposinf_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isreal_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isreal_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isreal_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isreal_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isreal_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isreal_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isreal_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isreal_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isreal_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_isreal_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_istft_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_istft_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_2inputs_2outputs_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_2inputs_2outputs_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_2inputs_2outputs_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_2inputs_2outputs_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_2inputs_2outputs_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_2inputs_2outputs_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_2inputs_2outputs_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_2inputs_2outputs_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_2inputs_2outputs_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_4inputs_with_extra_args_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_4inputs_with_extra_args_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_4inputs_with_extra_args_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_4inputs_with_extra_args_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_4inputs_with_extra_args_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_4inputs_with_extra_args_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_4inputs_with_extra_args_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_4inputs_with_extra_args_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_4inputs_with_extra_args_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_binary_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_binary_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_binary_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_binary_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_binary_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_binary_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_binary_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_binary_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_binary_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_binary_return_by_ref_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_binary_return_by_ref_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_binary_return_by_ref_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_binary_return_by_ref_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_binary_return_by_ref_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_binary_return_by_ref_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_binary_return_by_ref_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_binary_return_by_ref_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_binary_return_by_ref_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_unary_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_unary_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_unary_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_unary_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_unary_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_unary_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_unary_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_unary_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_jiterator_unary_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_kron_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_kron_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_kron_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_kron_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_kron_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_kron_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_kron_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_kron_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_kron_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_kthvalue_mlu_int16",  # TODO(PYTORCH-10249): MLU kthvalue don't support tensor dtype Short.
"test_meta_py_TestMetaMLU_test_dispatch_meta_kthvalue_mlu_int32",  # TODO(PYTORCH-10249): MLU kthvalue don't support tensor dtype Int.
"test_meta_py_TestMetaMLU_test_dispatch_meta_kthvalue_mlu_int8",  # TODO(PYTORCH-10249): MLU kthvalue don't support tensor dtype Char.
"test_meta_py_TestMetaMLU_test_dispatch_meta_kthvalue_mlu_uint8",  # TODO(PYTORCH-10249): MLU kthvalue don't support tensor dtype Byte.
"test_meta_py_TestMetaMLU_test_dispatch_meta_lcm_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_lcm_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_lcm_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_lcm_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ldexp_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ldexp_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ldexp_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ldexp_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ldexp_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ldexp_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ldexp_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ldexp_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ldexp_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_le_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_lerp_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_lerp_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_lerp_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_lerp_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_lgamma_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_lgamma_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_lgamma_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_lgamma_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_lgamma_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_lgamma_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_lgamma_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_cholesky_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_cholesky_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_cholesky_ex_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_cholesky_ex_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_cond_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_cond_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_cross_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_cross_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_cross_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_cross_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_cross_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_cross_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_cross_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_det_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_det_singular_mlu_complex64",# TODO(PYTORCH-9646): mlu not support lu_factor now.
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_det_singular_mlu_float32",# TODO(PYTORCH-9646): mlu not support lu_factor now.
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_eig_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_eig_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_eigh_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_eigh_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_eigvals_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_eigvals_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_eigvalsh_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_eigvalsh_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_householder_product_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_householder_product_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_inv_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_inv_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_inv_ex_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_inv_ex_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_ldl_factor_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_ldl_factor_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_ldl_factor_ex_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_ldl_factor_ex_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_ldl_solve_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_ldl_solve_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_lstsq_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_lstsq_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_lstsq_grad_oriented_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_lstsq_grad_oriented_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_lu_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_lu_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_lu_factor_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_lu_factor_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_lu_factor_ex_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_lu_factor_ex_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_lu_solve_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_lu_solve_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_matrix_norm_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_matrix_norm_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_matrix_norm_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_matrix_norm_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_matrix_power_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_matrix_power_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_matrix_rank_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_matrix_rank_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_matrix_rank_hermitian_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_matrix_rank_hermitian_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_multi_dot_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_multi_dot_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_multi_dot_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_multi_dot_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_norm_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_norm_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_norm_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_norm_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_norm_subgradients_at_zero_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_norm_subgradients_at_zero_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_norm_subgradients_at_zero_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_norm_subgradients_at_zero_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_pinv_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_pinv_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_pinv_hermitian_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_pinv_hermitian_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_pinv_singular_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_pinv_singular_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_qr_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_qr_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_slogdet_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_solve_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_solve_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_solve_ex_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_solve_ex_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_solve_triangular_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_solve_triangular_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_svd_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_svdvals_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_svdvals_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_tensorinv_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_tensorinv_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_tensorsolve_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_tensorsolve_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_vander_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_vander_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_vander_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_vander_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_vander_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_vander_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_vecdot_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_vecdot_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_vecdot_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_vecdot_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_vector_norm_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_vector_norm_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_vector_norm_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linalg_vector_norm_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linspace_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linspace_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linspace_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linspace_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_linspace_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_log10_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_log10_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_log1p_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_log2_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_log2_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_log_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_log_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_log_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_log_softmax_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_log_softmax_dtype_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_log_softmax_dtype_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_log_softmax_dtype_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_log_softmax_dtype_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logaddexp2_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logaddexp2_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logaddexp_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logaddexp_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logcumsumexp_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logcumsumexp_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logcumsumexp_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logdet_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logdet_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logical_and_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logical_and_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logical_not_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logical_not_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logical_or_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logical_or_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logical_xor_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logical_xor_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logit_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logit_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logit_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logit_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logit_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logit_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logit_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logit_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logspace_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logspace_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logspace_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logspace_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logspace_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logspace_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logspace_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logspace_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logsumexp_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logsumexp_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logsumexp_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logsumexp_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logsumexp_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logsumexp_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logsumexp_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_logsumexp_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_long_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_long_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_long_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_long_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_long_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_long_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_long_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_long_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_long_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_long_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_lt_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_lu_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_lu_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_lu_solve_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_lu_solve_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_lu_unpack_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_lu_unpack_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mH_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mH_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mH_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mH_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mH_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mH_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mH_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mH_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mH_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mH_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mT_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mT_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mT_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mT_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mT_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mT_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mT_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mT_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mT_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mT_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_amax_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_amax_mlu_uint8", # cnnlSelectV2 not support uint8
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_amin_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_amin_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_amin_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_amin_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_amin_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_amin_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_amin_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_argmax_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_argmax_mlu_uint8", # cnnlSelectV2 not support uint8
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_argmin_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_argmin_mlu_uint8", # cnnlSelectV2 not support uint8
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_cumprod_mlu_bfloat16", # cumprod op does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_cumprod_mlu_bool", # where op does not support bool on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_cumprod_mlu_complex64", # cumprod op does not support complex64 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_cumprod_mlu_uint8", # cumprod does op not support uint8 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_cumsum_mlu_bfloat16", # cumsum op does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_cumsum_mlu_complex64", # cumsum op does not support complex64 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_cumsum_mlu_uint8", # where op does not support uint8 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_fill_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_fill_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_fill_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_fill_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_log_softmax_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_logaddexp_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_logaddexp_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_logsumexp_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_logsumexp_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_logsumexp_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_logsumexp_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_logsumexp_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_logsumexp_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_logsumexp_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_mean_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_mean_mlu_bool", # PYTORCH-10149
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_mean_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_mean_mlu_uint8", # PYTORCH-10149
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_median_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_median_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_norm_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_normalize_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_normalize_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_normalize_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_normalize_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_prod_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_prod_mlu_bool", # PYTORCH-10149
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_prod_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_prod_mlu_uint8", # PYTORCH-10149
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_scatter_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_scatter_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_scatter_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_scatter_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_scatter_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_scatter_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_scatter_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_select_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_select_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_softmax_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_softmin_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_softmin_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_softmin_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_std_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_std_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_std_mlu_uint8", # PYTORCH-10149
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_sum_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_sum_mlu_bool", # PYTORCH-10149
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_sum_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_sum_mlu_uint8", # PYTORCH-10149
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_var_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_var_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_masked_var_mlu_uint8", # PYTORCH-10149
"test_meta_py_TestMetaMLU_test_dispatch_meta_matmul_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_matmul_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_matmul_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_matmul_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_matrix_exp_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_matrix_exp_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_matrix_exp_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_matrix_exp_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_max_binary_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_max_reduction_no_dim_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_max_reduction_with_dim_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_max_reduction_with_dim_mlu_bool", # PYTORCH-8734
"test_meta_py_TestMetaMLU_test_dispatch_meta_max_reduction_with_dim_mlu_int16", # PYTORCH-8734
"test_meta_py_TestMetaMLU_test_dispatch_meta_max_reduction_with_dim_mlu_int8", # PYTORCH-8734
"test_meta_py_TestMetaMLU_test_dispatch_meta_max_reduction_with_dim_mlu_uint8", # PYTORCH-8734
"test_meta_py_TestMetaMLU_test_dispatch_meta_maximum_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mean_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mean_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_median_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_median_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_median_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_median_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_meshgrid_list_of_tensors_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_meshgrid_list_of_tensors_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_meshgrid_list_of_tensors_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_meshgrid_list_of_tensors_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_meshgrid_list_of_tensors_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_meshgrid_list_of_tensors_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_meshgrid_list_of_tensors_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_meshgrid_list_of_tensors_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_meshgrid_list_of_tensors_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_meshgrid_variadic_tensors_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_meshgrid_variadic_tensors_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_meshgrid_variadic_tensors_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_meshgrid_variadic_tensors_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_meshgrid_variadic_tensors_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_meshgrid_variadic_tensors_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_meshgrid_variadic_tensors_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_meshgrid_variadic_tensors_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_meshgrid_variadic_tensors_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_min_binary_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_min_reduction_no_dim_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_min_reduction_with_dim_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_min_reduction_with_dim_mlu_bool", # cnnl min not support bool with dim
"test_meta_py_TestMetaMLU_test_dispatch_meta_min_reduction_with_dim_mlu_int16",# cnnl min not support int16 with dim
"test_meta_py_TestMetaMLU_test_dispatch_meta_min_reduction_with_dim_mlu_int8",# cnnl min not support int8 with dim
"test_meta_py_TestMetaMLU_test_dispatch_meta_min_reduction_with_dim_mlu_uint8",# cnnl min not support uint8 with dim
"test_meta_py_TestMetaMLU_test_dispatch_meta_minimum_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mm_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mode_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mode_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mode_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mode_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mode_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mode_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mode_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mode_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_movedim_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_movedim_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_movedim_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_movedim_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_movedim_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_movedim_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_movedim_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_movedim_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_movedim_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_movedim_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_msort_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_msort_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_msort_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_msort_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_msort_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_msort_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_msort_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mv_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mv_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mvlgamma_mvlgamma_p_1_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mvlgamma_mvlgamma_p_1_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mvlgamma_mvlgamma_p_1_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mvlgamma_mvlgamma_p_1_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mvlgamma_mvlgamma_p_1_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mvlgamma_mvlgamma_p_1_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mvlgamma_mvlgamma_p_3_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mvlgamma_mvlgamma_p_3_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mvlgamma_mvlgamma_p_3_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mvlgamma_mvlgamma_p_3_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mvlgamma_mvlgamma_p_3_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mvlgamma_mvlgamma_p_3_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mvlgamma_mvlgamma_p_5_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mvlgamma_mvlgamma_p_5_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mvlgamma_mvlgamma_p_5_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mvlgamma_mvlgamma_p_5_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mvlgamma_mvlgamma_p_5_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_mvlgamma_mvlgamma_p_5_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nan_to_num_mlu_bfloat16", # TODO(PYTORCH-10157)
"test_meta_py_TestMetaMLU_test_dispatch_meta_nanmean_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nanmean_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nanmean_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nanmedian_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nanmedian_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nanmedian_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nanmedian_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nanmedian_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nanmedian_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nanquantile_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nansum_mlu_bfloat16", # only support on MLU500 series
"test_meta_py_TestMetaMLU_test_dispatch_meta_narrow_copy_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_narrow_copy_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_narrow_copy_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_narrow_copy_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_narrow_copy_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_narrow_copy_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_narrow_copy_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_narrow_copy_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_narrow_copy_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_narrow_copy_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_native_layer_norm_mlu_bfloat16", # TODO(PYTORCH-10252)
"test_meta_py_TestMetaMLU_test_dispatch_meta_native_batch_norm_mlu_bfloat16",    # Currently do not support BFloat16.
"test_meta_py_TestMetaMLU_test_dispatch_meta_ne_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ne_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_neg_mlu_bfloat16",   #MLU neg not support bfloat16
"test_meta_py_TestMetaMLU_test_dispatch_meta_neg_mlu_complex32",   #MLU neg not support chalf
"test_meta_py_TestMetaMLU_test_dispatch_meta_neg_mlu_complex64",    #MLU neg not support cfloat
"test_meta_py_TestMetaMLU_test_dispatch_meta_neg_mlu_int16",     #MLU neg not support int16
"test_meta_py_TestMetaMLU_test_dispatch_meta_neg_mlu_int8",     #MLU neg not support int8
"test_meta_py_TestMetaMLU_test_dispatch_meta_neg_mlu_uint8",     #MLU neg not support unint8
"test_meta_py_TestMetaMLU_test_dispatch_meta_new_empty_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_new_empty_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_new_empty_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_new_empty_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_new_empty_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_new_empty_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_new_empty_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_new_empty_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_new_empty_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_new_empty_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_new_full_mlu_bfloat16", # TODO(PYTORCH-8738)
"test_meta_py_TestMetaMLU_test_dispatch_meta_new_full_mlu_complex32", # TODO(PYTORCH-8738)
"test_meta_py_TestMetaMLU_test_dispatch_meta_new_full_mlu_complex64", # TODO(PYTORCH-8738)
"test_meta_py_TestMetaMLU_test_dispatch_meta_new_ones_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_new_ones_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_new_ones_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_new_zeros_mlu_bfloat16", # zeros op does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_new_zeros_mlu_complex32", # zeros op does not support complex32 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_new_zeros_mlu_complex64", # zeros op does not support complex64 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_nextafter_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nextafter_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional__scaled_dot_product_attention_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional__scaled_dot_product_attention_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional__scaled_dot_product_attention_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_adaptive_avg_pool1d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_adaptive_avg_pool2d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_adaptive_avg_pool3d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_adaptive_max_pool1d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_adaptive_max_pool2d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_adaptive_max_pool3d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_adaptive_max_pool3d_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_adaptive_max_pool3d_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_avg_pool1d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_avg_pool2d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_avg_pool2d_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_avg_pool2d_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_avg_pool3d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_avg_pool3d_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_avg_pool3d_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_batch_norm_mlu_bfloat16",    # Currently do not support BFloat16.
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_bilinear_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_bilinear_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_bilinear_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_binary_cross_entropy_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_binary_cross_entropy_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_binary_cross_entropy_with_logits_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_celu_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_celu_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_celu_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_cosine_embedding_loss_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_cosine_embedding_loss_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_cosine_embedding_loss_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_cosine_embedding_loss_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_cosine_embedding_loss_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_cosine_embedding_loss_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_cosine_embedding_loss_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_cosine_embedding_loss_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_cosine_similarity_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_cosine_similarity_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_cosine_similarity_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_cross_entropy_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_cross_entropy_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_cross_entropy_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_ctc_loss_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_dropout2d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_dropout3d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_dropout_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_elu_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_embedding_bag_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_embedding_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_feature_alpha_dropout_with_train_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_feature_alpha_dropout_without_train_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_fractional_max_pool2d_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_fractional_max_pool2d_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_fractional_max_pool3d_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_fractional_max_pool3d_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_gaussian_nll_loss_mlu_bfloat16", # [PYTORCH-10153] MLU lt does not support tensor dtype BFloat16.
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_gelu_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_glu_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_grid_sample_mlu_float16", # TODO(PYTORCH-10134)
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_grid_sample_mlu_float32", # TODO(PYTORCH-10134)
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_group_norm_mlu_bfloat16", # TODO(PYTORCH-9186): bfloat16 is not support.
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_group_norm_mlu_float16", # TODO(PYTORCH-9458): group_norm unsupport eps<0.
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_group_norm_mlu_float32", # TODO(PYTORCH-9458): group_norm unsupport eps<0.
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_hardshrink_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_hardshrink_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_hardshrink_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_hardsigmoid_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_hardswish_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_hardtanh_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_hardtanh_mlu_float16",# [PYTORCH-9208]: [cnnlClip]Parameter min must be less than max
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_hardtanh_mlu_float32",# [PYTORCH-9208]: [cnnlClip]Parameter min must be less than max
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_hinge_embedding_loss_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_hinge_embedding_loss_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_hinge_embedding_loss_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_huber_loss_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_huber_loss_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_huber_loss_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_instance_norm_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_instance_norm_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_instance_norm_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_interpolate_area_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_interpolate_nearest_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_kl_div_mlu_bfloat16", # TODO(PYTORCH-10269): mlu kl_div not support bf16
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_l1_loss_mlu_bfloat16", # l1_loss op does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_l1_loss_mlu_complex64", # l1_loss op does not support complex64 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_layer_norm_mlu_bfloat16", # TODO(PYTORCH-10252)
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_leaky_relu_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_linear_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_local_response_norm_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_logsigmoid_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_logsigmoid_mlu_float16", # unexpected success
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_logsigmoid_mlu_float32", # unexpected success
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_margin_ranking_loss_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_margin_ranking_loss_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_margin_ranking_loss_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_margin_ranking_loss_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_margin_ranking_loss_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_margin_ranking_loss_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_margin_ranking_loss_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_max_pool1d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_max_pool2d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_max_pool2d_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_max_pool2d_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_max_pool3d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_max_pool3d_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_max_pool3d_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_max_unpool1d_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_max_unpool1d_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_max_unpool1d_grad_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_max_unpool1d_grad_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_max_unpool2d_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_max_unpool2d_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_max_unpool2d_grad_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_max_unpool2d_grad_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_max_unpool3d_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_max_unpool3d_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_max_unpool3d_grad_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_max_unpool3d_grad_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_mish_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_mish_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_mish_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_mse_loss_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_multi_margin_loss_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_multi_margin_loss_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_multi_margin_loss_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_multilabel_margin_loss_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_multilabel_margin_loss_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_multilabel_margin_loss_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_multilabel_soft_margin_loss_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_multilabel_soft_margin_loss_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_multilabel_soft_margin_loss_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_nll_loss_mlu_bfloat16", # [PYTOCH-10151] nll loss does not support tensor dtype BFloat16.
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_normalize_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_normalize_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_normalize_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_normalize_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pad_circular_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pad_circular_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pad_circular_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pad_circular_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pad_circular_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pad_circular_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pad_circular_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pad_circular_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pad_circular_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pad_constant_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pad_constant_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pad_constant_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pad_constant_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pad_constant_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pad_constant_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pad_constant_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pad_constant_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pad_constant_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pad_reflect_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pad_reflect_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pad_reflect_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pad_reflect_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pad_replicate_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pad_replicate_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pad_replicate_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pairwise_distance_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pairwise_distance_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pairwise_distance_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pairwise_distance_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pairwise_distance_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pairwise_distance_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pairwise_distance_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pairwise_distance_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pdist_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pixel_shuffle_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pixel_shuffle_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pixel_shuffle_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pixel_shuffle_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pixel_shuffle_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pixel_shuffle_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pixel_shuffle_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pixel_shuffle_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pixel_shuffle_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pixel_unshuffle_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pixel_unshuffle_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pixel_unshuffle_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pixel_unshuffle_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pixel_unshuffle_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pixel_unshuffle_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pixel_unshuffle_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pixel_unshuffle_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_pixel_unshuffle_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_poisson_nll_loss_mlu_bfloat16", # [PYTOCH-8789] MLU abs don't support tensor dtype BFloat16.
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_poisson_nll_loss_mlu_int16", # [PYTOCH-8789] MLU abs don't support tensor dtype Short.
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_poisson_nll_loss_mlu_int8", # [PYTOCH-8789] MLU abs don't support tensor dtype Char.
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_poisson_nll_loss_mlu_uint8", # [PYTOCH-8789] MLU abs don't support tensor dtype Byte.
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_prelu_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_prelu_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_relu6_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_relu6_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_relu6_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_relu6_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_relu6_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_relu6_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_relu6_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_relu_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_rrelu_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_selu_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_silu_mlu_bfloat16",     #dtype not support
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_soft_margin_loss_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_soft_margin_loss_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_soft_margin_loss_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_softmin_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_softmin_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_softmin_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_softmin_with_dtype_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_softmin_with_dtype_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_softmin_with_dtype_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_softmin_with_dtype_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_softmin_with_dtype_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_softmin_with_dtype_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_softmin_with_dtype_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_softmin_with_dtype_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_softplus_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_softshrink_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_softshrink_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_softshrink_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_softsign_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_softsign_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_softsign_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_softsign_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_softsign_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_softsign_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_softsign_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_softsign_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_softsign_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_tanhshrink_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_tanhshrink_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_tanhshrink_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_tanhshrink_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_tanhshrink_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_tanhshrink_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_tanhshrink_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_tanhshrink_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_threshold_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_triplet_margin_loss_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_triplet_margin_loss_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_triplet_margin_loss_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_triplet_margin_loss_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_triplet_margin_loss_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_triplet_margin_loss_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_triplet_margin_loss_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_triplet_margin_loss_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_triplet_margin_with_distance_loss_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_triplet_margin_with_distance_loss_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_triplet_margin_with_distance_loss_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_triplet_margin_with_distance_loss_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_triplet_margin_with_distance_loss_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_triplet_margin_with_distance_loss_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_triplet_margin_with_distance_loss_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_triplet_margin_with_distance_loss_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_unfold_mlu_bfloat16",  # TODO(PYTORCH-8763): MLU nn_unfold don't support tensor dtype Bfloat16.
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_unfold_mlu_complex64",  # TODO(PYTORCH-8763): MLU nn_unfold don't support tensor dtype ComplexFloat.
"test_meta_py_TestMetaMLU_test_dispatch_meta_nn_functional_upsample_nearest_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nonzero_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nonzero_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_nonzero_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_norm_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_norm_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_norm_mlu_float16", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_meta_py_TestMetaMLU_test_dispatch_meta_norm_mlu_float32", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_meta_py_TestMetaMLU_test_dispatch_meta_norm_fro_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_norm_fro_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_norm_inf_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_norm_inf_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_norm_inf_mlu_float16", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_meta_py_TestMetaMLU_test_dispatch_meta_norm_inf_mlu_float32", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_meta_py_TestMetaMLU_test_dispatch_meta_norm_nuc_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_norm_nuc_mlu_float16",# cnnlsvd not support float16
"test_meta_py_TestMetaMLU_test_dispatch_meta_normal_mlu_bfloat16", # TODO(PYTORCH-10242)
"test_meta_py_TestMetaMLU_test_dispatch_meta_normal_number_mean_mlu_bfloat16", # TODO(PYTORCH-10242)
"test_meta_py_TestMetaMLU_test_dispatch_meta_ones_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ones_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ones_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ones_like_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ones_like_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ones_like_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ormqr_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ormqr_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_outer_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_pca_lowrank_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_pinverse_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_pinverse_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polar_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_0_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_0_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_0_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_0_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_0_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_0_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_0_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_1_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_1_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_1_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_1_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_1_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_1_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_1_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_2_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_2_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_2_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_2_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_2_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_2_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_2_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_3_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_3_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_3_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_3_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_3_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_3_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_3_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_4_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_4_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_4_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_4_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_4_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_4_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_polygamma_polygamma_n_4_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_positive_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_positive_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_positive_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_positive_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_positive_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_positive_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_positive_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_positive_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_positive_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_pow_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_pow_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_pow_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_pow_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_pow_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_pow_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_pow_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_prod_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_prod_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_prod_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_put_mlu_bfloat16", # put op does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_put_mlu_bool", # when accumulate is true, put op does not support bool
"test_meta_py_TestMetaMLU_test_dispatch_meta_put_mlu_complex64", # put op does not support complex64 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_qr_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_quantile_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_rad2deg_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_rad2deg_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_rad2deg_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_rad2deg_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_rad2deg_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_rad2deg_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_rad2deg_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_rad2deg_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_rand_like_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_rand_like_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_rand_like_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_rand_like_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_rand_like_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_randint_like_mlu_bfloat16", # TODO(PYTORCH-10273): "random_" not implemented for 'BFloat16'
"test_meta_py_TestMetaMLU_test_dispatch_meta_randint_like_mlu_int16", # TODO(PYTORCH-10273)
"test_meta_py_TestMetaMLU_test_dispatch_meta_randint_like_mlu_int8", # TODO(PYTORCH-10273)
"test_meta_py_TestMetaMLU_test_dispatch_meta_randint_like_mlu_uint8", # TODO(PYTORCH-10273)
"test_meta_py_TestMetaMLU_test_dispatch_meta_randn_mlu_bfloat16", # TODO(PYTORCH-10321)
"test_meta_py_TestMetaMLU_test_dispatch_meta_randn_mlu_complex32", # TODO(PYTORCH-10321)
"test_meta_py_TestMetaMLU_test_dispatch_meta_randn_like_mlu_bfloat16", # TODO(PYTORCH-10321)
"test_meta_py_TestMetaMLU_test_dispatch_meta_randn_like_mlu_complex32", # TODO(PYTORCH-10321)
"test_meta_py_TestMetaMLU_test_dispatch_meta_ravel_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ravel_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ravel_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ravel_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ravel_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ravel_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ravel_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ravel_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ravel_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_ravel_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_real_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_real_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_real_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_real_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_real_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_real_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_real_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_real_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_real_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_real_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_reciprocal_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_reciprocal_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_remainder_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_renorm_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_renorm_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_renorm_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_renorm_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_repeat_interleave_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_repeat_interleave_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_repeat_interleave_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_reshape_as_mlu_bfloat16", # BFloat16 is not supported by reshape_as on MLU
"test_meta_py_TestMetaMLU_test_dispatch_meta_reshape_mlu_bfloat16", # BFloat16 is not supported by reshape on MLU
"test_meta_py_TestMetaMLU_test_dispatch_meta_resize__mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_resize__mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_resize__mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_resize__mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_resize__mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_resize__mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_resize__mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_resize__mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_resize__mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_resize_as__mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_resize_as__mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_resize_as__mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_resize_as__mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_resize_as__mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_resize_as__mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_resize_as__mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_resize_as__mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_resize_as__mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_resolve_neg_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_resolve_neg_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_resolve_neg_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_resolve_neg_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_resolve_neg_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_resolve_neg_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_resolve_neg_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_resolve_neg_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_resolve_neg_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_resolve_neg_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_roll_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_roll_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_rot90_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_rot90_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_rot90_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_rot90_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_rot90_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_rot90_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_rot90_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_rot90_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_rot90_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_round_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_round_decimals_0_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_round_decimals_0_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_round_decimals_3_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_round_decimals_3_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_round_decimals_neg_3_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_round_decimals_neg_3_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_rsqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu rsqrt not support bf16 and complex dtypes
"test_meta_py_TestMetaMLU_test_dispatch_meta_rsqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu rsqrt not support bf16 and complex dtypes
"test_meta_py_TestMetaMLU_test_dispatch_meta_rsqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu rsqrt not support bf16 and complex dtypes
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_add_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_add_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_add_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_add_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_add_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_add_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_mlu_bool", # scatter_add not implemented for Bool
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_mlu_int16", # scatter_add not implemented for Short
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_mlu_int8", # scatter_add not implemented for Char
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_mlu_uint8", # scatter_add not implemented for Byte
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_amax_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_amax_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_amax_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_amax_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_amax_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_amax_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_amax_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_amin_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_amin_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_amin_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_amin_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_amin_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_amin_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_amin_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_mean_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_mean_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_mean_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_mean_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_mean_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_mean_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_mean_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_prod_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_prod_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_prod_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_prod_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_prod_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_prod_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_prod_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_sum_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_sum_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_sum_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_sum_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_scatter_reduce_sum_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_searchsorted_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_searchsorted_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_searchsorted_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_searchsorted_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_searchsorted_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_searchsorted_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_segment_reduce_lengths_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_segment_reduce_lengths_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_segment_reduce_lengths_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_segment_reduce_offsets_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_segment_reduce_offsets_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_segment_reduce_offsets_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_select_scatter_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_select_scatter_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_select_scatter_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_select_scatter_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_select_scatter_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_select_scatter_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_select_scatter_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_select_scatter_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sgn_mlu_bfloat16", # TODO(PYTORCH-8948)
"test_meta_py_TestMetaMLU_test_dispatch_meta_sgn_mlu_bool", # TODO(PYTORCH-8948)
"test_meta_py_TestMetaMLU_test_dispatch_meta_sgn_mlu_complex32", # TODO(PYTORCH-8948)
"test_meta_py_TestMetaMLU_test_dispatch_meta_sgn_mlu_int16", # TODO(PYTORCH-8948)
"test_meta_py_TestMetaMLU_test_dispatch_meta_sgn_mlu_int32", # TODO(PYTORCH-8948)
"test_meta_py_TestMetaMLU_test_dispatch_meta_sgn_mlu_int8", # TODO(PYTORCH-8948)
"test_meta_py_TestMetaMLU_test_dispatch_meta_sgn_mlu_uint8", # TODO(PYTORCH-8948)
"test_meta_py_TestMetaMLU_test_dispatch_meta_short_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_short_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_short_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_short_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_short_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_short_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_short_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_short_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_short_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sigmoid_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sigmoid_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sign_mlu_bfloat16", # TODO(PYTORCH-8947)
"test_meta_py_TestMetaMLU_test_dispatch_meta_sign_mlu_bool", # TODO(PYTORCH-8947)
"test_meta_py_TestMetaMLU_test_dispatch_meta_sign_mlu_int16", # TODO(PYTORCH-8947)
"test_meta_py_TestMetaMLU_test_dispatch_meta_sign_mlu_int32", # TODO(PYTORCH-8947)
"test_meta_py_TestMetaMLU_test_dispatch_meta_sign_mlu_int8", # TODO(PYTORCH-8947)
"test_meta_py_TestMetaMLU_test_dispatch_meta_sign_mlu_uint8", # TODO(PYTORCH-8947)
"test_meta_py_TestMetaMLU_test_dispatch_meta_signbit_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_signbit_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_signbit_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_signbit_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_signbit_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_signbit_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_signbit_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_signbit_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sin_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sin_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sin_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sin_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sin_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sin_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sin_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sin_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sin_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sin_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sinc_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sinc_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sinc_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sinc_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sinc_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sinc_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sinc_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sinc_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sinc_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sinh_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sinh_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sinh_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sinh_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sinh_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sinh_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sinh_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sinh_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sinh_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sinh_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_slice_mlu_bfloat16", # slice op does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_slice_scatter_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_softmax_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_softmax_with_dtype_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_softmax_with_dtype_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sort_mlu_bfloat16",  # TODO(PYTORCH-10347): MLU sort don't support tensor dtype Bfloat16.
"test_meta_py_TestMetaMLU_test_dispatch_meta_sparse_sampled_addmm_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sparse_sampled_addmm_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_airy_ai_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_airy_ai_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_airy_ai_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_airy_ai_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_airy_ai_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_airy_ai_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_bessel_j0_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_bessel_j0_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_bessel_j0_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_bessel_j0_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_bessel_j0_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_bessel_j0_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_bessel_j1_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_bessel_j1_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_bessel_j1_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_bessel_j1_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_bessel_j1_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_bessel_j1_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_bessel_y0_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_bessel_y0_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_bessel_y0_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_bessel_y0_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_bessel_y0_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_bessel_y0_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_bessel_y1_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_bessel_y1_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_bessel_y1_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_bessel_y1_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_bessel_y1_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_bessel_y1_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_chebyshev_polynomial_t_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_chebyshev_polynomial_t_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_chebyshev_polynomial_t_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_chebyshev_polynomial_t_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_chebyshev_polynomial_t_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_chebyshev_polynomial_t_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_chebyshev_polynomial_u_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_chebyshev_polynomial_u_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_chebyshev_polynomial_u_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_chebyshev_polynomial_u_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_chebyshev_polynomial_u_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_chebyshev_polynomial_u_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_chebyshev_polynomial_v_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_chebyshev_polynomial_v_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_chebyshev_polynomial_v_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_chebyshev_polynomial_v_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_chebyshev_polynomial_v_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_chebyshev_polynomial_v_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_chebyshev_polynomial_w_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_chebyshev_polynomial_w_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_chebyshev_polynomial_w_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_chebyshev_polynomial_w_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_chebyshev_polynomial_w_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_chebyshev_polynomial_w_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_entr_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_entr_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_entr_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_entr_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_entr_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_entr_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_entr_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_entr_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_erfcx_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_erfcx_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_erfcx_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_erfcx_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_erfcx_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_erfcx_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_hermite_polynomial_h_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_hermite_polynomial_h_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_hermite_polynomial_h_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_hermite_polynomial_h_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_hermite_polynomial_h_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_hermite_polynomial_h_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_hermite_polynomial_he_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_hermite_polynomial_he_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_hermite_polynomial_he_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_hermite_polynomial_he_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_hermite_polynomial_he_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_hermite_polynomial_he_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_i0e_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_i0e_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_i0e_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_i0e_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_i0e_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_i0e_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_i0e_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_i0e_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_i1_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_i1_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_i1_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_i1_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_i1_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_i1_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_i1e_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_i1e_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_i1e_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_i1e_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_i1e_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_i1e_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_laguerre_polynomial_l_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_laguerre_polynomial_l_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_laguerre_polynomial_l_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_laguerre_polynomial_l_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_laguerre_polynomial_l_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_laguerre_polynomial_l_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_legendre_polynomial_p_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_legendre_polynomial_p_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_legendre_polynomial_p_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_legendre_polynomial_p_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_legendre_polynomial_p_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_legendre_polynomial_p_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_log_ndtr_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_log_ndtr_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_log_ndtr_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_log_ndtr_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_log_ndtr_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_log_ndtr_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_modified_bessel_i0_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_modified_bessel_i0_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_modified_bessel_i0_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_modified_bessel_i0_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_modified_bessel_i0_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_modified_bessel_i0_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_modified_bessel_i1_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_modified_bessel_i1_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_modified_bessel_i1_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_modified_bessel_i1_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_modified_bessel_i1_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_modified_bessel_i1_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_modified_bessel_k0_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_modified_bessel_k0_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_modified_bessel_k0_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_modified_bessel_k0_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_modified_bessel_k0_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_modified_bessel_k0_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_modified_bessel_k1_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_modified_bessel_k1_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_modified_bessel_k1_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_modified_bessel_k1_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_modified_bessel_k1_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_modified_bessel_k1_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_ndtr_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_ndtr_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_ndtr_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_ndtr_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_ndtr_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_ndtr_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_ndtr_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_ndtr_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_ndtri_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_ndtri_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_ndtri_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_ndtri_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_ndtri_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_ndtri_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_polygamma_special_polygamma_n_0_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_polygamma_special_polygamma_n_0_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_polygamma_special_polygamma_n_0_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_polygamma_special_polygamma_n_0_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_polygamma_special_polygamma_n_0_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_polygamma_special_polygamma_n_0_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_polygamma_special_polygamma_n_0_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_scaled_modified_bessel_k0_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_scaled_modified_bessel_k0_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_scaled_modified_bessel_k0_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_scaled_modified_bessel_k0_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_scaled_modified_bessel_k0_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_scaled_modified_bessel_k0_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_scaled_modified_bessel_k1_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_scaled_modified_bessel_k1_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_scaled_modified_bessel_k1_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_scaled_modified_bessel_k1_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_scaled_modified_bessel_k1_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_scaled_modified_bessel_k1_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_shifted_chebyshev_polynomial_t_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_shifted_chebyshev_polynomial_t_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_shifted_chebyshev_polynomial_t_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_shifted_chebyshev_polynomial_t_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_shifted_chebyshev_polynomial_t_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_shifted_chebyshev_polynomial_t_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_shifted_chebyshev_polynomial_u_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_shifted_chebyshev_polynomial_u_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_shifted_chebyshev_polynomial_u_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_shifted_chebyshev_polynomial_u_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_shifted_chebyshev_polynomial_u_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_shifted_chebyshev_polynomial_u_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_shifted_chebyshev_polynomial_v_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_shifted_chebyshev_polynomial_v_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_shifted_chebyshev_polynomial_v_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_shifted_chebyshev_polynomial_v_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_shifted_chebyshev_polynomial_v_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_shifted_chebyshev_polynomial_v_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_shifted_chebyshev_polynomial_w_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_shifted_chebyshev_polynomial_w_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_shifted_chebyshev_polynomial_w_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_shifted_chebyshev_polynomial_w_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_shifted_chebyshev_polynomial_w_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_shifted_chebyshev_polynomial_w_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_spherical_bessel_j0_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_spherical_bessel_j0_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_spherical_bessel_j0_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_spherical_bessel_j0_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_spherical_bessel_j0_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_spherical_bessel_j0_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_xlog1py_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_xlog1py_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_xlog1py_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_xlog1py_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_xlog1py_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_xlog1py_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_xlog1py_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_xlog1py_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_zeta_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_zeta_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_zeta_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_zeta_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_zeta_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_special_zeta_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu sqrt not support bf16 and complex dtypes
"test_meta_py_TestMetaMLU_test_dispatch_meta_sqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu sqrt not support bf16 and complex dtypes
"test_meta_py_TestMetaMLU_test_dispatch_meta_sqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support bf16 and complex dtypes
"test_meta_py_TestMetaMLU_test_dispatch_meta_square_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_square_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_square_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_square_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_square_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_square_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_square_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_square_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_square_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_squeeze_mlu_bfloat16", # squeeze op unsupport bf16 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_stack_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_std_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_std_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_std_mean_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_std_mean_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_std_mean_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_std_mean_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_stft_mlu_complex64",  # TODO(PYTORCH-10372): MLU stft don't support tensor dtype ComplexFloat.
"test_meta_py_TestMetaMLU_test_dispatch_meta_stft_mlu_float32",  # TODO(PYTORCH-10374): CNNL FFT currently only support onesided.
"test_meta_py_TestMetaMLU_test_dispatch_meta_sum_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sum_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sum_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sum_to_size_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sum_to_size_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sum_to_size_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sum_to_size_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sum_to_size_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sum_to_size_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sum_to_size_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sum_to_size_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_sum_to_size_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_svd_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_symeig_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_symeig_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_t_mlu_bfloat16", # t unsupport bf16
"test_meta_py_TestMetaMLU_test_dispatch_meta_take_along_dim_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_take_along_dim_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_take_along_dim_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_take_along_dim_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_take_along_dim_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_take_along_dim_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_take_along_dim_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_take_along_dim_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_take_along_dim_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_take_mlu_bfloat16", # take op does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_take_mlu_complex64", # take op does not support complex64 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_tan_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_tan_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_tan_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_tan_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_tan_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_tan_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_tan_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_tan_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_tan_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_tan_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_tanh_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_tanh_mlu_complex64",
# TODO(PYTORCH-9186): bfloat16 is not support.
"test_meta_py_TestMetaMLU_test_dispatch_meta_tensor_split_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_tensordot_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_tensordot_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_tensordot_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_tensordot_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_tile_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_tile_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_tile_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_tile_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_tile_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_tile_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_tile_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_tile_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_tile_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_to_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_to_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_to_sparse_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_to_sparse_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_to_sparse_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_to_sparse_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_to_sparse_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_to_sparse_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_to_sparse_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_to_sparse_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_to_sparse_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_topk_mlu_bfloat16", # depends on bfloat16
"test_meta_py_TestMetaMLU_test_dispatch_meta_trace_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_trace_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_trace_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_trace_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_trace_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_trace_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_trace_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_trace_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_trace_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_trace_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_trapezoid_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_trapezoid_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_trapezoid_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_trapezoid_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_trapezoid_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_trapezoid_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_trapezoid_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_trapezoid_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_trapz_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_trapz_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_trapz_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_trapz_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_trapz_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_trapz_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_trapz_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_trapz_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_triangular_solve_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_triangular_solve_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_tril_indices_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_triu_indices_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_true_divide_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_true_divide_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_true_divide_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_true_divide_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_true_divide_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_true_divide_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_true_divide_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_true_divide_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_true_divide_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_true_divide_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_trunc_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_meta_py_TestMetaMLU_test_dispatch_meta_trunc_mlu_int16", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_meta_py_TestMetaMLU_test_dispatch_meta_trunc_mlu_int32", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_meta_py_TestMetaMLU_test_dispatch_meta_trunc_mlu_int8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_meta_py_TestMetaMLU_test_dispatch_meta_trunc_mlu_uint8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_meta_py_TestMetaMLU_test_dispatch_meta_unflatten_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_unflatten_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_unflatten_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_unflatten_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_unflatten_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_unflatten_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_unflatten_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_unflatten_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_unflatten_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_unflatten_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_unfold_copy_mlu_bfloat16", # unfold op does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_unfold_copy_mlu_complex32", # unfold op does not support complex32 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_unfold_copy_mlu_complex64", # unfold op does not support complex64 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_unfold_mlu_bfloat16", # unfold op does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_unfold_mlu_complex32", # unfold op does not support complex32 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_uniform_mlu_bfloat16", # TODO(PYTORCH-10262)
"test_meta_py_TestMetaMLU_test_dispatch_meta_unique_consecutive_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_unique_consecutive_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_unique_consecutive_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_unique_consecutive_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_unique_consecutive_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_unique_consecutive_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_unique_consecutive_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_unique_mlu_bool", # unique op does not support bool on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_unique_mlu_float16", # unique op does not support float16 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_unique_mlu_int16", # unique op does not support int16 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_unique_mlu_int8", # unique op does not suppoet int8 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_unique_mlu_uint8", # unique op does not support unint8 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_unsqueeze_mlu_bfloat16", # unsqueeze op unsupport bf16 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_var_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_var_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_var_mean_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_var_mean_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_var_mean_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_var_mean_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_vdot_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_vdot_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_vdot_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_vdot_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_view_mlu_bfloat16", # BFloat16 is not supported by view on MLU
"test_meta_py_TestMetaMLU_test_dispatch_meta_vsplit_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_view_as_mlu_bfloat16", # BFloat16 is not supported by view_as on MLU
"test_meta_py_TestMetaMLU_test_dispatch_meta_vsplit_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_vsplit_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_vsplit_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_vsplit_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_vsplit_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_vsplit_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_vsplit_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_vsplit_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_vsplit_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_vstack_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_vstack_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_vstack_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_vstack_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_vstack_mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_vstack_mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_vstack_mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_vstack_mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_vstack_mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_vstack_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_where_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_where_mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_where_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_where_mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_where_mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_xlogy_mlu_bfloat16", # TODO(PYTORCH-8751): xlogy not support bf16
"test_meta_py_TestMetaMLU_test_dispatch_meta_zero__mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_zero__mlu_bool",
"test_meta_py_TestMetaMLU_test_dispatch_meta_zero__mlu_complex64",
"test_meta_py_TestMetaMLU_test_dispatch_meta_zero__mlu_float16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_zero__mlu_float32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_zero__mlu_int16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_zero__mlu_int32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_zero__mlu_int8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_zero__mlu_uint8",
"test_meta_py_TestMetaMLU_test_dispatch_meta_zeros_mlu_bfloat16", # zeros op does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_zeros_mlu_complex32", # zeros op does not support complex32 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_zeros_mlu_complex64", # zeros op does not support complex64 on mlu
"test_meta_py_TestMetaMLU_test_dispatch_meta_zeros_like_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_dispatch_meta_zeros_like_mlu_complex32",
"test_meta_py_TestMetaMLU_test_dispatch_meta_zeros_like_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_H_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_H_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_H_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_H_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_H_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_H_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_H_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_H_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_H_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_H_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_T_mlu_bfloat16", # T unsupport bf16
"test_meta_py_TestMetaMLU_test_meta___getitem___mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta___getitem___mlu_bool",
"test_meta_py_TestMetaMLU_test_meta___getitem___mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta___getitem___mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta___getitem___mlu_float16",
"test_meta_py_TestMetaMLU_test_meta___getitem___mlu_float32",
"test_meta_py_TestMetaMLU_test_meta___getitem___mlu_int16",
"test_meta_py_TestMetaMLU_test_meta___getitem___mlu_int32",
"test_meta_py_TestMetaMLU_test_meta___getitem___mlu_int8",
"test_meta_py_TestMetaMLU_test_meta___getitem___mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta___rand___mlu_bool",
"test_meta_py_TestMetaMLU_test_meta___rand___mlu_int16",
"test_meta_py_TestMetaMLU_test_meta___rand___mlu_int32",
"test_meta_py_TestMetaMLU_test_meta___rand___mlu_int8",
"test_meta_py_TestMetaMLU_test_meta___rand___mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta___rdiv___mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_meta_py_TestMetaMLU_test_meta___rdiv___mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_meta_py_TestMetaMLU_test_meta___rmatmul___mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta___rmatmul___mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta___rmatmul___mlu_float16",
"test_meta_py_TestMetaMLU_test_meta___rmatmul___mlu_float32",
"test_meta_py_TestMetaMLU_test_meta___rmod___mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta___rmod___mlu_float16",
"test_meta_py_TestMetaMLU_test_meta___rmod___mlu_float32",
"test_meta_py_TestMetaMLU_test_meta___rmod___mlu_int16",
"test_meta_py_TestMetaMLU_test_meta___rmod___mlu_int32",
"test_meta_py_TestMetaMLU_test_meta___rmod___mlu_int8",
"test_meta_py_TestMetaMLU_test_meta___rmod___mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta___ror___mlu_bool",
"test_meta_py_TestMetaMLU_test_meta___ror___mlu_int16",
"test_meta_py_TestMetaMLU_test_meta___ror___mlu_int32",
"test_meta_py_TestMetaMLU_test_meta___ror___mlu_int8",
"test_meta_py_TestMetaMLU_test_meta___ror___mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta___rpow___mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta___rpow___mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta___rpow___mlu_float16",
"test_meta_py_TestMetaMLU_test_meta___rpow___mlu_float32",
"test_meta_py_TestMetaMLU_test_meta___rpow___mlu_int16",
"test_meta_py_TestMetaMLU_test_meta___rpow___mlu_int32",
"test_meta_py_TestMetaMLU_test_meta___rpow___mlu_int8",
"test_meta_py_TestMetaMLU_test_meta___rpow___mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta___rxor___mlu_bool",
"test_meta_py_TestMetaMLU_test_meta___rxor___mlu_int16",
"test_meta_py_TestMetaMLU_test_meta___rxor___mlu_int32",
"test_meta_py_TestMetaMLU_test_meta___rxor___mlu_int8",
"test_meta_py_TestMetaMLU_test_meta___rxor___mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_abs_mlu_bfloat16", # TODO(PYTORCH-8789)
"test_meta_py_TestMetaMLU_test_meta_abs_mlu_bool", # TODO(PYTORCH-8789)
"test_meta_py_TestMetaMLU_test_meta_abs_mlu_complex32", # TODO(PYTORCH-8789)
"test_meta_py_TestMetaMLU_test_meta_abs_mlu_int16", # TODO(PYTORCH-8789)
"test_meta_py_TestMetaMLU_test_meta_abs_mlu_int8", # TODO(PYTORCH-8789)
"test_meta_py_TestMetaMLU_test_meta_abs_mlu_uint8", # TODO(PYTORCH-8789)
"test_meta_py_TestMetaMLU_test_meta_acos_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_acos_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_acos_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_acos_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_acos_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_acos_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_acos_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_acos_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_acos_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_acos_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_acosh_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_acosh_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_acosh_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_acosh_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_acosh_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_acosh_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_acosh_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_acosh_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_acosh_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_acosh_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_addbmm_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_addcdiv_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_addcdiv_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_addcmul_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_addcmul_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_addcmul_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_addcmul_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_addcmul_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_addcmul_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_addmm_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_addmm_decomposed_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_addmv_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_addr_mlu_bool", # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Bool.
"test_meta_py_TestMetaMLU_test_meta_addr_mlu_complex64", # TODO(PYTORCH-8811): MLU addr don't support tensor dtype ComplexFloat.
"test_meta_py_TestMetaMLU_test_meta_addr_mlu_int16", # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Short.
"test_meta_py_TestMetaMLU_test_meta_addr_mlu_int32", # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Int.
"test_meta_py_TestMetaMLU_test_meta_addr_mlu_int8", # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Char.
"test_meta_py_TestMetaMLU_test_meta_addr_mlu_uint8", # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Byte.
"test_meta_py_TestMetaMLU_test_meta_all_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_all_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_allclose_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_allclose_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_allclose_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_allclose_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_amax_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_amin_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_amin_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_amin_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_amin_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_amin_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_amin_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_amin_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_amin_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_aminmax_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_aminmax_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_aminmax_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_aminmax_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_aminmax_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_aminmax_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_aminmax_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_aminmax_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_any_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_any_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_argmax_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_argmin_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_argsort_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_argsort_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_argsort_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_argsort_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_argsort_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_argsort_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_argsort_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_argwhere_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_argwhere_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_argwhere_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_argwhere_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_argwhere_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_argwhere_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_argwhere_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_argwhere_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_argwhere_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_as_strided_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_as_strided_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_as_strided_scatter_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_as_strided_scatter_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_as_strided_scatter_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_as_strided_scatter_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_as_strided_scatter_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_as_strided_scatter_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_as_strided_scatter_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_as_strided_scatter_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_as_strided_scatter_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_as_strided_scatter_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_asin_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_asin_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_asin_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_asin_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_asin_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_asin_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_asin_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_asin_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_asin_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_asin_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_asinh_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_asinh_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_asinh_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_asinh_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_asinh_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_asinh_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_asinh_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_asinh_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_asinh_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_asinh_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_atan2_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_atan2_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_atan2_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_atan2_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_atan2_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_atan2_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_atan2_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_atan2_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_atan_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_atan_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_atan_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_atan_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_atan_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_atan_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_atan_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_atan_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_atan_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_atan_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_atanh_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_atanh_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_atanh_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_atanh_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_atanh_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_atanh_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_atanh_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_atanh_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_atanh_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_atanh_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_atleast_1d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_atleast_1d_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_atleast_1d_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_atleast_1d_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_atleast_1d_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_atleast_1d_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_atleast_1d_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_atleast_1d_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_atleast_1d_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_atleast_1d_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_atleast_2d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_atleast_2d_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_atleast_2d_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_atleast_2d_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_atleast_2d_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_atleast_2d_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_atleast_2d_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_atleast_2d_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_atleast_2d_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_atleast_2d_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_atleast_3d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_atleast_3d_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_atleast_3d_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_atleast_3d_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_atleast_3d_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_atleast_3d_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_atleast_3d_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_atleast_3d_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_atleast_3d_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_atleast_3d_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_baddbmm_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_bernoulli_mlu_bfloat16", # TODO(PYTORCH-10285)
"test_meta_py_TestMetaMLU_test_meta_bfloat16_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_bfloat16_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_bfloat16_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_bfloat16_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_bfloat16_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_bfloat16_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_bfloat16_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_bfloat16_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_bfloat16_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_bfloat16_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_block_diag_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_block_diag_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_block_diag_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_block_diag_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_block_diag_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_block_diag_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_block_diag_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_block_diag_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_block_diag_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_block_diag_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_bmm_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_bool_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_bool_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_bool_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_bool_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_bool_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_bool_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_bool_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_bool_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_bool_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_bool_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_broadcast_shapes_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_broadcast_tensors_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_broadcast_tensors_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_broadcast_tensors_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_broadcast_tensors_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_broadcast_tensors_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_broadcast_tensors_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_broadcast_tensors_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_broadcast_tensors_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_broadcast_tensors_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_broadcast_to_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_broadcast_to_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_broadcast_to_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_broadcast_to_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_broadcast_to_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_broadcast_to_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_broadcast_to_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_broadcast_to_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_broadcast_to_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_bucketize_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_bucketize_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_bucketize_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_bucketize_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_bucketize_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_bucketize_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_byte_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_byte_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_byte_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_byte_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_byte_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_byte_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_byte_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_byte_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_byte_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_cartesian_prod_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_cartesian_prod_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_cartesian_prod_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_cartesian_prod_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_cartesian_prod_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_cartesian_prod_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_cartesian_prod_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_cartesian_prod_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_cartesian_prod_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_cat_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_cdist_mlu_float32", #TODO(PYTORCH-8665): cdist only supports p=1 now.
"test_meta_py_TestMetaMLU_test_meta_ceil_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_ceil_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_ceil_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_ceil_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_ceil_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_chalf_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_chalf_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_chalf_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_chalf_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_chalf_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_chalf_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_chalf_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_chalf_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_chalf_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_chalf_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_char_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_char_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_char_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_char_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_char_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_char_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_char_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_char_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_char_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_char_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_cholesky_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_cholesky_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_cholesky_inverse_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_cholesky_inverse_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_cholesky_solve_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_cholesky_solve_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_clamp_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_clamp_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_clamp_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_clamp_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_clamp_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_clamp_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_clamp_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_clamp_max_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_clamp_min_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_clone_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_clone_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_column_stack_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_column_stack_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_column_stack_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_column_stack_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_column_stack_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_column_stack_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_column_stack_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_column_stack_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_column_stack_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_column_stack_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_combinations_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_combinations_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_combinations_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_combinations_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_combinations_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_combinations_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_combinations_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_combinations_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_combinations_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_complex_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_complex_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_conj_physical_mlu_bfloat16",  # TODO(PYTORCH-10338)
"test_meta_py_TestMetaMLU_test_meta_constant_pad_nd_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_constant_pad_nd_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_contiguous_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_copysign_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_copysign_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_copysign_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_copysign_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_copysign_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_copysign_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_copysign_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_copysign_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_corrcoef_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_corrcoef_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_corrcoef_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_corrcoef_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_corrcoef_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_corrcoef_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_corrcoef_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_corrcoef_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_cos_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_cos_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_cos_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_cos_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_cos_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_cos_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_cos_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_cos_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_cos_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_cos_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_cosh_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_cosh_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_cosh_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_cosh_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_cosh_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_cosh_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_cosh_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_cosh_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_cosh_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_cosh_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_count_nonzero_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_count_nonzero_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_count_nonzero_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_count_nonzero_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_count_nonzero_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_count_nonzero_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_count_nonzero_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_count_nonzero_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_count_nonzero_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_cov_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_cov_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_cov_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_cov_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_cov_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_cov_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_cov_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_cov_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_cross_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_cross_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_cross_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_cross_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_cross_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_cross_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_cross_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_cummax_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_cummax_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_cummax_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_cummax_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_cummax_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_cummax_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_cummax_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_cummax_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_cumprod_mlu_bfloat16", # cumprod op does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_meta_cumprod_mlu_complex64", # cumprod op does not support complex64 on mlu
"test_meta_py_TestMetaMLU_test_meta_cumprod_mlu_uint8", # cumprod op does not support uint8 on mlu
"test_meta_py_TestMetaMLU_test_meta_cummin_mlu_bfloat16", # cummin does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_meta_cumsum_mlu_bfloat16", # cumsum op does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_meta_cumsum_mlu_complex64", # cumsum op does not support complex64 on mlu
"test_meta_py_TestMetaMLU_test_meta_cumsum_mlu_uint8", # cumsum op does not support uint8 output on mlu
"test_meta_py_TestMetaMLU_test_meta_cumulative_trapezoid_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_cumulative_trapezoid_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_cumulative_trapezoid_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_cumulative_trapezoid_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_cumulative_trapezoid_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_cumulative_trapezoid_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_cumulative_trapezoid_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_cumulative_trapezoid_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_deg2rad_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_deg2rad_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_deg2rad_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_deg2rad_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_deg2rad_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_deg2rad_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_deg2rad_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_deg2rad_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_diag_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_diag_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_diag_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_diag_embed_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_diag_embed_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_diag_embed_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_diagflat_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_diagflat_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_diagonal_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_diagonal_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_diagonal_scatter_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_diff_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_diff_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_diff_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_diff_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_diff_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_diff_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_diff_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_diff_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_diff_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_digamma_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_digamma_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_digamma_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_digamma_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_digamma_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_digamma_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_digamma_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_dist_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_dist_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_dist_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_dist_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_div_floor_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_meta_py_TestMetaMLU_test_meta_div_no_rounding_mode_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_meta_py_TestMetaMLU_test_meta_div_no_rounding_mode_mlu_complex32", # TODO(PYTORCH-8724): div not support complex dtypes
"test_meta_py_TestMetaMLU_test_meta_div_no_rounding_mode_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_meta_py_TestMetaMLU_test_meta_div_trunc_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_meta_py_TestMetaMLU_test_meta_dot_mlu_bfloat16",  # TODO(PYTORCH-8807): MLU dot don't support tensor dtype Bfloat16.
"test_meta_py_TestMetaMLU_test_meta_dot_mlu_complex64",  # TODO(PYTORCH-8807): MLU dot don't support tensor dtype ComplexFloat.
"test_meta_py_TestMetaMLU_test_meta_double_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_double_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_double_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_double_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_double_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_double_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_double_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_double_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_double_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_double_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_dsplit_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_dsplit_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_dsplit_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_dsplit_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_dsplit_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_dsplit_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_dsplit_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_dsplit_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_dsplit_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_dsplit_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_dstack_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_dstack_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_dstack_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_dstack_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_dstack_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_dstack_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_dstack_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_dstack_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_dstack_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_dstack_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_einsum_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_einsum_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_einsum_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_einsum_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_empty_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_empty_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_empty_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_empty_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_empty_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_empty_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_empty_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_empty_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_empty_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_empty_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_empty_like_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_empty_like_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_empty_like_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_empty_like_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_empty_like_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_empty_like_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_empty_like_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_empty_like_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_empty_like_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_empty_like_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_eq_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_eq_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_eq_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_equal_mlu_bfloat16", # TODO(PYTORCH-8756)
"test_meta_py_TestMetaMLU_test_meta_equal_mlu_complex64", # TODO(PYTORCH-8756)
"test_meta_py_TestMetaMLU_test_meta_erf_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_erfc_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_erfc_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_erfc_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_erfc_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_erfc_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_erfc_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_erfc_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_erfc_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_exp2_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_exp2_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_exp2_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_exp2_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_exp2_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_exp2_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_exp2_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_exp2_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_exp_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_exp_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_exp_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_expm1_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_eye_mlu_complex64",  # TODO(PYTORCH-8910): MLU eye don't support tensor dtype ComplexFloat.
"test_meta_py_TestMetaMLU_test_meta_fft_fft2_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_fft_fft2_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_fft_fft2_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_fft_fft2_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_fft_fft2_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_fft_fft2_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_fft_fft2_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_fft_fft2_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_fft_fft2_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_fft_fft_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_fft_fft_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_fft_fft_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_fft_fft_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_fft_fft_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_fft_fft_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_fft_fft_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_fft_fft_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_fft_fft_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_fft_fftn_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_fft_fftn_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_fft_fftn_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_fft_fftn_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_fft_fftn_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_fft_fftn_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_fft_fftn_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_fft_fftn_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_fft_fftn_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_fft_fftshift_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_fft_fftshift_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_fft_fftshift_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_fft_fftshift_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_fft_fftshift_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_fft_fftshift_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_fft_fftshift_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_fft_fftshift_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_fft_fftshift_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_fft_fftshift_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_fft_hfft2_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_fft_hfft2_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_fft_hfft2_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_fft_hfft2_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_fft_hfft2_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_fft_hfft2_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_fft_hfft2_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_fft_hfft2_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_fft_hfft2_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_fft_hfft_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_fft_hfft_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_fft_hfft_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_fft_hfft_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_fft_hfft_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_fft_hfft_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_fft_hfft_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_fft_hfft_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_fft_hfft_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_fft_hfftn_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_fft_hfftn_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_fft_hfftn_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_fft_hfftn_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_fft_hfftn_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_fft_hfftn_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_fft_hfftn_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_fft_hfftn_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_fft_hfftn_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_fft_ifft2_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_fft_ifft2_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_fft_ifft2_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_fft_ifft2_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_fft_ifft2_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_fft_ifft2_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_fft_ifft2_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_fft_ifft2_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_fft_ifft2_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_fft_ifft_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_fft_ifft_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_fft_ifft_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_fft_ifft_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_fft_ifft_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_fft_ifft_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_fft_ifft_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_fft_ifft_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_fft_ifft_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_fft_ifftn_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_fft_ifftn_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_fft_ifftn_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_fft_ifftn_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_fft_ifftn_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_fft_ifftn_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_fft_ifftn_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_fft_ifftn_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_fft_ifftn_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_fft_ifftshift_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_fft_ifftshift_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_fft_ifftshift_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_fft_ifftshift_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_fft_ifftshift_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_fft_ifftshift_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_fft_ifftshift_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_fft_ifftshift_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_fft_ifftshift_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_fft_ifftshift_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_fft_ihfft2_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_fft_ihfft2_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_fft_ihfft2_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_fft_ihfft2_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_fft_ihfft2_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_fft_ihfft2_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_fft_ihfft2_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_fft_ihfft_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_fft_ihfft_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_fft_ihfft_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_fft_ihfft_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_fft_ihfft_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_fft_ihfft_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_fft_ihfft_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_fft_ihfftn_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_fft_ihfftn_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_fft_ihfftn_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_fft_ihfftn_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_fft_ihfftn_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_fft_ihfftn_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_fft_ihfftn_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_fft_irfft2_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_fft_irfft2_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_fft_irfft2_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_fft_irfft2_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_fft_irfft2_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_fft_irfft2_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_fft_irfft2_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_fft_irfft2_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_fft_irfft2_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_fft_irfft_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_fft_irfft_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_fft_irfft_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_fft_irfft_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_fft_irfft_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_fft_irfft_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_fft_irfft_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_fft_irfft_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_fft_irfft_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_fft_irfftn_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_fft_irfftn_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_fft_irfftn_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_fft_irfftn_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_fft_irfftn_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_fft_irfftn_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_fft_irfftn_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_fft_irfftn_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_fft_irfftn_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_fft_rfft2_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_fft_rfft2_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_fft_rfft2_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_fft_rfft2_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_fft_rfft2_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_fft_rfft2_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_fft_rfft2_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_fft_rfft_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_fft_rfft_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_fft_rfft_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_fft_rfft_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_fft_rfft_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_fft_rfft_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_fft_rfft_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_fft_rfftn_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_fft_rfftn_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_fft_rfftn_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_fft_rfftn_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_fft_rfftn_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_fft_rfftn_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_fft_rfftn_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_fill_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_fill_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_fill_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_flatten_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_flatten_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_flatten_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_flatten_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_flatten_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_flatten_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_flatten_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_flatten_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_flatten_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_flatten_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_flip_mlu_bfloat16", # TODO(PYTORCH-8802): flip not support bf16
"test_meta_py_TestMetaMLU_test_meta_flip_mlu_complex64", # TODO(PYTORCH-8802): flip not support complex dtypes
"test_meta_py_TestMetaMLU_test_meta_fliplr_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_fliplr_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_fliplr_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_fliplr_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_fliplr_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_fliplr_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_fliplr_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_fliplr_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_fliplr_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_flipud_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_flipud_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_flipud_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_flipud_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_flipud_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_flipud_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_flipud_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_flipud_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_flipud_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_float_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_float_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_float_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_float_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_float_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_float_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_float_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_float_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_float_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_float_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_float_power_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_float_power_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_float_power_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_float_power_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_float_power_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_float_power_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_float_power_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_float_power_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_float_power_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_floor_mlu_bfloat16", # TODO(PYTORCH-8724): floor not support bf16
"test_meta_py_TestMetaMLU_test_meta_floor_mlu_int16", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_meta_py_TestMetaMLU_test_meta_floor_mlu_int32", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_meta_py_TestMetaMLU_test_meta_floor_mlu_int8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_meta_py_TestMetaMLU_test_meta_floor_mlu_uint8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_meta_py_TestMetaMLU_test_meta_floor_divide_mlu_bfloat16", # TODO(PYTORCH-8724): floor divide not support bf16
"test_meta_py_TestMetaMLU_test_meta_fmax_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_fmax_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_fmax_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_fmax_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_fmax_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_fmax_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_fmax_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_fmax_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_fmin_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_fmin_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_fmin_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_fmin_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_fmin_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_fmin_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_fmin_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_fmin_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_fmod_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_frac_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_frexp_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_frexp_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_full_like_mlu_bfloat16", # TODO(PYTORCH-8738)
"test_meta_py_TestMetaMLU_test_meta_full_like_mlu_complex64", # TODO(PYTORCH-8738)
"test_meta_py_TestMetaMLU_test_meta_gather_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_gather_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_gcd_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_gcd_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_gcd_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_gcd_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_ge_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_geqrf_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_geqrf_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_gradient_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_gradient_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_gradient_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_gradient_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_gradient_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_gradient_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_gradient_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_gt_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_half_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_half_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_half_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_half_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_half_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_half_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_half_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_half_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_half_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_heaviside_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_heaviside_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_heaviside_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_heaviside_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_heaviside_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_heaviside_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_heaviside_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_heaviside_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_histc_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_histc_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_histc_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_histc_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_hsplit_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_hsplit_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_hsplit_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_hsplit_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_hsplit_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_hsplit_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_hsplit_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_hsplit_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_hsplit_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_hsplit_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_hstack_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_hstack_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_hstack_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_hstack_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_hstack_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_hstack_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_hstack_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_hstack_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_hstack_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_hstack_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_hypot_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_hypot_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_hypot_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_i0_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_i0_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_i0_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_i0_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_i0_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_i0_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_i0_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_i0_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_igamma_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_igammac_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_imag_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_imag_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_index_add_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_index_add_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_index_add_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_index_add_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_index_add_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_index_add_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_index_copy_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_index_copy_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_index_fill_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_index_fill_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_index_put_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_index_put_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_index_put_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_index_put_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_index_reduce_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_index_reduce_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_index_reduce_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_index_reduce_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_index_reduce_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_index_reduce_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_index_reduce_mlu_uint8",
# TODO(PYTORCH-9186): bfloat16 and complex64 is not support.
"test_meta_py_TestMetaMLU_test_meta_index_select_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_index_select_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_inner_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_inner_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_inner_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_inner_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_int_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_int_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_int_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_int_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_int_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_int_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_int_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_int_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_int_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_isclose_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_isclose_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_isclose_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_isclose_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_isclose_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_isclose_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_isclose_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_isclose_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_isclose_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_isfinite_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_isin_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_isin_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_isin_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_isin_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_isin_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_isin_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_isinf_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_isinf_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_isinf_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_isinf_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_isinf_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_isinf_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_isinf_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_isinf_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_isinf_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_isinf_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_isnan_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_isnan_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_isneginf_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_isneginf_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_isneginf_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_isneginf_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_isneginf_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_isneginf_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_isneginf_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_isneginf_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_isposinf_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_isposinf_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_isposinf_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_isposinf_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_isposinf_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_isposinf_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_isposinf_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_isposinf_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_isreal_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_isreal_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_isreal_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_isreal_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_isreal_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_isreal_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_isreal_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_isreal_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_isreal_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_isreal_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_istft_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_istft_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_jiterator_2inputs_2outputs_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_jiterator_2inputs_2outputs_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_jiterator_2inputs_2outputs_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_jiterator_2inputs_2outputs_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_jiterator_2inputs_2outputs_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_jiterator_2inputs_2outputs_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_jiterator_2inputs_2outputs_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_jiterator_2inputs_2outputs_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_jiterator_2inputs_2outputs_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_jiterator_4inputs_with_extra_args_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_jiterator_4inputs_with_extra_args_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_jiterator_4inputs_with_extra_args_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_jiterator_4inputs_with_extra_args_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_jiterator_4inputs_with_extra_args_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_jiterator_4inputs_with_extra_args_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_jiterator_4inputs_with_extra_args_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_jiterator_4inputs_with_extra_args_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_jiterator_4inputs_with_extra_args_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_jiterator_binary_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_jiterator_binary_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_jiterator_binary_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_jiterator_binary_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_jiterator_binary_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_jiterator_binary_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_jiterator_binary_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_jiterator_binary_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_jiterator_binary_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_jiterator_binary_return_by_ref_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_jiterator_binary_return_by_ref_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_jiterator_binary_return_by_ref_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_jiterator_binary_return_by_ref_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_jiterator_binary_return_by_ref_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_jiterator_binary_return_by_ref_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_jiterator_binary_return_by_ref_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_jiterator_binary_return_by_ref_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_jiterator_binary_return_by_ref_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_jiterator_unary_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_jiterator_unary_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_jiterator_unary_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_jiterator_unary_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_jiterator_unary_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_jiterator_unary_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_jiterator_unary_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_jiterator_unary_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_jiterator_unary_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_kron_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_kron_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_kron_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_kron_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_kron_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_kron_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_kron_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_kron_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_kron_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_kthvalue_mlu_int16",  # TODO(PYTORCH-10249): MLU kthvalue don't support tensor dtype Short.
"test_meta_py_TestMetaMLU_test_meta_kthvalue_mlu_int32",  # TODO(PYTORCH-10249): MLU kthvalue don't support tensor dtype Int.
"test_meta_py_TestMetaMLU_test_meta_kthvalue_mlu_int8",  # TODO(PYTORCH-10249): MLU kthvalue don't support tensor dtype Char.
"test_meta_py_TestMetaMLU_test_meta_kthvalue_mlu_uint8",  # TODO(PYTORCH-10249): MLU kthvalue don't support tensor dtype Byte.
"test_meta_py_TestMetaMLU_test_meta_lcm_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_lcm_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_lcm_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_lcm_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_ldexp_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_ldexp_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_ldexp_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_ldexp_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_ldexp_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_ldexp_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_ldexp_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_ldexp_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_ldexp_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_le_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_lerp_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_lerp_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_lerp_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_lerp_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_lgamma_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_lgamma_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_lgamma_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_lgamma_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_lgamma_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_lgamma_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_lgamma_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_linalg_cholesky_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_cholesky_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_cholesky_ex_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_cholesky_ex_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_cond_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_cond_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_cross_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_cross_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_linalg_cross_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_cross_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_linalg_cross_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_linalg_cross_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_linalg_cross_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_linalg_det_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_det_singular_mlu_complex64",# TODO(PYTORCH-9646): mlu not support lu_factor now.
"test_meta_py_TestMetaMLU_test_meta_linalg_det_singular_mlu_float32",# TODO(PYTORCH-9646): mlu not support lu_factor now.
"test_meta_py_TestMetaMLU_test_meta_linalg_eig_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_eig_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_eigh_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_eigh_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_eigvals_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_eigvals_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_eigvalsh_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_eigvalsh_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_householder_product_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_householder_product_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_inv_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_inv_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_inv_ex_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_inv_ex_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_ldl_factor_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_ldl_factor_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_ldl_factor_ex_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_ldl_factor_ex_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_ldl_solve_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_ldl_solve_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_lstsq_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_lstsq_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_lstsq_grad_oriented_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_lstsq_grad_oriented_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_lu_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_lu_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_lu_factor_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_lu_factor_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_lu_factor_ex_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_lu_factor_ex_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_lu_solve_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_lu_solve_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_matrix_norm_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_linalg_matrix_norm_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_matrix_norm_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_linalg_matrix_norm_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_matrix_power_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_matrix_power_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_matrix_rank_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_matrix_rank_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_matrix_rank_hermitian_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_matrix_rank_hermitian_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_multi_dot_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_linalg_multi_dot_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_multi_dot_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_linalg_multi_dot_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_norm_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_linalg_norm_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_norm_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_linalg_norm_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_norm_subgradients_at_zero_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_linalg_norm_subgradients_at_zero_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_norm_subgradients_at_zero_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_linalg_norm_subgradients_at_zero_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_pinv_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_pinv_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_pinv_hermitian_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_pinv_hermitian_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_pinv_singular_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_pinv_singular_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_qr_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_qr_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_slogdet_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_solve_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_solve_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_solve_ex_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_solve_ex_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_solve_triangular_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_solve_triangular_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_svd_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_svdvals_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_svdvals_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_tensorinv_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_tensorinv_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_tensorsolve_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_tensorsolve_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_vander_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_vander_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_vander_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_linalg_vander_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_linalg_vander_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_linalg_vander_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_linalg_vecdot_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_linalg_vecdot_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_vecdot_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_linalg_vecdot_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linalg_vector_norm_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_linalg_vector_norm_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linalg_vector_norm_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_linalg_vector_norm_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_linspace_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_linspace_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_linspace_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_linspace_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_linspace_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_log10_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_log10_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_log1p_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_log2_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_log2_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_log_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_log_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_log_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_log_softmax_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_log_softmax_dtype_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_log_softmax_dtype_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_log_softmax_dtype_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_logaddexp2_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_logaddexp2_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_logaddexp_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_logaddexp_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_logcumsumexp_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_logcumsumexp_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_logcumsumexp_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_logdet_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_logdet_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_logical_and_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_logical_and_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_logical_not_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_logical_not_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_logical_or_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_logical_or_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_logical_xor_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_logical_xor_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_logit_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_logit_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_logit_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_logit_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_logit_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_logit_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_logit_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_logit_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_logspace_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_logspace_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_logspace_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_logspace_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_logspace_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_logspace_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_logspace_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_logspace_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_logsumexp_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_logsumexp_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_logsumexp_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_logsumexp_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_logsumexp_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_logsumexp_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_logsumexp_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_logsumexp_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_long_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_long_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_long_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_long_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_long_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_long_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_long_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_long_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_long_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_long_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_lt_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_lu_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_lu_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_lu_solve_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_lu_solve_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_lu_unpack_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_lu_unpack_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_mH_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_mH_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_mH_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_mH_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_mH_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_mH_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_mH_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_mH_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_mH_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_mH_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_mT_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_mT_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_mT_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_mT_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_mT_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_mT_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_mT_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_mT_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_mT_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_mT_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_masked_amax_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_masked_amax_mlu_uint8", # cnnlSelectV2 not support uint8
"test_meta_py_TestMetaMLU_test_meta_masked_amin_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_masked_amin_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_masked_amin_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_masked_amin_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_masked_amin_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_masked_amin_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_masked_amin_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_masked_argmax_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_masked_argmax_mlu_uint8", # cnnlSelectV2 not support uint8
"test_meta_py_TestMetaMLU_test_meta_masked_argmin_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_masked_argmin_mlu_uint8", # cnnlSelectV2 not support uint8
"test_meta_py_TestMetaMLU_test_meta_masked_cumprod_mlu_bfloat16", # cumprod op does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_meta_masked_cumprod_mlu_bool", # where op does not support bool on mlu
"test_meta_py_TestMetaMLU_test_meta_masked_cumprod_mlu_complex64", # cumprod op does not support complex64 on mlu
"test_meta_py_TestMetaMLU_test_meta_masked_cumprod_mlu_uint8", # cumprod op does not support uint8 on mlu
"test_meta_py_TestMetaMLU_test_meta_masked_cumsum_mlu_bfloat16", # cumsum op does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_meta_masked_cumsum_mlu_complex64", # cumsum op does not support complex64 on mlu
"test_meta_py_TestMetaMLU_test_meta_masked_cumsum_mlu_uint8", # where op does not support uint8 on mlu
"test_meta_py_TestMetaMLU_test_meta_masked_fill_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_masked_fill_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_masked_fill_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_masked_fill_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_masked_log_softmax_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_masked_logaddexp_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_masked_logaddexp_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_masked_logsumexp_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_masked_logsumexp_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_masked_logsumexp_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_masked_logsumexp_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_masked_logsumexp_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_masked_logsumexp_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_masked_logsumexp_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_masked_mean_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_masked_mean_mlu_bool", # PYTORCH-10149
"test_meta_py_TestMetaMLU_test_meta_masked_mean_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_masked_mean_mlu_uint8", # PYTORCH-10149
"test_meta_py_TestMetaMLU_test_meta_masked_median_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_masked_median_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_masked_norm_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_masked_normalize_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_masked_normalize_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_masked_normalize_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_masked_normalize_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_masked_prod_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_masked_prod_mlu_bool", # PYTORCH-10149
"test_meta_py_TestMetaMLU_test_meta_masked_prod_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_masked_prod_mlu_uint8", # PYTORCH-10149
"test_meta_py_TestMetaMLU_test_meta_masked_scatter_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_masked_scatter_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_masked_scatter_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_masked_scatter_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_masked_scatter_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_masked_scatter_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_masked_scatter_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_masked_select_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_masked_select_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_masked_softmax_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_masked_softmin_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_masked_softmin_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_masked_softmin_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_masked_std_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_masked_std_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_masked_std_mlu_uint8", # PYTORCH-10149
"test_meta_py_TestMetaMLU_test_meta_masked_sum_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_masked_sum_mlu_bool", # PYTORCH-10149
"test_meta_py_TestMetaMLU_test_meta_masked_sum_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_masked_sum_mlu_uint8", # PYTORCH-10149
"test_meta_py_TestMetaMLU_test_meta_masked_var_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_masked_var_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_masked_var_mlu_uint8", # PYTORCH-10149
"test_meta_py_TestMetaMLU_test_meta_matmul_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_matmul_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_matmul_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_matmul_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_matrix_exp_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_matrix_exp_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_matrix_exp_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_matrix_exp_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_max_binary_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_max_reduction_no_dim_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_max_reduction_with_dim_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_max_reduction_with_dim_mlu_bool", #PYTORCH-8734
"test_meta_py_TestMetaMLU_test_meta_max_reduction_with_dim_mlu_int16", #PYTORCH-8734
"test_meta_py_TestMetaMLU_test_meta_max_reduction_with_dim_mlu_int8", #PYTORCH-8734
"test_meta_py_TestMetaMLU_test_meta_max_reduction_with_dim_mlu_uint8", #PYTORCH-8734
"test_meta_py_TestMetaMLU_test_meta_maximum_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_mean_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_mean_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_median_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_median_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_median_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_median_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_meshgrid_list_of_tensors_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_meshgrid_list_of_tensors_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_meshgrid_list_of_tensors_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_meshgrid_list_of_tensors_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_meshgrid_list_of_tensors_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_meshgrid_list_of_tensors_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_meshgrid_list_of_tensors_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_meshgrid_list_of_tensors_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_meshgrid_list_of_tensors_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_meshgrid_variadic_tensors_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_meshgrid_variadic_tensors_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_meshgrid_variadic_tensors_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_meshgrid_variadic_tensors_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_meshgrid_variadic_tensors_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_meshgrid_variadic_tensors_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_meshgrid_variadic_tensors_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_meshgrid_variadic_tensors_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_meshgrid_variadic_tensors_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_min_binary_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_min_reduction_no_dim_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_min_reduction_with_dim_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_min_reduction_with_dim_mlu_bool", # cnnl min not support bool with dim
"test_meta_py_TestMetaMLU_test_meta_min_reduction_with_dim_mlu_int16",# cnnl min not support int16 with dim
"test_meta_py_TestMetaMLU_test_meta_min_reduction_with_dim_mlu_int8",# cnnl min not support int8 with dim
"test_meta_py_TestMetaMLU_test_meta_min_reduction_with_dim_mlu_uint8",# cnnl min not support uint8 with dim
"test_meta_py_TestMetaMLU_test_meta_minimum_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_mm_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_mode_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_mode_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_mode_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_mode_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_mode_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_mode_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_mode_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_mode_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_movedim_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_movedim_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_movedim_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_movedim_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_movedim_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_movedim_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_movedim_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_movedim_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_movedim_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_movedim_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_msort_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_msort_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_msort_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_msort_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_msort_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_msort_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_msort_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_mv_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_mv_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_mvlgamma_mvlgamma_p_1_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_mvlgamma_mvlgamma_p_1_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_mvlgamma_mvlgamma_p_1_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_mvlgamma_mvlgamma_p_1_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_mvlgamma_mvlgamma_p_1_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_mvlgamma_mvlgamma_p_1_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_mvlgamma_mvlgamma_p_3_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_mvlgamma_mvlgamma_p_3_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_mvlgamma_mvlgamma_p_3_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_mvlgamma_mvlgamma_p_3_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_mvlgamma_mvlgamma_p_3_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_mvlgamma_mvlgamma_p_3_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_mvlgamma_mvlgamma_p_5_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_mvlgamma_mvlgamma_p_5_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_mvlgamma_mvlgamma_p_5_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_mvlgamma_mvlgamma_p_5_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_mvlgamma_mvlgamma_p_5_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_mvlgamma_mvlgamma_p_5_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_nan_to_num_mlu_bfloat16", # TODO(PYTORCH-10157)
"test_meta_py_TestMetaMLU_test_meta_nanmean_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nanmean_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nanmean_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nanmedian_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nanmedian_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nanmedian_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_nanmedian_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_nanmedian_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_nanmedian_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_nanquantile_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nansum_mlu_bfloat16", # only support on MLU500 series
"test_meta_py_TestMetaMLU_test_meta_narrow_copy_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_narrow_copy_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_narrow_copy_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_narrow_copy_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_narrow_copy_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_narrow_copy_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_narrow_copy_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_narrow_copy_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_narrow_copy_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_narrow_copy_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_native_batch_norm_mlu_bfloat16",    # Currently do not support BFloat16.
"test_meta_py_TestMetaMLU_test_meta_ne_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_ne_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_neg_mlu_bfloat16",     #MLU neg not support bfloat16
"test_meta_py_TestMetaMLU_test_meta_neg_mlu_complex32",     #MLU neg not support chalf
"test_meta_py_TestMetaMLU_test_meta_neg_mlu_complex64",     #MLU neg not support cfloat
"test_meta_py_TestMetaMLU_test_meta_neg_mlu_int16",     #MLU neg not support int16
"test_meta_py_TestMetaMLU_test_meta_neg_mlu_int8",     #MLU neg not support int8
"test_meta_py_TestMetaMLU_test_meta_neg_mlu_uint8",     #MLU neg not support uint8
"test_meta_py_TestMetaMLU_test_meta_new_empty_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_new_empty_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_new_empty_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_new_empty_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_new_empty_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_new_empty_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_new_empty_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_new_empty_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_new_empty_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_new_empty_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_new_full_mlu_bfloat16", # TODO(PYTORCH-8738)
"test_meta_py_TestMetaMLU_test_meta_new_full_mlu_complex32", # TODO(PYTORCH-8738)
"test_meta_py_TestMetaMLU_test_meta_new_full_mlu_complex64", # TODO(PYTORCH-8738)
"test_meta_py_TestMetaMLU_test_meta_new_ones_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_new_ones_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_new_ones_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_new_zeros_mlu_bfloat16", # zeros op does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_meta_new_zeros_mlu_complex32", # zeros op does not support complex32 on mlu
"test_meta_py_TestMetaMLU_test_meta_new_zeros_mlu_complex64", # zeros op does not support complex64 on mlu
"test_meta_py_TestMetaMLU_test_meta_nextafter_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nextafter_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional__scaled_dot_product_attention_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional__scaled_dot_product_attention_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional__scaled_dot_product_attention_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_adaptive_avg_pool1d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_adaptive_avg_pool2d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_adaptive_avg_pool3d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_adaptive_max_pool1d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_adaptive_max_pool2d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_adaptive_max_pool3d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_adaptive_max_pool3d_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_adaptive_max_pool3d_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_avg_pool1d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_avg_pool2d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_avg_pool2d_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_avg_pool2d_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_avg_pool3d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_avg_pool3d_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_avg_pool3d_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_batch_norm_mlu_bfloat16",    # Currently do not support BFloat16.
"test_meta_py_TestMetaMLU_test_meta_nn_functional_bilinear_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_bilinear_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_bilinear_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_binary_cross_entropy_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_binary_cross_entropy_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_binary_cross_entropy_with_logits_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_celu_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_celu_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_celu_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_cosine_embedding_loss_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_cosine_embedding_loss_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_cosine_embedding_loss_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_cosine_embedding_loss_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_cosine_embedding_loss_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_cosine_embedding_loss_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_cosine_embedding_loss_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_cosine_similarity_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_cosine_similarity_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_cosine_similarity_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_cross_entropy_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_cross_entropy_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_cross_entropy_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_ctc_loss_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_dropout2d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_dropout3d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_dropout_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_elu_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_embedding_bag_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_embedding_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_feature_alpha_dropout_with_train_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_feature_alpha_dropout_without_train_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_fractional_max_pool2d_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_fractional_max_pool2d_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_fractional_max_pool3d_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_fractional_max_pool3d_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_gaussian_nll_loss_mlu_bfloat16", # [PYTORCH-10153] MLU lt don't support tensor dtype BFloat16.
"test_meta_py_TestMetaMLU_test_meta_nn_functional_gelu_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_glu_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_grid_sample_mlu_float16", # TODO(PYTORCH-10134)
"test_meta_py_TestMetaMLU_test_meta_nn_functional_grid_sample_mlu_float32", # TODO(PYTORCH-10134)
"test_meta_py_TestMetaMLU_test_meta_nn_functional_group_norm_mlu_bfloat16", # TODO(PYTORCH-9186): bfloat16 is not support.
"test_meta_py_TestMetaMLU_test_meta_nn_functional_group_norm_mlu_float16", # TODO(PYTORCH-9458): group_norm unsupport eps<0.
"test_meta_py_TestMetaMLU_test_meta_nn_functional_group_norm_mlu_float32", # TODO(PYTORCH-9458): group_norm unsupport eps<0.
"test_meta_py_TestMetaMLU_test_meta_nn_functional_hardshrink_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_hardshrink_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_hardshrink_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_hardsigmoid_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_hardswish_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_hardtanh_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_hardtanh_mlu_float16", # [PYTORCH-9208]: [cnnlClip]Parameter min must be less than max
"test_meta_py_TestMetaMLU_test_meta_nn_functional_hardtanh_mlu_float32",# [PYTORCH-9208]: [cnnlClip]Parameter min must be less than max
"test_meta_py_TestMetaMLU_test_meta_nn_functional_hinge_embedding_loss_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_hinge_embedding_loss_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_hinge_embedding_loss_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_huber_loss_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_huber_loss_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_huber_loss_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_instance_norm_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_instance_norm_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_instance_norm_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_interpolate_area_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_interpolate_nearest_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_kl_div_mlu_bfloat16", # TODO(PYTORCH-10269): mlu kl_div not support bf16
"test_meta_py_TestMetaMLU_test_meta_nn_functional_l1_loss_mlu_bfloat16", # l1_loss op does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_meta_nn_functional_l1_loss_mlu_complex64", # l1_loss op does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_meta_nn_functional_layer_norm_mlu_bfloat16", # TODO(PYTORCH-10252)
"test_meta_py_TestMetaMLU_test_meta_nn_functional_leaky_relu_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_linear_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_local_response_norm_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_logsigmoid_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_margin_ranking_loss_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_margin_ranking_loss_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_margin_ranking_loss_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_margin_ranking_loss_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_margin_ranking_loss_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_margin_ranking_loss_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_margin_ranking_loss_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_max_pool1d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_max_pool2d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_max_pool2d_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_max_pool2d_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_max_pool3d_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_max_pool3d_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_max_pool3d_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_max_unpool1d_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_max_unpool1d_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_max_unpool1d_grad_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_max_unpool1d_grad_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_max_unpool2d_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_max_unpool2d_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_max_unpool2d_grad_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_max_unpool2d_grad_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_max_unpool3d_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_max_unpool3d_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_max_unpool3d_grad_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_max_unpool3d_grad_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_mish_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_mish_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_mish_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_mse_loss_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_multi_margin_loss_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_multi_margin_loss_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_multi_margin_loss_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_multilabel_margin_loss_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_multilabel_margin_loss_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_multilabel_margin_loss_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_multilabel_soft_margin_loss_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_multilabel_soft_margin_loss_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_multilabel_soft_margin_loss_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_nll_loss_mlu_bfloat16", # [PYTORCH-10151] nll loss don't support tensor dtype BFloat16.
"test_meta_py_TestMetaMLU_test_meta_nn_functional_normalize_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_normalize_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_normalize_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_normalize_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pad_circular_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pad_circular_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pad_circular_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pad_circular_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pad_circular_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pad_circular_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pad_circular_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pad_circular_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pad_circular_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pad_constant_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pad_constant_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pad_constant_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pad_constant_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pad_constant_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pad_constant_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pad_constant_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pad_constant_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pad_constant_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pad_reflect_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pad_reflect_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pad_reflect_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pad_reflect_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pad_replicate_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pad_replicate_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pad_replicate_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pairwise_distance_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pairwise_distance_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pairwise_distance_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pairwise_distance_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pairwise_distance_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pairwise_distance_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pairwise_distance_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pairwise_distance_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pdist_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pixel_shuffle_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pixel_shuffle_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pixel_shuffle_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pixel_shuffle_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pixel_shuffle_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pixel_shuffle_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pixel_shuffle_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pixel_shuffle_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pixel_shuffle_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pixel_unshuffle_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pixel_unshuffle_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pixel_unshuffle_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pixel_unshuffle_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pixel_unshuffle_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pixel_unshuffle_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pixel_unshuffle_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pixel_unshuffle_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_pixel_unshuffle_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_poisson_nll_loss_mlu_bfloat16", # [PYTORCH-8789] MLU abs don't support tensor dtype BFloat16.
"test_meta_py_TestMetaMLU_test_meta_nn_functional_poisson_nll_loss_mlu_int16", # [PYTORCH-8789] MLU abs don't support tensor dtype Short.
"test_meta_py_TestMetaMLU_test_meta_nn_functional_poisson_nll_loss_mlu_int8", # [PYTORCH-8789] MLU abs don't support tensor dtype Char.
"test_meta_py_TestMetaMLU_test_meta_nn_functional_poisson_nll_loss_mlu_uint8", # [PYTORCH-8789] MLU abs don't support tensor dtype Byte.
"test_meta_py_TestMetaMLU_test_meta_nn_functional_prelu_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_prelu_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_relu6_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_relu6_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_relu6_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_relu6_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_relu6_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_relu6_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_relu6_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_relu_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_rrelu_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_selu_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_silu_mlu_bfloat16",     #dtype not support
"test_meta_py_TestMetaMLU_test_meta_nn_functional_soft_margin_loss_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_soft_margin_loss_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_soft_margin_loss_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_softmin_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_softmin_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_softmin_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_softmin_with_dtype_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_softmin_with_dtype_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_softmin_with_dtype_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_softmin_with_dtype_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_softmin_with_dtype_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_softmin_with_dtype_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_softmin_with_dtype_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_softmin_with_dtype_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_softplus_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_softshrink_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_softshrink_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_softshrink_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_softsign_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_softsign_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_softsign_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_softsign_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_softsign_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_softsign_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_softsign_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_softsign_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_softsign_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_tanhshrink_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_tanhshrink_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_tanhshrink_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_tanhshrink_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_tanhshrink_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_tanhshrink_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_tanhshrink_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_tanhshrink_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_threshold_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_triplet_margin_loss_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_triplet_margin_loss_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_triplet_margin_loss_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_triplet_margin_loss_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_triplet_margin_loss_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_triplet_margin_loss_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_triplet_margin_loss_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_triplet_margin_loss_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_triplet_margin_with_distance_loss_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_triplet_margin_with_distance_loss_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_triplet_margin_with_distance_loss_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_triplet_margin_with_distance_loss_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_triplet_margin_with_distance_loss_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_triplet_margin_with_distance_loss_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_triplet_margin_with_distance_loss_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_triplet_margin_with_distance_loss_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_nn_functional_unfold_mlu_bfloat16",  # TODO(PYTORCH-8763): MLU nn_unfold don't support tensor dtype Bfloat16.
"test_meta_py_TestMetaMLU_test_meta_nn_functional_unfold_mlu_complex64",  # TODO(PYTORCH-8763): MLU nn_unfold don't support tensor dtype ComplexFloat.
"test_meta_py_TestMetaMLU_test_meta_nn_functional_upsample_nearest_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_nonzero_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_nonzero_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_nonzero_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_norm_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_norm_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_norm_mlu_float16", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_meta_py_TestMetaMLU_test_meta_norm_mlu_float32", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_meta_py_TestMetaMLU_test_meta_norm_fro_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_norm_fro_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_norm_inf_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_norm_inf_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_norm_inf_mlu_float16", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_meta_py_TestMetaMLU_test_meta_norm_inf_mlu_float32", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_meta_py_TestMetaMLU_test_meta_norm_nuc_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_norm_nuc_mlu_float16", # torch_mlu svd not support compute_uv's value is false
"test_meta_py_TestMetaMLU_test_meta_norm_nuc_mlu_float32", # torch_mlu svd not support compute_uv's value is false
"test_meta_py_TestMetaMLU_test_meta_normal_mlu_bfloat16", # TODO(PYTORCH-10242)
"test_meta_py_TestMetaMLU_test_meta_normal_number_mean_mlu_bfloat16", # TODO(PYTORCH-10242)
"test_meta_py_TestMetaMLU_test_meta_ones_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_ones_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_ones_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_ones_like_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_ones_like_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_ones_like_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_ormqr_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_ormqr_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_outer_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_pca_lowrank_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_pinverse_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_pinverse_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_polar_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_0_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_0_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_0_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_0_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_0_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_0_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_0_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_1_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_1_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_1_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_1_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_1_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_1_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_1_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_2_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_2_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_2_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_2_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_2_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_2_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_2_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_3_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_3_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_3_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_3_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_3_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_3_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_3_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_4_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_4_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_4_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_4_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_4_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_4_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_polygamma_polygamma_n_4_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_positive_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_positive_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_positive_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_positive_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_positive_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_positive_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_positive_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_positive_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_positive_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_pow_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_pow_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_pow_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_pow_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_pow_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_pow_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_pow_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_prod_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_prod_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_prod_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_put_mlu_bfloat16", # put op does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_meta_put_mlu_bool", # put op does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_meta_put_mlu_complex64", # put op does not support complex64 on mlu
"test_meta_py_TestMetaMLU_test_meta_qr_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_quantile_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_rad2deg_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_rad2deg_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_rad2deg_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_rad2deg_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_rad2deg_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_rad2deg_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_rad2deg_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_rad2deg_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_rand_like_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_rand_like_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_rand_like_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_rand_like_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_rand_like_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_randint_like_mlu_bfloat16", # TODO(PYTORCH-10273)
"test_meta_py_TestMetaMLU_test_meta_randint_like_mlu_int16", # TODO(PYTORCH-10273)
"test_meta_py_TestMetaMLU_test_meta_randint_like_mlu_int8", # TODO(PYTORCH-10273)
"test_meta_py_TestMetaMLU_test_meta_randint_like_mlu_uint8", # TODO(PYTORCH-10273)
"test_meta_py_TestMetaMLU_test_meta_randn_mlu_bfloat16", # TODO(PYTORCH-10321)
"test_meta_py_TestMetaMLU_test_meta_randn_mlu_complex32", # TODO(PYTORCH-10321)
"test_meta_py_TestMetaMLU_test_meta_randn_like_mlu_bfloat16", # TODO(PYTORCH-10321)
"test_meta_py_TestMetaMLU_test_meta_randn_like_mlu_complex32", # TODO(PYTORCH-10321)
"test_meta_py_TestMetaMLU_test_meta_ravel_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_ravel_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_ravel_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_ravel_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_ravel_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_ravel_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_ravel_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_ravel_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_ravel_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_ravel_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_real_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_real_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_real_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_real_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_real_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_real_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_real_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_real_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_real_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_real_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_reciprocal_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_reciprocal_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_remainder_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_renorm_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_renorm_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_renorm_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_renorm_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_repeat_interleave_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_repeat_interleave_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_repeat_interleave_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_reshape_as_mlu_bfloat16", # BFloat16 is not supported by reshape_as on MLU
"test_meta_py_TestMetaMLU_test_meta_reshape_mlu_bfloat16", # BFloat16 is not supported by reshape on MLU
"test_meta_py_TestMetaMLU_test_meta_resize__mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_resize__mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_resize__mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_resize__mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_resize__mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_resize__mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_resize__mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_resize__mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_resize__mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_resize_as__mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_resize_as__mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_resize_as__mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_resize_as__mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_resize_as__mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_resize_as__mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_resize_as__mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_resize_as__mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_resize_as__mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_resolve_neg_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_resolve_neg_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_resolve_neg_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_resolve_neg_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_resolve_neg_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_resolve_neg_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_resolve_neg_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_resolve_neg_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_resolve_neg_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_resolve_neg_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_roll_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_roll_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_rot90_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_rot90_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_rot90_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_rot90_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_rot90_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_rot90_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_rot90_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_rot90_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_rot90_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_round_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_round_decimals_0_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_round_decimals_0_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_round_decimals_3_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_round_decimals_3_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_round_decimals_neg_3_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_round_decimals_neg_3_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_rsqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu rsqrt not support bf16 and complex dtypes
"test_meta_py_TestMetaMLU_test_meta_rsqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu rsqrt not support bf16 and complex dtypes
"test_meta_py_TestMetaMLU_test_meta_rsqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu rsqrt not support bf16 and complex dtypes
"test_meta_py_TestMetaMLU_test_meta_scatter_add_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_scatter_add_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_scatter_add_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_scatter_add_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_scatter_add_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_scatter_add_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_scatter_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_scatter_mlu_bool", # scatter_add not implemented for Bool
"test_meta_py_TestMetaMLU_test_meta_scatter_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_scatter_mlu_int16", # scatter_add not implemented for Short
"test_meta_py_TestMetaMLU_test_meta_scatter_mlu_int8", # scatter_add not implemented for Char
"test_meta_py_TestMetaMLU_test_meta_scatter_mlu_uint8", # scatter_add not implemented forByte
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_amax_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_amax_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_amax_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_amax_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_amax_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_amax_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_amax_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_amin_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_amin_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_amin_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_amin_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_amin_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_amin_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_amin_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_mean_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_mean_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_mean_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_mean_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_mean_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_mean_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_mean_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_prod_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_prod_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_prod_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_prod_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_prod_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_prod_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_prod_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_sum_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_sum_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_sum_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_sum_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_scatter_reduce_sum_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_searchsorted_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_searchsorted_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_searchsorted_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_searchsorted_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_searchsorted_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_searchsorted_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_segment_reduce_lengths_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_segment_reduce_lengths_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_segment_reduce_lengths_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_segment_reduce_offsets_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_segment_reduce_offsets_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_segment_reduce_offsets_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_select_scatter_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_select_scatter_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_select_scatter_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_select_scatter_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_select_scatter_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_select_scatter_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_select_scatter_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_select_scatter_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_sgn_mlu_bfloat16", # TODO(PYTORCH-8948)
"test_meta_py_TestMetaMLU_test_meta_sgn_mlu_bool", # TODO(PYTORCH-8948)
"test_meta_py_TestMetaMLU_test_meta_sgn_mlu_complex32", # TODO(PYTORCH-8948)
"test_meta_py_TestMetaMLU_test_meta_sgn_mlu_int16", # TODO(PYTORCH-8948)
"test_meta_py_TestMetaMLU_test_meta_sgn_mlu_int32", # TODO(PYTORCH-8948)
"test_meta_py_TestMetaMLU_test_meta_sgn_mlu_int8", # TODO(PYTORCH-8948)
"test_meta_py_TestMetaMLU_test_meta_sgn_mlu_uint8", # TODO(PYTORCH-8948)
"test_meta_py_TestMetaMLU_test_meta_short_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_short_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_short_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_short_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_short_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_short_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_short_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_short_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_short_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_sigmoid_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_sigmoid_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_sign_mlu_bfloat16", # TODO(PYTORCH-8947)
"test_meta_py_TestMetaMLU_test_meta_sign_mlu_bool", # TODO(PYTORCH-8947)
"test_meta_py_TestMetaMLU_test_meta_sign_mlu_int16", # TODO(PYTORCH-8947)
"test_meta_py_TestMetaMLU_test_meta_sign_mlu_int32", # TODO(PYTORCH-8947)
"test_meta_py_TestMetaMLU_test_meta_sign_mlu_int8", # TODO(PYTORCH-8947)
"test_meta_py_TestMetaMLU_test_meta_sign_mlu_uint8", # TODO(PYTORCH-8947)
"test_meta_py_TestMetaMLU_test_meta_signbit_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_signbit_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_signbit_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_signbit_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_signbit_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_signbit_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_signbit_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_signbit_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_sin_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_sin_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_sin_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_sin_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_sin_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_sin_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_sin_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_sin_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_sin_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_sin_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_sinc_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_sinc_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_sinc_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_sinc_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_sinc_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_sinc_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_sinc_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_sinc_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_sinc_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_sinh_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_sinh_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_sinh_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_sinh_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_sinh_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_sinh_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_sinh_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_sinh_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_sinh_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_sinh_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_slice_mlu_bfloat16", # slice op does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_meta_slice_scatter_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_softmax_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_softmax_with_dtype_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_softmax_with_dtype_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_sort_mlu_bfloat16",  # TODO(PYTORCH-10347): MLU sort don't support tensor dtype Bfloat16.
"test_meta_py_TestMetaMLU_test_meta_sparse_sampled_addmm_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_sparse_sampled_addmm_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_airy_ai_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_airy_ai_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_airy_ai_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_airy_ai_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_airy_ai_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_airy_ai_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_bessel_j0_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_bessel_j0_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_bessel_j0_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_bessel_j0_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_bessel_j0_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_bessel_j0_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_bessel_j1_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_bessel_j1_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_bessel_j1_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_bessel_j1_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_bessel_j1_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_bessel_j1_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_bessel_y0_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_bessel_y0_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_bessel_y0_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_bessel_y0_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_bessel_y0_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_bessel_y0_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_bessel_y1_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_bessel_y1_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_bessel_y1_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_bessel_y1_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_bessel_y1_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_bessel_y1_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_chebyshev_polynomial_t_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_chebyshev_polynomial_t_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_chebyshev_polynomial_t_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_chebyshev_polynomial_t_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_chebyshev_polynomial_t_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_chebyshev_polynomial_t_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_chebyshev_polynomial_u_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_chebyshev_polynomial_u_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_chebyshev_polynomial_u_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_chebyshev_polynomial_u_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_chebyshev_polynomial_u_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_chebyshev_polynomial_u_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_chebyshev_polynomial_v_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_chebyshev_polynomial_v_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_chebyshev_polynomial_v_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_chebyshev_polynomial_v_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_chebyshev_polynomial_v_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_chebyshev_polynomial_v_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_chebyshev_polynomial_w_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_chebyshev_polynomial_w_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_chebyshev_polynomial_w_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_chebyshev_polynomial_w_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_chebyshev_polynomial_w_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_chebyshev_polynomial_w_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_entr_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_special_entr_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_entr_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_special_entr_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_entr_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_entr_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_entr_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_entr_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_erfcx_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_erfcx_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_erfcx_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_erfcx_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_erfcx_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_erfcx_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_hermite_polynomial_h_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_hermite_polynomial_h_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_hermite_polynomial_h_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_hermite_polynomial_h_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_hermite_polynomial_h_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_hermite_polynomial_h_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_hermite_polynomial_he_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_hermite_polynomial_he_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_hermite_polynomial_he_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_hermite_polynomial_he_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_hermite_polynomial_he_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_hermite_polynomial_he_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_i0e_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_special_i0e_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_i0e_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_special_i0e_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_i0e_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_i0e_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_i0e_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_i0e_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_i1_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_i1_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_i1_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_i1_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_i1_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_i1_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_i1e_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_i1e_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_i1e_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_i1e_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_i1e_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_i1e_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_laguerre_polynomial_l_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_laguerre_polynomial_l_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_laguerre_polynomial_l_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_laguerre_polynomial_l_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_laguerre_polynomial_l_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_laguerre_polynomial_l_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_legendre_polynomial_p_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_legendre_polynomial_p_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_legendre_polynomial_p_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_legendre_polynomial_p_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_legendre_polynomial_p_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_legendre_polynomial_p_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_log_ndtr_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_log_ndtr_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_log_ndtr_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_log_ndtr_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_log_ndtr_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_log_ndtr_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_modified_bessel_i0_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_modified_bessel_i0_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_modified_bessel_i0_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_modified_bessel_i0_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_modified_bessel_i0_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_modified_bessel_i0_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_modified_bessel_i1_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_modified_bessel_i1_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_modified_bessel_i1_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_modified_bessel_i1_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_modified_bessel_i1_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_modified_bessel_i1_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_modified_bessel_k0_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_modified_bessel_k0_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_modified_bessel_k0_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_modified_bessel_k0_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_modified_bessel_k0_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_modified_bessel_k0_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_modified_bessel_k1_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_modified_bessel_k1_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_modified_bessel_k1_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_modified_bessel_k1_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_modified_bessel_k1_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_modified_bessel_k1_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_ndtr_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_special_ndtr_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_ndtr_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_special_ndtr_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_ndtr_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_ndtr_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_ndtr_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_ndtr_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_ndtri_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_ndtri_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_ndtri_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_ndtri_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_ndtri_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_ndtri_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_polygamma_special_polygamma_n_0_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_polygamma_special_polygamma_n_0_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_special_polygamma_special_polygamma_n_0_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_polygamma_special_polygamma_n_0_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_polygamma_special_polygamma_n_0_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_polygamma_special_polygamma_n_0_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_polygamma_special_polygamma_n_0_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_scaled_modified_bessel_k0_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_scaled_modified_bessel_k0_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_scaled_modified_bessel_k0_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_scaled_modified_bessel_k0_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_scaled_modified_bessel_k0_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_scaled_modified_bessel_k0_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_scaled_modified_bessel_k1_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_scaled_modified_bessel_k1_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_scaled_modified_bessel_k1_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_scaled_modified_bessel_k1_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_scaled_modified_bessel_k1_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_scaled_modified_bessel_k1_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_shifted_chebyshev_polynomial_t_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_shifted_chebyshev_polynomial_t_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_shifted_chebyshev_polynomial_t_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_shifted_chebyshev_polynomial_t_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_shifted_chebyshev_polynomial_t_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_shifted_chebyshev_polynomial_t_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_shifted_chebyshev_polynomial_u_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_shifted_chebyshev_polynomial_u_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_shifted_chebyshev_polynomial_u_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_shifted_chebyshev_polynomial_u_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_shifted_chebyshev_polynomial_u_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_shifted_chebyshev_polynomial_u_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_shifted_chebyshev_polynomial_v_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_shifted_chebyshev_polynomial_v_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_shifted_chebyshev_polynomial_v_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_shifted_chebyshev_polynomial_v_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_shifted_chebyshev_polynomial_v_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_shifted_chebyshev_polynomial_v_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_shifted_chebyshev_polynomial_w_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_shifted_chebyshev_polynomial_w_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_shifted_chebyshev_polynomial_w_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_shifted_chebyshev_polynomial_w_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_shifted_chebyshev_polynomial_w_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_shifted_chebyshev_polynomial_w_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_spherical_bessel_j0_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_spherical_bessel_j0_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_spherical_bessel_j0_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_spherical_bessel_j0_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_spherical_bessel_j0_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_spherical_bessel_j0_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_xlog1py_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_special_xlog1py_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_xlog1py_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_special_xlog1py_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_xlog1py_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_xlog1py_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_xlog1py_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_xlog1py_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_special_zeta_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_special_zeta_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_special_zeta_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_special_zeta_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_special_zeta_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_special_zeta_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_sqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu sqrt not support bf16 and complex dtypes
"test_meta_py_TestMetaMLU_test_meta_sqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu sqrt not support bf16 and complex dtypes
"test_meta_py_TestMetaMLU_test_meta_sqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support bf16 and complex dtypes
"test_meta_py_TestMetaMLU_test_meta_square_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_square_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_square_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_square_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_square_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_square_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_square_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_square_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_square_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_squeeze_mlu_bfloat16", # squeeze op unsupport bf16 on mlu
"test_meta_py_TestMetaMLU_test_meta_stack_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_std_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_std_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_std_mean_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_std_mean_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_std_mean_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_std_mean_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_stft_mlu_complex64",  # TODO(PYTORCH-10372): MLU stft don't support tensor dtype ComplexFloat.
"test_meta_py_TestMetaMLU_test_meta_stft_mlu_float32",  # TODO(PYTORCH-10374): CNNL FFT currently only support onesided.
"test_meta_py_TestMetaMLU_test_meta_sum_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_sum_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_sum_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_sum_to_size_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_sum_to_size_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_sum_to_size_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_sum_to_size_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_sum_to_size_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_sum_to_size_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_sum_to_size_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_sum_to_size_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_sum_to_size_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_svd_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_symeig_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_symeig_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_t_mlu_bfloat16", # t unsupport bf16
"test_meta_py_TestMetaMLU_test_meta_take_along_dim_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_take_along_dim_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_take_along_dim_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_take_along_dim_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_take_along_dim_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_take_along_dim_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_take_along_dim_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_take_along_dim_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_take_along_dim_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_take_mlu_bfloat16", # take op does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_meta_take_mlu_complex64", # take op does not support complex64 on mlu
"test_meta_py_TestMetaMLU_test_meta_tan_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_tan_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_tan_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_tan_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_tan_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_tan_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_tan_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_tan_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_tan_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_tan_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_tanh_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_tanh_mlu_complex64",
# TODO(PYTORCH-9186): bfloat16 is not support.
"test_meta_py_TestMetaMLU_test_meta_tensor_split_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_tensordot_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_tensordot_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_tensordot_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_tensordot_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_tile_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_tile_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_tile_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_tile_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_tile_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_tile_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_tile_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_tile_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_tile_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_to_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_to_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_to_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_to_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_to_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_to_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_to_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_to_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_to_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_to_sparse_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_to_sparse_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_to_sparse_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_to_sparse_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_to_sparse_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_to_sparse_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_to_sparse_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_to_sparse_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_to_sparse_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_topk_mlu_bfloat16", # depends on bfloat16
"test_meta_py_TestMetaMLU_test_meta_trace_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_trace_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_trace_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_trace_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_trace_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_trace_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_trace_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_trace_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_trace_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_trace_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_trapezoid_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_trapezoid_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_trapezoid_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_trapezoid_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_trapezoid_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_trapezoid_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_trapezoid_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_trapezoid_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_trapz_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_trapz_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_trapz_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_trapz_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_trapz_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_trapz_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_trapz_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_trapz_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_triangular_solve_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_triangular_solve_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_tril_indices_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_triu_indices_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_true_divide_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_meta_py_TestMetaMLU_test_meta_true_divide_mlu_complex32", # TODO(PYTORCH-8724): div not support complex dtypes
"test_meta_py_TestMetaMLU_test_meta_true_divide_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_meta_py_TestMetaMLU_test_meta_trunc_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_meta_py_TestMetaMLU_test_meta_trunc_mlu_int16", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_meta_py_TestMetaMLU_test_meta_trunc_mlu_int32", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_meta_py_TestMetaMLU_test_meta_trunc_mlu_int8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_meta_py_TestMetaMLU_test_meta_trunc_mlu_uint8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_meta_py_TestMetaMLU_test_meta_unflatten_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_unflatten_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_unflatten_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_unflatten_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_unflatten_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_unflatten_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_unflatten_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_unflatten_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_unflatten_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_unflatten_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_unfold_copy_mlu_bfloat16", # unfold op does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_meta_unfold_copy_mlu_complex32", # unfold op does not support complex32 on mlu
"test_meta_py_TestMetaMLU_test_meta_unfold_copy_mlu_complex64", # unfold op does not support complex64 on mlu
"test_meta_py_TestMetaMLU_test_meta_unfold_mlu_bfloat16", # unfold op does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_meta_unfold_mlu_complex32", # unfold op does not support complex32 on mlu
"test_meta_py_TestMetaMLU_test_meta_uniform_mlu_bfloat16", # TODO(PYTORCH-10262)
"test_meta_py_TestMetaMLU_test_meta_unique_consecutive_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_unique_consecutive_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_unique_consecutive_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_unique_consecutive_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_unique_consecutive_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_unique_consecutive_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_unique_consecutive_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_unique_mlu_bool", # unique op does not support bool on mlu
"test_meta_py_TestMetaMLU_test_meta_unique_mlu_float16", # unique op does not support float16 on mlu
"test_meta_py_TestMetaMLU_test_meta_unique_mlu_int16", # unique op does not support int16 on mlu
"test_meta_py_TestMetaMLU_test_meta_unique_mlu_int8", # unique op does not support int8 on mlu
"test_meta_py_TestMetaMLU_test_meta_unique_mlu_uint8", # unique op does not support unint8 on mlu
"test_meta_py_TestMetaMLU_test_meta_unsqueeze_mlu_bfloat16", # unsqueeze op unsupport bf16 on mlu
"test_meta_py_TestMetaMLU_test_meta_var_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_var_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_var_mean_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_var_mean_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_var_mean_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_var_mean_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_vdot_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_vdot_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_vdot_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_vdot_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_view_as_mlu_bfloat16", # BFloat16 is not supported by view_as on MLU
"test_meta_py_TestMetaMLU_test_meta_view_mlu_bfloat16", # BFloat16 is not supported by view on MLU
"test_meta_py_TestMetaMLU_test_meta_vsplit_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_vsplit_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_vsplit_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_vsplit_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_vsplit_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_vsplit_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_vsplit_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_vsplit_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_vsplit_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_vsplit_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_vstack_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_vstack_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_vstack_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_vstack_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_vstack_mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_vstack_mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_vstack_mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_vstack_mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_vstack_mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_vstack_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_where_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_where_mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_where_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_where_mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_where_mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_xlogy_mlu_bfloat16", # TODO(PYTORCH-8751): xlogy not support bf16
"test_meta_py_TestMetaMLU_test_meta_zero__mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_zero__mlu_bool",
"test_meta_py_TestMetaMLU_test_meta_zero__mlu_complex64",
"test_meta_py_TestMetaMLU_test_meta_zero__mlu_float16",
"test_meta_py_TestMetaMLU_test_meta_zero__mlu_float32",
"test_meta_py_TestMetaMLU_test_meta_zero__mlu_int16",
"test_meta_py_TestMetaMLU_test_meta_zero__mlu_int32",
"test_meta_py_TestMetaMLU_test_meta_zero__mlu_int8",
"test_meta_py_TestMetaMLU_test_meta_zero__mlu_uint8",
"test_meta_py_TestMetaMLU_test_meta_zeros_mlu_bfloat16", # zeros op does not support bfloat16 on mlu
"test_meta_py_TestMetaMLU_test_meta_zeros_mlu_complex32", # zeros op does not support complex32 on mlu
"test_meta_py_TestMetaMLU_test_meta_zeros_mlu_complex64", # zeros op does not support complex64 on mlu
"test_meta_py_TestMetaMLU_test_meta_zeros_like_mlu_bfloat16",
"test_meta_py_TestMetaMLU_test_meta_zeros_like_mlu_complex32",
"test_meta_py_TestMetaMLU_test_meta_zeros_like_mlu_complex64",
"test_model_dump_py_TestModelDump_test_inline_skeleton",
"test_model_dump_py_TestModelDump_test_invalid_json",
"test_model_dump_py_TestModelDump_test_main",
"test_model_dump_py_TestModelDump_test_memory_computation",
"test_model_dump_py_TestModelDump_test_model_with_lists",
"test_model_dump_py_TestModelDump_test_optimized_quantized_model",
"test_model_dump_py_TestModelDump_test_quantized_model",
"test_model_dump_py_TestModelDump_test_scripted_model",
"test_model_dump_py_TestModelDump_test_traced_model",
"test_module_init_py_TestModuleInitMLU_test_nn_AdaptiveAvgPool1d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_AdaptiveAvgPool2d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_AdaptiveAvgPool3d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_AdaptiveLogSoftmaxWithLoss_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_AdaptiveMaxPool1d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_AdaptiveMaxPool2d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_AdaptiveMaxPool3d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_AlphaDropout_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_AvgPool1d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_AvgPool2d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_AvgPool3d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_BCELoss_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_BCEWithLogitsLoss_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Bilinear_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_CELU_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_CTCLoss_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_ChannelShuffle_mlu_float32",
# "test_module_init_py_TestModuleInitMLU_test_nn_Conv1d_mlu_float32",
# "test_module_init_py_TestModuleInitMLU_test_nn_Conv2d_mlu_float32",
# "test_module_init_py_TestModuleInitMLU_test_nn_Conv3d_mlu_float32",
# "test_module_init_py_TestModuleInitMLU_test_nn_ConvTranspose1d_mlu_float32",
# "test_module_init_py_TestModuleInitMLU_test_nn_ConvTranspose2d_mlu_float32",
# "test_module_init_py_TestModuleInitMLU_test_nn_ConvTranspose3d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_CosineEmbeddingLoss_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_CosineSimilarity_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_CrossEntropyLoss_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_CrossMapLRN2d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Dropout1d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Dropout2d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Dropout3d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Dropout_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_ELU_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_EmbeddingBag_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Embedding_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_FeatureAlphaDropout_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Flatten_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_FractionalMaxPool2d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_FractionalMaxPool3d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_GELU_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_GLU_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Hardshrink_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Hardsigmoid_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Hardswish_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Hardtanh_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_HingeEmbeddingLoss_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_HuberLoss_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Identity_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_InstanceNorm1d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_InstanceNorm2d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_InstanceNorm3d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_KLDivLoss_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_LPPool1d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_LPPool2d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_LazyBatchNorm1d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_LazyBatchNorm2d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_LazyBatchNorm3d_mlu_float32",
# "test_module_init_py_TestModuleInitMLU_test_nn_LazyConv1d_mlu_float32",
# "test_module_init_py_TestModuleInitMLU_test_nn_LazyConv2d_mlu_float32",
# "test_module_init_py_TestModuleInitMLU_test_nn_LazyConv3d_mlu_float32",
# "test_module_init_py_TestModuleInitMLU_test_nn_LazyConvTranspose1d_mlu_float32",
# "test_module_init_py_TestModuleInitMLU_test_nn_LazyConvTranspose2d_mlu_float32",
# "test_module_init_py_TestModuleInitMLU_test_nn_LazyConvTranspose3d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_LazyInstanceNorm1d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_LazyInstanceNorm2d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_LazyInstanceNorm3d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_LazyLinear_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_LeakyReLU_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Linear_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_LocalResponseNorm_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_LogSigmoid_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_LogSoftmax_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_MSELoss_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_MarginRankingLoss_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_MaxPool1d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_MaxPool2d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_MaxPool3d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_MaxUnpool1d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_MaxUnpool2d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_MaxUnpool3d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Mish_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_ModuleDict_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_ModuleList_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_MultiLabelMarginLoss_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_MultiLabelSoftMarginLoss_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_MultiMarginLoss_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_MultiheadAttention_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_PReLU_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_PairwiseDistance_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_ParameterDict_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_ParameterList_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_PixelShuffle_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_PixelUnshuffle_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_RReLU_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_ReLU6_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_ReLU_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_ReflectionPad1d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_ReflectionPad2d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_ReflectionPad3d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_ReplicationPad3d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_SELU_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Sequential_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_SiLU_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Sigmoid_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_SmoothL1Loss_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_SoftMarginLoss_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Softmax2d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Softmax_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Softmin_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Softplus_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Softshrink_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Softsign_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_SyncBatchNorm_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Tanh_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Tanhshrink_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Threshold_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_TransformerDecoderLayer_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_TransformerDecoder_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_TransformerEncoderLayer_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_TransformerEncoder_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Transformer_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_TripletMarginLoss_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_TripletMarginWithDistanceLoss_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Unflatten_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_Upsample_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_UpsamplingBilinear2d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_UpsamplingNearest2d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_nn_ZeroPad2d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_qat_Conv1d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_qat_Conv2d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_qat_Conv3d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_qat_EmbeddingBag_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_qat_Embedding_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_qat_Linear_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantizable_LSTMCell_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantizable_LSTM_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantizable_MultiheadAttention_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantized_BatchNorm2d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantized_BatchNorm3d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantized_Conv1d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantized_Conv2d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantized_Conv3d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantized_ConvTranspose1d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantized_ConvTranspose2d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantized_ConvTranspose3d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantized_DeQuantize_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantized_Dropout_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantized_ELU_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantized_FXFloatFunctional_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantized_FloatFunctional_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantized_Hardswish_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantized_InstanceNorm1d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantized_InstanceNorm2d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantized_InstanceNorm3d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantized_LeakyReLU_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantized_Linear_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantized_MaxPool2d_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantized_PReLU_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantized_QFunctional_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantized_Quantize_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantized_ReLU6_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantized_Sigmoid_mlu_float32",
"test_module_init_py_TestModuleInitMLU_test_quantized_Softmax_mlu_float32",
"test_modules_py_TestModuleMLU_test_check_inplace_nn_ELU_mlu_float32",
"test_modules_py_TestModuleMLU_test_check_inplace_nn_Hardswish_mlu_float32",
"test_modules_py_TestModuleMLU_test_check_inplace_nn_ReLU_mlu_float32",
"test_modules_py_TestModuleMLU_test_cpu_mlu_parity_ao_nn_quantized_MaxPool2d_mlu_float32",
"test_modules_py_TestModuleMLU_test_cpu_mlu_parity_nn_AdaptiveAvgPool2d_mlu_float32",
"test_modules_py_TestModuleMLU_test_cpu_mlu_parity_nn_AvgPool1d_mlu_float32",
"test_modules_py_TestModuleMLU_test_cpu_mlu_parity_nn_Bilinear_mlu_float32",
"test_modules_py_TestModuleMLU_test_cpu_mlu_parity_nn_CrossEntropyLoss_mlu_float32",
"test_modules_py_TestModuleMLU_test_cpu_mlu_parity_nn_ELU_mlu_float32",
"test_modules_py_TestModuleMLU_test_cpu_mlu_parity_nn_Embedding_mlu_float32",
"test_modules_py_TestModuleMLU_test_cpu_mlu_parity_nn_Hardswish_mlu_float32",
"test_modules_py_TestModuleMLU_test_cpu_mlu_parity_nn_Linear_mlu_float32",
"test_modules_py_TestModuleMLU_test_cpu_mlu_parity_nn_MultiheadAttention_eval_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_cpu_mlu_parity_nn_MultiheadAttention_train_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_cpu_mlu_parity_nn_ReLU_mlu_float32",
"test_modules_py_TestModuleMLU_test_cpu_mlu_parity_nn_Sigmoid_mlu_float32",
"test_modules_py_TestModuleMLU_test_cpu_mlu_parity_nn_TransformerDecoderLayer_mlu_float32",
"test_modules_py_TestModuleMLU_test_cpu_mlu_parity_nn_TransformerEncoderLayer_eval_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_cpu_mlu_parity_nn_TransformerEncoderLayer_train_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_cpu_mlu_parity_nn_Transformer_mlu_float32",
"test_modules_py_TestModuleMLU_test_factory_kwargs_ao_nn_quantized_MaxPool2d_mlu_float32",
"test_modules_py_TestModuleMLU_test_factory_kwargs_nn_AdaptiveAvgPool2d_mlu_float32",
"test_modules_py_TestModuleMLU_test_factory_kwargs_nn_AvgPool1d_mlu_float32",
"test_modules_py_TestModuleMLU_test_factory_kwargs_nn_Bilinear_mlu_float32",
"test_modules_py_TestModuleMLU_test_factory_kwargs_nn_CrossEntropyLoss_mlu_float32",
"test_modules_py_TestModuleMLU_test_factory_kwargs_nn_ELU_mlu_float32",
"test_modules_py_TestModuleMLU_test_factory_kwargs_nn_Embedding_mlu_float32",
"test_modules_py_TestModuleMLU_test_factory_kwargs_nn_Hardswish_mlu_float32",
"test_modules_py_TestModuleMLU_test_factory_kwargs_nn_Linear_mlu_float32",
"test_modules_py_TestModuleMLU_test_factory_kwargs_nn_MultiheadAttention_eval_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_factory_kwargs_nn_MultiheadAttention_train_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_factory_kwargs_nn_ReLU_mlu_float32",
"test_modules_py_TestModuleMLU_test_factory_kwargs_nn_Sigmoid_mlu_float32",
"test_modules_py_TestModuleMLU_test_factory_kwargs_nn_TransformerDecoderLayer_mlu_float32",
"test_modules_py_TestModuleMLU_test_factory_kwargs_nn_TransformerEncoderLayer_eval_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_factory_kwargs_nn_TransformerEncoderLayer_train_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_factory_kwargs_nn_Transformer_mlu_float32",
"test_modules_py_TestModuleMLU_test_forward_ao_nn_quantized_MaxPool2d_mlu_float32",
"test_modules_py_TestModuleMLU_test_forward_nn_AdaptiveAvgPool2d_mlu_float32",
"test_modules_py_TestModuleMLU_test_forward_nn_AvgPool1d_mlu_float32",
"test_modules_py_TestModuleMLU_test_forward_nn_Bilinear_mlu_float32",
"test_modules_py_TestModuleMLU_test_forward_nn_CrossEntropyLoss_mlu_float32",
"test_modules_py_TestModuleMLU_test_forward_nn_ELU_mlu_float32",
"test_modules_py_TestModuleMLU_test_forward_nn_Embedding_mlu_float32",
"test_modules_py_TestModuleMLU_test_forward_nn_Hardswish_mlu_float32",
"test_modules_py_TestModuleMLU_test_forward_nn_Linear_mlu_float32",
"test_modules_py_TestModuleMLU_test_forward_nn_MultiheadAttention_eval_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_forward_nn_MultiheadAttention_train_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_forward_nn_ReLU_mlu_float32",
"test_modules_py_TestModuleMLU_test_forward_nn_Sigmoid_mlu_float32",
"test_modules_py_TestModuleMLU_test_forward_nn_TransformerDecoderLayer_mlu_float32",
"test_modules_py_TestModuleMLU_test_forward_nn_TransformerEncoderLayer_eval_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_forward_nn_TransformerEncoderLayer_train_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_forward_nn_Transformer_mlu_float32",
"test_modules_py_TestModuleMLU_test_grad_nn_L1Loss_mlu_float64",
"test_modules_py_TestModuleMLU_test_gradgrad_nn_L1Loss_mlu_float64",
"test_modules_py_TestModuleMLU_test_grad_nn_GaussianNLLLoss_mlu_float64", # 64 bit calculation may fail.
"test_modules_py_TestModuleMLU_test_grad_nn_NLLLoss_mlu_float64", # 64 bit calculation may fail.
"test_modules_py_TestModuleMLU_test_gradgrad_nn_GaussianNLLLoss_mlu_float64", # 64 bit calculation may fail.
"test_modules_py_TestModuleMLU_test_gradgrad_nn_NLLLoss_mlu_float64", # 64 bit calculation may fail.
"test_modules_py_TestModuleMLU_test_if_train_and_eval_modes_differ_ao_nn_quantized_MaxPool2d_mlu_float32",
"test_modules_py_TestModuleMLU_test_if_train_and_eval_modes_differ_nn_AdaptiveAvgPool2d_mlu_float32",
"test_modules_py_TestModuleMLU_test_if_train_and_eval_modes_differ_nn_AvgPool1d_mlu_float32",
"test_modules_py_TestModuleMLU_test_if_train_and_eval_modes_differ_nn_Bilinear_mlu_float32",
"test_modules_py_TestModuleMLU_test_if_train_and_eval_modes_differ_nn_CrossEntropyLoss_mlu_float32",
"test_modules_py_TestModuleMLU_test_if_train_and_eval_modes_differ_nn_ELU_mlu_float32",
"test_modules_py_TestModuleMLU_test_if_train_and_eval_modes_differ_nn_Embedding_mlu_float32",
"test_modules_py_TestModuleMLU_test_if_train_and_eval_modes_differ_nn_Hardswish_mlu_float32",
"test_modules_py_TestModuleMLU_test_if_train_and_eval_modes_differ_nn_Linear_mlu_float32",
"test_modules_py_TestModuleMLU_test_if_train_and_eval_modes_differ_nn_MultiheadAttention_mlu_float32",
"test_modules_py_TestModuleMLU_test_if_train_and_eval_modes_differ_nn_ReLU_mlu_float32",
"test_modules_py_TestModuleMLU_test_if_train_and_eval_modes_differ_nn_Sigmoid_mlu_float32",
"test_modules_py_TestModuleMLU_test_if_train_and_eval_modes_differ_nn_TransformerDecoderLayer_mlu_float32",
"test_modules_py_TestModuleMLU_test_if_train_and_eval_modes_differ_nn_TransformerEncoderLayer_mlu_float32",
"test_modules_py_TestModuleMLU_test_if_train_and_eval_modes_differ_nn_Transformer_mlu_float32",
"test_modules_py_TestModuleMLU_test_memory_format_ao_nn_quantized_MaxPool2d_mlu_float32",
"test_modules_py_TestModuleMLU_test_memory_format_nn_AdaptiveAvgPool2d_mlu_float32",
"test_modules_py_TestModuleMLU_test_memory_format_nn_AvgPool1d_mlu_float32",
"test_modules_py_TestModuleMLU_test_memory_format_nn_BatchNorm2d_eval_mode_mlu_float32",  #TODO(PYTORCH-10096): CNNL only support CL output.
"test_modules_py_TestModuleMLU_test_memory_format_nn_BatchNorm2d_train_mode_mlu_float32",  #TODO(PYTORCH-10096): CNNL only support CL output.
"test_modules_py_TestModuleMLU_test_memory_format_nn_BatchNorm3d_eval_mode_mlu_float32",  #TODO(PYTORCH-10096): CNNL only support CL output.
"test_modules_py_TestModuleMLU_test_memory_format_nn_BatchNorm3d_train_mode_mlu_float32",  #TODO(PYTORCH-10096): CNNL only support CL output.
"test_modules_py_TestModuleMLU_test_memory_format_nn_Bilinear_mlu_float32",
"test_modules_py_TestModuleMLU_test_memory_format_nn_CrossEntropyLoss_mlu_float32",
"test_modules_py_TestModuleMLU_test_memory_format_nn_ELU_mlu_float32",
"test_modules_py_TestModuleMLU_test_memory_format_nn_Embedding_mlu_float32",
"test_modules_py_TestModuleMLU_test_memory_format_nn_Hardswish_mlu_float32",
"test_modules_py_TestModuleMLU_test_memory_format_nn_Linear_mlu_float32",
"test_modules_py_TestModuleMLU_test_memory_format_nn_MultiheadAttention_eval_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_memory_format_nn_MultiheadAttention_train_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_memory_format_nn_ReLU_mlu_float32",
"test_modules_py_TestModuleMLU_test_memory_format_nn_Sigmoid_mlu_float32",
"test_modules_py_TestModuleMLU_test_memory_format_nn_TransformerDecoderLayer_mlu_float32",
"test_modules_py_TestModuleMLU_test_memory_format_nn_TransformerEncoderLayer_eval_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_memory_format_nn_TransformerEncoderLayer_train_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_memory_format_nn_Transformer_mlu_float32",
"test_modules_py_TestModuleMLU_test_multiple_device_transfer_ao_nn_quantized_MaxPool2d_mlu_float32",
"test_modules_py_TestModuleMLU_test_multiple_device_transfer_nn_AdaptiveAvgPool2d_mlu_float32",
"test_modules_py_TestModuleMLU_test_multiple_device_transfer_nn_AvgPool1d_mlu_float32",
"test_modules_py_TestModuleMLU_test_multiple_device_transfer_nn_Bilinear_mlu_float32",
"test_modules_py_TestModuleMLU_test_multiple_device_transfer_nn_CrossEntropyLoss_mlu_float32",
"test_modules_py_TestModuleMLU_test_multiple_device_transfer_nn_ELU_mlu_float32",
"test_modules_py_TestModuleMLU_test_multiple_device_transfer_nn_Embedding_mlu_float32",
"test_modules_py_TestModuleMLU_test_multiple_device_transfer_nn_Hardswish_mlu_float32",
"test_modules_py_TestModuleMLU_test_multiple_device_transfer_nn_Linear_mlu_float32",
"test_modules_py_TestModuleMLU_test_multiple_device_transfer_nn_MultiheadAttention_eval_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_multiple_device_transfer_nn_MultiheadAttention_train_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_multiple_device_transfer_nn_ReLU_mlu_float32",
"test_modules_py_TestModuleMLU_test_multiple_device_transfer_nn_Sigmoid_mlu_float32",
"test_modules_py_TestModuleMLU_test_multiple_device_transfer_nn_TransformerDecoderLayer_mlu_float32",
"test_modules_py_TestModuleMLU_test_multiple_device_transfer_nn_TransformerEncoderLayer_eval_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_multiple_device_transfer_nn_TransformerEncoderLayer_train_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_multiple_device_transfer_nn_Transformer_mlu_float32",
"test_modules_py_TestModuleMLU_test_non_contiguous_tensors_ao_nn_quantized_MaxPool2d_mlu_float32",
"test_modules_py_TestModuleMLU_test_non_contiguous_tensors_nn_AdaptiveAvgPool2d_mlu_float32",
"test_modules_py_TestModuleMLU_test_non_contiguous_tensors_nn_AvgPool1d_mlu_float32",
"test_modules_py_TestModuleMLU_test_non_contiguous_tensors_nn_Bilinear_mlu_float32",
"test_modules_py_TestModuleMLU_test_non_contiguous_tensors_nn_CrossEntropyLoss_mlu_float32",
"test_modules_py_TestModuleMLU_test_non_contiguous_tensors_nn_Embedding_mlu_float32",
"test_modules_py_TestModuleMLU_test_non_contiguous_tensors_nn_Hardswish_mlu_float32",
"test_modules_py_TestModuleMLU_test_non_contiguous_tensors_nn_Linear_mlu_float32",
"test_modules_py_TestModuleMLU_test_non_contiguous_tensors_nn_MultiheadAttention_eval_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_non_contiguous_tensors_nn_MultiheadAttention_train_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_non_contiguous_tensors_nn_ReLU_mlu_float32",
"test_modules_py_TestModuleMLU_test_non_contiguous_tensors_nn_Sigmoid_mlu_float32",
"test_modules_py_TestModuleMLU_test_non_contiguous_tensors_nn_TransformerDecoderLayer_mlu_float32",
"test_modules_py_TestModuleMLU_test_non_contiguous_tensors_nn_TransformerEncoderLayer_eval_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_non_contiguous_tensors_nn_TransformerEncoderLayer_train_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_non_contiguous_tensors_nn_Transformer_mlu_float32",
"test_modules_py_TestModuleMLU_test_pickle_ao_nn_quantized_MaxPool2d_mlu_float32",
"test_modules_py_TestModuleMLU_test_pickle_nn_AdaptiveAvgPool2d_mlu_float32",
"test_modules_py_TestModuleMLU_test_pickle_nn_AvgPool1d_mlu_float32",
"test_modules_py_TestModuleMLU_test_pickle_nn_Bilinear_mlu_float32",
"test_modules_py_TestModuleMLU_test_pickle_nn_CrossEntropyLoss_mlu_float32",
"test_modules_py_TestModuleMLU_test_pickle_nn_ELU_mlu_float32",
"test_modules_py_TestModuleMLU_test_pickle_nn_Embedding_mlu_float32",
"test_modules_py_TestModuleMLU_test_pickle_nn_Hardswish_mlu_float32",
"test_modules_py_TestModuleMLU_test_pickle_nn_Linear_mlu_float32",
"test_modules_py_TestModuleMLU_test_pickle_nn_MultiheadAttention_eval_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_pickle_nn_MultiheadAttention_train_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_pickle_nn_ReLU_mlu_float32",
"test_modules_py_TestModuleMLU_test_pickle_nn_Sigmoid_mlu_float32",
"test_modules_py_TestModuleMLU_test_pickle_nn_TransformerDecoderLayer_mlu_float32",
"test_modules_py_TestModuleMLU_test_pickle_nn_TransformerEncoderLayer_eval_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_pickle_nn_TransformerEncoderLayer_train_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_pickle_nn_Transformer_mlu_float32",
"test_modules_py_TestModuleMLU_test_repr_ao_nn_quantized_MaxPool2d_mlu_float32",
"test_modules_py_TestModuleMLU_test_repr_nn_AdaptiveAvgPool2d_mlu_float32",
"test_modules_py_TestModuleMLU_test_repr_nn_AvgPool1d_mlu_float32",
"test_modules_py_TestModuleMLU_test_repr_nn_Bilinear_mlu_float32",
"test_modules_py_TestModuleMLU_test_repr_nn_CrossEntropyLoss_mlu_float32",
"test_modules_py_TestModuleMLU_test_repr_nn_ELU_mlu_float32",
"test_modules_py_TestModuleMLU_test_repr_nn_Embedding_mlu_float32",
"test_modules_py_TestModuleMLU_test_repr_nn_Hardswish_mlu_float32",
"test_modules_py_TestModuleMLU_test_repr_nn_Linear_mlu_float32",
"test_modules_py_TestModuleMLU_test_repr_nn_MultiheadAttention_eval_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_repr_nn_MultiheadAttention_train_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_repr_nn_ReLU_mlu_float32",
"test_modules_py_TestModuleMLU_test_repr_nn_Sigmoid_mlu_float32",
"test_modules_py_TestModuleMLU_test_repr_nn_TransformerDecoderLayer_mlu_float32",
"test_modules_py_TestModuleMLU_test_repr_nn_TransformerEncoderLayer_eval_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_repr_nn_TransformerEncoderLayer_train_mode_mlu_float32",
"test_modules_py_TestModuleMLU_test_repr_nn_Transformer_mlu_float32",
"test_modules_py_TestModuleMLU_test_grad_nn_BatchNorm2d_eval_mode_mlu_float64",     # Do not support fp64
"test_modules_py_TestModuleMLU_test_grad_nn_BatchNorm2d_train_mode_mlu_float64",     # Do not support fp64
"test_modules_py_TestModuleMLU_test_grad_nn_BatchNorm3d_eval_mode_mlu_float64",     # Do not support fp64
"test_modules_py_TestModuleMLU_test_grad_nn_BatchNorm3d_train_mode_mlu_float64",     # Do not support fp64
"test_modules_py_TestModuleMLU_test_gradgrad_nn_BatchNorm2d_eval_mode_mlu_float64",     # Do not support fp64
"test_modules_py_TestModuleMLU_test_gradgrad_nn_BatchNorm2d_train_mode_mlu_float64",     # Do not support fp64
"test_modules_py_TestModuleMLU_test_gradgrad_nn_BatchNorm3d_eval_mode_mlu_float64",     # Do not support fp64
"test_modules_py_TestModuleMLU_test_gradgrad_nn_BatchNorm3d_train_mode_mlu_float64",     # Do not support fp64
"test_modules_py_TestModuleMLU_test_memory_format_nn_BatchNorm2d_eval_mode_mlu_float64",     #TODO(PYTORCH-10096): CNNL only support CL output.
"test_modules_py_TestModuleMLU_test_memory_format_nn_BatchNorm2d_train_mode_mlu_float64",     #TODO(PYTORCH-10096): CNNL only support CL output.
"test_modules_py_TestModuleMLU_test_memory_format_nn_BatchNorm3d_eval_mode_mlu_float64",     #TODO(PYTORCH-10096): CNNL only support CL output.
"test_modules_py_TestModuleMLU_test_memory_format_nn_BatchNorm3d_train_mode_mlu_float64",     #TODO(PYTORCH-10096): CNNL only support CL output.
"test_modules_py_TestModuleMLU_test_grad_nn_RNNCell_mlu_float64",     # Do not support fp64
"test_modules_py_TestModuleMLU_test_gradgrad_nn_RNNCell_mlu_float64",     # Do not support fp64
"test_modules_py_TestModuleMLU_test_grad_nn_GRUCell_mlu_float64",     # Do not support fp64
"test_modules_py_TestModuleMLU_test_gradgrad_nn_GRUCell_mlu_float64",     # Do not support fp64
"test_modules_py_TestModuleMLU_test_grad_nn_LSTMCell_mlu_float64",     # Do not support fp64
"test_modules_py_TestModuleMLU_test_gradgrad_nn_LSTMCell_mlu_float64",     # Do not support fp64
"test_monitor_py_TestMonitor_test_event_handler",
"test_monitor_py_TestMonitor_test_fixed_count_stat",
"test_monitor_py_TestMonitor_test_interval_stat",
"test_monitor_py_TestMonitor_test_log_event",
"test_monitor_py_TestMonitorTensorboard_test_event_handler",
"test_multiprocessing_py_TestMultiprocessing_test_autograd_errors",
"test_multiprocessing_py_TestMultiprocessing_test_autograd_fine_with_spawn",
"test_multiprocessing_py_TestMultiprocessing_test_mlu_bad_call",
"test_multiprocessing_py_TestMultiprocessing_test_mlu_ipc_deadlock",
"test_multiprocessing_py_TestMultiprocessing_test_mlu_memory_allocation",
"test_multiprocessing_py_TestMultiprocessing_test_mlu_parameter_sharing",
"test_multiprocessing_py_TestMultiprocessing_test_mlu_send_many",
"test_multiprocessing_py_TestMultiprocessing_test_mlu_simple",
"test_multiprocessing_py_TestMultiprocessing_test_mlu_small_tensors",
"test_multiprocessing_py_TestMultiprocessing_test_mlu_variable_sharing",
"test_multiprocessing_py_TestMultiprocessing_test_empty_shared",
"test_multiprocessing_py_TestMultiprocessing_test_empty_tensor_sharing",
"test_multiprocessing_py_TestMultiprocessing_test_empty_tensor_sharing_mlu",
"test_multiprocessing_py_TestMultiprocessing_test_event",
"test_multiprocessing_py_TestMultiprocessing_test_event_handle_exporter",
"test_multiprocessing_py_TestMultiprocessing_test_event_handle_importer",
"test_multiprocessing_py_TestMultiprocessing_test_event_handle_multi_mlu",
"test_multiprocessing_py_TestMultiprocessing_test_event_multiprocess",
"test_multiprocessing_py_TestMultiprocessing_test_fd_pool",
"test_multiprocessing_py_TestMultiprocessing_test_fd_preserve_sharing",
"test_multiprocessing_py_TestMultiprocessing_test_fd_sharing",
"test_multiprocessing_py_TestMultiprocessing_test_fs",
"test_multiprocessing_py_TestMultiprocessing_test_fs_is_shared",
"test_multiprocessing_py_TestMultiprocessing_test_fs_pool",
"test_multiprocessing_py_TestMultiprocessing_test_fs_preserve_sharing",
"test_multiprocessing_py_TestMultiprocessing_test_fs_sharing",
"test_multiprocessing_py_TestMultiprocessing_test_inherit_tensor",
"test_multiprocessing_py_TestMultiprocessing_test_integer_parameter_serialization_cpu",
"test_multiprocessing_py_TestMultiprocessing_test_integer_parameter_serialization_mlu",
"test_multiprocessing_py_TestMultiprocessing_test_is_shared",
"test_multiprocessing_py_TestMultiprocessing_test_is_shared_mlu",
"test_multiprocessing_py_TestMultiprocessing_test_leaf_variable_sharing",
"test_multiprocessing_py_TestMultiprocessing_test_mixed_types_mlu_sharing",
"test_multiprocessing_py_TestMultiprocessing_test_non_leaf_variable_sharing",
"test_multiprocessing_py_TestMultiprocessing_test_parameter_sharing",
"test_multiprocessing_py_TestMultiprocessing_test_variable_sharing",
"test_multiprocessing_py_TestMultiprocessing_test_wrong_mlu_fork",
"test_multiprocessing_spawn_py_SpawnTest_test_exception_all",
"test_multiprocessing_spawn_py_SpawnTest_test_exception_raises",
"test_multiprocessing_spawn_py_SpawnTest_test_exception_single",
"test_multiprocessing_spawn_py_SpawnTest_test_first_argument_index",
"test_multiprocessing_spawn_py_SpawnTest_test_signal_raises",
"test_multiprocessing_spawn_py_SpawnTest_test_success",
"test_multiprocessing_spawn_py_SpawnTest_test_success_first_then_exception",
"test_multiprocessing_spawn_py_SpawnTest_test_success_non_blocking",
"test_multiprocessing_spawn_py_SpawnTest_test_terminate_exit",
"test_multiprocessing_spawn_py_SpawnTest_test_terminate_signal",
"test_multiprocessing_spawn_py_ForkTest_test_exception_all",
"test_multiprocessing_spawn_py_ForkTest_test_exception_single",
"test_multiprocessing_spawn_py_ForkTest_test_first_argument_index",
"test_multiprocessing_spawn_py_ForkTest_test_success",
"test_multiprocessing_spawn_py_ForkTest_test_success_first_then_exception",
"test_multiprocessing_spawn_py_ForkTest_test_success_non_blocking",
"test_multiprocessing_spawn_py_ForkTest_test_terminate_exit",
"test_multiprocessing_spawn_py_ForkTest_test_terminate_signal",
"test_multiprocessing_spawn_py_ErrorTest_test_errors_pickleable",
"test_namedtensor_py_TestNamedTensor_test_aaa_must_run_first_check_experimental_warning",
"test_namedtensor_py_TestNamedTensor_test_addcmul_addcdiv",
"test_namedtensor_py_TestNamedTensor_test_addmm",
"test_namedtensor_py_TestNamedTensor_test_addmv",
"test_namedtensor_py_TestNamedTensor_test_align_as",
"test_namedtensor_py_TestNamedTensor_test_align_tensors",
"test_namedtensor_py_TestNamedTensor_test_align_tensors_two_inputs",
"test_namedtensor_py_TestNamedTensor_test_align_to",
"test_namedtensor_py_TestNamedTensor_test_align_to_ellipsis",
"test_namedtensor_py_TestNamedTensor_test_any_all",
"test_namedtensor_py_TestNamedTensor_test_as_strided",
"test_namedtensor_py_TestNamedTensor_test_as_strided_mlu",
"test_namedtensor_py_TestNamedTensor_test_autograd_ignores_names",
"test_namedtensor_py_TestNamedTensor_test_autograd_smoke",
"test_namedtensor_py_TestNamedTensor_test_autograd_warns_named_grad",
"test_namedtensor_py_TestNamedTensor_test_bernoulli",
"test_namedtensor_py_TestNamedTensor_test_big_tensor_repr_has_names",
"test_namedtensor_py_TestNamedTensor_test_binary_ops",
"test_namedtensor_py_TestNamedTensor_test_bitwise_not",
"test_namedtensor_py_TestNamedTensor_test_bmm",
"test_namedtensor_py_TestNamedTensor_test_cat",
"test_namedtensor_py_TestNamedTensor_test_cdist",
"test_namedtensor_py_TestNamedTensor_test_comparison_ops",
"test_namedtensor_py_TestNamedTensor_test_cummax_cummin",
"test_namedtensor_py_TestNamedTensor_test_detach",
"test_namedtensor_py_TestNamedTensor_test_diagonal",
"test_namedtensor_py_TestNamedTensor_test_equal",
"test_namedtensor_py_TestNamedTensor_test_expand",
"test_namedtensor_py_TestNamedTensor_test_factory_coverage",
"test_namedtensor_py_TestNamedTensor_test_factory_edge_cases",
"test_namedtensor_py_TestNamedTensor_test_flatten",
"test_namedtensor_py_TestNamedTensor_test_flatten_nodims",
"test_namedtensor_py_TestNamedTensor_test_has_names",
"test_namedtensor_py_TestNamedTensor_test_index_fill",
"test_namedtensor_py_TestNamedTensor_test_info_smoke",
"test_namedtensor_py_TestNamedTensor_test_logcumsumexp",
"test_namedtensor_py_TestNamedTensor_test_logical_not",
"test_namedtensor_py_TestNamedTensor_test_logical_ops",
"test_namedtensor_py_TestNamedTensor_test_masked_fill",
"test_namedtensor_py_TestNamedTensor_test_masked_select",
"test_namedtensor_py_TestNamedTensor_test_matmul",
"test_namedtensor_py_TestNamedTensor_test_max_pooling",
"test_namedtensor_py_TestNamedTensor_test_max_pooling_without_names_does_not_warn",
"test_namedtensor_py_TestNamedTensor_test_mm",
"test_namedtensor_py_TestNamedTensor_test_mv",
"test_namedtensor_py_TestNamedTensor_test_no_jit_script_support",
"test_namedtensor_py_TestNamedTensor_test_no_jit_tracer_support",
"test_namedtensor_py_TestNamedTensor_test_no_multiprocessing_support",
"test_namedtensor_py_TestNamedTensor_test_no_pickle_support",
"test_namedtensor_py_TestNamedTensor_test_no_save_support",
"test_namedtensor_py_TestNamedTensor_test_noncontig_contiguous",
"test_namedtensor_py_TestNamedTensor_test_none_names_refcount",
"test_namedtensor_py_TestNamedTensor_test_nyi_dimname_overload_msg",
"test_namedtensor_py_TestNamedTensor_test_out_fn_semantics",
"test_namedtensor_py_TestNamedTensor_test_pow_special",
"test_namedtensor_py_TestNamedTensor_test_py3_ellipsis",
"test_namedtensor_py_TestNamedTensor_test_reduction_fns",
"test_namedtensor_py_TestNamedTensor_test_refine_names",
"test_namedtensor_py_TestNamedTensor_test_rename",
"test_namedtensor_py_TestNamedTensor_test_rename_",
"test_namedtensor_py_TestNamedTensor_test_rename_globber",
"test_namedtensor_py_TestNamedTensor_test_rename_rename_map",
"test_namedtensor_py_TestNamedTensor_test_repr",
"test_namedtensor_py_TestNamedTensor_test_resize",
"test_namedtensor_py_TestNamedTensor_test_select",
"test_namedtensor_py_TestNamedTensor_test_select_mlu",
"test_namedtensor_py_TestNamedTensor_test_set_names_property",
"test_namedtensor_py_TestNamedTensor_test_size",
"test_namedtensor_py_TestNamedTensor_test_split_fns_propagates_names",
"test_namedtensor_py_TestNamedTensor_test_stride",
"test_namedtensor_py_TestNamedTensor_test_tensor_from_lists",
"test_namedtensor_py_TestNamedTensor_test_tensor_from_named_tensor",
"test_namedtensor_py_TestNamedTensor_test_tensor_from_numpy",
"test_namedtensor_py_TestNamedTensor_test_tensor_from_tensor",
"test_namedtensor_py_TestNamedTensor_test_tensor_grad_is_unnamed",
"test_namedtensor_py_TestNamedTensor_test_trivial",
"test_namedtensor_py_TestNamedTensor_test_unary_propagate_names_fns",
"test_namedtensor_py_TestNamedTensor_test_unflatten",
"test_namedtensor_py_TestNamedTensor_test_unsupported_op_error_msg",
"test_namedtensor_py_TestNamedTensor_test_using_seen_interned_string_doesnt_bump_refcount",
"test_namedtensor_py_TestNamedTensor_test_using_unseen_interned_string_bumps_refcount_permanently",
"test_namedtensor_py_TestNamedTensor_test_using_unseen_uninterned_string_refcounts",
"test_namedtuple_return_api_py_TestNamedTupleAPI_test_import_return_types",
"test_namedtuple_return_api_py_TestNamedTupleAPI_test_namedtuple_return",
"test_namedtuple_return_api_py_TestNamedTupleAPI_test_native_functions_yaml",
"test_native_functions_py_TestNativeFunctions_test_optional_filled_intlist",
"test_native_functions_py_TestNativeFunctions_test_optional_floatlist",
"test_native_functions_py_TestNativeFunctions_test_optional_floatlist_invalid",
"test_native_functions_py_TestNativeFunctions_test_optional_intlist",
"test_native_functions_py_TestNativeFunctions_test_optional_intlist_invalid",
"test_native_functions_py_TestNativeFunctions_test_string_defaults",
"test_native_mha_py_TestMHADeviceTypeMLU_test_native_multihead_attention_mlu_float16",
"test_native_mha_py_TestMHADeviceTypeMLU_test_native_multihead_attention_mlu_float32",
"test_native_mha_py_TestMHADeviceTypeMLU_test_native_multihead_encoder_decoder_attention_mlu_float16",
"test_native_mha_py_TestMHADeviceTypeMLU_test_native_multihead_encoder_decoder_attention_mlu_float32",
"test_native_mha_py_TestMHADeviceTypeMLU_test_native_multihead_self_attention_mlu_float16",
"test_native_mha_py_TestMHADeviceTypeMLU_test_native_multihead_self_attention_mlu_float32",
"test_native_mha_py_TestMHADeviceTypeMLU_test_transform_bias_rescale_qkv_mlu_float32",
"test_native_mha_py_TestMHADeviceTypeMLU_test_transform_bias_rescale_qkv_nested_mlu_float32",
"test_nestedtensor_py_TestNestedTensor_test_activations",
"test_nestedtensor_py_TestNestedTensor_test_default_nested_tensor",
"test_nestedtensor_py_TestNestedTensor_test_dim",
"test_nestedtensor_py_TestNestedTensor_test_is_contiguous",
"test_nestedtensor_py_TestNestedTensor_test_nested_namespace",
"test_nestedtensor_py_TestNestedTensor_test_nested_tensor",
"test_nestedtensor_py_TestNestedTensor_test_nested_tensor_matching_dim",
"test_nestedtensor_py_TestNestedTensor_test_numel",
"test_nestedtensor_py_TestNestedTensor_test_repr_string",
"test_nestedtensor_py_TestNestedTensor_test_size",
"test_nestedtensor_py_TestNestedTensor_test_size_dim",
"test_nestedtensor_py_TestNestedTensor_test_stride",
"test_nestedtensor_py_TestNestedTensor_test_to_padded_tensor_on_empty_tensor",
"test_nestedtensor_py_TestNestedTensor_test_unbind_0",
"test_nestedtensor_py_TestNestedTensor_test_unbind_1",
"test_nestedtensor_py_TestNestedTensor_test_unbind_3",
"test_nestedtensor_py_TestNestedTensor_test_unbind_4",
"test_nestedtensor_py_TestNestedTensor_test_unbind_dim",
"test_nestedtensor_py_TestNestedTensorAutograd_test_as_nested_tensor_propagates_gradients",
"test_nestedtensor_py_TestNestedTensorAutograd_test_backward_for_add_op",
"test_nestedtensor_py_TestNestedTensorAutograd_test_dropout_backward",
"test_nestedtensor_py_TestNestedTensorAutograd_test_indexing_backward",
"test_nestedtensor_py_TestNestedTensorAutograd_test_nested_tensor_bmm_backward",
"test_nestedtensor_py_TestNestedTensorAutograd_test_nested_tensor_bmm_gradcheck",
"test_nestedtensor_py_TestNestedTensorAutograd_test_nested_tensor_from_list",
"test_nestedtensor_py_TestNestedTensorAutograd_test_nested_tensor_from_mask_and_to_padded",
"test_nestedtensor_py_TestNestedTensorAutograd_test_nested_tensor_from_padded",
"test_nestedtensor_py_TestNestedTensorAutograd_test_nested_tensor_from_padded_fused",
"test_nestedtensor_py_TestNestedTensorAutograd_test_nested_tensor_generates_leaf",
"test_nestedtensor_py_TestNestedTensorAutograd_test_nested_tensor_linear",
"test_nestedtensor_py_TestNestedTensorAutograd_test_nested_tensor_linear_backward",
"test_nestedtensor_py_TestNestedTensorAutograd_test_nested_tensor_matmul_backward",
"test_nestedtensor_py_TestNestedTensorAutograd_test_nested_tensor_matmul_gradcheck",
"test_nestedtensor_py_TestNestedTensorAutograd_test_nested_tensor_reshape_backward",
"test_nestedtensor_py_TestNestedTensorAutograd_test_nested_tensor_reshape_gradcheck",
"test_nestedtensor_py_TestNestedTensorAutograd_test_nested_tensor_softmax",
"test_nestedtensor_py_TestNestedTensorAutograd_test_nested_tensor_to_padded_tensor",
"test_nestedtensor_py_TestNestedTensorAutograd_test_nested_tensor_transpose_backward",
"test_nestedtensor_py_TestNestedTensorAutograd_test_nested_tensor_transpose_gradcheck",
"test_nestedtensor_py_TestNestedTensorAutograd_test_set_requires_grad_from_list",
"test_nestedtensor_py_TestNestedTensorAutograd_test_set_requires_grad_from_mask",
"test_nestedtensor_py_TestNestedTensorAutograd_test_to_buffer_series_ops_grad_with_broadcast",
"test_nestedtensor_py_TestNestedTensorAutograd_test_unbind_flow_through",
"test_nestedtensor_py_TestNestedTensorAutograd_test_values_grad_with_broadcast",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_bmm_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_bmm_noncontiguous_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_clone_mlu_float16",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_clone_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_detach_mlu_float16",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_detach_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_device_checks_mlu",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_dropout_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_dropout_noncontiguous_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_embedding_mlu",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_layer_norm_mlu_float16",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_layer_norm_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_linear_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_linear_noncontiguous_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_matmul_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_matmul_noncontiguous_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_nested_tensor_add_mlu_float16",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_nested_tensor_add_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_nested_tensor_add_in_place_mlu_float16",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_nested_tensor_add_in_place_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_nested_tensor_indexing_mlu_float16",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_nested_tensor_indexing_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_nested_tensor_indexing_noncontiguous_mlu_float16",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_nested_tensor_indexing_noncontiguous_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_nested_tensor_mul_mlu_float16",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_nested_tensor_mul_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_nested_tensor_mul_in_place_mlu_float16",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_nested_tensor_mul_in_place_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_nested_tensor_sum_dim_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_scaled_dot_product_attention_input_dim_3_mlu",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_scaled_dot_product_attention_input_dim_4_mlu",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_softmax_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_softmax_noncontiguous_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_to_padded_tensor_dim2_mlu_float16",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_to_padded_tensor_dim2_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_to_padded_tensor_dim3_mlu_float16",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_to_padded_tensor_dim3_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_to_padded_tensor_dim4_mlu_float16",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_to_padded_tensor_dim4_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_to_padded_tensor_noncontiguous_mlu_float16",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_to_padded_tensor_noncontiguous_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_to_padded_tensor_output_size_mlu_float16",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_to_padded_tensor_output_size_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_to_padded_tensor_simple_mlu_float16",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_to_padded_tensor_simple_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_to_then_from_padded_tensor_no_transform0213_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_transpose_inference_mode_interaction_mlu_float16",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_transpose_inference_mode_interaction_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_unbind_noncontiguous_mlu_float16",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_unbind_noncontiguous_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_view_mlu_float16",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_view_mlu_float32",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_view_inference_mode_interaction_mlu_float16",
"test_nestedtensor_py_TestNestedTensorDeviceTypeMLU_test_view_inference_mode_interaction_mlu_float32",
"test_nn_py_TestNN_test_AdaptiveAvgPool1d",
"test_nn_py_TestNN_test_AdaptiveAvgPool1d_no_batch_dim",
"test_nn_py_TestNN_test_AdaptiveAvgPool1d_one_output",
"test_nn_py_TestNN_test_AdaptiveAvgPool2d_no_batch_dim",
"test_nn_py_TestNN_test_AdaptiveAvgPool2d_single",
"test_nn_py_TestNN_test_AdaptiveAvgPool2d_single_1x1output",
"test_nn_py_TestNN_test_AdaptiveAvgPool2d_tuple",
"test_nn_py_TestNN_test_AdaptiveAvgPool2d_tuple_none",
"test_nn_py_TestNN_test_AdaptiveAvgPool3d_last_dim",
"test_nn_py_TestNN_test_AdaptiveAvgPool3d_no_batch_dim",
"test_nn_py_TestNN_test_AdaptiveAvgPool3d_single",
"test_nn_py_TestNN_test_AdaptiveAvgPool3d_tuple",
"test_nn_py_TestNN_test_AdaptiveAvgPool3d_tuple_none",
"test_nn_py_TestNN_test_AdaptiveLogSoftmax",
"test_nn_py_TestNN_test_AdaptiveLogSoftmax_mlu",
"test_nn_py_TestNN_test_AdaptiveMaxPool1d",
"test_nn_py_TestNN_test_AdaptiveMaxPool1d_no_batch_dim",
"test_nn_py_TestNN_test_AdaptiveMaxPool2d_no_batch_dim",
"test_nn_py_TestNN_test_AdaptiveMaxPool2d_single",
"test_nn_py_TestNN_test_AdaptiveMaxPool2d_tuple",
"test_nn_py_TestNN_test_AdaptiveMaxPool2d_tuple_none",
"test_nn_py_TestNN_test_AdaptiveMaxPool3d_no_batch_dim",
"test_nn_py_TestNN_test_AdaptiveMaxPool3d_no_batch_dim_mlu",
"test_nn_py_TestNN_test_AdaptiveMaxPool3d_single",
"test_nn_py_TestNN_test_AdaptiveMaxPool3d_single_mlu",
"test_nn_py_TestNN_test_AdaptiveMaxPool3d_single_nonatomic",
"test_nn_py_TestNN_test_AdaptiveMaxPool3d_single_nonatomic_mlu",
"test_nn_py_TestNN_test_AdaptiveMaxPool3d_tuple",
"test_nn_py_TestNN_test_AdaptiveMaxPool3d_tuple_mlu",
"test_nn_py_TestNN_test_AdaptiveMaxPool3d_tuple_nonatomic",
"test_nn_py_TestNN_test_AdaptiveMaxPool3d_tuple_nonatomic_mlu",
"test_nn_py_TestNN_test_AdaptiveMaxPool3d_tuple_none",
"test_nn_py_TestNN_test_AdaptiveMaxPool3d_tuple_none_mlu",
"test_nn_py_TestNN_test_AvgPool1d",
"test_nn_py_TestNN_test_AvgPool1d_no_batch_dim",
"test_nn_py_TestNN_test_AvgPool1d_stride",
"test_nn_py_TestNN_test_AvgPool1d_stride_pad",
"test_nn_py_TestNN_test_AvgPool2d",
"test_nn_py_TestNN_test_AvgPool2d_divisor",
"test_nn_py_TestNN_test_AvgPool2d_divisor_mlu",
"test_nn_py_TestNN_test_AvgPool2d_divisor_stride",
"test_nn_py_TestNN_test_AvgPool2d_divisor_stride_mlu",
"test_nn_py_TestNN_test_AvgPool2d_divisor_stride_pad",
"test_nn_py_TestNN_test_AvgPool2d_divisor_stride_pad_mlu",
"test_nn_py_TestNN_test_AvgPool2d_divisor_stride_pad_with_long_tensor",
"test_nn_py_TestNN_test_AvgPool2d_divisor_stride_pad_with_long_tensor_mlu",
"test_nn_py_TestNN_test_AvgPool2d_divisor_stride_with_long_tensor",
"test_nn_py_TestNN_test_AvgPool2d_divisor_stride_with_long_tensor_mlu",
"test_nn_py_TestNN_test_AvgPool2d_divisor_with_long_tensor",
"test_nn_py_TestNN_test_AvgPool2d_divisor_with_long_tensor_mlu",
"test_nn_py_TestNN_test_AvgPool2d_no_batch_dim",
"test_nn_py_TestNN_test_AvgPool2d_stride",
"test_nn_py_TestNN_test_AvgPool2d_stride_pad",
"test_nn_py_TestNN_test_AvgPool3d",
"test_nn_py_TestNN_test_AvgPool3d_divisor",
"test_nn_py_TestNN_test_AvgPool3d_divisor_mlu",
"test_nn_py_TestNN_test_AvgPool3d_divisor_stride",
"test_nn_py_TestNN_test_AvgPool3d_divisor_stride1_pad0_gpu_input",
"test_nn_py_TestNN_test_AvgPool3d_divisor_stride1_pad0_gpu_input_mlu",
"test_nn_py_TestNN_test_AvgPool3d_divisor_stride1_pad0_gpu_input_with_long_tensor",
"test_nn_py_TestNN_test_AvgPool3d_divisor_stride1_pad0_gpu_input_with_long_tensor_mlu",
"test_nn_py_TestNN_test_AvgPool3d_divisor_stride_mlu",
"test_nn_py_TestNN_test_AvgPool3d_divisor_stride_pad",
"test_nn_py_TestNN_test_AvgPool3d_divisor_stride_pad_mlu",
"test_nn_py_TestNN_test_AvgPool3d_divisor_stride_pad_gpu_fixedkw_output",
"test_nn_py_TestNN_test_AvgPool3d_divisor_stride_pad_gpu_fixedkw_output_mlu",
"test_nn_py_TestNN_test_AvgPool3d_divisor_stride_pad_gpu_fixedkw_output_with_long_tensor",
"test_nn_py_TestNN_test_AvgPool3d_divisor_stride_pad_gpu_fixedkw_output_with_long_tensor_mlu",
"test_nn_py_TestNN_test_AvgPool3d_divisor_stride_pad_gpu_general_output",
"test_nn_py_TestNN_test_AvgPool3d_divisor_stride_pad_gpu_general_output_mlu",
"test_nn_py_TestNN_test_AvgPool3d_divisor_stride_pad_gpu_general_output_with_long_tensor",
"test_nn_py_TestNN_test_AvgPool3d_divisor_stride_pad_gpu_general_output_with_long_tensor_mlu",
"test_nn_py_TestNN_test_AvgPool3d_divisor_stride_pad_gpu_input_nooverlap",
"test_nn_py_TestNN_test_AvgPool3d_divisor_stride_pad_gpu_input_nooverlap_mlu",
"test_nn_py_TestNN_test_AvgPool3d_divisor_stride_pad_gpu_input_nooverlap_with_long_tensor",
"test_nn_py_TestNN_test_AvgPool3d_divisor_stride_pad_gpu_input_nooverlap_with_long_tensor_mlu",
"test_nn_py_TestNN_test_AvgPool3d_divisor_stride_pad_with_long_tensor",
"test_nn_py_TestNN_test_AvgPool3d_divisor_stride_pad_with_long_tensor_mlu",
"test_nn_py_TestNN_test_AvgPool3d_divisor_stride_with_long_tensor",
"test_nn_py_TestNN_test_AvgPool3d_divisor_stride_with_long_tensor_mlu",
"test_nn_py_TestNN_test_AvgPool3d_divisor_with_long_tensor",
"test_nn_py_TestNN_test_AvgPool3d_divisor_with_long_tensor_mlu",
"test_nn_py_TestNN_test_AvgPool3d_no_batch_dim",
"test_nn_py_TestNN_test_AvgPool3d_stride",
"test_nn_py_TestNN_test_AvgPool3d_stride1_pad0_gpu_input",
"test_nn_py_TestNN_test_AvgPool3d_stride_pad",
"test_nn_py_TestNN_test_AvgPool3d_stride_pad_gpu_fixedkw_output",
"test_nn_py_TestNN_test_AvgPool3d_stride_pad_gpu_general_output",
"test_nn_py_TestNN_test_AvgPool3d_stride_pad_gpu_input_nooverlap",
"test_nn_py_TestNN_test_BCELoss",
"test_nn_py_TestNN_test_BCELoss_mlu_bfloat16",
"test_nn_py_TestNN_test_BCELoss_mlu_double",
"test_nn_py_TestNN_test_BCELoss_mlu_float",
"test_nn_py_TestNN_test_BCELoss_mlu_half",
"test_nn_py_TestNN_test_BCELoss_no_batch_dim_mean",
"test_nn_py_TestNN_test_BCELoss_no_batch_dim_mean_mlu_double",
"test_nn_py_TestNN_test_BCELoss_no_batch_dim_mean_mlu_float",
"test_nn_py_TestNN_test_BCELoss_no_batch_dim_mean_mlu_half",
"test_nn_py_TestNN_test_BCELoss_no_batch_dim_none",
"test_nn_py_TestNN_test_BCELoss_no_batch_dim_none_mlu_double",
"test_nn_py_TestNN_test_BCELoss_no_batch_dim_none_mlu_float",
"test_nn_py_TestNN_test_BCELoss_no_batch_dim_none_mlu_half",
"test_nn_py_TestNN_test_BCELoss_no_batch_dim_sum",
"test_nn_py_TestNN_test_BCELoss_no_batch_dim_sum_mlu_double",
"test_nn_py_TestNN_test_BCELoss_no_batch_dim_sum_mlu_float",
"test_nn_py_TestNN_test_BCELoss_no_batch_dim_sum_mlu_half",
"test_nn_py_TestNN_test_BCELoss_no_reduce",
"test_nn_py_TestNN_test_BCELoss_no_reduce_mlu",
"test_nn_py_TestNN_test_BCELoss_no_reduce_scalar",
"test_nn_py_TestNN_test_BCELoss_no_reduce_scalar_mlu",
"test_nn_py_TestNN_test_BCELoss_scalar_weights",
"test_nn_py_TestNN_test_BCELoss_scalar_weights_mlu_bfloat16",
"test_nn_py_TestNN_test_BCELoss_scalar_weights_mlu_double",
"test_nn_py_TestNN_test_BCELoss_scalar_weights_mlu_float",
"test_nn_py_TestNN_test_BCELoss_scalar_weights_mlu_half",
"test_nn_py_TestNN_test_BCELoss_weights",
"test_nn_py_TestNN_test_BCELoss_weights_mlu_bfloat16",
"test_nn_py_TestNN_test_BCELoss_weights_mlu_double",
"test_nn_py_TestNN_test_BCELoss_weights_mlu_float",
"test_nn_py_TestNN_test_BCELoss_weights_mlu_half",
"test_nn_py_TestNN_test_BCELoss_weights_no_reduce",
"test_nn_py_TestNN_test_BCELoss_weights_no_reduce_mlu",
"test_nn_py_TestNN_test_BCELoss_weights_no_reduce_scalar",
"test_nn_py_TestNN_test_BCELoss_weights_no_reduce_scalar_mlu",
"test_nn_py_TestNN_test_BCEWithLogitsLoss",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_mlu_double",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_mlu_float",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_mlu_half",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_legacy_enum",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_legacy_enum_mlu",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_no_batch_dim_mean",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_no_batch_dim_mean_mlu_double",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_no_batch_dim_mean_mlu_float",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_no_batch_dim_mean_mlu_half",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_no_batch_dim_none",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_no_batch_dim_none_mlu_double",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_no_batch_dim_none_mlu_float",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_no_batch_dim_none_mlu_half",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_no_batch_dim_sum",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_no_batch_dim_sum_mlu_double",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_no_batch_dim_sum_mlu_float",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_no_batch_dim_sum_mlu_half",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_no_reduce",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_no_reduce_mlu",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_no_reduce_scalar",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_no_reduce_scalar_mlu",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_scalar_weights",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_scalar_weights_mlu_double",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_scalar_weights_mlu_float",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_scalar_weights_mlu_half",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_weights",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_weights_mlu_double",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_weights_mlu_float",
"test_nn_py_TestNN_test_BCEWithLogitsLoss_weights_mlu_half",
"test_nn_py_TestNN_test_BatchNorm1d_3d_input",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm1d_3d_input_eval",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm1d_3d_input_not_affine",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm1d_3d_input_not_affine_eval",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm1d_affine",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm1d_affine_eval",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm1d_affine_simple_average",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm1d_affine_simple_average_eval",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm1d_not_affine",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm1d_not_affine_eval",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm1d_not_tracking_stats",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm1d_not_tracking_stats_eval",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm2d",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm2d_2d_simple_average",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm2d_2d_simple_average_eval",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm2d_eval",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm2d_momentum",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm2d_momentum_eval",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm2d_not_affine",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm2d_not_affine_eval",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm2d_not_tracking_stats",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm2d_not_tracking_stats_eval",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm3d",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm3d_3d_simple_average",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm3d_3d_simple_average_eval",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm3d_eval",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm3d_momentum",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm3d_momentum_eval",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm3d_not_affine",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm3d_not_affine_eval",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm3d_not_tracking_stats",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_BatchNorm3d_not_tracking_stats_eval",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNN_test_CELU",
"test_nn_py_TestNN_test_CELU_mlu",
"test_nn_py_TestNN_test_CELU_no_batch_dim",
"test_nn_py_TestNN_test_CELU_no_batch_dim_mlu",
"test_nn_py_TestNN_test_CELU_scalar",
"test_nn_py_TestNN_test_CTCLoss_2d_int_target_lengths_intlists",
"test_nn_py_TestNN_test_CTCLoss_2d_int_target_lengths_intlists_mlu_double",
"test_nn_py_TestNN_test_CTCLoss_2d_int_target_lengths_intlists_mlu_float",
"test_nn_py_TestNN_test_CTCLoss_2d_int_target_lengths_intlists_sum_reduction",
"test_nn_py_TestNN_test_CTCLoss_2d_int_target_lengths_intlists_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_CTCLoss_2d_int_target_lengths_intlists_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_CTCLoss_2d_int_target_lengths_tensors",
"test_nn_py_TestNN_test_CTCLoss_2d_int_target_lengths_tensors_mlu_double",
"test_nn_py_TestNN_test_CTCLoss_2d_int_target_lengths_tensors_mlu_float",
"test_nn_py_TestNN_test_CTCLoss_2d_int_target_lengths_tensors_sum_reduction",
"test_nn_py_TestNN_test_CTCLoss_2d_int_target_lengths_tensors_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_CTCLoss_2d_int_target_lengths_tensors_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_CTCLoss_2d_lengths_tensors",
"test_nn_py_TestNN_test_CTCLoss_2d_lengths_tensors_mlu_double",
"test_nn_py_TestNN_test_CTCLoss_2d_lengths_tensors_mlu_float",
"test_nn_py_TestNN_test_CTCLoss_2d_lengths_tensors_sum_reduction",
"test_nn_py_TestNN_test_CTCLoss_2d_lengths_tensors_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_CTCLoss_2d_lengths_tensors_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_CTCLoss_critical_target_len",
"test_nn_py_TestNN_test_CTCLoss_lengthchecks_cpu",
"test_nn_py_TestNN_test_CTCLoss_lengthchecks_mlu",
"test_nn_py_TestNN_test_CTCLoss_lengths_intlists",
"test_nn_py_TestNN_test_CTCLoss_lengths_intlists_mlu_double",
"test_nn_py_TestNN_test_CTCLoss_lengths_intlists_mlu_float",
"test_nn_py_TestNN_test_CTCLoss_lengths_intlists_sum_reduction",
"test_nn_py_TestNN_test_CTCLoss_lengths_intlists_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_CTCLoss_lengths_intlists_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_CTCLoss_lengths_tensors",
"test_nn_py_TestNN_test_CTCLoss_lengths_tensors_mlu_double",
"test_nn_py_TestNN_test_CTCLoss_lengths_tensors_mlu_float",
"test_nn_py_TestNN_test_CTCLoss_lengths_tensors_sum_reduction",
"test_nn_py_TestNN_test_CTCLoss_lengths_tensors_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_CTCLoss_lengths_tensors_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_CTCLoss_long_targets",
"test_nn_py_TestNN_test_CTCLoss_typechecks",
"test_nn_py_TestNN_test_CTCLoss_zero_infinity",
"test_nn_py_TestNN_test_ConstantPad1d_complex",
"test_nn_py_TestNN_test_ConstantPad1d_complex_mlu",
"test_nn_py_TestNN_test_ConstantPad2d_complex",
"test_nn_py_TestNN_test_ConstantPad2d_complex_mlu",
"test_nn_py_TestNN_test_ConstantPad3d_complex",
"test_nn_py_TestNN_test_ConstantPad3d_complex_mlu",
"test_nn_py_TestNN_test_CosineEmbeddingLoss",
"test_nn_py_TestNN_test_CosineEmbeddingLoss_mlu_double",
"test_nn_py_TestNN_test_CosineEmbeddingLoss_mlu_float",
"test_nn_py_TestNN_test_CosineEmbeddingLoss_mlu_half",
"test_nn_py_TestNN_test_CosineEmbeddingLoss_margin",
"test_nn_py_TestNN_test_CosineEmbeddingLoss_margin_mlu_double",
"test_nn_py_TestNN_test_CosineEmbeddingLoss_margin_mlu_float",
"test_nn_py_TestNN_test_CosineEmbeddingLoss_margin_mlu_half",
"test_nn_py_TestNN_test_CosineEmbeddingLoss_margin_sum_reduction",
"test_nn_py_TestNN_test_CosineEmbeddingLoss_margin_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_CosineEmbeddingLoss_margin_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_CosineEmbeddingLoss_margin_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_CosineEmbeddingLoss_no_batch_dim_mean",
"test_nn_py_TestNN_test_CosineEmbeddingLoss_no_batch_dim_mean_mlu_double",
"test_nn_py_TestNN_test_CosineEmbeddingLoss_no_batch_dim_mean_mlu_float",
"test_nn_py_TestNN_test_CosineEmbeddingLoss_no_batch_dim_mean_mlu_half",
"test_nn_py_TestNN_test_CosineEmbeddingLoss_no_batch_dim_none",
"test_nn_py_TestNN_test_CosineEmbeddingLoss_no_batch_dim_none_mlu_double",
"test_nn_py_TestNN_test_CosineEmbeddingLoss_no_batch_dim_none_mlu_float",
"test_nn_py_TestNN_test_CosineEmbeddingLoss_no_batch_dim_none_mlu_half",
"test_nn_py_TestNN_test_CosineEmbeddingLoss_no_batch_dim_sum",
"test_nn_py_TestNN_test_CosineEmbeddingLoss_no_batch_dim_sum_mlu_double",
"test_nn_py_TestNN_test_CosineEmbeddingLoss_no_batch_dim_sum_mlu_float",
"test_nn_py_TestNN_test_CosineEmbeddingLoss_no_batch_dim_sum_mlu_half",
"test_nn_py_TestNN_test_CosineEmbeddingLoss_sum_reduction",
"test_nn_py_TestNN_test_CosineEmbeddingLoss_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_CosineEmbeddingLoss_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_CosineEmbeddingLoss_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_ignore_index",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_ignore_index_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_ignore_index_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_ignore_index_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_indices_target_smoothing",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_indices_target_smoothing_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_indices_target_smoothing_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_indices_target_smoothing_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_indices_target_smoothing_ignore_index",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_indices_target_smoothing_ignore_index_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_indices_target_smoothing_ignore_index_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_indices_target_smoothing_ignore_index_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_indices_target_smoothing_sum_reduction",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_indices_target_smoothing_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_indices_target_smoothing_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_indices_target_smoothing_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_indices_target_smoothing_weight",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_indices_target_smoothing_weight_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_indices_target_smoothing_weight_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_indices_target_smoothing_weight_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target_smoothing",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target_smoothing_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target_smoothing_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target_smoothing_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target_smoothing_sum_reduction",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target_smoothing_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target_smoothing_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target_smoothing_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target_smoothing_weight",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target_smoothing_weight_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target_smoothing_weight_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target_smoothing_weight_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target_sum_reduction",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target_weights",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target_weights_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target_weights_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target_weights_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target_weights_sum_reduction",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target_weights_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target_weights_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_prob_target_weights_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_sum_reduction",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_weights",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_weights_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_weights_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_2d_weights_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_indices_target_smoothing",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_indices_target_smoothing_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_indices_target_smoothing_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_indices_target_smoothing_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_indices_target_smoothing_ignore_index",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_indices_target_smoothing_ignore_index_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_indices_target_smoothing_ignore_index_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_indices_target_smoothing_ignore_index_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_indices_target_smoothing_sum_reduction",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_indices_target_smoothing_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_indices_target_smoothing_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_indices_target_smoothing_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_indices_target_smoothing_sum_reduction_ignore_index",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_indices_target_smoothing_sum_reduction_ignore_index_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_indices_target_smoothing_sum_reduction_ignore_index_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_indices_target_smoothing_sum_reduction_ignore_index_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_prob_target",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_prob_target_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_prob_target_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_prob_target_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_prob_target_smoothing",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_prob_target_smoothing_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_prob_target_smoothing_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_prob_target_smoothing_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_prob_target_smoothing_sum_reduction",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_prob_target_smoothing_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_prob_target_smoothing_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_prob_target_smoothing_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_prob_target_sum_reduction",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_prob_target_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_prob_target_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_prob_target_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_prob_target_weights",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_prob_target_weights_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_prob_target_weights_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_prob_target_weights_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_prob_target_weights_sum_reduction",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_prob_target_weights_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_prob_target_weights_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_3d_prob_target_weights_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_4d_prob_target",
"test_nn_py_TestNN_test_CrossEntropyLoss_4d_prob_target_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_4d_prob_target_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_4d_prob_target_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_4d_prob_target_sum_reduction",
"test_nn_py_TestNN_test_CrossEntropyLoss_4d_prob_target_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_4d_prob_target_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_4d_prob_target_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_4d_prob_target_weights",
"test_nn_py_TestNN_test_CrossEntropyLoss_4d_prob_target_weights_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_4d_prob_target_weights_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_4d_prob_target_weights_mlu_fp32",
"test_nn_py_TestNN_test_CrossEntropyLoss_4d_prob_target_weights_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_4d_prob_target_weights_mlu_tf32",
"test_nn_py_TestNN_test_CrossEntropyLoss_4d_prob_target_weights_sum_reduction",
"test_nn_py_TestNN_test_CrossEntropyLoss_4d_prob_target_weights_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_4d_prob_target_weights_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_4d_prob_target_weights_sum_reduction_mlu_fp32",
"test_nn_py_TestNN_test_CrossEntropyLoss_4d_prob_target_weights_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_4d_prob_target_weights_sum_reduction_mlu_tf32",
"test_nn_py_TestNN_test_CrossEntropyLoss_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_dim_is_3",
"test_nn_py_TestNN_test_CrossEntropyLoss_dim_is_3_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_dim_is_3_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_dim_is_3_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_dim_is_3_sum_reduction",
"test_nn_py_TestNN_test_CrossEntropyLoss_dim_is_3_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_dim_is_3_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_dim_is_3_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_higher_dim",
"test_nn_py_TestNN_test_CrossEntropyLoss_higher_dim_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_higher_dim_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_higher_dim_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_higher_dim_sum_reduction",
"test_nn_py_TestNN_test_CrossEntropyLoss_higher_dim_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_higher_dim_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_higher_dim_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_CrossEntropyLoss_weights",
"test_nn_py_TestNN_test_CrossEntropyLoss_weights_mlu_double",
"test_nn_py_TestNN_test_CrossEntropyLoss_weights_mlu_float",
"test_nn_py_TestNN_test_CrossEntropyLoss_weights_mlu_half",
"test_nn_py_TestNN_test_CrossMapLRN2d",
"test_nn_py_TestNN_test_CrossMapLRN2d_mlu",
# PYTORCH-10088 EmbeddingBag/Embedding limiation begin
"test_nn_py_TestNN_test_EmbeddingBag_discontiguous_mlu",
"test_nn_py_TestNN_test_EmbeddingBag_max_mlu",
"test_nn_py_TestNN_test_EmbeddingBag_max_padding_idx_mlu",
"test_nn_py_TestNN_test_EmbeddingBag_mean_mlu",
"test_nn_py_TestNN_test_EmbeddingBag_mean_padding_idx_mlu",
"test_nn_py_TestNN_test_EmbeddingBag_sparse",
"test_nn_py_TestNN_test_EmbeddingBag_sparse_mlu",
"test_nn_py_TestNN_test_EmbeddingBag_sum_padding_idx_mlu",
"test_nn_py_TestNN_test_Embedding_sparse",
"test_nn_py_TestNN_test_Embedding_sparse_mlu",
# PYTORCH-10088 EmbeddingBag/Embedding limiation end
"test_nn_py_TestNN_test_Flatten",
"test_nn_py_TestNN_test_Flatten_mlu",
"test_nn_py_TestNN_test_Flatten_no_batch_dim",
"test_nn_py_TestNN_test_Flatten_no_batch_dim_mlu",
"test_nn_py_TestNN_test_Fold_no_batch_dim_input_mlu",  # TODO(PYTORCH-10319): The values for attribute 'shape' do not match.
"test_nn_py_TestNN_test_Fold_no_batch_dim_int_input_mlu",  # TODO(PYTORCH-10319): The values for attribute 'shape' do not match.
"test_nn_py_TestNN_test_FractionalMaxPool2d_ratio",
"test_nn_py_TestNN_test_FractionalMaxPool2d_ratio_mlu",
"test_nn_py_TestNN_test_FractionalMaxPool2d_ratio_no_batch_dim",
"test_nn_py_TestNN_test_FractionalMaxPool2d_ratio_no_batch_dim_mlu",
"test_nn_py_TestNN_test_FractionalMaxPool2d_ratio_no_batch_dim_no_random_samples",
"test_nn_py_TestNN_test_FractionalMaxPool2d_ratio_no_batch_dim_no_random_samples_mlu",
"test_nn_py_TestNN_test_FractionalMaxPool2d_ratio_return_indices",
"test_nn_py_TestNN_test_FractionalMaxPool2d_ratio_return_indices_mlu",
"test_nn_py_TestNN_test_FractionalMaxPool2d_size",
"test_nn_py_TestNN_test_FractionalMaxPool2d_size_mlu",
"test_nn_py_TestNN_test_FractionalMaxPool2d_size_no_batch_dim",
"test_nn_py_TestNN_test_FractionalMaxPool2d_size_no_batch_dim_mlu",
"test_nn_py_TestNN_test_FractionalMaxPool2d_size_no_batch_dim_no_random_samples",
"test_nn_py_TestNN_test_FractionalMaxPool2d_size_no_batch_dim_no_random_samples_mlu",
"test_nn_py_TestNN_test_FractionalMaxPool3d_asymsize",
"test_nn_py_TestNN_test_FractionalMaxPool3d_asymsize_mlu",
"test_nn_py_TestNN_test_FractionalMaxPool3d_ratio",
"test_nn_py_TestNN_test_FractionalMaxPool3d_ratio_mlu",
"test_nn_py_TestNN_test_FractionalMaxPool3d_ratio_no_batch_dim",
"test_nn_py_TestNN_test_FractionalMaxPool3d_ratio_no_batch_dim_mlu",
"test_nn_py_TestNN_test_FractionalMaxPool3d_ratio_no_batch_dim_no_random_samples",
"test_nn_py_TestNN_test_FractionalMaxPool3d_ratio_no_batch_dim_no_random_samples_mlu",
"test_nn_py_TestNN_test_FractionalMaxPool3d_ratio_return_indices",
"test_nn_py_TestNN_test_FractionalMaxPool3d_ratio_return_indices_mlu",
"test_nn_py_TestNN_test_FractionalMaxPool3d_size",
"test_nn_py_TestNN_test_FractionalMaxPool3d_size_mlu",
"test_nn_py_TestNN_test_FractionalMaxPool3d_size_no_batch_dim",
"test_nn_py_TestNN_test_FractionalMaxPool3d_size_no_batch_dim_mlu",
"test_nn_py_TestNN_test_FractionalMaxPool3d_size_no_batch_dim_no_random_samples",
"test_nn_py_TestNN_test_FractionalMaxPool3d_size_no_batch_dim_no_random_samples_mlu",
"test_nn_py_TestNN_test_Hardshrink",
"test_nn_py_TestNN_test_Hardshrink_mlu",
"test_nn_py_TestNN_test_Hardshrink_no_batch_dim",
"test_nn_py_TestNN_test_Hardshrink_no_batch_dim_mlu",
"test_nn_py_TestNN_test_Hardshrink_scalar",
"test_nn_py_TestNN_test_Hardshrink_scalar_mlu",
"test_nn_py_TestNN_test_HingeEmbeddingLoss",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_mlu_double",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_mlu_float",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_mlu_half",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_margin",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_margin_mlu_double",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_margin_mlu_float",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_margin_mlu_half",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_margin_no_reduce",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_margin_no_reduce_mlu",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_margin_sum_reduction",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_margin_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_margin_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_margin_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_no_batch_dim_mean",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_no_batch_dim_mean_mlu_double",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_no_batch_dim_mean_mlu_float",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_no_batch_dim_mean_mlu_half",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_no_batch_dim_none",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_no_batch_dim_none_mlu_double",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_no_batch_dim_none_mlu_float",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_no_batch_dim_none_mlu_half",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_no_batch_dim_sum",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_no_batch_dim_sum_mlu_double",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_no_batch_dim_sum_mlu_float",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_no_batch_dim_sum_mlu_half",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_no_reduce",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_no_reduce_mlu",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_scalar_margin",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_scalar_margin_mlu_double",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_scalar_margin_mlu_float",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_scalar_margin_mlu_half",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_scalar_margin_sum_reduction",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_scalar_margin_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_scalar_margin_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_scalar_margin_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_sum_reduction",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_HingeEmbeddingLoss_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_HuberLoss",
"test_nn_py_TestNN_test_HuberLoss_mlu_bfloat16",
"test_nn_py_TestNN_test_HuberLoss_mlu_double",
"test_nn_py_TestNN_test_HuberLoss_mlu_float",
"test_nn_py_TestNN_test_HuberLoss_mlu_half",
"test_nn_py_TestNN_test_HuberLoss_delta",
"test_nn_py_TestNN_test_HuberLoss_delta_mlu",
"test_nn_py_TestNN_test_HuberLoss_no_batch_dim_mean",
"test_nn_py_TestNN_test_HuberLoss_no_batch_dim_mean_mlu_double",
"test_nn_py_TestNN_test_HuberLoss_no_batch_dim_mean_mlu_float",
"test_nn_py_TestNN_test_HuberLoss_no_batch_dim_mean_mlu_half",
"test_nn_py_TestNN_test_HuberLoss_no_batch_dim_none",
"test_nn_py_TestNN_test_HuberLoss_no_batch_dim_none_mlu_double",
"test_nn_py_TestNN_test_HuberLoss_no_batch_dim_none_mlu_float",
"test_nn_py_TestNN_test_HuberLoss_no_batch_dim_none_mlu_half",
"test_nn_py_TestNN_test_HuberLoss_no_batch_dim_sum",
"test_nn_py_TestNN_test_HuberLoss_no_batch_dim_sum_mlu_double",
"test_nn_py_TestNN_test_HuberLoss_no_batch_dim_sum_mlu_float",
"test_nn_py_TestNN_test_HuberLoss_no_batch_dim_sum_mlu_half",
"test_nn_py_TestNN_test_HuberLoss_sum_reduction",
"test_nn_py_TestNN_test_HuberLoss_sum_reduction_mlu_bfloat16",
"test_nn_py_TestNN_test_HuberLoss_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_HuberLoss_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_HuberLoss_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_InstanceNorm1d",
"test_nn_py_TestNN_test_InstanceNorm1d_mlu",
"test_nn_py_TestNN_test_InstanceNorm1d_eval",
"test_nn_py_TestNN_test_InstanceNorm1d_eval_mlu",
"test_nn_py_TestNN_test_InstanceNorm1d_no_batch_dim",
"test_nn_py_TestNN_test_InstanceNorm1d_no_batch_dim_mlu",
"test_nn_py_TestNN_test_InstanceNorm1d_no_batch_dim_eval",
"test_nn_py_TestNN_test_InstanceNorm1d_no_batch_dim_eval_mlu",
"test_nn_py_TestNN_test_InstanceNorm1d_tracking_stats",
"test_nn_py_TestNN_test_InstanceNorm1d_tracking_stats_mlu",
"test_nn_py_TestNN_test_InstanceNorm1d_tracking_stats_eval",
"test_nn_py_TestNN_test_InstanceNorm1d_tracking_stats_eval_mlu",
"test_nn_py_TestNN_test_InstanceNorm1d_tracking_stats_no_batch_dim",
"test_nn_py_TestNN_test_InstanceNorm1d_tracking_stats_no_batch_dim_mlu",
"test_nn_py_TestNN_test_InstanceNorm1d_tracking_stats_no_batch_dim_eval",
"test_nn_py_TestNN_test_InstanceNorm1d_tracking_stats_no_batch_dim_eval_mlu",
"test_nn_py_TestNN_test_InstanceNorm2d",
"test_nn_py_TestNN_test_InstanceNorm2d_mlu",
"test_nn_py_TestNN_test_InstanceNorm2d_eval",
"test_nn_py_TestNN_test_InstanceNorm2d_eval_mlu",
"test_nn_py_TestNN_test_InstanceNorm2d_no_batch_dim",
"test_nn_py_TestNN_test_InstanceNorm2d_no_batch_dim_mlu",
"test_nn_py_TestNN_test_InstanceNorm2d_no_batch_dim_eval",
"test_nn_py_TestNN_test_InstanceNorm2d_no_batch_dim_eval_mlu",
"test_nn_py_TestNN_test_InstanceNorm2d_tracking_stats",
"test_nn_py_TestNN_test_InstanceNorm2d_tracking_stats_mlu",
"test_nn_py_TestNN_test_InstanceNorm2d_tracking_stats_eval",
"test_nn_py_TestNN_test_InstanceNorm2d_tracking_stats_eval_mlu",
"test_nn_py_TestNN_test_InstanceNorm2d_tracking_stats_no_batch_dim",
"test_nn_py_TestNN_test_InstanceNorm2d_tracking_stats_no_batch_dim_mlu",
"test_nn_py_TestNN_test_InstanceNorm2d_tracking_stats_no_batch_dim_eval",
"test_nn_py_TestNN_test_InstanceNorm2d_tracking_stats_no_batch_dim_eval_mlu",
"test_nn_py_TestNN_test_InstanceNorm3d",
"test_nn_py_TestNN_test_InstanceNorm3d_mlu",
"test_nn_py_TestNN_test_InstanceNorm3d_eval",
"test_nn_py_TestNN_test_InstanceNorm3d_eval_mlu",
"test_nn_py_TestNN_test_InstanceNorm3d_no_batch_dim",
"test_nn_py_TestNN_test_InstanceNorm3d_no_batch_dim_mlu",
"test_nn_py_TestNN_test_InstanceNorm3d_no_batch_dim_eval",
"test_nn_py_TestNN_test_InstanceNorm3d_no_batch_dim_eval_mlu",
"test_nn_py_TestNN_test_InstanceNorm3d_tracking_stats",
"test_nn_py_TestNN_test_InstanceNorm3d_tracking_stats_mlu",
"test_nn_py_TestNN_test_InstanceNorm3d_tracking_stats_eval",
"test_nn_py_TestNN_test_InstanceNorm3d_tracking_stats_eval_mlu",
"test_nn_py_TestNN_test_InstanceNorm3d_tracking_stats_no_batch_dim",
"test_nn_py_TestNN_test_InstanceNorm3d_tracking_stats_no_batch_dim_mlu",
"test_nn_py_TestNN_test_InstanceNorm3d_tracking_stats_no_batch_dim_eval",
"test_nn_py_TestNN_test_InstanceNorm3d_tracking_stats_no_batch_dim_eval_mlu",
"test_nn_py_TestNN_test_KLDivLoss",
"test_nn_py_TestNN_test_KLDivLoss_batch_mean",
"test_nn_py_TestNN_test_KLDivLoss_batch_mean_log_target",
"test_nn_py_TestNN_test_KLDivLoss_mlu_double",
"test_nn_py_TestNN_test_KLDivLoss_mlu_float",
"test_nn_py_TestNN_test_KLDivLoss_mlu_half",
"test_nn_py_TestNN_test_KLDivLoss_log_target",
"test_nn_py_TestNN_test_KLDivLoss_log_target_mlu_double",
"test_nn_py_TestNN_test_KLDivLoss_log_target_mlu_float",
"test_nn_py_TestNN_test_KLDivLoss_log_target_mlu_half",
"test_nn_py_TestNN_test_KLDivLoss_log_target_sum_reduction",
"test_nn_py_TestNN_test_KLDivLoss_log_target_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_KLDivLoss_log_target_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_KLDivLoss_log_target_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_KLDivLoss_no_batch_dim_mean",
"test_nn_py_TestNN_test_KLDivLoss_no_batch_dim_mean_mlu_double",
"test_nn_py_TestNN_test_KLDivLoss_no_batch_dim_mean_mlu_float",
"test_nn_py_TestNN_test_KLDivLoss_no_batch_dim_mean_mlu_half",
"test_nn_py_TestNN_test_KLDivLoss_no_batch_dim_none",
"test_nn_py_TestNN_test_KLDivLoss_no_batch_dim_none_mlu_double",
"test_nn_py_TestNN_test_KLDivLoss_no_batch_dim_none_mlu_float",
"test_nn_py_TestNN_test_KLDivLoss_no_batch_dim_none_mlu_half",
"test_nn_py_TestNN_test_KLDivLoss_no_batch_dim_sum",
"test_nn_py_TestNN_test_KLDivLoss_no_batch_dim_sum_mlu_double",
"test_nn_py_TestNN_test_KLDivLoss_no_batch_dim_sum_mlu_float",
"test_nn_py_TestNN_test_KLDivLoss_no_batch_dim_sum_mlu_half",
"test_nn_py_TestNN_test_KLDivLoss_no_reduce",
"test_nn_py_TestNN_test_KLDivLoss_no_reduce_mlu",
"test_nn_py_TestNN_test_KLDivLoss_no_reduce_log_target",
"test_nn_py_TestNN_test_KLDivLoss_no_reduce_log_target_mlu",
"test_nn_py_TestNN_test_KLDivLoss_no_reduce_scalar",
"test_nn_py_TestNN_test_KLDivLoss_no_reduce_scalar_mlu",
"test_nn_py_TestNN_test_KLDivLoss_no_reduce_scalar_log_target",
"test_nn_py_TestNN_test_KLDivLoss_no_reduce_scalar_log_target_mlu",
"test_nn_py_TestNN_test_KLDivLoss_scalar",
"test_nn_py_TestNN_test_KLDivLoss_scalar_mlu_double",
"test_nn_py_TestNN_test_KLDivLoss_scalar_mlu_float",
"test_nn_py_TestNN_test_KLDivLoss_scalar_mlu_half",
"test_nn_py_TestNN_test_KLDivLoss_scalar_log_target",
"test_nn_py_TestNN_test_KLDivLoss_scalar_log_target_mlu_double",
"test_nn_py_TestNN_test_KLDivLoss_scalar_log_target_mlu_float",
"test_nn_py_TestNN_test_KLDivLoss_scalar_log_target_mlu_half",
"test_nn_py_TestNN_test_KLDivLoss_scalar_log_target_sum_reduction",
"test_nn_py_TestNN_test_KLDivLoss_scalar_log_target_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_KLDivLoss_scalar_log_target_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_KLDivLoss_scalar_log_target_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_KLDivLoss_scalar_sum_reduction",
"test_nn_py_TestNN_test_KLDivLoss_scalar_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_KLDivLoss_scalar_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_KLDivLoss_scalar_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_KLDivLoss_sum_reduction",
"test_nn_py_TestNN_test_KLDivLoss_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_KLDivLoss_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_KLDivLoss_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_KLDivLoss_with_log_target_no_reduce",
"test_nn_py_TestNN_test_KLDivLoss_with_log_target_no_reduce_mlu",
"test_nn_py_TestNN_test_KLDivLoss_with_target_no_reduce",
"test_nn_py_TestNN_test_KLDivLoss_with_target_no_reduce_mlu",
"test_nn_py_TestNN_test_L1Loss_mlu_cdouble", # l1_loss op does not support complex64 on mlu
"test_nn_py_TestNN_test_L1Loss_mlu_cfloat", # l1_loss op does not support complex32 on mlu
"test_nn_py_TestNN_test_L1Loss_no_reduce_complex", # l1_loss op does not support complex on mlu
"test_nn_py_TestNN_test_L1Loss_no_reduce_complex_mlu", # l1_loss op does not support complex on mlu
"test_nn_py_TestNN_test_L1Loss_scalar_mlu_cdouble", # l1_loss op does not support complex64 on mlu
"test_nn_py_TestNN_test_L1Loss_scalar_mlu_cfloat", # l1_loss op does not support complex32 on mlu
"test_nn_py_TestNN_test_LPPool1d",
"test_nn_py_TestNN_test_LPPool1d_mlu",
"test_nn_py_TestNN_test_LPPool1d_no_batch_dim",
"test_nn_py_TestNN_test_LPPool1d_no_batch_dim_mlu",
"test_nn_py_TestNN_test_LPPool1d_norm",
"test_nn_py_TestNN_test_LPPool1d_norm_mlu",
"test_nn_py_TestNN_test_LPPool2d",
"test_nn_py_TestNN_test_LPPool2d_mlu",
"test_nn_py_TestNN_test_LPPool2d_norm",
"test_nn_py_TestNN_test_LPPool2d_norm_mlu",
"test_nn_py_TestNN_test_LeakyReLU",
"test_nn_py_TestNN_test_LeakyReLU_no_batch_dim",
"test_nn_py_TestNN_test_LeakyReLU_with_negval",
"test_nn_py_TestNN_test_LeakyReLU_with_negval_scalar",
"test_nn_py_TestNN_test_LeakyReLU_with_zero_negval",
"test_nn_py_TestNN_test_LocalResponseNorm_1d",
"test_nn_py_TestNN_test_LocalResponseNorm_1d_mlu",
"test_nn_py_TestNN_test_LocalResponseNorm_2d_uneven_pad",
"test_nn_py_TestNN_test_LocalResponseNorm_2d_uneven_pad_mlu",
"test_nn_py_TestNN_test_LocalResponseNorm_3d_custom_params",
"test_nn_py_TestNN_test_LocalResponseNorm_3d_custom_params_mlu",
"test_nn_py_TestNN_test_LogSoftmax",
"test_nn_py_TestNN_test_LogSoftmax_multiparam",
"test_nn_py_TestNN_test_LogSoftmax_multiparam_scalar",
"test_nn_py_TestNN_test_LogSoftmax_no_batch_dim",
"test_nn_py_TestNN_test_MSELoss_prec_mlu_bfloat16",
"test_nn_py_TestNN_test_MSELoss_scalar_mlu_bfloat16",
"test_nn_py_TestNN_test_MSELoss_scalar_sum_reduction_mlu_bfloat16",
"test_nn_py_TestNN_test_MarginRankingLoss",
"test_nn_py_TestNN_test_MarginRankingLoss_mlu_double",
"test_nn_py_TestNN_test_MarginRankingLoss_mlu_float",
"test_nn_py_TestNN_test_MarginRankingLoss_mlu_half",
"test_nn_py_TestNN_test_MarginRankingLoss_margin",
"test_nn_py_TestNN_test_MarginRankingLoss_margin_mlu_double",
"test_nn_py_TestNN_test_MarginRankingLoss_margin_mlu_float",
"test_nn_py_TestNN_test_MarginRankingLoss_margin_mlu_half",
"test_nn_py_TestNN_test_MarginRankingLoss_margin_sum_reduction",
"test_nn_py_TestNN_test_MarginRankingLoss_margin_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_MarginRankingLoss_margin_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_MarginRankingLoss_margin_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_MarginRankingLoss_no_batch_dim_mean",
"test_nn_py_TestNN_test_MarginRankingLoss_no_batch_dim_mean_mlu_double",
"test_nn_py_TestNN_test_MarginRankingLoss_no_batch_dim_mean_mlu_float",
"test_nn_py_TestNN_test_MarginRankingLoss_no_batch_dim_mean_mlu_half",
"test_nn_py_TestNN_test_MarginRankingLoss_no_batch_dim_none",
"test_nn_py_TestNN_test_MarginRankingLoss_no_batch_dim_none_mlu_double",
"test_nn_py_TestNN_test_MarginRankingLoss_no_batch_dim_none_mlu_float",
"test_nn_py_TestNN_test_MarginRankingLoss_no_batch_dim_none_mlu_half",
"test_nn_py_TestNN_test_MarginRankingLoss_no_batch_dim_sum",
"test_nn_py_TestNN_test_MarginRankingLoss_no_batch_dim_sum_mlu_double",
"test_nn_py_TestNN_test_MarginRankingLoss_no_batch_dim_sum_mlu_float",
"test_nn_py_TestNN_test_MarginRankingLoss_no_batch_dim_sum_mlu_half",
"test_nn_py_TestNN_test_MarginRankingLoss_sum_reduction",
"test_nn_py_TestNN_test_MarginRankingLoss_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_MarginRankingLoss_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_MarginRankingLoss_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_MaxPool1d",
"test_nn_py_TestNN_test_MaxPool1d_return_indices",
"test_nn_py_TestNN_test_MaxPool1d_stride",
"test_nn_py_TestNN_test_MaxPool2d_3d_input",
"test_nn_py_TestNN_test_MaxPool2d_4d_input",
"test_nn_py_TestNN_test_MaxPool2d_return_indices",
"test_nn_py_TestNN_test_MaxPool3d",
"test_nn_py_TestNN_test_MaxPool3d_mlu",
"test_nn_py_TestNN_test_MaxPool3d_return_indices",
"test_nn_py_TestNN_test_MaxPool3d_return_indices_mlu",
"test_nn_py_TestNN_test_MaxPool3d_stride",
"test_nn_py_TestNN_test_MaxPool3d_stride_mlu",
"test_nn_py_TestNN_test_MaxPool3d_stride_padding",
"test_nn_py_TestNN_test_MaxPool3d_stride_padding_mlu",
"test_nn_py_TestNN_test_MaxUnpool1d_net",
"test_nn_py_TestNN_test_MaxUnpool1d_net_mlu",
"test_nn_py_TestNN_test_MaxUnpool1d_net_no_batch_dim",
"test_nn_py_TestNN_test_MaxUnpool1d_net_no_batch_dim_mlu",
"test_nn_py_TestNN_test_MaxUnpool2d_net",
"test_nn_py_TestNN_test_MaxUnpool2d_net_mlu",
"test_nn_py_TestNN_test_MaxUnpool2d_net_no_batch_dim",
"test_nn_py_TestNN_test_MaxUnpool2d_net_no_batch_dim_mlu",
"test_nn_py_TestNN_test_MaxUnpool3d_net",
"test_nn_py_TestNN_test_MaxUnpool3d_net_mlu",
"test_nn_py_TestNN_test_MaxUnpool3d_net_no_batch_dim",
"test_nn_py_TestNN_test_MaxUnpool3d_net_no_batch_dim_mlu",
"test_nn_py_TestNN_test_Mish",
"test_nn_py_TestNN_test_Mish_mlu",
"test_nn_py_TestNN_test_Mish_no_batch_dim",
"test_nn_py_TestNN_test_Mish_no_batch_dim_mlu",
"test_nn_py_TestNN_test_Mish_scalar",
"test_nn_py_TestNN_test_Mish_scalar_mlu",
"test_nn_py_TestNN_test_ModuleDict",
"test_nn_py_TestNN_test_ModuleList",
"test_nn_py_TestNN_test_MultiLabelMarginLoss",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_0d_no_reduce",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_0d_no_reduce_mlu",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_1d",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_1d_mlu_bfloat16",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_1d_mlu_double",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_1d_mlu_float",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_1d_mlu_half",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_1d_no_reduce",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_1d_no_reduce_mlu",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_1d_sum_reduction",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_1d_sum_reduction_mlu_bfloat16",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_1d_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_1d_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_1d_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_mlu_bfloat16",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_mlu_double",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_mlu_float",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_mlu_half",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_index_neg",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_index_neg_mlu",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_no_batch_dim_mean",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_no_batch_dim_mean_mlu_double",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_no_batch_dim_mean_mlu_float",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_no_batch_dim_mean_mlu_half",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_no_batch_dim_none",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_no_batch_dim_none_mlu_double",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_no_batch_dim_none_mlu_float",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_no_batch_dim_none_mlu_half",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_no_batch_dim_sum",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_no_batch_dim_sum_mlu_double",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_no_batch_dim_sum_mlu_float",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_no_batch_dim_sum_mlu_half",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_no_reduce",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_no_reduce_mlu",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_sum_reduction",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_sum_reduction_mlu_bfloat16",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_MultiLabelMarginLoss_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss_mlu_double",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss_mlu_float",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss_mlu_half",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss_no_batch_dim_mean",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss_no_batch_dim_mean_mlu_double",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss_no_batch_dim_mean_mlu_float",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss_no_batch_dim_mean_mlu_half",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss_no_batch_dim_none",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss_no_batch_dim_none_mlu_double",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss_no_batch_dim_none_mlu_float",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss_no_batch_dim_none_mlu_half",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss_no_batch_dim_sum",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss_no_batch_dim_sum_mlu_double",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss_no_batch_dim_sum_mlu_float",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss_no_batch_dim_sum_mlu_half",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss_no_reduce",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss_no_reduce_mlu",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss_weights",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss_weights_mlu_double",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss_weights_mlu_float",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss_weights_mlu_half",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss_weights_no_reduce",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss_weights_no_reduce_mlu",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss_weights_sum_reduction",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss_weights_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss_weights_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_MultiLabelSoftMarginLoss_weights_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_MultiMarginLoss",
"test_nn_py_TestNN_test_MultiMarginLoss_1d",
"test_nn_py_TestNN_test_MultiMarginLoss_1d_mlu_double",
"test_nn_py_TestNN_test_MultiMarginLoss_1d_mlu_float",
"test_nn_py_TestNN_test_MultiMarginLoss_1d_mlu_half",
"test_nn_py_TestNN_test_MultiMarginLoss_1d_no_reduce",
"test_nn_py_TestNN_test_MultiMarginLoss_1d_no_reduce_mlu",
"test_nn_py_TestNN_test_MultiMarginLoss_1d_sum_reduction",
"test_nn_py_TestNN_test_MultiMarginLoss_1d_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_MultiMarginLoss_1d_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_MultiMarginLoss_1d_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_MultiMarginLoss_mlu_double",
"test_nn_py_TestNN_test_MultiMarginLoss_mlu_float",
"test_nn_py_TestNN_test_MultiMarginLoss_mlu_half",
"test_nn_py_TestNN_test_MultiMarginLoss_margin",
"test_nn_py_TestNN_test_MultiMarginLoss_margin_mlu_double",
"test_nn_py_TestNN_test_MultiMarginLoss_margin_mlu_float",
"test_nn_py_TestNN_test_MultiMarginLoss_margin_mlu_half",
"test_nn_py_TestNN_test_MultiMarginLoss_margin_no_reduce",
"test_nn_py_TestNN_test_MultiMarginLoss_margin_no_reduce_mlu",
"test_nn_py_TestNN_test_MultiMarginLoss_margin_sum_reduction",
"test_nn_py_TestNN_test_MultiMarginLoss_margin_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_MultiMarginLoss_margin_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_MultiMarginLoss_margin_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_MultiMarginLoss_no_reduce",
"test_nn_py_TestNN_test_MultiMarginLoss_no_reduce_mlu",
"test_nn_py_TestNN_test_MultiMarginLoss_p",
"test_nn_py_TestNN_test_MultiMarginLoss_p_mlu_double",
"test_nn_py_TestNN_test_MultiMarginLoss_p_mlu_float",
"test_nn_py_TestNN_test_MultiMarginLoss_p_mlu_half",
"test_nn_py_TestNN_test_MultiMarginLoss_p_no_reduce",
"test_nn_py_TestNN_test_MultiMarginLoss_p_no_reduce_mlu",
"test_nn_py_TestNN_test_MultiMarginLoss_p_sum_reduction",
"test_nn_py_TestNN_test_MultiMarginLoss_p_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_MultiMarginLoss_p_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_MultiMarginLoss_p_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_MultiMarginLoss_sum_reduction",
"test_nn_py_TestNN_test_MultiMarginLoss_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_MultiMarginLoss_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_MultiMarginLoss_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_MultiMarginLoss_weights",
"test_nn_py_TestNN_test_MultiMarginLoss_weights_mlu_double",
"test_nn_py_TestNN_test_MultiMarginLoss_weights_mlu_float",
"test_nn_py_TestNN_test_MultiMarginLoss_weights_mlu_half",
"test_nn_py_TestNN_test_MultiMarginLoss_weights_no_reduce",
"test_nn_py_TestNN_test_MultiMarginLoss_weights_no_reduce_mlu",
"test_nn_py_TestNN_test_MultiMarginLoss_weights_sum_reduction",
"test_nn_py_TestNN_test_MultiMarginLoss_weights_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_MultiMarginLoss_weights_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_MultiMarginLoss_weights_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_NLLLoss_2d_mlu_bfloat16", # mlu don't support bfloat16.
"test_nn_py_TestNN_test_NLLLoss_2d_ignore_index_mlu_bfloat16", # mlu don't support bfloat16.
"test_nn_py_TestNN_test_NLLLoss_2d_sum_reduction_mlu_bfloat16", # mlu don't support bfloat16.
"test_nn_py_TestNN_test_NLLLoss_2d_weights_mlu_bfloat16", # mlu don't support bfloat16.
"test_nn_py_TestNN_test_NLLLoss_mlu_bfloat16", # mlu don't support bfloat16.
"test_nn_py_TestNN_test_NLLLoss_dim_is_3_mlu_bfloat16", # mlu don't support bfloat16.
"test_nn_py_TestNN_test_NLLLoss_dim_is_3_sum_reduction_mlu_bfloat16", # mlu don't support bfloat16.
"test_nn_py_TestNN_test_NLLLoss_higher_dim_mlu_bfloat16", # mlu don't support bfloat16.
"test_nn_py_TestNN_test_NLLLoss_higher_dim_sum_reduction_mlu_bfloat16", # mlu don't support bfloat16.
"test_nn_py_TestNN_test_NLLLoss_ignore_index_mlu_bfloat16", # mlu don't support bfloat16.
"test_nn_py_TestNN_test_NLLLoss_sum_reduction_mlu_bfloat16", # mlu don't support bfloat16.
"test_nn_py_TestNN_test_NLLLoss_weights_mlu_bfloat16", # mlu don't support bfloat16.
"test_nn_py_TestNN_test_NLLLoss_weights_ignore_index_mlu_bfloat16", # mlu don't support bfloat16.
"test_nn_py_TestNN_test_NLLLoss_weights_ignore_index_neg_mlu_bfloat16", # mlu don't support bfloat16.
"test_nn_py_TestNN_test_PReLU_1d",
"test_nn_py_TestNN_test_PReLU_1d_multiparam",
"test_nn_py_TestNN_test_PReLU_2d",
"test_nn_py_TestNN_test_PReLU_2d_multiparam",
"test_nn_py_TestNN_test_PReLU_3d",
"test_nn_py_TestNN_test_PReLU_3d_multiparam",
"test_nn_py_TestNN_test_PReLU_backward_requires_grad_false",
"test_nn_py_TestNN_test_PReLU_no_batch_dim",
"test_nn_py_TestNN_test_PReLU_scalar",
"test_nn_py_TestNN_test_Padding122112_3dcircular",
"test_nn_py_TestNN_test_Padding122112_3dcircular_mlu",
"test_nn_py_TestNN_test_Padding1221_2dcircular",
"test_nn_py_TestNN_test_Padding1221_2dcircular_mlu",
"test_nn_py_TestNN_test_Padding12_1dcircular",
"test_nn_py_TestNN_test_Padding12_1dcircular_mlu",
"test_nn_py_TestNN_test_Padding2322_2dcircular",
"test_nn_py_TestNN_test_Padding2322_2dcircular_mlu",
"test_nn_py_TestNN_test_Padding31_1dcircular",
"test_nn_py_TestNN_test_Padding31_1dcircular_mlu",
"test_nn_py_TestNN_test_Padding322112_3dcircular",
"test_nn_py_TestNN_test_Padding322112_3dcircular_mlu",
"test_nn_py_TestNN_test_Padding332122_3dcircular",
"test_nn_py_TestNN_test_Padding332122_3dcircular_mlu",
"test_nn_py_TestNN_test_Padding3331_2dcircular",
"test_nn_py_TestNN_test_Padding3331_2dcircular_mlu",
"test_nn_py_TestNN_test_Padding33_1dcircular",
"test_nn_py_TestNN_test_Padding33_1dcircular_mlu",
"test_nn_py_TestNN_test_PairwiseDistance",
"test_nn_py_TestNN_test_PairwiseDistance_broadcast_lhs",
"test_nn_py_TestNN_test_PairwiseDistance_broadcast_lhs_mlu",
"test_nn_py_TestNN_test_PairwiseDistance_broadcast_rhs",
"test_nn_py_TestNN_test_PairwiseDistance_broadcast_rhs_mlu",
"test_nn_py_TestNN_test_PairwiseDistance_mlu",
"test_nn_py_TestNN_test_PairwiseDistance_no_batch_dim",
"test_nn_py_TestNN_test_PairwiseDistance_no_batch_dim_mlu",
"test_nn_py_TestNN_test_PairwiseDistance_with_non_default_args",
"test_nn_py_TestNN_test_PairwiseDistance_with_non_default_args_mlu",
"test_nn_py_TestNN_test_ParameterDict",
"test_nn_py_TestNN_test_ParameterDict_replication",
"test_nn_py_TestNN_test_ParameterList",
"test_nn_py_TestNN_test_ParameterList_meta",
"test_nn_py_TestNN_test_ParameterList_replication",
"test_nn_py_TestNN_test_PixelShuffle",
"test_nn_py_TestNN_test_PixelShuffle_mlu",
"test_nn_py_TestNN_test_PixelUnshuffle",
"test_nn_py_TestNN_test_PixelUnshuffle_mlu",
"test_nn_py_TestNN_test_RNN_cudnn_weight_norm",    # Precision problen, currently do not support double.
# PYTORCH-10240:rrelu not support training is True. begin
"test_nn_py_TestNN_test_RReLU",
"test_nn_py_TestNN_test_RReLU_mlu",
"test_nn_py_TestNN_test_RReLU_no_batch_dim",
"test_nn_py_TestNN_test_RReLU_no_batch_dim_mlu",
"test_nn_py_TestNN_test_RReLU_with_up_down",
"test_nn_py_TestNN_test_RReLU_with_up_down_mlu",
"test_nn_py_TestNN_test_RReLU_with_up_down_scalar",
"test_nn_py_TestNN_test_RReLU_with_up_down_scalar_mlu",
# PYTORCH-10240:rrelu not support training is True. end
"test_nn_py_TestNN_test_ReLU6",
"test_nn_py_TestNN_test_ReLU6_no_batch_dim",
"test_nn_py_TestNN_test_ReLU6_scalar",
"test_nn_py_TestNN_test_ReflectionPad1d",
"test_nn_py_TestNN_test_ReflectionPad1d_batch",
"test_nn_py_TestNN_test_ReflectionPad1d_batch_mlu",
"test_nn_py_TestNN_test_ReflectionPad1d_complex",
"test_nn_py_TestNN_test_ReflectionPad1d_complex_mlu",
"test_nn_py_TestNN_test_ReflectionPad1d_mlu",
"test_nn_py_TestNN_test_ReflectionPad2d",
"test_nn_py_TestNN_test_ReflectionPad2d_complex",
"test_nn_py_TestNN_test_ReflectionPad2d_complex_mlu",
"test_nn_py_TestNN_test_ReflectionPad2d_no_batch_dim",
"test_nn_py_TestNN_test_ReflectionPad3d",
"test_nn_py_TestNN_test_ReflectionPad3d_complex",
"test_nn_py_TestNN_test_ReflectionPad3d_complex_mlu",
"test_nn_py_TestNN_test_ReflectionPad3d_mlu",
"test_nn_py_TestNN_test_ReflectionPad3d_no_batch_dim",
"test_nn_py_TestNN_test_ReflectionPad3d_no_batch_dim_mlu",
"test_nn_py_TestNN_test_ReplicationPad1d_complex", # ReplicationPad1d op does not support complex on mlu
"test_nn_py_TestNN_test_ReplicationPad1d_complex_mlu", # ReplicationPad1d op does not support complex on mlu
"test_nn_py_TestNN_test_ReplicationPad2d_complex", # ReplicationPad2d op does not support complex on mlu
"test_nn_py_TestNN_test_ReplicationPad2d_complex_mlu", # ReplicationPad2d op does not support complex on mlu
"test_nn_py_TestNN_test_ReplicationPad3d",
"test_nn_py_TestNN_test_ReplicationPad3d_complex",
"test_nn_py_TestNN_test_ReplicationPad3d_complex_mlu",
"test_nn_py_TestNN_test_ReplicationPad3d_mlu",
"test_nn_py_TestNN_test_ReplicationPad3d_no_batch_dim",
"test_nn_py_TestNN_test_ReplicationPad3d_no_batch_dim_mlu",
"test_nn_py_TestNN_test_SELU_no_batch_dim_mlu",
"test_nn_py_TestNN_test_SELU_scalar_mlu",
"test_nn_py_TestNN_test_Sequential_append",
"test_nn_py_TestNN_test_Sequential_delitem",
"test_nn_py_TestNN_test_Sequential_extend",
"test_nn_py_TestNN_test_Sequential_getitem",
"test_nn_py_TestNN_test_Sequential_iadd",
"test_nn_py_TestNN_test_Sequential_imul",
"test_nn_py_TestNN_test_Sequential_insert",
"test_nn_py_TestNN_test_Sequential_insert_fail_case",
"test_nn_py_TestNN_test_Sequential_mul",
"test_nn_py_TestNN_test_Sequential_pop",
"test_nn_py_TestNN_test_Sequential_rmul",
"test_nn_py_TestNN_test_Sequential_setitem",
"test_nn_py_TestNN_test_Sequential_setitem_named",
"test_nn_py_TestNN_test_SoftMarginLoss",
"test_nn_py_TestNN_test_SoftMarginLoss_mlu_double",
"test_nn_py_TestNN_test_SoftMarginLoss_mlu_float",
"test_nn_py_TestNN_test_SoftMarginLoss_mlu_half",
"test_nn_py_TestNN_test_SoftMarginLoss_no_batch_dim_mean",
"test_nn_py_TestNN_test_SoftMarginLoss_no_batch_dim_mean_mlu_double",
"test_nn_py_TestNN_test_SoftMarginLoss_no_batch_dim_mean_mlu_float",
"test_nn_py_TestNN_test_SoftMarginLoss_no_batch_dim_mean_mlu_half",
"test_nn_py_TestNN_test_SoftMarginLoss_no_batch_dim_none",
"test_nn_py_TestNN_test_SoftMarginLoss_no_batch_dim_none_mlu_double",
"test_nn_py_TestNN_test_SoftMarginLoss_no_batch_dim_none_mlu_float",
"test_nn_py_TestNN_test_SoftMarginLoss_no_batch_dim_none_mlu_half",
"test_nn_py_TestNN_test_SoftMarginLoss_no_batch_dim_sum",
"test_nn_py_TestNN_test_SoftMarginLoss_no_batch_dim_sum_mlu_double",
"test_nn_py_TestNN_test_SoftMarginLoss_no_batch_dim_sum_mlu_float",
"test_nn_py_TestNN_test_SoftMarginLoss_no_batch_dim_sum_mlu_half",
"test_nn_py_TestNN_test_SoftMarginLoss_no_reduce",
"test_nn_py_TestNN_test_SoftMarginLoss_no_reduce_mlu",
"test_nn_py_TestNN_test_SoftMarginLoss_sum_reduction",
"test_nn_py_TestNN_test_SoftMarginLoss_sum_reduction_mlu_double",
"test_nn_py_TestNN_test_SoftMarginLoss_sum_reduction_mlu_float",
"test_nn_py_TestNN_test_SoftMarginLoss_sum_reduction_mlu_half",
"test_nn_py_TestNN_test_Softmax",
"test_nn_py_TestNN_test_Softmax2d",
"test_nn_py_TestNN_test_Softmax2d_no_batch_dim",
"test_nn_py_TestNN_test_Softmax_no_batch_dim",
"test_nn_py_TestNN_test_Softmin",
"test_nn_py_TestNN_test_Softmin_mlu",
"test_nn_py_TestNN_test_Softmin_multidim",
"test_nn_py_TestNN_test_Softmin_multidim_mlu",
"test_nn_py_TestNN_test_Softmin_no_batch_dim",
"test_nn_py_TestNN_test_Softmin_no_batch_dim_mlu",
"test_nn_py_TestNN_test_Softmin_scalar",
"test_nn_py_TestNN_test_Softmin_scalar_mlu",
"test_nn_py_TestNN_test_Softshrink",
"test_nn_py_TestNN_test_Softshrink_mlu",
"test_nn_py_TestNN_test_Softshrink_lambda",
"test_nn_py_TestNN_test_Softshrink_lambda_mlu",
"test_nn_py_TestNN_test_Softshrink_lambda_scalar",
"test_nn_py_TestNN_test_Softshrink_lambda_scalar_mlu",
"test_nn_py_TestNN_test_Softshrink_no_batch_dim",
"test_nn_py_TestNN_test_Softshrink_no_batch_dim_mlu",
"test_nn_py_TestNN_test_Softsign",
"test_nn_py_TestNN_test_Softsign_mlu",
"test_nn_py_TestNN_test_Softsign_no_batch_dim",
"test_nn_py_TestNN_test_Softsign_no_batch_dim_mlu",
"test_nn_py_TestNN_test_Softsign_scalar",
"test_nn_py_TestNN_test_Softsign_scalar_mlu",
"test_nn_py_TestNN_test_Tanhshrink",
"test_nn_py_TestNN_test_Tanhshrink_mlu",
"test_nn_py_TestNN_test_Tanhshrink_no_batch_dim",
"test_nn_py_TestNN_test_Tanhshrink_no_batch_dim_mlu",
"test_nn_py_TestNN_test_Tanhshrink_scalar",
"test_nn_py_TestNN_test_Tanhshrink_scalar_mlu",
"test_nn_py_TestNN_test_TransformerDecoderLayer_relu_activation",
"test_nn_py_TestNN_test_TransformerEncoderLayer_relu_activation",
"test_nn_py_TestNN_test_TransformerEncoderLayer_relu_activation_mlu",
"test_nn_py_TestNN_test_TransformerEncoderLayer_relu_activation_mlu_tf32",
"test_nn_py_TestNN_test_Transformer_cell",
"test_nn_py_TestNN_test_Transformer_multilayer_coder",
"test_nn_py_TestNN_test_Transformer_multilayer_coder_mlu",
"test_nn_py_TestNN_test_Transformer_multilayer_coder_mlu_tf32",
"test_nn_py_TestNN_test_TripletMarginLoss_no_batch_dim_mean",
"test_nn_py_TestNN_test_TripletMarginLoss_no_batch_dim_mean_mlu_double",
"test_nn_py_TestNN_test_TripletMarginLoss_no_batch_dim_mean_mlu_float",
"test_nn_py_TestNN_test_TripletMarginLoss_no_batch_dim_mean_mlu_half",
"test_nn_py_TestNN_test_TripletMarginLoss_no_batch_dim_none",
"test_nn_py_TestNN_test_TripletMarginLoss_no_batch_dim_none_mlu_double",
"test_nn_py_TestNN_test_TripletMarginLoss_no_batch_dim_none_mlu_float",
"test_nn_py_TestNN_test_TripletMarginLoss_no_batch_dim_none_mlu_half",
"test_nn_py_TestNN_test_TripletMarginLoss_no_batch_dim_sum",
"test_nn_py_TestNN_test_TripletMarginLoss_no_batch_dim_sum_mlu_double",
"test_nn_py_TestNN_test_TripletMarginLoss_no_batch_dim_sum_mlu_float",
"test_nn_py_TestNN_test_TripletMarginLoss_no_batch_dim_sum_mlu_half",
"test_nn_py_TestNN_test_Unflatten_no_batch_dim",
"test_nn_py_TestNN_test_Unflatten_no_batch_dim_mlu",
"test_nn_py_TestNN_test_ZeroPad2d",
"test_nn_py_TestNN_test_ZeroPad2d_complex",
"test_nn_py_TestNN_test_ZeroPad2d_complex_mlu",
"test_nn_py_TestNN_test_ZeroPad2d_mlu",
"test_nn_py_TestNN_test_ZeroPad2d_negative_dims",
"test_nn_py_TestNN_test_ZeroPad2d_negative_dims_mlu",
"test_nn_py_TestNN_test_ZeroPad2d_no_batch_dim",
"test_nn_py_TestNN_test_ZeroPad2d_no_batch_dim_mlu",
"test_nn_py_TestNN_test_adaptive_log_softmax",
"test_nn_py_TestNN_test_affine_grid",
"test_nn_py_TestNN_test_affine_grid_3d",
"test_nn_py_TestNN_test_affine_grid_error_checking",
"test_nn_py_TestNN_test_assignment",
"test_nn_py_TestNN_test_batchnorm_cudnn_nhwc",  #TODO(PYTORCH-10096): CNNL only support CL output.
"test_nn_py_TestNN_test_bce_loss_always_nonnegative",
"test_nn_py_TestNN_test_bce_loss_broadcasts_weights",
"test_nn_py_TestNN_test_bce_loss_input_range",
"test_nn_py_TestNN_test_bce_loss_size_mismatch",
"test_nn_py_TestNN_test_bce_with_logits_broadcasts_pos_weights",
"test_nn_py_TestNN_test_bce_with_logits_broadcasts_weights",
"test_nn_py_TestNN_test_bce_with_logits_has_correct_forward_grad",
"test_nn_py_TestNN_test_bce_with_logits_has_correct_grad_at_zero",
"test_nn_py_TestNN_test_bce_with_logits_ones_in_pos_weights_are_the_same_as_none",
"test_nn_py_TestNN_test_bce_with_logits_raises_if_target_and_input_are_different_size",
"test_nn_py_TestNN_test_bce_with_logits_stability",
"test_nn_py_TestNN_test_bce_with_logits_with_pos_weight_has_correct_grad_at_zero",
"test_nn_py_TestNN_test_bilinear",
"test_nn_py_TestNN_test_bilinear_broadcasting",
"test_nn_py_TestNN_test_bilinear_no_bias",
"test_nn_py_TestNN_test_bilinear_non_contiguous",
"test_nn_py_TestNN_test_broadcast_double_backwards_mlu",
"test_nn_py_TestNN_test_broadcast_no_grad",
"test_nn_py_TestNN_test_broadcast_not_requiring_grad",
"test_nn_py_TestNN_test_buffer_not_persistent",
"test_nn_py_TestNN_test_buffer_not_persistent_assign",
"test_nn_py_TestNN_test_buffer_not_persistent_del",
"test_nn_py_TestNN_test_buffer_not_persistent_load",
"test_nn_py_TestNN_test_buffer_not_persistent_overwrite",
"test_nn_py_TestNN_test_buffers_and_named_buffers",
"test_nn_py_TestNN_test_caching_parametrization",
"test_nn_py_TestNN_test_caching_parametrization_with_transfer_parametrizations_and_params",
"test_nn_py_TestNN_test_call_supports_python_dict_output",
"test_nn_py_TestNN_test_channel_shuffle",
"test_nn_py_TestNN_test_channel_shuffle_return_self",
"test_nn_py_TestNN_test_children",
"test_nn_py_TestNN_test_clip_grad_norm",
"test_nn_py_TestNN_test_clip_grad_value",
"test_nn_py_TestNN_test_compute_nparams_to_prune",
"test_nn_py_TestNN_test_container_copy",
"test_nn_py_TestNN_test_convert_sync_batchnorm",
"test_nn_py_TestNN_test_cosine_embedding_loss_invalid_shape",
"test_nn_py_TestNN_test_cosine_embedding_loss_margin_no_reduce",
"test_nn_py_TestNN_test_cosine_embedding_loss_no_reduce",
"test_nn_py_TestNN_test_cosine_embedding_loss_with_diff_type",
"test_nn_py_TestNN_test_cosine_similarity",
"test_nn_py_TestNN_test_cross_entropy_loss",
"test_nn_py_TestNN_test_cross_entropy_loss_precision",
"test_nn_py_TestNN_test_cross_entropy_loss_zero_div",
"test_nn_py_TestNN_test_cudnn_non_contiguous",
"test_nn_py_TestNN_test_cudnn_noncontiguous_weight",
"test_nn_py_TestNN_test_cudnn_weight_format",
"test_nn_py_TestNN_test_cudnn_weight_tying",
"test_nn_py_TestNN_test_custom_from_mask_pruning",
"test_nn_py_TestNN_test_deepcopy_after_parametrization",
"test_nn_py_TestNN_test_dir",
"test_nn_py_TestNN_test_dir_digit",
"test_nn_py_TestNN_test_errors_parametrized_tensor_parametrization",
"test_nn_py_TestNN_test_errors_unparametrized_tensor_parametrization",
"test_nn_py_TestNN_test_extra_state",
"test_nn_py_TestNN_test_extra_state_missing_get_extra_state",
"test_nn_py_TestNN_test_extra_state_missing_set_extra_state",
"test_nn_py_TestNN_test_extra_state_non_dict",
"test_nn_py_TestNN_test_fb_fc_packed",
"test_nn_py_TestNN_test_flatten",
"test_nn_py_TestNN_test_fold_invalid_arg",
"test_nn_py_TestNN_test_gaussian_nll_loss_args",
"test_nn_py_TestNN_test_gaussian_nll_loss_broadcasting",
"test_nn_py_TestNN_test_gaussian_nll_loss_reduction_modes",
"test_nn_py_TestNN_test_get_buffer",
"test_nn_py_TestNN_test_get_buffer_from_submodules",
"test_nn_py_TestNN_test_getattr_with_property",
"test_nn_py_TestNN_test_global_pruning",
"test_nn_py_TestNN_test_global_pruning_importance_scores",
"test_nn_py_TestNN_test_grid_sample", # TODO(PYTORCH-10286, PYTORCH-10134)
"test_nn_py_TestNN_test_grid_sample_3d",
"test_nn_py_TestNN_test_grouped_conv_cudnn_nhwc_support",
"test_nn_py_TestNN_test_hook_backward_size",
"test_nn_py_TestNN_test_hook_backward_writeable",
"test_nn_py_TestNN_test_hook_cpp",
"test_nn_py_TestNN_test_hook_extra_input",
"test_nn_py_TestNN_test_hook_forward_preforward_writable",
"test_nn_py_TestNN_test_hook_inplace",
"test_nn_py_TestNN_test_hook_invalid_outputs",
"test_nn_py_TestNN_test_hook_last_arg_requires_grad",
"test_nn_py_TestNN_test_hook_no_requires_grad",
"test_nn_py_TestNN_test_hook_non_full_warning",
"test_nn_py_TestNN_test_hook_requires_grad",
"test_nn_py_TestNN_test_hooks",
"test_nn_py_TestNN_test_huber_loss_invalid_delta",
"test_nn_py_TestNN_test_identity_pruning",
"test_nn_py_TestNN_test_initialization_parametrization",
"test_nn_py_TestNN_test_inplace_thnn",
"test_nn_py_TestNN_test_interpolate", # TODO(PYTORCH-10155): Jacobian mismatch
"test_nn_py_TestNN_test_interpolate_nearest_3d",
"test_nn_py_TestNN_test_interpolate_nearest_3d_mlu",
"test_nn_py_TestNN_test_interpolate_nearest_3d_zero_dim",
"test_nn_py_TestNN_test_interpolate_nearest_3d_zero_dim_mlu",
"test_nn_py_TestNN_test_interpolate_nearest_scale_3d",
"test_nn_py_TestNN_test_interpolate_nearest_scale_3d_mlu",
"test_nn_py_TestNN_test_interpolate_nearest_tuple_3d",
"test_nn_py_TestNN_test_interpolate_nearest_tuple_3d_mlu",
"test_nn_py_TestNN_test_l1_loss_correct",
"test_nn_py_TestNN_test_l1_unstructured_pruning",
"test_nn_py_TestNN_test_l1_unstructured_pruning_with_importance_scores",
"test_nn_py_TestNN_test_layer_norm_grads_with_create_graph_flag",
"test_nn_py_TestNN_test_ln_structured_pruning",
"test_nn_py_TestNN_test_ln_structured_pruning_importance_scores",
"test_nn_py_TestNN_test_load_state_dict",
"test_nn_py_TestNN_test_load_state_dict_BC",
"test_nn_py_TestNN_test_load_state_dict_child",
"test_nn_py_TestNN_test_load_state_dict_custom",
"test_nn_py_TestNN_test_load_state_dict_invalid",
"test_nn_py_TestNN_test_load_state_dict_ref_cycle",
"test_nn_py_TestNN_test_load_state_dict_type",
"test_nn_py_TestNN_test_log_softmax_dim0",
"test_nn_py_TestNN_test_log_softmax_dim3",
"test_nn_py_TestNN_test_log_softmax_lastdim",
"test_nn_py_TestNN_test_log_softmax_spatial",
"test_nn_py_TestNN_test_log_softmax_spatial_special",
"test_nn_py_TestNN_test_loss_equal_input_target_shape",
"test_nn_py_TestNN_test_margin_ranking_loss_margin_no_reduce",
"test_nn_py_TestNN_test_margin_ranking_loss_no_reduce",
"test_nn_py_TestNN_test_module_apply_inplace_op",
"test_nn_py_TestNN_test_module_backcompat",
"test_nn_py_TestNN_test_module_to_argparse",
"test_nn_py_TestNN_test_modules",
"test_nn_py_TestNN_test_multihead_attention_average_attn_weights_False",
"test_nn_py_TestNN_test_multihead_attention_average_attn_weights_True",
"test_nn_py_TestNN_test_multihead_attn_3d_attn_mask",
"test_nn_py_TestNN_test_multihead_attn_fast_path_invalid_shape",
"test_nn_py_TestNN_test_multihead_attn_invalid_shape",
"test_nn_py_TestNN_test_multihead_attn_nested_tensor_outside_fast_path",
"test_nn_py_TestNN_test_multihead_attn_no_bias",
"test_nn_py_TestNN_test_multimarginloss_1d_input_0d_target_no_reduce",
"test_nn_py_TestNN_test_multimarginloss_1d_input_0d_target_no_reduce_mlu",
"test_nn_py_TestNN_test_multiple_inputs_parametrization",
"test_nn_py_TestNN_test_multiple_pruning_calls",
"test_nn_py_TestNN_test_named_children",
"test_nn_py_TestNN_test_named_modules",
"test_nn_py_TestNN_test_nested_tensor_from_mask",
"test_nn_py_TestNN_test_nested_tensor_from_mask_error",
"test_nn_py_TestNN_test_new_spectral_norm",
"test_nn_py_TestNN_test_new_spectral_norm_dim",
"test_nn_py_TestNN_test_new_spectral_norm_forward",
"test_nn_py_TestNN_test_new_spectral_norm_load_state_dict",
"test_nn_py_TestNN_test_no_grad",
"test_nn_py_TestNN_test_non_leaf_parameters",
"test_nn_py_TestNN_test_normalize",
"test_nn_py_TestNN_test_orthogonal_errors",
"test_nn_py_TestNN_test_orthogonal_parametrization",
"test_nn_py_TestNN_test_overwrite_module_params_on_conversion",
"test_nn_py_TestNN_test_pack_sequence_batch_sizes_throw",
"test_nn_py_TestNN_test_pad_scalar_error",
"test_nn_py_TestNN_test_padding_list",
"test_nn_py_TestNN_test_pairwise_distance",
"test_nn_py_TestNN_test_parameter_assignment",
"test_nn_py_TestNN_test_parameterlistdict_pickle",
"test_nn_py_TestNN_test_parameterlistdict_setting_attributes",
"test_nn_py_TestNN_test_parameters_and_named_parameters",
"test_nn_py_TestNN_test_parameters_to_vector",
"test_nn_py_TestNN_test_parametrization_same_training_mode",
"test_nn_py_TestNN_test_parse_to",
"test_nn_py_TestNN_test_partial_flat_weights",
"test_nn_py_TestNN_test_pdist",
"test_nn_py_TestNN_test_pdist_cpu_gradgrad_unimplemented",
"test_nn_py_TestNN_test_pdist_mlu_gradgrad_unimplemented",
"test_nn_py_TestNN_test_pdist_empty_col",
"test_nn_py_TestNN_test_pdist_empty_row",
"test_nn_py_TestNN_test_pdist_large",
"test_nn_py_TestNN_test_pdist_zeros",
"test_nn_py_TestNN_test_pixel_shuffle_nhwc_cpu",
"test_nn_py_TestNN_test_pixel_shuffle_unshuffle",
"test_nn_py_TestNN_test_pointwise_loss_broadcast",
"test_nn_py_TestNN_test_pointwise_loss_target_grad_none_reduction",
"test_nn_py_TestNN_test_projections_lstm_check_device",     # LSTM dispatch to MLU earlier than GPU
"test_nn_py_TestNN_test_prune",
"test_nn_py_TestNN_test_prune_importance_scores",
"test_nn_py_TestNN_test_prune_importance_scores_mimic_default",
"test_nn_py_TestNN_test_pruning_container",
"test_nn_py_TestNN_test_pruning_container_compute_mask",
"test_nn_py_TestNN_test_pruning_id_consistency",
"test_nn_py_TestNN_test_pruning_rollback",
"test_nn_py_TestNN_test_pruning_serialization_model",
"test_nn_py_TestNN_test_pruning_serialization_state_dict",
"test_nn_py_TestNN_test_random_pruning",
"test_nn_py_TestNN_test_random_pruning_0perc",
"test_nn_py_TestNN_test_random_pruning_forward",
"test_nn_py_TestNN_test_random_pruning_new_weight",
"test_nn_py_TestNN_test_random_pruning_orig",
"test_nn_py_TestNN_test_random_pruning_pickle",
"test_nn_py_TestNN_test_random_pruning_sizes",
"test_nn_py_TestNN_test_random_structured_pruning_amount",
"test_nn_py_TestNN_test_register_and_remove_buffer_parametrization",
"test_nn_py_TestNN_test_register_and_remove_nested_parametrization",
"test_nn_py_TestNN_test_register_and_remove_parametrization",
"test_nn_py_TestNN_test_register_buffer_allows_overwriting_with_same_name",
"test_nn_py_TestNN_test_register_buffer_raises_error_if_attr_exists",
"test_nn_py_TestNN_test_register_buffer_raises_error_if_name_is_not_string",
"test_nn_py_TestNN_test_register_buffer_raises_error_if_not_tensor",
"test_nn_py_TestNN_test_register_parameter_allows_overwriting_with_same_name",
"test_nn_py_TestNN_test_register_parameter_raises_error_if_attr_exists",
"test_nn_py_TestNN_test_register_parameter_raises_error_if_name_is_not_string",
"test_nn_py_TestNN_test_remove_pruning",
"test_nn_py_TestNN_test_remove_pruning_exception",
"test_nn_py_TestNN_test_remove_pruning_forward",
"test_nn_py_TestNN_test_repr",
"test_nn_py_TestNN_test_requires_grad_",
"test_nn_py_TestNN_test_rnn_check_device",     # LSTM dispatch to MLU earlier than GPU
"test_nn_py_TestNN_test_serialization_parametrization",
"test_nn_py_TestNN_test_share_memory",
"test_nn_py_TestNN_test_smoothl1loss_intergral_target", # TODO(PYTORCH-8723): randint dose not support uint8
"test_nn_py_TestNN_test_softmax_functional_dim0",
"test_nn_py_TestNN_test_softmax_functional_dim3",
"test_nn_py_TestNN_test_softmax_spatial",
"test_nn_py_TestNN_test_softmax_spatial_dtype",
"test_nn_py_TestNN_test_softmin",
"test_nn_py_TestNN_test_spectral_norm",
"test_nn_py_TestNN_test_spectral_norm_dim",
"test_nn_py_TestNN_test_spectral_norm_forward",
"test_nn_py_TestNN_test_spectral_norm_load_state_dict",
"test_nn_py_TestNN_test_spectral_norm_pickle",
"test_nn_py_TestNN_test_state_dict",
"test_nn_py_TestNN_test_sync_batchnorm_accuracy_mlu",
"test_nn_py_TestNN_test_sync_batchnorm_backward_elemt",
"test_nn_py_TestNN_test_thnn_conv_strided_padded_dilated",
"test_nn_py_TestNN_test_threshold_bfloat16",
"test_nn_py_TestNN_test_to",
"test_nn_py_TestNN_test_train_errors_for_invalid_mode",
"test_nn_py_TestNN_test_transfer_parametrizations_and_params",
"test_nn_py_TestNN_test_transfer_parametrizations_and_params_many_to_one",
"test_nn_py_TestNN_test_transfer_parametrizations_and_params_right_inverse",
"test_nn_py_TestNN_test_transfer_parametrizations_and_params_single_param",
"test_nn_py_TestNN_test_transformer_args_check",
"test_nn_py_TestNN_test_transformer_layer_args_check",
"test_nn_py_TestNN_test_transformerdecoder",
"test_nn_py_TestNN_test_transformerdecoderlayer",
"test_nn_py_TestNN_test_triplet_margin_loss",
"test_nn_py_TestNN_test_triplet_margin_loss_invalid",
"test_nn_py_TestNN_test_triplet_margin_loss_no_reduce",
"test_nn_py_TestNN_test_triplet_margin_loss_swap",
"test_nn_py_TestNN_test_triplet_margin_loss_swap_no_reduce",
"test_nn_py_TestNN_test_type",
"test_nn_py_TestNN_test_type_before_parametrizations",
"test_nn_py_TestNN_test_unflatten",
"test_nn_py_TestNN_test_unflatten_invalid_arg",
"test_nn_py_TestNN_test_unstructured_pruning_same_magnitude",
"test_nn_py_TestNN_test_validate_pruning_amount",
"test_nn_py_TestNN_test_validate_pruning_amount_init",
"test_nn_py_TestNN_test_vector_to_parameters",
"test_nn_py_TestNN_test_weight_norm",
"test_nn_py_TestNN_test_weight_norm_pickle",
"test_nn_py_TestNN_test_zero_grad",
"test_nn_py_TestNNInit_test_calculate_gain_linear",
"test_nn_py_TestNNInit_test_calculate_gain_nonlinear",
"test_nn_py_TestNNInit_test_calculate_gain_only_accepts_valid_nonlinearities",
"test_nn_py_TestNNInit_test_constant",
"test_nn_py_TestNNInit_test_deprecation",
"test_nn_py_TestNNInit_test_dirac_identity",
"test_nn_py_TestNNInit_test_dirac_only_works_on_3_4_5d_inputs",
"test_nn_py_TestNNInit_test_dirac_properties",
"test_nn_py_TestNNInit_test_ones_and_zeros",
"test_nn_py_TestNNInit_test_orthogonal",
"test_nn_py_TestNNInit_test_sparse_only_works_on_2d_inputs",
"test_nn_py_TestFusionEval_test_fuse_module_eval_numerics",
"test_nn_py_TestModuleGlobalHooks_test_global_and_local_hooks_order",
"test_nn_py_TestModuleGlobalHooks_test_module_backward_global_hook_writeable",
"test_nn_py_TestModuleGlobalHooks_test_module_forward_forward_hook_removable",
"test_nn_py_TestModuleGlobalHooks_test_module_forward_preforward_hook_removable",
"test_nn_py_TestModuleGlobalHooks_test_module_global_forward_preforward_hook_writeable",
"test_nn_py_TestModuleGlobalHooks_test_module_global_hook_invalid_outputs",
"test_nn_py_TestModuleGlobalHooks_test_module_global_hooks",
"test_nn_py_TestLazyModules_test_chained_initialization",
"test_nn_py_TestLazyModules_test_invalid_functions",
"test_nn_py_TestLazyModules_test_lazy_batchnorm1d",
"test_nn_py_TestLazyModules_test_lazy_batchnorm1d_pickle",
"test_nn_py_TestLazyModules_test_lazy_batchnorm1d_state",
"test_nn_py_TestLazyModules_test_lazy_batchnorm2d",
"test_nn_py_TestLazyModules_test_lazy_batchnorm2d_pickle",
"test_nn_py_TestLazyModules_test_lazy_batchnorm2d_state",
"test_nn_py_TestLazyModules_test_lazy_batchnorm3d",
"test_nn_py_TestLazyModules_test_lazy_batchnorm3d_pickle",
"test_nn_py_TestLazyModules_test_lazy_batchnorm3d_state",
"test_nn_py_TestLazyModules_test_lazy_forward_hook",
"test_nn_py_TestLazyModules_test_lazy_instancenorm1d",
"test_nn_py_TestLazyModules_test_lazy_instancenorm1d_pickle",
"test_nn_py_TestLazyModules_test_lazy_instancenorm1d_state",
"test_nn_py_TestLazyModules_test_lazy_instancenorm2d",
"test_nn_py_TestLazyModules_test_lazy_instancenorm2d_pickle",
"test_nn_py_TestLazyModules_test_lazy_instancenorm2d_state",
"test_nn_py_TestLazyModules_test_lazy_instancenorm3d",
"test_nn_py_TestLazyModules_test_lazy_instancenorm3d_pickle",
"test_nn_py_TestLazyModules_test_lazy_instancenorm3d_state",
"test_nn_py_TestLazyModules_test_lazy_linear_pickle",
"test_nn_py_TestLazyModules_test_lazy_module_buffer",
"test_nn_py_TestLazyModules_test_lazy_module_jit_buffer",
"test_nn_py_TestLazyModules_test_lazy_module_jit_param",
"test_nn_py_TestLazyModules_test_lazy_module_parameter",
"test_nn_py_TestLazyModules_test_lazy_pre_forward_hook",
"test_nn_py_TestLazyModules_test_lazy_share_memory_buffer",
"test_nn_py_TestLazyModules_test_lazy_share_memory_param",
"test_nn_py_TestLazyModules_test_linear",
"test_nn_py_TestLazyModules_test_linear_state",
"test_nn_py_TestLazyModules_test_materialize_device",
"test_nn_py_TestLazyModules_test_materialize_dtype",
"test_nn_py_TestLazyModules_test_optimizer_pass",
"test_nn_py_TestLazyModules_test_spectral_norm",
"test_nn_py_TestLazyModules_test_weight_norm",
"test_nn_py_TestFunctionalPickle_test_pickle_softsign",
"test_nn_py_TestStateDictHooks_test_load_state_dict_module_pre_hook",
"test_nn_py_TestStateDictHooks_test_load_state_dict_post_hook",
"test_nn_py_TestStateDictHooks_test_load_state_dict_post_hook_backward_compatibility",
"test_nn_py_TestStateDictHooks_test_load_state_dict_pre_hook",
"test_nn_py_TestStateDictHooks_test_no_extra_ref_to_module",
"test_nn_py_TestStateDictHooks_test_pickled_hook",
"test_nn_py_TestNNDeviceTypeMLU_test_Bilinear_empty_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_CTCLoss_cudnn_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_CTCLoss_empty_target_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_CTCLoss_no_batch_dim_reduction_mean_use_module_form_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_CTCLoss_no_batch_dim_reduction_mean_use_module_form_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_CTCLoss_no_batch_dim_reduction_none_use_module_form_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_CTCLoss_no_batch_dim_reduction_none_use_module_form_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_CTCLoss_no_batch_dim_reduction_sum_use_module_form_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_CTCLoss_no_batch_dim_reduction_sum_use_module_form_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_InstanceNorm1d_general_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_InstanceNorm2d_general_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_InstanceNorm3d_general_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_LayerNorm_general_mlu", # TODO(PYTORCH-10292)
"test_nn_py_TestNNDeviceTypeMLU_test_LayerNorm_numeric_mlu", # TODO(PYTORCH-10292)
"test_nn_py_TestNNDeviceTypeMLU_test_LocalResponseNorm_empty_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_MarginLoss_empty_mlu_float32",
"test_nn_py_TestNNDeviceTypeMLU_test_ReflectionPad2d_large_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_ReflectionPad3d_large_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_ReflectionPad_empty_mlu_complex64",
"test_nn_py_TestNNDeviceTypeMLU_test_ReflectionPad_empty_mlu_float32",
"test_nn_py_TestNNDeviceTypeMLU_test_ReplicationPad1d_large_mlu", # cnnlReplicationPad2d kernel has scale limitation
"test_nn_py_TestNNDeviceTypeMLU_test_ReplicationPad2d_large_mlu", # cnnlReplicationPad2d kernel has scale limitation
"test_nn_py_TestNNDeviceTypeMLU_test_ReplicationPad3d_large_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_TransformerDecoderLayer_empty_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_TransformerDecoder_empty_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_TransformerEncoderLayer_empty_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_TransformerEncoder_empty_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_Transformer_empty_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_activations_bfloat16_cpu_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_activations_bfloat16_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_affine_2d_rotate0_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_affine_2d_rotate45_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_affine_2d_rotate90_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_affine_2d_rotateRandom_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_affine_3d_rotateRandom_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_batchnorm_affine_mlu_bfloat16",   # BFloat16 is not supported by uniform_ on MLU
"test_nn_py_TestNNDeviceTypeMLU_test_batchnorm_affine_mixed_mlu_bfloat16",   # BFloat16 is not supported by uniform_ on MLU
"test_nn_py_TestNNDeviceTypeMLU_test_batchnorm_eval_mlu_bfloat16",   # BFloat16 is not supported by uniform_ on MLU
"test_nn_py_TestNNDeviceTypeMLU_test_batchnorm_eval_mixed_mlu_bfloat16",   # BFloat16 is not supported by uniform_ on MLU
"test_nn_py_TestNNDeviceTypeMLU_test_batchnorm_grad_mlu",   # Can not pass gradcheck, which requires double dtype.
"test_nn_py_TestNNDeviceTypeMLU_test_batchnorm_simple_average_mlu_bfloat16",   # BFloat16 is not supported by uniform_ on MLU
"test_nn_py_TestNNDeviceTypeMLU_test_batchnorm_simple_average_mixed_mlu_bfloat16",   # BFloat16 is not supported by uniform_ on MLU
"test_nn_py_TestNNDeviceTypeMLU_test_clip_grad_norm_error_if_nonfinite_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_clip_grad_norm_multi_device_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_contig_wrong_stride_cudnn_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen1d_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen1d_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen1d_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen1d_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen1d_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen1d_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen1d_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen1d_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen1d_transposed_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen1d_transposed_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen1d_transposed_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen1d_transposed_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen1d_transposed_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen1d_transposed_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen1d_transposed_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen1d_transposed_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen2d_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen2d_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen2d_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen2d_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen2d_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen2d_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen2d_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen2d_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen2d_transposed_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen2d_transposed_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen2d_transposed_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen2d_transposed_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen2d_transposed_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen2d_transposed_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen2d_transposed_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen2d_transposed_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen3d_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen3d_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen3d_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen3d_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen3d_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen3d_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen3d_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen3d_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen3d_transposed_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen3d_transposed_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen3d_transposed_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen3d_transposed_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen3d_transposed_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen3d_transposed_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen3d_transposed_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen3d_transposed_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen_depthwise1d_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen_depthwise1d_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen_depthwise1d_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen_depthwise1d_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen_depthwise1d_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen_depthwise1d_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen_depthwise1d_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen_depthwise1d_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen_depthwise2d_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen_depthwise2d_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen_depthwise2d_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen_depthwise2d_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen_depthwise2d_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen_depthwise2d_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen_depthwise2d_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen_depthwise2d_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen_depthwise3d_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen_depthwise3d_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen_depthwise3d_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen_depthwise3d_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen_depthwise3d_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen_depthwise3d_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen_depthwise3d_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_miopen_depthwise3d_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn1d_cpu_input_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn1d_cpu_input_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn1d_cpu_input_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn1d_cpu_input_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn1d_cpu_input_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn1d_cpu_input_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn1d_cpu_input_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn1d_cpu_input_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn1d_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn1d_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn1d_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn1d_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn1d_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn1d_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn1d_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn1d_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn1d_transposed_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn1d_transposed_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn1d_transposed_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn1d_transposed_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn1d_transposed_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn1d_transposed_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn1d_transposed_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn1d_transposed_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn2d_cpu_input_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn2d_cpu_input_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn2d_cpu_input_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn2d_cpu_input_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn2d_cpu_input_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn2d_cpu_input_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn2d_cpu_input_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn2d_cpu_input_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn2d_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn2d_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn2d_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn2d_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn2d_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn2d_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn2d_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn2d_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn2d_transposed_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn2d_transposed_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn2d_transposed_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn2d_transposed_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn2d_transposed_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn2d_transposed_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn2d_transposed_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn2d_transposed_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn3d_cpu_input_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn3d_cpu_input_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn3d_cpu_input_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn3d_cpu_input_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn3d_cpu_input_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn3d_cpu_input_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn3d_cpu_input_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn3d_cpu_input_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn3d_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn3d_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn3d_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn3d_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn3d_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn3d_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn3d_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn3d_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn3d_transposed_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn3d_transposed_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn3d_transposed_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn3d_transposed_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn3d_transposed_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn3d_transposed_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn3d_transposed_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn3d_transposed_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch1d_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch1d_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch1d_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch1d_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch1d_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch1d_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch1d_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch1d_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch2d_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch2d_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch2d_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch2d_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch2d_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch2d_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch2d_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch2d_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch3d_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch3d_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch3d_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch3d_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch3d_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch3d_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch3d_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch3d_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch_channel1d_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch_channel1d_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch_channel1d_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch_channel1d_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch_channel1d_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch_channel1d_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch_channel1d_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch_channel1d_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch_channel2d_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch_channel2d_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch_channel2d_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch_channel2d_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch_channel2d_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch_channel2d_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch_channel2d_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch_channel2d_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch_channel3d_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch_channel3d_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch_channel3d_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch_channel3d_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch_channel3d_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch_channel3d_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch_channel3d_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_batch_channel3d_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_channel1d_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_channel1d_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_channel1d_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_channel1d_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_channel1d_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_channel1d_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_channel1d_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_channel1d_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_channel2d_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_channel2d_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_channel2d_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_channel2d_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_channel2d_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_channel2d_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_channel2d_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_channel2d_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_channel3d_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_channel3d_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_channel3d_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_channel3d_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_channel3d_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_channel3d_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_channel3d_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_mkldnn_empty_channel3d_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_dilated_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_dilated_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_dilated_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_dilated_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_dilated_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_dilated_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_dilated_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_dilated_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_dilated_transposed_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_dilated_transposed_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_dilated_transposed_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_dilated_transposed_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_dilated_transposed_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_dilated_transposed_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_dilated_transposed_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_dilated_transposed_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_transposed_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_transposed_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_transposed_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_transposed_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_transposed_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_transposed_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_transposed_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow1d_transposed_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_dilated_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_dilated_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_dilated_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_dilated_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_dilated_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_dilated_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_dilated_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_dilated_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_dilated_transposed_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_dilated_transposed_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_dilated_transposed_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_dilated_transposed_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_dilated_transposed_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_dilated_transposed_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_dilated_transposed_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_dilated_transposed_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_transposed_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_transposed_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_transposed_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_transposed_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_transposed_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_transposed_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_transposed_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow2d_transposed_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow3d_cpu_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow3d_cpu_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow3d_cpu_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow3d_cpu_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow3d_cpu_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow3d_cpu_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow3d_cpu_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow3d_cpu_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow3d_mlu_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow3d_mlu_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow3d_mlu_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow3d_mlu_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow3d_mlu_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow3d_mlu_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow3d_mlu_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow3d_mlu_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow3d_dilated_has_bias_False_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow3d_dilated_has_bias_False_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow3d_dilated_has_bias_False_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow3d_dilated_has_bias_False_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow3d_dilated_has_bias_True_strided_False_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow3d_dilated_has_bias_True_strided_False_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow3d_dilated_has_bias_True_strided_True_contiguous_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_backend_slow3d_dilated_has_bias_True_strided_True_contiguous_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_conv_contiguous_for_oneDNN_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_cross_entropy_label_smoothing_consistent_index_target_and_probs_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_cross_entropy_label_smoothing_errors_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_cross_entropy_label_smoothing_weight_ignore_indices_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_cross_entropy_label_smoothing_with_probs_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_cross_entropy_large_tensor_reduction_mean_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_cross_entropy_large_tensor_reduction_none_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_cross_entropy_large_tensor_reduction_sum_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_cross_entropy_loss_index_target_unit_weights_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_cross_entropy_loss_one_hot_target_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_cross_entropy_loss_prob_target_all_reductions_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_cross_entropy_loss_prob_target_no_batch_dim_reduction_mean_weighted_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_cross_entropy_loss_prob_target_no_batch_dim_reduction_mean_weighted_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_cross_entropy_loss_prob_target_no_batch_dim_reduction_none_weighted_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_cross_entropy_loss_prob_target_no_batch_dim_reduction_none_weighted_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_cross_entropy_loss_prob_target_no_batch_dim_reduction_sum_weighted_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_cross_entropy_loss_prob_target_no_batch_dim_reduction_sum_weighted_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_cross_entropy_loss_prob_target_unit_weights_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_ctc_loss_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_ctc_loss_cudnn_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_cudnn_convolution_add_relu_mlu_float16",
"test_nn_py_TestNNDeviceTypeMLU_test_cudnn_convolution_add_relu_mlu_float32",
"test_nn_py_TestNNDeviceTypeMLU_test_cudnn_convolution_relu_mlu_float16",
"test_nn_py_TestNNDeviceTypeMLU_test_cudnn_convolution_relu_mlu_float32",
"test_nn_py_TestNNDeviceTypeMLU_test_device_mask_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_fold_mlu",  # TODO(PYTORCH-10155): Jacobian mismatch for output 0 with respect to input 0.
"test_nn_py_TestNNDeviceTypeMLU_test_glu_bfloat16_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_grid_sample_large_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_grid_sample_large_index_2d_mlu_float32",
"test_nn_py_TestNNDeviceTypeMLU_test_grid_sample_large_index_3d_mlu_float32",
"test_nn_py_TestNNDeviceTypeMLU_test_grid_sample_nan_inf_mlu_float32",
"test_nn_py_TestNNDeviceTypeMLU_test_groupnorm_nhwc_mlu_float32",
"test_nn_py_TestNNDeviceTypeMLU_test_hardsigmoid_grad_mlu", # PYTORCH-10155
"test_nn_py_TestNNDeviceTypeMLU_test_hardswish_grad_mlu", # PYTORCH-10155
"test_nn_py_TestNNDeviceTypeMLU_test_instancenorm_raises_error_for_single_spatial_element_during_training_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_instancenorm_raises_error_if_less_than_one_value_per_channel_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_invalid_reduction_strings_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_leaky_relu_inplace_with_neg_slope_mlu", # dependency rrelu, cnnl_rrelu not support double
"test_nn_py_TestNNDeviceTypeMLU_test_masked_softmax_TxT_layout_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_masked_softmax_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_masked_softmax_forward_with_nans_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_masked_softmax_grad_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_masked_softmax_transformer_layout_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_mish_inplace_overlap_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_module_to_empty_mlu_float32",
"test_nn_py_TestNNDeviceTypeMLU_test_multi_margin_loss_errors_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_multihead_attention_dtype_batch_first_mlu_float16",
"test_nn_py_TestNNDeviceTypeMLU_test_multihead_attention_dtype_batch_first_mlu_float32",
"test_nn_py_TestNNDeviceTypeMLU_test_multihead_attention_dtype_mlu_float16",
"test_nn_py_TestNNDeviceTypeMLU_test_multihead_attention_dtype_mlu_float32",
"test_nn_py_TestNNDeviceTypeMLU_test_nll_loss_all_ignored_mlu", # [CNNLCORE-14375] wait for nl update.
"test_nn_py_TestNNDeviceTypeMLU_test_nll_loss_byte_target_matches_long_mlu", # [PYTORCH-10151] nll loss don't support byte dtype.
"test_nn_py_TestNNDeviceTypeMLU_test_nll_loss_empty_tensor_reduction_mean_mlu", # [PYTORCH-10234] MLU don't support double nan tensor creation.
"test_nn_py_TestNNDeviceTypeMLU_test_nll_loss_large_tensor_reduction_mean_mlu", # wait for cnnl 1.21.0
"test_nn_py_TestNNDeviceTypeMLU_test_nll_loss_large_tensor_reduction_none_mlu", # wait for cnnl 1.21.0.
"test_nn_py_TestNNDeviceTypeMLU_test_nll_loss_large_tensor_reduction_sum_mlu", # wait for cnnl 1.21.0.
"test_nn_py_TestNNDeviceTypeMLU_test_nll_loss_total_weight_is_zero_mlu", # [CNNLCORE-14375] wait for nl update.
"test_nn_py_TestNNDeviceTypeMLU_test_nn_empty_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_nn_scalars_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_nn_scalars_reductions_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_nonlinearity_propagate_nan_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_one_hot_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_overwrite_module_params_on_conversion_cpu_device_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_prelu_backward_32bit_indexing_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_smooth_l1_loss_bfloat16_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_smooth_l1_loss_vs_huber_loss_mlu", # TODO(PYTORCH-10279): acc is not required
"test_nn_py_TestNNDeviceTypeMLU_test_softmax_64bit_indexing_mlu_float16",
"test_nn_py_TestNNDeviceTypeMLU_test_softmax_bfloat16_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_softplus_low_threshold_mlu", # acc error, value 0.7153 vs 0.7109, except errrate 0
"test_nn_py_TestNNDeviceTypeMLU_test_softshrink_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_softshrink_inplace_overlap_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_softshrink_negative_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_threshold_inplace_overlap_mlu",  # TODO(PYTORCH-10261)
"test_nn_py_TestNNDeviceTypeMLU_test_to_complex_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_transformerencoderlayer_mlu_float16",
"test_nn_py_TestNNDeviceTypeMLU_test_transformerencoderlayer_mlu_float32",
"test_nn_py_TestNNDeviceTypeMLU_test_triplet_margin_with_distance_loss_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_triplet_margin_with_distance_loss_default_parity_mlu",
# TODO(PYTORCH-9644): nearest3d is not supported, nearest1d and nearest2d do not support uint8
# nearest-exact is not supported, antialias is not supported.
"test_nn_py_TestNNDeviceTypeMLU_test_upsamplingBicubic2d_aa_correctness_memory_format_torch_channels_last_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_upsamplingBicubic2d_aa_correctness_memory_format_torch_contiguous_format_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_upsamplingBicubic2d_antialias_False_align_corners_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_upsamplingBicubic2d_antialias_False_align_corners_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_upsamplingBicubic2d_antialias_True_align_corners_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_upsamplingBicubic2d_antialias_True_align_corners_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_upsamplingBilinear2d_aa_correctness_memory_format_torch_channels_last_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_upsamplingBilinear2d_aa_correctness_memory_format_torch_contiguous_format_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_upsamplingBilinear2d_antialias_False_align_corners_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_upsamplingBilinear2d_antialias_False_align_corners_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_upsamplingBilinear2d_antialias_True_align_corners_False_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_upsamplingBilinear2d_antialias_True_align_corners_True_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_upsamplingNearest1d_mlu", # TODO(PYTORCH-9644): nearest does not support uint8
"test_nn_py_TestNNDeviceTypeMLU_test_upsamplingNearest2d_mlu", # TODO(PYTORCH-9644): nearest does not support uint8
"test_nn_py_TestNNDeviceTypeMLU_test_upsamplingNearest2d_launch_fail_mlu", # for CUDA launch grid_y == 2**16 (larger than maximum y-dimension limit 65535, MLU has no such limits
"test_nn_py_TestNNDeviceTypeMLU_test_upsamplingNearest3d_correctness_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_upsamplingNearest3d_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_upsamplingNearest3d_launch_config_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_upsamplingNearestExact1d_correctness_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_upsamplingNearestExact1d_rescale_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_upsamplingNearestExact2d_correctness_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_upsamplingNearestExact3d_correctness_mlu",
"test_nn_py_TestNNDeviceTypeMLU_test_variable_sequence_mlu_float16",
"test_nn_py_TestNNDeviceTypeMLU_test_variable_sequence_mlu_float32",
"test_nn_py_TestNNDeviceTypeMLU_test_warp_softmax_64bit_indexing_mlu_float16",
"test_nn_py_TestNNDeviceTypeMLU_test_warp_softmax_64bit_indexing_mlu_float32",
"test_nnapi_py_TestNNAPI_test_adaptive_avg_pool2d",
"test_nnapi_py_TestNNAPI_test_avg_pool2d",
"test_nnapi_py_TestNNAPI_test_cat",
"test_nnapi_py_TestNNAPI_test_dequantize",
"test_nnapi_py_TestNNAPI_test_detach",
"test_nnapi_py_TestNNAPI_test_flatten",
"test_nnapi_py_TestNNAPI_test_hardtanh",
"test_nnapi_py_TestNNAPI_test_linear",
"test_nnapi_py_TestNNAPI_test_log_softmax",
"test_nnapi_py_TestNNAPI_test_max_pool2d",
"test_nnapi_py_TestNNAPI_test_mean",
"test_nnapi_py_TestNNAPI_test_multi_output",
"test_nnapi_py_TestNNAPI_test_pointwise_binary",
"test_nnapi_py_TestNNAPI_test_pointwise_binary_const",
"test_nnapi_py_TestNNAPI_test_pointwise_unary",
"test_nnapi_py_TestNNAPI_test_prelu",
"test_nnapi_py_TestNNAPI_test_qadd",
"test_nnapi_py_TestNNAPI_test_qlinear",
"test_nnapi_py_TestNNAPI_test_quantize",
"test_nnapi_py_TestNNAPI_test_reshape",
"test_nnapi_py_TestNNAPI_test_seblock_mul",
"test_nnapi_py_TestNNAPI_test_slice",
"test_nnapi_py_TestNNAPI_test_softmax",
"test_nnapi_py_TestNNAPI_test_to",
"test_nnapi_py_TestNNAPI_test_upsample_nearest2d",
"test_numba_integration_py_TestNumbaIntegration_test_active_device",
"test_numba_integration_py_TestNumbaIntegration_test_array_adaptor",
"test_numba_integration_py_TestNumbaIntegration_test_conversion_errors",
"test_numba_integration_py_TestNumbaIntegration_test_mlu_array_interface",
"test_numba_integration_py_TestNumbaIntegration_test_from_mlu_array_interface",
"test_numba_integration_py_TestNumbaIntegration_test_from_mlu_array_interface_active_device",
"test_numba_integration_py_TestNumbaIntegration_test_from_mlu_array_interface_inferred_strides",
"test_numba_integration_py_TestNumbaIntegration_test_from_mlu_array_interface_lifetime",
"test_numpy_interop_py_TestNumPyInteropMLU_test_ctor_with_invalid_numpy_array_sequence_mlu",
"test_numpy_interop_py_TestNumPyInteropMLU_test_ctor_with_numpy_scalar_ctor_mlu",
"test_numpy_interop_py_TestNumPyInteropMLU_test_from_list_of_ndarray_warning_mlu",
"test_numpy_interop_py_TestNumPyInteropMLU_test_from_numpy_mlu",
"test_numpy_interop_py_TestNumPyInteropMLU_test_has_storage_numpy_mlu",
"test_numpy_interop_py_TestNumPyInteropMLU_test_multiplication_numpy_scalar_mlu",
"test_numpy_interop_py_TestNumPyInteropMLU_test_numpy_array_interface_mlu",
"test_numpy_interop_py_TestNumPyInteropMLU_test_numpy_index_mlu",
"test_numpy_interop_py_TestNumPyInteropMLU_test_numpy_non_writeable_mlu",
"test_numpy_interop_py_TestNumPyInteropMLU_test_numpy_scalar_cmp_mlu_bfloat16",
"test_numpy_interop_py_TestNumPyInteropMLU_test_numpy_scalar_cmp_mlu_bool",
"test_numpy_interop_py_TestNumPyInteropMLU_test_numpy_scalar_cmp_mlu_complex64",
"test_numpy_interop_py_TestNumPyInteropMLU_test_numpy_scalar_cmp_mlu_float16",
"test_numpy_interop_py_TestNumPyInteropMLU_test_numpy_scalar_cmp_mlu_float32",
"test_numpy_interop_py_TestNumPyInteropMLU_test_numpy_scalar_cmp_mlu_int16",
"test_numpy_interop_py_TestNumPyInteropMLU_test_numpy_scalar_cmp_mlu_int32",
"test_numpy_interop_py_TestNumPyInteropMLU_test_numpy_scalar_cmp_mlu_int8",
"test_numpy_interop_py_TestNumPyInteropMLU_test_numpy_scalar_cmp_mlu_uint8",
"test_numpy_interop_py_TestNumPyInteropMLU_test_numpy_unresizable_mlu",
"test_numpy_interop_py_TestNumPyInteropMLU_test_parse_numpy_int_mlu",
"test_numpy_interop_py_TestNumPyInteropMLU_test_to_numpy_bool_mlu",
"test_numpy_interop_py_TestNumPyInteropMLU_test_to_numpy_mlu",
"test_numpy_interop_py_TestNumPyInteropMLU_test_to_numpy_force_argument_mlu",
"test_openmp_py_TestOpenMP_ParallelFor_test_n_threads",
"test_openmp_py_TestOpenMP_ParallelFor_test_one_thread",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_H_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing___getitem___mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_abs_mlu_complex32", # TODO(PYTORCH-8789)
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_acos_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_acosh_mlu_complex32",
# TODO(PYTORCH-9105): Complex is not support.
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_add_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_as_strided_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_as_strided_scatter_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_asin_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_asinh_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_atan_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_atanh_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_atleast_1d_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_atleast_2d_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_atleast_3d_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_bfloat16_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_block_diag_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_bool_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_chalf_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_char_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_clone_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_column_stack_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_conj_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_conj_physical_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_contiguous_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_cos_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_cosh_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_diag_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_diag_embed_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_diagonal_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_div_no_rounding_mode_mlu_complex32", # TODO(PYTORCH-8724): div not support complex dtypes
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_double_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_dsplit_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_dstack_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_empty_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_empty_like_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_eq_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_exp_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_fft_fft2_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_fft_fft_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_fft_fftn_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_fft_fftshift_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_fft_hfft2_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_fft_hfft_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_fft_hfftn_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_fft_ifft2_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_fft_ifft_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_fft_ifftn_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_fft_ifftshift_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_fft_irfft2_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_fft_irfft_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_fft_irfftn_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_fill_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_flatten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_float_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_hsplit_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_hstack_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_imag_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_index_add_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_index_put_mlu_complex32",
# TODO(PYTORCH-9105): Complex is not support.
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_index_select_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_isinf_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_isreal_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_log_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_log_softmax_dtype_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_long_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_mH_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_mT_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_masked_fill_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_movedim_mlu_complex32",
# TODO(PYTORCH-9105): complex is not support.
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_mul_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_narrow_copy_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_neg_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_new_empty_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_new_full_mlu_complex32", # TODO(PYTORCH-8738)
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_new_ones_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_new_zeros_mlu_complex32", # zeros does not support compelx32 on mlu
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_nonzero_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_ones_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_ones_like_mlu_complex32",
# TODO(PYTORCH-9186): bfloat16 and complex32 is not support.
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_permute_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_positive_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_pow_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_prod_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_rand_like_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_randn_mlu_complex32", # TODO(PYTORCH-10321)
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_ravel_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_real_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_repeat_interleave_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_resolve_neg_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_roll_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_rsqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu rsqrt not support bf16 and complex dtypes
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_sgn_mlu_complex32", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_sin_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_sinh_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_sqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu sqrt not support bf16 and complex dtypes
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_sub_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_sum_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_tan_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_trace_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_true_divide_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_unflatten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_unfold_copy_mlu_complex32", # unfold op does not support complex32 on mlu
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_unfold_mlu_complex32", # unfold op does not support complex32 on mlu
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_vsplit_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_vstack_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_where_mlu_complex32",
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_zeros_mlu_complex32", # zeros op does not support complex32 on mlu
"test_ops_py_TestCommonMLU_test_complex_half_reference_testing_zeros_like_mlu_complex32",
"test_ops_py_TestCommonMLU_test_dtypes_H_mlu",
"test_ops_py_TestCommonMLU_test_dtypes___getitem___mlu",
"test_ops_py_TestCommonMLU_test_dtypes___rand___mlu",
"test_ops_py_TestCommonMLU_test_dtypes___rmatmul___mlu",
"test_ops_py_TestCommonMLU_test_dtypes___rmod___mlu",
"test_ops_py_TestCommonMLU_test_dtypes___rmul___mlu", # TODO(PYTORCH-9186): only MLU500 support bfloat16
"test_ops_py_TestCommonMLU_test_dtypes___ror___mlu",
"test_ops_py_TestCommonMLU_test_dtypes___rpow___mlu",
"test_ops_py_TestCommonMLU_test_dtypes___rxor___mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_acos_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_acosh_mlu",
# TODO(PYTORCH-9105): complex is not support.
"test_ops_py_TestCommonMLU_test_dtypes__refs_allclose_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_amin_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_asin_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_asinh_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_atan2_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_atan_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_atanh_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_atleast_1d_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_atleast_2d_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_atleast_3d_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_broadcast_shapes_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_broadcast_tensors_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_broadcast_to_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_column_stack_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_copysign_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_cos_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_cosh_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_diag_embed_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_digamma_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_dsplit_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_dstack_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_empty_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_empty_like_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_erfc_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_exp2_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_fft_fft2_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_fft_fft_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_fft_fftn_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_fft_fftshift_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_fft_hfft2_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_fft_hfft_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_fft_hfftn_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_fft_ifft2_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_fft_ifft_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_fft_ifftn_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_fft_ifftshift_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_fft_ihfft2_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_fft_ihfft_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_fft_ihfftn_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_fft_irfft2_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_fft_irfft_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_fft_irfftn_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_fft_rfft2_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_fft_rfft_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_fft_rfftn_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_flatten_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_fliplr_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_flipud_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_float_power_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_fmax_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_fmin_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_gcd_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_heaviside_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_hsplit_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_hstack_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_hypot_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_i0_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_igamma_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_igammac_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_imag_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_isclose_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_isinf_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_isneginf_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_isposinf_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_isreal_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_lcm_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_lgamma_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_linalg_matrix_norm_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_linalg_norm_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_linalg_svdvals_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_linalg_vector_norm_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_logspace_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_logsumexp_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_meshgrid_list_of_tensors_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_meshgrid_variadic_tensors_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_movedim_mlu",
# TODO(PYTORCH-9105): complex is not support.
"test_ops_py_TestCommonMLU_test_dtypes__refs_new_empty_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_nextafter_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_nn_functional_celu_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_nn_functional_hardshrink_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_nn_functional_hinge_embedding_loss_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_nn_functional_huber_loss_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_nn_functional_margin_ranking_loss_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_nn_functional_mish_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_nn_functional_pairwise_distance_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_nn_functional_pdist_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_nn_functional_prelu_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_nn_functional_relu6_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_nn_functional_softshrink_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_nn_functional_tanhshrink_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_positive_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_ravel_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_real_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_rot90_mlu",
# TODO(PYTORCH-9105): complex is not support.
"test_ops_py_TestCommonMLU_test_dtypes__refs_rsub_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_signbit_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_sin_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_sinc_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_sinh_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_special_bessel_j0_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_special_bessel_j1_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_special_i0e_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_special_i1_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_special_i1e_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_special_logit_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_special_multigammaln_mvlgamma_p_1_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_special_multigammaln_mvlgamma_p_3_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_special_multigammaln_mvlgamma_p_5_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_special_spherical_bessel_j0_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_special_zeta_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_square_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_std_mean_mlu",
# TODO(PYTORCH-9105): complex is not support.
"test_ops_py_TestCommonMLU_test_dtypes__refs_sum_to_size_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_tan_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_to_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_trace_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_tril_indices_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_triu_indices_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_true_divide_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_unflatten_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_var_mean_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_vsplit_mlu",
"test_ops_py_TestCommonMLU_test_dtypes__refs_vstack_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_acos_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_acosh_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_allclose_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_amin_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_aminmax_mlu",
# TODO(PYTORCH-9180): angle_backward will using mul op to caculate
# self and grad, but grad is float and self is complex64,
# MLU mul is not support this dtype promote, and fallback
# to cpu, then shared storage failed.
"test_ops_py_TestCommonMLU_test_dtypes_argsort_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_argwhere_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_as_strided_scatter_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_asin_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_asinh_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_atan2_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_atan_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_atanh_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_atleast_1d_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_atleast_2d_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_atleast_3d_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_bfloat16_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_block_diag_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_bool_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_broadcast_shapes_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_broadcast_tensors_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_broadcast_to_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_bucketize_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_byte_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_cartesian_prod_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_chalf_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_char_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_cholesky_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_cholesky_inverse_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_cholesky_solve_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_column_stack_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_combinations_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_complex_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_copysign_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_corrcoef_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_cos_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_cosh_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_count_nonzero_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_cov_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_cross_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_cummax_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_cumulative_trapezoid_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_deg2rad_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_diff_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_digamma_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_dist_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_double_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_dsplit_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_dstack_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_einsum_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_empty_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_empty_like_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_erfc_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_exp2_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_fft_fft2_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_fft_fft_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_fft_fftn_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_fft_fftshift_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_fft_hfft2_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_fft_hfft_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_fft_hfftn_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_fft_ifft2_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_fft_ifft_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_fft_ifftn_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_fft_ifftshift_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_fft_ihfft2_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_fft_ihfft_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_fft_ihfftn_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_fft_irfft2_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_fft_irfft_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_fft_irfftn_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_fft_rfft2_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_fft_rfft_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_fft_rfftn_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_flatten_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_fliplr_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_flipud_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_float_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_float_power_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_fmax_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_fmin_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_frexp_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_gcd_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_geqrf_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_gradient_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_half_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_heaviside_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_histogram_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_histogramdd_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_hsplit_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_hstack_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_hypot_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_i0_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_igamma_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_igammac_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_imag_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_index_reduce_mlu",
# TODO(PYTORCH-9186): bfloat16 and complex64 is not support.
"test_ops_py_TestCommonMLU_test_dtypes_inner_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_int_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_isclose_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_isin_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_isinf_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_isneginf_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_isposinf_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_isreal_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_istft_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_jiterator_2inputs_2outputs_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_jiterator_4inputs_with_extra_args_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_jiterator_binary_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_jiterator_binary_return_by_ref_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_jiterator_unary_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_kron_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_lcm_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_ldexp_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_lerp_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_lgamma_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_cholesky_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_cholesky_ex_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_cond_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_cross_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_det_singular_mlu",# TODO(PYTORCH-9646): mlu not support lu_factor now.
"test_ops_py_TestCommonMLU_test_dtypes_linalg_eig_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_eigh_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_eigvals_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_eigvalsh_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_householder_product_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_inv_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_inv_ex_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_ldl_factor_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_ldl_factor_ex_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_ldl_solve_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_lstsq_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_lstsq_grad_oriented_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_lu_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_lu_factor_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_lu_factor_ex_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_lu_solve_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_matrix_norm_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_matrix_power_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_matrix_rank_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_matrix_rank_hermitian_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_multi_dot_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_norm_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_norm_subgradients_at_zero_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_pinv_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_pinv_hermitian_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_pinv_singular_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_qr_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_solve_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_solve_ex_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_solve_triangular_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_svdvals_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_tensorinv_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_tensorsolve_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_vander_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_vecdot_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_linalg_vector_norm_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_logaddexp2_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_logaddexp_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_logcumsumexp_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_logdet_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_logit_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_logspace_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_logsumexp_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_long_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_lu_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_lu_solve_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_lu_unpack_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_mH_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_mT_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_masked_amin_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_masked_cumsum_mlu", # where op does not support uint8 on mlu
"test_ops_py_TestCommonMLU_test_dtypes_masked_logaddexp_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_masked_logsumexp_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_masked_median_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_masked_normalize_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_masked_softmin_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_matmul_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_matrix_exp_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_meshgrid_list_of_tensors_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_meshgrid_variadic_tensors_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_mode_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_movedim_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_msort_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_mul_mlu", # only MLU500 support bfloat16
"test_ops_py_TestCommonMLU_test_dtypes_mv_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_mvlgamma_mvlgamma_p_1_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_mvlgamma_mvlgamma_p_3_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_mvlgamma_mvlgamma_p_5_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nanmean_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nanmedian_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nanquantile_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nansum_mlu", # bfloat16 only support on MLU500 series
"test_ops_py_TestCommonMLU_test_dtypes_narrow_copy_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_new_empty_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nextafter_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional__scaled_dot_product_attention_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_adaptive_max_pool3d_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_bilinear_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_binary_cross_entropy_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_celu_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_cosine_embedding_loss_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_cosine_similarity_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_cross_entropy_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_ctc_loss_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_fractional_max_pool2d_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_fractional_max_pool3d_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_grid_sample_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_group_norm_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_hardshrink_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_hinge_embedding_loss_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_huber_loss_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_instance_norm_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_margin_ranking_loss_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_max_unpool1d_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_max_unpool1d_grad_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_max_unpool2d_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_max_unpool2d_grad_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_max_unpool3d_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_max_unpool3d_grad_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_mish_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_multi_margin_loss_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_multilabel_margin_loss_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_multilabel_soft_margin_loss_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_normalize_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_one_hot_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_pad_circular_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_pad_constant_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_pad_reflect_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_pad_replicate_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_pairwise_distance_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_pdist_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_pixel_shuffle_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_pixel_unshuffle_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_prelu_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_relu6_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_soft_margin_loss_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_softmin_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_softmin_with_dtype_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_softshrink_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_softsign_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_tanhshrink_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_triplet_margin_loss_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nn_functional_triplet_margin_with_distance_loss_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_nonzero_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_norm_fro_mlu", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_ops_py_TestCommonMLU_test_dtypes_norm_inf_mlu", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_ops_py_TestCommonMLU_test_dtypes_norm_nuc_mlu", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_ops_py_TestCommonMLU_test_dtypes_ops_nvprims_native_batch_norm_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_ops_nvprims_var_mean_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_ormqr_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_pca_lowrank_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_pinverse_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_polar_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_polygamma_polygamma_n_0_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_polygamma_polygamma_n_1_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_polygamma_polygamma_n_2_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_polygamma_polygamma_n_3_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_polygamma_polygamma_n_4_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_positive_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_quantile_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_rad2deg_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_rand_like_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_ravel_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_real_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_remainder_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_renorm_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_resize__mlu",
"test_ops_py_TestCommonMLU_test_dtypes_resize_as__mlu",
"test_ops_py_TestCommonMLU_test_dtypes_resolve_neg_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_rot90_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_round_decimals_0_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_round_decimals_3_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_round_decimals_neg_3_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_scatter_reduce_amax_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_scatter_reduce_amin_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_scatter_reduce_mean_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_scatter_reduce_prod_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_searchsorted_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_segment_reduce_lengths_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_segment_reduce_offsets_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_select_scatter_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_short_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_sigmoid_mlu", # sigmoid unsupport complex dtype
"test_ops_py_TestCommonMLU_test_dtypes_signbit_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_sin_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_sinc_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_sinh_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_sparse_sampled_addmm_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_airy_ai_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_bessel_j0_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_bessel_j1_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_bessel_y0_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_bessel_y1_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_chebyshev_polynomial_t_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_chebyshev_polynomial_u_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_chebyshev_polynomial_v_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_chebyshev_polynomial_w_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_entr_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_erfcx_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_hermite_polynomial_h_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_hermite_polynomial_he_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_i0e_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_i1_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_i1e_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_laguerre_polynomial_l_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_legendre_polynomial_p_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_log_ndtr_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_modified_bessel_i0_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_modified_bessel_i1_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_modified_bessel_k0_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_modified_bessel_k1_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_ndtr_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_ndtri_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_polygamma_special_polygamma_n_0_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_scaled_modified_bessel_k0_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_scaled_modified_bessel_k1_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_shifted_chebyshev_polynomial_t_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_shifted_chebyshev_polynomial_u_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_shifted_chebyshev_polynomial_v_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_shifted_chebyshev_polynomial_w_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_spherical_bessel_j0_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_xlog1py_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_special_zeta_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_square_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_std_mean_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_stft_mlu",  # TODO(PYTORCH-10376): MLU stft don't support backward.
"test_ops_py_TestCommonMLU_test_dtypes_sum_to_size_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_symeig_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_take_along_dim_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_tan_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_tensordot_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_tile_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_to_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_to_sparse_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_trace_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_trapezoid_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_trapz_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_triangular_solve_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_tril_indices_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_triu_indices_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_true_divide_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_unflatten_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_unique_consecutive_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_var_mean_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_vdot_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_vsplit_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_vstack_mlu",
"test_ops_py_TestCommonMLU_test_dtypes_zero__mlu",
"test_ops_py_TestCommonMLU_test_errors___rand___mlu",
"test_ops_py_TestCommonMLU_test_errors___rmod___mlu",
"test_ops_py_TestCommonMLU_test_errors___ror___mlu",
"test_ops_py_TestCommonMLU_test_errors___rpow___mlu",
"test_ops_py_TestCommonMLU_test_errors___rxor___mlu",
"test_ops_py_TestCommonMLU_test_errors_amin_mlu",
"test_ops_py_TestCommonMLU_test_errors_aminmax_mlu",
"test_ops_py_TestCommonMLU_test_errors_atan2_mlu",
"test_ops_py_TestCommonMLU_test_errors_cat_mlu",
"test_ops_py_TestCommonMLU_test_errors_complex_mlu",
"test_ops_py_TestCommonMLU_test_errors_copysign_mlu",
"test_ops_py_TestCommonMLU_test_errors_cov_mlu",
"test_ops_py_TestCommonMLU_test_errors_dsplit_mlu",
"test_ops_py_TestCommonMLU_test_errors_dstack_mlu",
"test_ops_py_TestCommonMLU_test_errors_fliplr_mlu",
"test_ops_py_TestCommonMLU_test_errors_flipud_mlu",
"test_ops_py_TestCommonMLU_test_errors_float_power_mlu",
"test_ops_py_TestCommonMLU_test_errors_fmax_mlu",
"test_ops_py_TestCommonMLU_test_errors_fmin_mlu",
"test_ops_py_TestCommonMLU_test_errors_gcd_mlu",
"test_ops_py_TestCommonMLU_test_errors_gradient_mlu",
"test_ops_py_TestCommonMLU_test_errors_heaviside_mlu",
"test_ops_py_TestCommonMLU_test_errors_hsplit_mlu",
"test_ops_py_TestCommonMLU_test_errors_hstack_mlu",
"test_ops_py_TestCommonMLU_test_errors_hypot_mlu",
"test_ops_py_TestCommonMLU_test_errors_igamma_mlu",
"test_ops_py_TestCommonMLU_test_errors_igammac_mlu",
"test_ops_py_TestCommonMLU_test_errors_isclose_mlu",
"test_ops_py_TestCommonMLU_test_errors_jiterator_binary_mlu",
"test_ops_py_TestCommonMLU_test_errors_jiterator_binary_return_by_ref_mlu",
"test_ops_py_TestCommonMLU_test_errors_lcm_mlu",
"test_ops_py_TestCommonMLU_test_errors_ldexp_mlu",
"test_ops_py_TestCommonMLU_test_errors_linalg_cross_mlu",
"test_ops_py_TestCommonMLU_test_errors_linalg_lstsq_mlu",
"test_ops_py_TestCommonMLU_test_errors_linalg_lstsq_grad_oriented_mlu",
"test_ops_py_TestCommonMLU_test_errors_logcumsumexp_mlu",
"test_ops_py_TestCommonMLU_test_errors_logspace_mlu",
"test_ops_py_TestCommonMLU_test_errors_movedim_mlu",
"test_ops_py_TestCommonMLU_test_errors_nextafter_mlu",
"test_ops_py_TestCommonMLU_test_errors_nn_functional_hinge_embedding_loss_mlu",
"test_ops_py_TestCommonMLU_test_errors_nn_functional_huber_loss_mlu",
"test_ops_py_TestCommonMLU_test_errors_nn_functional_margin_ranking_loss_mlu",
"test_ops_py_TestCommonMLU_test_errors_nn_functional_max_pool1d_mlu",
"test_ops_py_TestCommonMLU_test_errors_nn_functional_max_pool2d_mlu",
"test_ops_py_TestCommonMLU_test_errors_nn_functional_max_pool3d_mlu",
"test_ops_py_TestCommonMLU_test_errors_nn_functional_prelu_mlu",
"test_ops_py_TestCommonMLU_test_errors_nn_functional_soft_margin_loss_mlu",
"test_ops_py_TestCommonMLU_test_errors_nn_functional_softshrink_mlu",
"test_ops_py_TestCommonMLU_test_errors_ormqr_mlu",
"test_ops_py_TestCommonMLU_test_errors_polar_mlu",
"test_ops_py_TestCommonMLU_test_errors_renorm_mlu",
"test_ops_py_TestCommonMLU_test_errors_roll_mlu",
"test_ops_py_TestCommonMLU_test_errors_rot90_mlu",
"test_ops_py_TestCommonMLU_test_errors_special_chebyshev_polynomial_t_mlu",
"test_ops_py_TestCommonMLU_test_errors_special_chebyshev_polynomial_u_mlu",
"test_ops_py_TestCommonMLU_test_errors_special_chebyshev_polynomial_v_mlu",
"test_ops_py_TestCommonMLU_test_errors_special_chebyshev_polynomial_w_mlu",
"test_ops_py_TestCommonMLU_test_errors_special_hermite_polynomial_h_mlu",
"test_ops_py_TestCommonMLU_test_errors_special_hermite_polynomial_he_mlu",
"test_ops_py_TestCommonMLU_test_errors_special_laguerre_polynomial_l_mlu",
"test_ops_py_TestCommonMLU_test_errors_special_legendre_polynomial_p_mlu",
"test_ops_py_TestCommonMLU_test_errors_special_shifted_chebyshev_polynomial_t_mlu",
"test_ops_py_TestCommonMLU_test_errors_special_shifted_chebyshev_polynomial_u_mlu",
"test_ops_py_TestCommonMLU_test_errors_special_shifted_chebyshev_polynomial_v_mlu",
"test_ops_py_TestCommonMLU_test_errors_special_shifted_chebyshev_polynomial_w_mlu",
"test_ops_py_TestCommonMLU_test_errors_special_xlog1py_mlu",
"test_ops_py_TestCommonMLU_test_errors_special_zeta_mlu",
"test_ops_py_TestCommonMLU_test_errors_sum_to_size_mlu",
"test_ops_py_TestCommonMLU_test_errors_trace_mlu",
"test_ops_py_TestCommonMLU_test_errors_true_divide_mlu",
"test_ops_py_TestCommonMLU_test_errors_vsplit_mlu",
"test_ops_py_TestCommonMLU_test_errors_vstack_mlu",
"test_ops_py_TestCommonMLU_test_multiple_devices_H_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices___getitem___mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices___rmatmul___mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices___rmod___mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices___rpow___mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_acos_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_acosh_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_allclose_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_amin_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_aminmax_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_argsort_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_argwhere_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_as_strided_scatter_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_asin_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_asinh_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_atan2_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_atan_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_atanh_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_atleast_1d_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_atleast_2d_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_atleast_3d_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_bfloat16_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_block_diag_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_bool_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_broadcast_shapes_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_broadcast_tensors_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_broadcast_to_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_bucketize_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_byte_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_cartesian_prod_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_cdist_mlu_float32", #TODO(PYTORCH-8665): cdist only supports p=1 now.
"test_ops_py_TestCommonMLU_test_multiple_devices_chalf_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_char_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_cholesky_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_cholesky_inverse_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_cholesky_solve_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_clamp_mlu_float32", # PYTORCH-9208
"test_ops_py_TestCommonMLU_test_multiple_devices_column_stack_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_combinations_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_complex_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_copysign_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_corrcoef_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_cos_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_cosh_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_count_nonzero_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_cov_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_cross_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_cummax_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_cumulative_trapezoid_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_deg2rad_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_diff_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_digamma_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_dist_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_double_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_dsplit_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_dstack_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_einsum_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_empty_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_empty_like_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_erfc_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_exp2_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_fft_fft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_fft_fft_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_fft_fftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_fft_fftshift_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_fft_hfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_fft_hfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_fft_hfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_fft_ifft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_fft_ifft_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_fft_ifftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_fft_ifftshift_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_fft_ihfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_fft_ihfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_fft_ihfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_fft_irfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_fft_irfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_fft_irfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_fft_rfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_fft_rfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_fft_rfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_flatten_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_fliplr_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_flipud_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_float_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_float_power_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_fmax_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_fmin_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_frexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_geqrf_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_gradient_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_half_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_heaviside_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_hsplit_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_hstack_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_hypot_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_i0_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_igamma_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_igammac_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_index_reduce_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_inner_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_int_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_isclose_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_isin_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_isinf_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_isneginf_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_isposinf_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_isreal_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_istft_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_jiterator_2inputs_2outputs_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_jiterator_4inputs_with_extra_args_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_jiterator_binary_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_jiterator_binary_return_by_ref_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_jiterator_unary_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_kron_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_ldexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_lerp_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_lgamma_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_cholesky_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_cholesky_ex_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_cond_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_cross_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_det_singular_mlu_float32",# TODO(PYTORCH-9646): mlu not support lu_factor now.
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_eig_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_eigh_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_eigvals_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_eigvalsh_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_householder_product_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_inv_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_inv_ex_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_ldl_factor_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_ldl_factor_ex_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_ldl_solve_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_lstsq_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_lstsq_grad_oriented_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_lu_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_lu_factor_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_lu_factor_ex_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_lu_solve_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_matrix_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_matrix_power_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_matrix_rank_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_matrix_rank_hermitian_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_multi_dot_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_norm_subgradients_at_zero_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_pinv_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_pinv_hermitian_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_pinv_singular_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_qr_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_solve_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_solve_ex_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_solve_triangular_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_svdvals_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_tensorinv_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_tensorsolve_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_vander_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_vecdot_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_linalg_vector_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_logaddexp2_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_logaddexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_logcumsumexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_logdet_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_logit_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_logspace_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_logsumexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_long_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_lu_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_lu_solve_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_lu_unpack_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_mH_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_mT_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_masked_amin_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_masked_logaddexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_masked_logsumexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_masked_median_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_masked_normalize_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_masked_softmin_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_matmul_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_matrix_exp_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_meshgrid_list_of_tensors_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_meshgrid_variadic_tensors_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_mode_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_movedim_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_msort_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_mvlgamma_mvlgamma_p_1_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_mvlgamma_mvlgamma_p_3_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_mvlgamma_mvlgamma_p_5_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nanmean_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nanmedian_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nanquantile_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_narrow_copy_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_new_empty_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nextafter_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional__scaled_dot_product_attention_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_adaptive_max_pool3d_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_avg_pool2d_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_bilinear_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_celu_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_cosine_embedding_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_cosine_similarity_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_cross_entropy_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_ctc_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_fractional_max_pool2d_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_fractional_max_pool3d_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_grid_sample_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_group_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_hardshrink_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_hardtanh_mlu_float32", # [PYTORCH-9208]: [cnnlClip]Parameter min must be less than max
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_hinge_embedding_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_huber_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_instance_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_margin_ranking_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_max_unpool1d_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_max_unpool1d_grad_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_max_unpool2d_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_max_unpool2d_grad_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_max_unpool3d_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_max_unpool3d_grad_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_mish_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_multi_margin_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_multilabel_margin_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_multilabel_soft_margin_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_normalize_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_pad_circular_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_pad_constant_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_pad_reflect_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_pad_replicate_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_pairwise_distance_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_pdist_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_pixel_shuffle_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_pixel_unshuffle_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_prelu_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_relu6_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_soft_margin_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_softmin_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_softmin_with_dtype_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_softshrink_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_softsign_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_tanhshrink_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_triplet_margin_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_nn_functional_triplet_margin_with_distance_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_norm_inf_mlu_float32", # mlu norm not support p=inf
"test_ops_py_TestCommonMLU_test_multiple_devices_norm_nuc_mlu_float32", # mlu norm not support p=nuc
"test_ops_py_TestCommonMLU_test_multiple_devices_ormqr_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_pca_lowrank_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_pinverse_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_polar_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_polygamma_polygamma_n_0_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_polygamma_polygamma_n_1_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_polygamma_polygamma_n_2_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_polygamma_polygamma_n_3_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_polygamma_polygamma_n_4_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_positive_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_quantile_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_rad2deg_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_rand_like_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_ravel_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_real_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_renorm_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_resize__mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_resize_as__mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_resolve_neg_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_rot90_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_round_decimals_3_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_round_decimals_neg_3_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_scatter_reduce_amax_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_scatter_reduce_amin_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_scatter_reduce_mean_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_scatter_reduce_prod_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_searchsorted_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_segment_reduce_lengths_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_segment_reduce_offsets_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_select_scatter_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_short_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_signbit_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_sin_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_sinc_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_sinh_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_sparse_sampled_addmm_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_airy_ai_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_bessel_j0_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_bessel_j1_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_bessel_y0_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_bessel_y1_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_chebyshev_polynomial_t_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_chebyshev_polynomial_u_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_chebyshev_polynomial_v_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_chebyshev_polynomial_w_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_entr_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_erfcx_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_hermite_polynomial_h_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_hermite_polynomial_he_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_i0e_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_i1_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_i1e_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_laguerre_polynomial_l_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_legendre_polynomial_p_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_log_ndtr_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_modified_bessel_i0_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_modified_bessel_i1_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_modified_bessel_k0_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_modified_bessel_k1_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_ndtr_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_ndtri_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_polygamma_special_polygamma_n_0_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_scaled_modified_bessel_k0_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_scaled_modified_bessel_k1_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_shifted_chebyshev_polynomial_t_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_shifted_chebyshev_polynomial_u_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_shifted_chebyshev_polynomial_v_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_shifted_chebyshev_polynomial_w_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_spherical_bessel_j0_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_xlog1py_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_special_zeta_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_square_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_std_mean_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_sum_to_size_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_symeig_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_take_along_dim_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_tan_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_tensordot_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_tile_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_to_sparse_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_trace_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_trapezoid_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_trapz_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_triangular_solve_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_true_divide_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_unflatten_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_unique_consecutive_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_var_mean_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_vdot_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_vsplit_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_vstack_mlu_float32",
"test_ops_py_TestCommonMLU_test_multiple_devices_zero__mlu_float32",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_H_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values___getitem___mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values___rand___mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values___ror___mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values___rxor___mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_abs_mlu_bool", # TODO(PYTORCH-8789)
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_acos_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_acosh_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_addr_mlu_bool",  # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Bool.
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_amin_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_aminmax_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_argwhere_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_as_strided_scatter_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_asin_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_asinh_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_atan2_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_atan_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_atanh_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_atleast_1d_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_atleast_2d_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_atleast_3d_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_bfloat16_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_bitwise_and_mlu_bool",  # TODO(PYTORCH-10302)
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_bitwise_not_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_bitwise_xor_mlu_bool",  # TODO(PYTORCH-10163)
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_block_diag_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_bool_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_broadcast_tensors_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_broadcast_to_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_byte_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_cartesian_prod_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_chalf_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_char_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_column_stack_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_combinations_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_copysign_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_cos_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_cosh_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_count_nonzero_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_cummax_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_cummin_mlu_bool", # CNNLCORE-14535
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_deg2rad_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_diff_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_digamma_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_double_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_dsplit_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_dstack_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_empty_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_empty_like_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_eq_mlu_bool",  # PYTOCH-9371
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_equal_mlu_bool", # TODO(PYTORCH-9371): same as eq
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_erfc_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_exp2_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_fft_fft2_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_fft_fft_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_fft_fftn_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_fft_fftshift_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_fft_hfft2_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_fft_hfft_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_fft_hfftn_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_fft_ifft2_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_fft_ifft_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_fft_ifftn_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_fft_ifftshift_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_fft_ihfft2_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_fft_ihfft_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_fft_ihfftn_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_fft_irfft2_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_fft_irfft_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_fft_irfftn_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_fft_rfft2_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_fft_rfft_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_fft_rfftn_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_flatten_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_fliplr_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_flipud_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_float_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_float_power_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_fmax_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_fmin_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_ge_mlu_bool", # PYTORCH-9371
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_gt_mlu_bool", # PYTORCH-9371
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_half_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_heaviside_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_hsplit_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_hstack_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_i0_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_index_add_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_index_put_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_int_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_isclose_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_isinf_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_isneginf_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_isposinf_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_isreal_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_jiterator_2inputs_2outputs_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_jiterator_4inputs_with_extra_args_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_jiterator_binary_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_jiterator_binary_return_by_ref_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_jiterator_unary_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_kron_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_ldexp_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_le_mlu_bool", # PYTORCH-9371
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_lgamma_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_logit_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_logsumexp_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_long_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_lt_mlu_bool", # PYTORCH-9371
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_mH_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_mT_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_masked_cumprod_mlu_bool", # where op does not support bool on mlu
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_masked_fill_mlu_bool", # mask in masked_fill has to be in range [0,1]
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_masked_mean_mlu_bool",# PYTORCH-10149
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_masked_prod_mlu_bool", # PYTORCH-10149
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_masked_scatter_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_masked_sum_mlu_bool", # PYTORCH-10149
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_meshgrid_list_of_tensors_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_meshgrid_variadic_tensors_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_max_reduction_with_dim_mlu_bool",# PYTORCH-10149
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_min_reduction_with_dim_mlu_bool", # cnnl min not support bool with dim
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_mode_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_movedim_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_narrow_copy_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_ne_mlu_bool", # PYTORCH-9371
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_new_empty_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_nn_functional_cosine_embedding_loss_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_nn_functional_pad_circular_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_nn_functional_pad_constant_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_nn_functional_pixel_shuffle_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_nn_functional_pixel_unshuffle_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_nn_functional_softsign_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_nn_functional_unfold_mlu_bool",  # TODO(PYTORCH-8763): MLU nn_unfold don't support tensor dtype Bool.
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_polygamma_polygamma_n_0_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_polygamma_polygamma_n_1_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_polygamma_polygamma_n_2_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_polygamma_polygamma_n_3_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_polygamma_polygamma_n_4_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_put_mlu_bool", # when accumulate is true, put op does not support bool
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_rad2deg_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_ravel_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_real_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_resize__mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_resize_as__mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_resolve_neg_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_rot90_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_scatter_add_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_scatter_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_scatter_reduce_sum_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_select_scatter_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_sgn_mlu_bool", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_short_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_sign_mlu_bool", # TODO(PYTORCH-8947)
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_signbit_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_sin_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_sinc_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_sinh_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_airy_ai_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_bessel_j0_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_bessel_j1_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_bessel_y0_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_bessel_y1_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_chebyshev_polynomial_t_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_chebyshev_polynomial_u_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_chebyshev_polynomial_v_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_chebyshev_polynomial_w_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_entr_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_erfcx_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_hermite_polynomial_h_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_hermite_polynomial_he_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_i0e_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_i1_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_i1e_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_laguerre_polynomial_l_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_legendre_polynomial_p_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_log_ndtr_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_modified_bessel_i0_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_modified_bessel_i1_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_modified_bessel_k0_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_modified_bessel_k1_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_ndtr_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_ndtri_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_polygamma_special_polygamma_n_0_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_scaled_modified_bessel_k0_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_scaled_modified_bessel_k1_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_shifted_chebyshev_polynomial_t_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_shifted_chebyshev_polynomial_u_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_shifted_chebyshev_polynomial_v_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_shifted_chebyshev_polynomial_w_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_spherical_bessel_j0_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_xlog1py_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_special_zeta_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_square_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_sum_to_size_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_take_along_dim_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_tan_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_tile_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_to_sparse_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_trace_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_true_divide_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_unflatten_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_unique_consecutive_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_unique_mlu_bool", # unique op does not support bool on mlu
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_vsplit_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_vstack_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_where_mlu_bool",
"test_ops_py_TestCommonMLU_test_non_standard_bool_values_zero__mlu_bool",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_H_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_H_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples___getitem___mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples___getitem___mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples___rdiv___mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_ops_py_TestCommonMLU_test_noncontiguous_samples___rmatmul___mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples___rmatmul___mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples___rmod___mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples___rpow___mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples___rpow___mlu_float32",
# TODO(PYTORCH-9217): "fill" not implemented for ComplexFloat
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_abs_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_acos_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_acos_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_acosh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_acosh_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_addbmm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_addcdiv_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_addcmul_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_addmm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_addmm_decomposed_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_addmv_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_addr_mlu_complex64",  # TODO(PYTORCH-8811): MLU addr don't support tensor dtype ComplexFloat.
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_all_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_allclose_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_allclose_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_amin_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_aminmax_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_any_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_argsort_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_argwhere_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_argwhere_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_as_strided_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_as_strided_scatter_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_as_strided_scatter_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_asin_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_asin_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_asinh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_asinh_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_atan2_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_atan_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_atan_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_atanh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_atanh_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_atleast_1d_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_atleast_1d_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_atleast_2d_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_atleast_2d_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_atleast_3d_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_atleast_3d_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_baddbmm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_bfloat16_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_bfloat16_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_block_diag_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_block_diag_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_bmm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_bool_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_bool_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_broadcast_shapes_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_broadcast_tensors_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_broadcast_tensors_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_broadcast_to_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_broadcast_to_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_bucketize_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_byte_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_byte_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_cartesian_prod_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_cartesian_prod_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_cat_mlu_complex64", # Depends on fill supports complex.
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_cdist_mlu_float32", #TODO(PYTORCH-8665): cdist only supports p=1 now.
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_chalf_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_chalf_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_char_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_char_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_cholesky_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_cholesky_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_cholesky_inverse_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_cholesky_inverse_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_cholesky_solve_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_cholesky_solve_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_clamp_mlu_float32", # PYTORCH-9208
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_column_stack_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_column_stack_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_combinations_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_combinations_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_complex_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_constant_pad_nd_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_copysign_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_corrcoef_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_corrcoef_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_cos_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_cos_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_cosh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_cosh_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_count_nonzero_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_count_nonzero_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_cov_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_cov_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_cross_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_cross_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_cummax_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_cumprod_mlu_complex64", # cumprod op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_cumprod_mlu_float32", # cnnlReduce does not support bool type
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_cumsum_mlu_complex64", # cumsum op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_cumulative_trapezoid_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_cumulative_trapezoid_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_deg2rad_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_diag_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_diag_embed_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_diagflat_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_diff_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_diff_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_digamma_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_dist_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_dist_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_div_no_rounding_mode_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_dot_mlu_complex64",  # TODO(PYTORCH-8807): MLU dot don't support tensor dtype ComplexFloat.
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_double_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_double_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_dsplit_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_dsplit_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_dstack_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_dstack_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_einsum_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_einsum_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_empty_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_empty_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_empty_like_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_empty_like_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_eq_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_equal_mlu_complex64", # TODO(PYTORCH-8756)
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_erfc_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_exp2_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_exp_mlu_complex64",
# TODO(PYTORCH-9187): view op is not support.
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_fft2_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_fft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_fft_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_fft_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_fftn_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_fftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_fftshift_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_fftshift_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_hfft2_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_hfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_hfft_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_hfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_hfftn_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_hfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_ifft2_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_ifft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_ifft_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_ifft_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_ifftn_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_ifftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_ifftshift_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_ifftshift_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_ihfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_ihfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_ihfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_irfft2_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_irfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_irfft_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_irfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_irfftn_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_irfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_rfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_rfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fft_rfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fill_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_flatten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_flatten_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_flip_mlu_complex64", # TODO(PYTORCH-8802): flip not support complex dtypes
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fliplr_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fliplr_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_flipud_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_flipud_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_float_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_float_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_float_power_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_float_power_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fmax_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_fmin_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_frexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_full_like_mlu_complex64", # TODO(PYTORCH-8738)
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_gather_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_geqrf_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_geqrf_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_gradient_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_gradient_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_half_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_half_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_heaviside_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_histc_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_hsplit_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_hsplit_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_hstack_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_hstack_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_hypot_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_i0_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_igamma_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_igammac_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_imag_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_index_add_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_index_copy_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_index_fill_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_index_put_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_index_reduce_mlu_float32",
# TODO(PYTORCH-9105): Complex is not support.
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_index_select_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_inner_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_inner_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_int_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_int_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_isclose_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_isclose_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_isin_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_isinf_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_isinf_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_isnan_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_isneginf_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_isposinf_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_isreal_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_isreal_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_istft_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_istft_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_jiterator_2inputs_2outputs_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_jiterator_2inputs_2outputs_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_jiterator_4inputs_with_extra_args_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_jiterator_4inputs_with_extra_args_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_jiterator_binary_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_jiterator_binary_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_jiterator_binary_return_by_ref_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_jiterator_binary_return_by_ref_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_jiterator_unary_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_jiterator_unary_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_kron_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_kron_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_ldexp_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_ldexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_lerp_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_lerp_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_lgamma_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_cholesky_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_cholesky_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_cholesky_ex_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_cholesky_ex_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_cond_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_cond_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_cross_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_cross_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_det_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_det_singular_mlu_complex64",# TODO(PYTORCH-9646): mlu not support lu_factor now.
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_det_singular_mlu_float32",# TODO(PYTORCH-9646): mlu not support lu_factor now.
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_eig_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_eig_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_eigh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_eigh_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_eigvals_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_eigvals_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_eigvalsh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_eigvalsh_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_householder_product_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_householder_product_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_inv_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_inv_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_inv_ex_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_inv_ex_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_ldl_factor_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_ldl_factor_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_ldl_factor_ex_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_ldl_factor_ex_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_ldl_solve_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_ldl_solve_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_lstsq_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_lstsq_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_lstsq_grad_oriented_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_lstsq_grad_oriented_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_lu_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_lu_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_lu_factor_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_lu_factor_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_lu_factor_ex_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_lu_factor_ex_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_lu_solve_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_lu_solve_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_matrix_norm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_matrix_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_matrix_power_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_matrix_power_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_matrix_rank_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_matrix_rank_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_matrix_rank_hermitian_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_matrix_rank_hermitian_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_multi_dot_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_multi_dot_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_norm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_norm_subgradients_at_zero_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_norm_subgradients_at_zero_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_pinv_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_pinv_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_pinv_hermitian_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_pinv_hermitian_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_pinv_singular_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_pinv_singular_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_qr_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_qr_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_slogdet_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_solve_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_solve_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_solve_ex_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_solve_ex_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_solve_triangular_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_solve_triangular_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_svd_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_svdvals_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_svdvals_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_tensorinv_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_tensorinv_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_tensorsolve_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_tensorsolve_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_vander_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_vander_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_vecdot_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_vecdot_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_vector_norm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linalg_vector_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_linspace_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_log10_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_log2_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_log_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_log_softmax_dtype_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_logaddexp2_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_logaddexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_logcumsumexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_logdet_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_logdet_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_logical_and_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_logical_not_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_logical_or_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_logical_xor_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_logit_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_logspace_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_logspace_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_logsumexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_long_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_long_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_lu_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_lu_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_lu_solve_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_lu_solve_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_lu_unpack_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_lu_unpack_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_mH_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_mH_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_mT_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_mT_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_masked_amin_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_masked_cumprod_mlu_complex64", # cumprod op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_masked_cumsum_mlu_complex64", # cumsum op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_masked_fill_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_masked_logaddexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_masked_logsumexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_masked_mean_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_masked_median_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_masked_normalize_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_masked_normalize_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_masked_prod_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_masked_scatter_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_masked_select_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_masked_softmin_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_masked_std_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_masked_sum_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_masked_var_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_matmul_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_matmul_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_matrix_exp_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_matrix_exp_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_mean_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_meshgrid_list_of_tensors_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_meshgrid_list_of_tensors_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_meshgrid_variadic_tensors_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_meshgrid_variadic_tensors_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_mm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_mode_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_movedim_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_movedim_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_msort_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_mv_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_mvlgamma_mvlgamma_p_1_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_mvlgamma_mvlgamma_p_3_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_mvlgamma_mvlgamma_p_5_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nanmean_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nanmedian_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nanquantile_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_narrow_copy_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_narrow_copy_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_native_batch_norm_mlu_float32",    # TODO(PYTORCH-9290): We can not calc save_invstd due to lack of kernel.
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_ne_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_neg_mlu_complex64",   #not support cfloat
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_new_empty_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_new_empty_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_new_full_mlu_complex64", # TODO(PYTORCH-8738)
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_new_ones_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_new_zeros_mlu_complex64", # zeros op does not support complex64 no mlu
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nextafter_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional__scaled_dot_product_attention_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_adaptive_max_pool3d_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_avg_pool2d_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_avg_pool3d_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_bilinear_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_celu_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_cosine_embedding_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_cosine_similarity_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_cross_entropy_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_ctc_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_fractional_max_pool2d_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_fractional_max_pool3d_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_gaussian_nll_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_grid_sample_mlu_float32", # TODO(PYTORCH-10134)
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_group_norm_mlu_float32", # TODO(PYTORCH-9458): group_norm unsupport eps<0.
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_hardshrink_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_hardtanh_mlu_float32", # [PYTORCH-9208]: [cnnlClip]Parameter min must be less than max
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_hinge_embedding_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_huber_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_instance_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_l1_loss_mlu_complex64", # l1_loss op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_linear_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_margin_ranking_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_max_pool2d_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_max_pool3d_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_max_unpool1d_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_max_unpool1d_grad_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_max_unpool2d_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_max_unpool2d_grad_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_max_unpool3d_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_max_unpool3d_grad_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_mish_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_multi_margin_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_multilabel_margin_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_multilabel_soft_margin_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_normalize_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_normalize_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_pad_circular_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_pad_circular_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_pad_constant_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_pad_constant_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_pad_reflect_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_pad_reflect_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_pad_replicate_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_pad_replicate_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_pairwise_distance_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_pairwise_distance_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_pdist_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_pixel_shuffle_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_pixel_shuffle_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_pixel_unshuffle_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_pixel_unshuffle_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_prelu_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_relu6_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_rrelu_mlu_float32", # PYTORCH-10240
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_soft_margin_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_softmin_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_softmin_with_dtype_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_softmin_with_dtype_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_softshrink_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_softsign_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_softsign_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_tanhshrink_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_tanhshrink_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_triplet_margin_loss_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_triplet_margin_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_triplet_margin_with_distance_loss_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_triplet_margin_with_distance_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nn_functional_unfold_mlu_complex64",  # TODO(PYTORCH-8763): MLU nn_unfold don't support tensor dtype ComplexFloat.
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_nonzero_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_norm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_norm_mlu_float32", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_norm_fro_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_norm_inf_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_norm_inf_mlu_float32", # mlu norm not support p =inf
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_norm_nuc_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_ones_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_ones_like_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_ormqr_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_ormqr_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_pca_lowrank_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_pinverse_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_pinverse_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_polar_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_polygamma_polygamma_n_0_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_polygamma_polygamma_n_1_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_polygamma_polygamma_n_2_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_polygamma_polygamma_n_3_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_polygamma_polygamma_n_4_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_positive_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_positive_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_pow_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_prod_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_put_mlu_complex64", # put op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_qr_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_quantile_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_rad2deg_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_rand_like_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_rand_like_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_ravel_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_ravel_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_real_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_real_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_reciprocal_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_renorm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_renorm_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_repeat_interleave_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_resize__mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_resize__mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_resize_as__mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_resize_as__mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_resolve_neg_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_resolve_neg_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_rot90_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_rot90_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_round_decimals_3_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_round_decimals_neg_3_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_rsqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu rsqrt not support bf16 and complex dtypes
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_scatter_add_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_scatter_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_scatter_reduce_amax_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_scatter_reduce_amin_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_scatter_reduce_mean_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_scatter_reduce_prod_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_searchsorted_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_segment_reduce_lengths_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_segment_reduce_offsets_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_select_scatter_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_short_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_short_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_sigmoid_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_signbit_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_sin_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_sin_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_sinc_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_sinc_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_sinh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_sinh_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_softmax_with_dtype_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_sparse_sampled_addmm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_sparse_sampled_addmm_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_airy_ai_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_bessel_j0_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_bessel_j1_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_bessel_y0_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_bessel_y1_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_chebyshev_polynomial_t_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_chebyshev_polynomial_u_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_chebyshev_polynomial_v_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_chebyshev_polynomial_w_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_entr_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_erfcx_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_hermite_polynomial_h_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_hermite_polynomial_he_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_i0e_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_i1_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_i1e_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_laguerre_polynomial_l_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_legendre_polynomial_p_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_log_ndtr_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_modified_bessel_i0_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_modified_bessel_i1_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_modified_bessel_k0_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_modified_bessel_k1_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_ndtr_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_ndtri_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_polygamma_special_polygamma_n_0_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_scaled_modified_bessel_k0_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_scaled_modified_bessel_k1_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_shifted_chebyshev_polynomial_t_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_shifted_chebyshev_polynomial_u_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_shifted_chebyshev_polynomial_v_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_shifted_chebyshev_polynomial_w_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_spherical_bessel_j0_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_xlog1py_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_special_zeta_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_split_with_sizes_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_sqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_square_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_square_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_std_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_std_mean_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_std_mean_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_stft_mlu_complex64",  # TODO(PYTORCH-10372): MLU stft don't support tensor dtype ComplexFloat.
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_stft_mlu_float32",  # TODO(PYTORCH-10376): MLU stft don't support backward.
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_sum_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_sum_to_size_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_sum_to_size_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_svd_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_symeig_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_symeig_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_take_along_dim_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_take_along_dim_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_take_mlu_complex64", # take op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_tan_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_tan_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_tanh_mlu_complex64", # tanh not support complex64
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_tensordot_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_tensordot_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_tile_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_tile_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_to_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_to_sparse_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_to_sparse_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_trace_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_trace_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_trapezoid_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_trapezoid_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_trapz_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_trapz_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_triangular_solve_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_triangular_solve_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_true_divide_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_true_divide_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_unflatten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_unflatten_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_unfold_copy_mlu_complex64", # unfold op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_unfold_mlu_complex64", # unfold op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_unique_consecutive_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_var_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_var_mean_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_var_mean_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_vdot_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_vdot_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_view_as_complex_mlu_float32", # remove this after fallback is set to off
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_vsplit_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_vsplit_mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_vstack_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_vstack_mlu_float32",
# TODO(PYTORCH-9135): tensor_split_backward will call cat op, and now is not support.
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_where_mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_zero__mlu_complex64",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_zero__mlu_float32",
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_zeros_mlu_complex64", # zeros op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_noncontiguous_samples_zeros_like_mlu_complex64",
"test_ops_py_TestCommonMLU_test_out_H_mlu_float32",
"test_ops_py_TestCommonMLU_test_out___getitem___mlu_float32",
"test_ops_py_TestCommonMLU_test_out___rmatmul___mlu_float32",
"test_ops_py_TestCommonMLU_test_out___rmod___mlu_float32",
"test_ops_py_TestCommonMLU_test_out___rpow___mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_acos_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_acosh_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_allclose_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_amin_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_asin_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_asinh_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_atan2_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_atan_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_atanh_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_atleast_1d_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_atleast_2d_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_atleast_3d_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_broadcast_shapes_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_broadcast_tensors_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_broadcast_to_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_column_stack_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_copysign_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_cos_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_cosh_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_digamma_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_dsplit_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_dstack_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_empty_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_empty_like_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_erfc_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_exp2_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_fft_fft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_fft_fft_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_fft_fftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_fft_fftshift_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_fft_hfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_fft_hfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_fft_hfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_fft_ifft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_fft_ifft_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_fft_ifftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_fft_ifftshift_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_fft_ihfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_fft_ihfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_fft_ihfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_fft_irfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_fft_irfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_fft_irfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_fft_rfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_fft_rfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_fft_rfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_flatten_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_fliplr_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_flipud_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_float_power_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_fmax_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_fmin_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_heaviside_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_hsplit_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_hstack_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_hypot_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_i0_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_igamma_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_igammac_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_imag_mlu_complex64",
"test_ops_py_TestCommonMLU_test_out__refs_isclose_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_isinf_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_isneginf_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_isposinf_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_isreal_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_lgamma_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_linalg_matrix_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_linalg_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_linalg_svdvals_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_linalg_vector_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_logspace_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_logsumexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_meshgrid_list_of_tensors_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_meshgrid_variadic_tensors_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_movedim_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_new_empty_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_nextafter_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_nn_functional_celu_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_nn_functional_hardshrink_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_nn_functional_hardtanh_mlu_float32", # [PYTORCH-9208]: [cnnlClip]Parameter min must be less than max
"test_ops_py_TestCommonMLU_test_out__refs_nn_functional_hinge_embedding_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_nn_functional_huber_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_nn_functional_margin_ranking_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_nn_functional_mish_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_nn_functional_pairwise_distance_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_nn_functional_pdist_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_nn_functional_prelu_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_nn_functional_relu6_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_nn_functional_softshrink_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_nn_functional_tanhshrink_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_positive_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_ravel_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_real_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_rot90_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_signbit_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_sin_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_sinc_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_sinh_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_special_bessel_j0_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_special_bessel_j1_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_special_i0e_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_special_i1_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_special_i1e_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_special_logit_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_special_multigammaln_mvlgamma_p_1_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_special_multigammaln_mvlgamma_p_3_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_special_multigammaln_mvlgamma_p_5_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_special_spherical_bessel_j0_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_special_zeta_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_square_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_std_mean_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_sum_to_size_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_tan_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_trace_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_true_divide_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_unflatten_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_var_mean_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_vsplit_mlu_float32",
"test_ops_py_TestCommonMLU_test_out__refs_vstack_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_acos_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_acosh_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_allclose_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_amin_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_aminmax_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_argsort_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_argwhere_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_as_strided_scatter_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_asin_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_asinh_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_atan2_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_atan_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_atanh_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_atleast_1d_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_atleast_2d_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_atleast_3d_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_bfloat16_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_block_diag_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_bool_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_broadcast_shapes_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_broadcast_tensors_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_broadcast_to_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_bucketize_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_byte_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_cartesian_prod_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_cdist_mlu_float32", #TODO(PYTORCH-8665): cdist only supports p=1 now.
"test_ops_py_TestCommonMLU_test_out_chalf_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_char_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_cholesky_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_cholesky_inverse_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_cholesky_solve_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_clamp_mlu_float32", # PYTORCH-9208
"test_ops_py_TestCommonMLU_test_out_column_stack_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_combinations_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_complex_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_copysign_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_corrcoef_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_cos_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_cosh_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_count_nonzero_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_cov_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_cross_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_cummax_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_cumulative_trapezoid_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_deg2rad_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_diff_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_digamma_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_dist_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_double_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_dsplit_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_dstack_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_einsum_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_empty_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_empty_like_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_erfc_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_exp2_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_fft_fft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_fft_fft_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_fft_fftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_fft_fftshift_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_fft_hfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_fft_hfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_fft_hfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_fft_ifft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_fft_ifft_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_fft_ifftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_fft_ifftshift_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_fft_ihfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_fft_ihfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_fft_ihfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_fft_irfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_fft_irfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_fft_irfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_fft_rfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_fft_rfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_fft_rfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_flatten_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_fliplr_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_flipud_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_float_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_float_power_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_fmax_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_fmin_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_frexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_geqrf_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_gradient_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_half_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_heaviside_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_histc_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_hsplit_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_hstack_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_hypot_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_i0_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_igamma_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_igammac_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_imag_mlu_complex64",
"test_ops_py_TestCommonMLU_test_out_index_copy_mlu_float32", # RuntimeError not raised: an unsafe cast from a result of dtype float32 into long
"test_ops_py_TestCommonMLU_test_out_index_reduce_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_inner_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_int_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_isclose_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_isin_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_isinf_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_isneginf_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_isposinf_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_isreal_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_istft_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_jiterator_2inputs_2outputs_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_jiterator_4inputs_with_extra_args_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_jiterator_binary_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_jiterator_binary_return_by_ref_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_jiterator_unary_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_kron_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_ldexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_lerp_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_lgamma_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_cholesky_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_cholesky_ex_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_cond_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_cross_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_det_singular_mlu_float32",# TODO(PYTORCH-9646): mlu not support lu_factor now.
"test_ops_py_TestCommonMLU_test_out_linalg_eig_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_eigh_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_eigvals_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_eigvalsh_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_householder_product_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_inv_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_inv_ex_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_ldl_factor_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_ldl_factor_ex_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_ldl_solve_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_lstsq_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_lstsq_grad_oriented_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_lu_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_lu_factor_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_lu_factor_ex_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_lu_solve_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_matrix_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_matrix_power_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_matrix_rank_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_matrix_rank_hermitian_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_multi_dot_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_norm_subgradients_at_zero_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_pinv_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_pinv_hermitian_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_pinv_singular_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_qr_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_solve_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_solve_ex_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_solve_triangular_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_svd_mlu_float32", # output strides are not same
"test_ops_py_TestCommonMLU_test_out_linalg_svdvals_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_tensorinv_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_tensorsolve_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_vander_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_vecdot_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_linalg_vector_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_logaddexp2_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_logaddexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_logcumsumexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_logdet_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_logit_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_logspace_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_logsumexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_long_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_lu_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_lu_solve_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_lu_unpack_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_mH_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_mT_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_masked_amin_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_masked_logaddexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_masked_logsumexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_masked_median_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_masked_normalize_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_masked_select_mlu_float32", # PYTORCH-9421
"test_ops_py_TestCommonMLU_test_out_masked_softmin_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_matmul_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_matrix_exp_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_meshgrid_list_of_tensors_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_meshgrid_variadic_tensors_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_mode_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_movedim_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_msort_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_mvlgamma_mvlgamma_p_1_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_mvlgamma_mvlgamma_p_3_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_mvlgamma_mvlgamma_p_5_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nanmean_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nanmedian_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nanquantile_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nansum_mlu_float32",#RuntimeError not raise, an unsafe cast from float32 to long
"test_ops_py_TestCommonMLU_test_out_narrow_copy_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_native_batch_norm_mlu_float32",    # TODO(PYTORCH-9290): We can not calc save_invstd due to lack of kernel.
"test_ops_py_TestCommonMLU_test_out_new_empty_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nextafter_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional__scaled_dot_product_attention_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_adaptive_max_pool3d_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_avg_pool2d_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_avg_pool3d_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_bilinear_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_celu_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_cosine_embedding_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_cosine_similarity_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_cross_entropy_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_ctc_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_fractional_max_pool2d_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_fractional_max_pool3d_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_grid_sample_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_group_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_hardshrink_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_hardtanh_mlu_float32", # [PYTORCH-9208]: [cnnlClip]Parameter min must be less than max
"test_ops_py_TestCommonMLU_test_out_nn_functional_hinge_embedding_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_huber_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_instance_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_linear_mlu_float32", # PYTORCH-8723: linear is correct, but make_tensor(... device='mlu') can not construct noncontiguous tensor
"test_ops_py_TestCommonMLU_test_out_nn_functional_margin_ranking_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_max_unpool1d_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_max_unpool1d_grad_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_max_unpool2d_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_max_unpool2d_grad_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_max_unpool3d_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_max_unpool3d_grad_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_mish_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_multi_margin_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_multilabel_margin_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_multilabel_soft_margin_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_normalize_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_pad_circular_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_pad_constant_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_pad_reflect_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_pad_replicate_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_pairwise_distance_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_pdist_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_pixel_shuffle_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_pixel_unshuffle_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_prelu_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_relu6_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_soft_margin_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_softmin_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_softmin_with_dtype_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_softshrink_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_softsign_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_tanhshrink_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_triplet_margin_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nn_functional_triplet_margin_with_distance_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_nonzero_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_norm_mlu_float32", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_ops_py_TestCommonMLU_test_out_norm_fro_mlu_float32", # mlu norm not support p='fro'
"test_ops_py_TestCommonMLU_test_out_norm_inf_mlu_float32", # mlu norm not support p=inf
"test_ops_py_TestCommonMLU_test_out_norm_nuc_mlu_float32", # mlu norm not support p=nuc
"test_ops_py_TestCommonMLU_test_out_ops_nvprims_native_batch_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_ops_nvprims_var_mean_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_ormqr_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_pca_lowrank_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_pinverse_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_polar_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_polygamma_polygamma_n_0_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_polygamma_polygamma_n_1_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_polygamma_polygamma_n_2_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_polygamma_polygamma_n_3_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_polygamma_polygamma_n_4_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_positive_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_quantile_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_rad2deg_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_rand_like_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_ravel_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_real_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_renorm_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_resize__mlu_float32",
"test_ops_py_TestCommonMLU_test_out_resize_as__mlu_float32",
"test_ops_py_TestCommonMLU_test_out_resolve_neg_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_rot90_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_round_decimals_3_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_round_decimals_neg_3_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_scatter_reduce_amax_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_scatter_reduce_amin_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_scatter_reduce_mean_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_scatter_reduce_prod_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_searchsorted_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_segment_reduce_lengths_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_segment_reduce_offsets_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_select_scatter_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_short_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_signbit_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_sin_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_sinc_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_sinh_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_sparse_sampled_addmm_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_airy_ai_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_bessel_j0_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_bessel_j1_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_bessel_y0_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_bessel_y1_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_chebyshev_polynomial_t_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_chebyshev_polynomial_u_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_chebyshev_polynomial_v_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_chebyshev_polynomial_w_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_entr_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_erfcx_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_hermite_polynomial_h_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_hermite_polynomial_he_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_i0e_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_i1_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_i1e_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_laguerre_polynomial_l_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_legendre_polynomial_p_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_log_ndtr_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_modified_bessel_i0_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_modified_bessel_i1_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_modified_bessel_k0_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_modified_bessel_k1_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_ndtr_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_ndtri_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_polygamma_special_polygamma_n_0_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_scaled_modified_bessel_k0_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_scaled_modified_bessel_k1_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_shifted_chebyshev_polynomial_t_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_shifted_chebyshev_polynomial_u_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_shifted_chebyshev_polynomial_v_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_shifted_chebyshev_polynomial_w_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_spherical_bessel_j0_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_xlog1py_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_special_zeta_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_square_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_std_mean_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_sum_to_size_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_svd_mlu_float32", # output strides are not the same!
"test_ops_py_TestCommonMLU_test_out_symeig_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_take_along_dim_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_tan_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_tensordot_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_tile_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_to_sparse_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_trace_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_trapezoid_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_trapz_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_triangular_solve_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_true_divide_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_unflatten_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_unique_consecutive_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_var_mean_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_vdot_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_vsplit_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_vstack_mlu_float32",
"test_ops_py_TestCommonMLU_test_out_warning_H_mlu",
"test_ops_py_TestCommonMLU_test_out_warning___getitem___mlu",
"test_ops_py_TestCommonMLU_test_out_warning___rand___mlu",
"test_ops_py_TestCommonMLU_test_out_warning___rmatmul___mlu",
"test_ops_py_TestCommonMLU_test_out_warning___rmod___mlu",
"test_ops_py_TestCommonMLU_test_out_warning___ror___mlu",
"test_ops_py_TestCommonMLU_test_out_warning___rpow___mlu",
"test_ops_py_TestCommonMLU_test_out_warning___rxor___mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_acos_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_acosh_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_allclose_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_amin_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_asin_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_asinh_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_atan2_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_atan_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_atanh_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_atleast_1d_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_atleast_2d_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_atleast_3d_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_broadcast_shapes_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_broadcast_tensors_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_broadcast_to_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_column_stack_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_copysign_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_cos_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_cosh_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_digamma_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_dsplit_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_dstack_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_empty_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_empty_like_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_erfc_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_exp2_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_fft_fft2_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_fft_fft_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_fft_fftn_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_fft_fftshift_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_fft_hfft2_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_fft_hfft_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_fft_hfftn_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_fft_ifft2_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_fft_ifft_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_fft_ifftn_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_fft_ifftshift_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_fft_ihfft2_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_fft_ihfft_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_fft_ihfftn_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_fft_irfft2_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_fft_irfft_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_fft_irfftn_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_fft_rfft2_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_fft_rfft_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_fft_rfftn_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_flatten_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_fliplr_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_flipud_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_float_power_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_fmax_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_fmin_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_gcd_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_heaviside_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_hsplit_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_hstack_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_hypot_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_i0_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_igamma_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_igammac_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_imag_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_isclose_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_isinf_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_isneginf_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_isposinf_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_isreal_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_lcm_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_lgamma_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_linalg_matrix_norm_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_linalg_norm_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_linalg_svdvals_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_linalg_vector_norm_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_logspace_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_logsumexp_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_meshgrid_list_of_tensors_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_meshgrid_variadic_tensors_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_movedim_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_new_empty_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_nextafter_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_nn_functional_celu_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_nn_functional_hardshrink_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_nn_functional_hardtanh_mlu", # [PYTORCH-9208]: [cnnlClip]Parameter min must be less than max
"test_ops_py_TestCommonMLU_test_out_warning__refs_nn_functional_hinge_embedding_loss_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_nn_functional_huber_loss_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_nn_functional_margin_ranking_loss_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_nn_functional_mish_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_nn_functional_pairwise_distance_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_nn_functional_pdist_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_nn_functional_prelu_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_nn_functional_relu6_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_nn_functional_softshrink_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_nn_functional_tanhshrink_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_positive_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_ravel_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_real_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_rot90_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_signbit_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_sin_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_sinc_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_sinh_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_special_bessel_j0_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_special_bessel_j1_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_special_i0e_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_special_i1_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_special_i1e_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_special_logit_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_special_multigammaln_mvlgamma_p_1_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_special_multigammaln_mvlgamma_p_3_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_special_multigammaln_mvlgamma_p_5_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_special_spherical_bessel_j0_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_special_zeta_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_square_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_std_mean_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_sum_to_size_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_tan_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_trace_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_tril_indices_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_triu_indices_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_true_divide_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_unflatten_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_var_mean_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_vsplit_mlu",
"test_ops_py_TestCommonMLU_test_out_warning__refs_vstack_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_acos_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_acosh_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_allclose_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_amin_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_aminmax_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_argsort_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_argwhere_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_as_strided_scatter_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_asin_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_asinh_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_atan2_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_atan_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_atanh_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_atleast_1d_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_atleast_2d_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_atleast_3d_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_bfloat16_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_block_diag_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_bool_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_broadcast_shapes_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_broadcast_tensors_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_broadcast_to_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_bucketize_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_byte_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_cartesian_prod_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_cdist_mlu", #TODO(PYTORCH-8665): cdist only supports p=1 now.
"test_ops_py_TestCommonMLU_test_out_warning_chalf_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_char_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_cholesky_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_cholesky_inverse_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_cholesky_solve_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_clamp_mlu", # PYTORCH-9208
"test_ops_py_TestCommonMLU_test_out_warning_column_stack_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_combinations_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_complex_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_copysign_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_corrcoef_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_cos_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_cosh_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_count_nonzero_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_cov_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_cross_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_cummax_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_cumulative_trapezoid_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_deg2rad_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_diff_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_digamma_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_dist_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_double_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_dsplit_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_dstack_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_einsum_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_empty_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_empty_like_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_erfc_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_exp2_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_fft_fft2_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_fft_fft_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_fft_fftn_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_fft_fftshift_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_fft_hfft2_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_fft_hfft_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_fft_hfftn_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_fft_ifft2_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_fft_ifft_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_fft_ifftn_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_fft_ifftshift_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_fft_ihfft2_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_fft_ihfft_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_fft_ihfftn_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_fft_irfft2_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_fft_irfft_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_fft_irfftn_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_fft_rfft2_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_fft_rfft_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_fft_rfftn_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_flatten_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_fliplr_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_flipud_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_float_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_float_power_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_fmax_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_fmin_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_frexp_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_gcd_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_geqrf_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_gradient_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_half_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_heaviside_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_histc_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_histogram_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_histogramdd_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_hsplit_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_hstack_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_hypot_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_i0_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_igamma_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_igammac_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_imag_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_index_copy_mlu", # Resized a non-empty tensor but did not warn about it
"test_ops_py_TestCommonMLU_test_out_warning_index_reduce_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_inner_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_int_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_isclose_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_isin_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_isinf_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_isneginf_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_isposinf_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_isreal_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_istft_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_jiterator_2inputs_2outputs_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_jiterator_4inputs_with_extra_args_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_jiterator_binary_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_jiterator_binary_return_by_ref_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_jiterator_unary_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_kron_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_lcm_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_ldexp_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_lerp_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_lgamma_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_cholesky_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_cholesky_ex_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_cond_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_cross_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_det_singular_mlu",# TODO(PYTORCH-9646): mlu not support lu_factor now.
"test_ops_py_TestCommonMLU_test_out_warning_linalg_eig_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_eigh_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_eigvals_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_eigvalsh_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_householder_product_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_inv_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_inv_ex_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_ldl_factor_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_ldl_factor_ex_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_ldl_solve_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_lstsq_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_lstsq_grad_oriented_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_lu_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_lu_factor_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_lu_factor_ex_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_lu_solve_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_matrix_norm_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_matrix_power_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_matrix_rank_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_matrix_rank_hermitian_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_multi_dot_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_norm_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_norm_subgradients_at_zero_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_pinv_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_pinv_hermitian_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_pinv_singular_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_qr_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_solve_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_solve_ex_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_solve_triangular_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_svdvals_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_tensorinv_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_tensorsolve_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_vander_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_vecdot_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_linalg_vector_norm_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_logaddexp2_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_logaddexp_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_logcumsumexp_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_logdet_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_logit_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_logspace_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_logsumexp_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_long_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_lu_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_lu_solve_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_lu_unpack_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_mH_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_mT_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_masked_amin_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_masked_logaddexp_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_masked_logsumexp_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_masked_median_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_masked_normalize_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_masked_select_mlu", # PYTORCH-9422
"test_ops_py_TestCommonMLU_test_out_warning_masked_softmin_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_matmul_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_matrix_exp_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_meshgrid_list_of_tensors_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_meshgrid_variadic_tensors_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_mode_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_movedim_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_msort_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_mvlgamma_mvlgamma_p_1_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_mvlgamma_mvlgamma_p_3_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_mvlgamma_mvlgamma_p_5_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nanmean_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nanmedian_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nanquantile_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_narrow_copy_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_native_batch_norm_mlu",    # TODO(PYTORCH-9290): We can not calc save_invstd due to lack of kernel.
"test_ops_py_TestCommonMLU_test_out_warning_new_empty_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nextafter_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional__scaled_dot_product_attention_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_adaptive_max_pool3d_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_avg_pool2d_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_avg_pool3d_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_bilinear_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_celu_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_cosine_embedding_loss_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_cosine_similarity_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_cross_entropy_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_ctc_loss_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_fractional_max_pool2d_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_fractional_max_pool3d_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_grid_sample_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_group_norm_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_hardshrink_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_hardtanh_mlu", # [PYTORCH-9208]
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_hinge_embedding_loss_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_huber_loss_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_instance_norm_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_margin_ranking_loss_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_max_unpool1d_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_max_unpool1d_grad_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_max_unpool2d_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_max_unpool2d_grad_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_max_unpool3d_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_max_unpool3d_grad_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_mish_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_multi_margin_loss_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_multilabel_margin_loss_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_multilabel_soft_margin_loss_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_normalize_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_one_hot_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_pad_circular_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_pad_constant_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_pad_reflect_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_pad_replicate_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_pairwise_distance_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_pdist_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_pixel_shuffle_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_pixel_unshuffle_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_prelu_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_relu6_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_soft_margin_loss_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_softmin_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_softmin_with_dtype_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_softshrink_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_softsign_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_tanhshrink_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_triplet_margin_loss_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nn_functional_triplet_margin_with_distance_loss_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_nonzero_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_norm_mlu", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_ops_py_TestCommonMLU_test_out_warning_norm_inf_mlu", # mlu norm not support p = inf
"test_ops_py_TestCommonMLU_test_out_warning_norm_nuc_mlu", # mlu norm not support p ='nuc'
"test_ops_py_TestCommonMLU_test_out_warning_ops_nvprims_native_batch_norm_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_ops_nvprims_var_mean_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_ormqr_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_pca_lowrank_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_pinverse_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_polar_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_polygamma_polygamma_n_0_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_polygamma_polygamma_n_1_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_polygamma_polygamma_n_2_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_polygamma_polygamma_n_3_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_polygamma_polygamma_n_4_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_positive_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_quantile_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_rad2deg_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_rand_like_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_ravel_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_real_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_renorm_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_resize__mlu",
"test_ops_py_TestCommonMLU_test_out_warning_resize_as__mlu",
"test_ops_py_TestCommonMLU_test_out_warning_resolve_neg_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_rot90_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_round_decimals_0_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_round_decimals_3_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_round_decimals_neg_3_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_scatter_reduce_amax_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_scatter_reduce_amin_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_scatter_reduce_mean_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_scatter_reduce_prod_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_searchsorted_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_segment_reduce_lengths_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_segment_reduce_offsets_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_select_scatter_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_short_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_signbit_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_sin_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_sinc_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_sinh_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_sparse_sampled_addmm_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_airy_ai_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_bessel_j0_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_bessel_j1_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_bessel_y0_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_bessel_y1_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_chebyshev_polynomial_t_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_chebyshev_polynomial_u_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_chebyshev_polynomial_v_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_chebyshev_polynomial_w_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_entr_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_erfcx_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_hermite_polynomial_h_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_hermite_polynomial_he_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_i0e_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_i1_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_i1e_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_laguerre_polynomial_l_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_legendre_polynomial_p_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_log_ndtr_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_modified_bessel_i0_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_modified_bessel_i1_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_modified_bessel_k0_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_modified_bessel_k1_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_ndtr_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_ndtri_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_polygamma_special_polygamma_n_0_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_scaled_modified_bessel_k0_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_scaled_modified_bessel_k1_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_shifted_chebyshev_polynomial_t_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_shifted_chebyshev_polynomial_u_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_shifted_chebyshev_polynomial_v_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_shifted_chebyshev_polynomial_w_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_spherical_bessel_j0_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_xlog1py_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_special_zeta_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_square_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_std_mean_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_sum_to_size_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_symeig_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_take_along_dim_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_tan_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_tensordot_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_tile_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_to_sparse_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_trace_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_trapezoid_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_trapz_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_triangular_solve_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_tril_indices_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_triu_indices_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_true_divide_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_unflatten_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_unique_consecutive_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_var_mean_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_vdot_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_vsplit_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_vstack_mlu",
"test_ops_py_TestCommonMLU_test_out_warning_zero__mlu",
"test_ops_py_TestCommonMLU_test_out_zero__mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_abs_mlu_bfloat16", # TODO(PYTORCH-8789)
"test_ops_py_TestCommonMLU_test_python_ref__refs_abs_mlu_bool", # TODO(PYTORCH-8789)
"test_ops_py_TestCommonMLU_test_python_ref__refs_abs_mlu_complex32", # TODO(PYTORCH-8789)
# TODO(PYTORCH-9217): "fill" not implemented for ComplexFloat
"test_ops_py_TestCommonMLU_test_python_ref__refs_abs_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_abs_mlu_int16", # TODO(PYTORCH-8789)
"test_ops_py_TestCommonMLU_test_python_ref__refs_abs_mlu_int8", # TODO(PYTORCH-8789)
"test_ops_py_TestCommonMLU_test_python_ref__refs_abs_mlu_uint8", # TODO(PYTORCH-8789)
"test_ops_py_TestCommonMLU_test_python_ref__refs_acos_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_acos_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_acos_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_acos_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_acos_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_acos_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_acos_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_acos_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_acos_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_acos_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_acosh_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_acosh_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_acosh_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_acosh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_acosh_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_acosh_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_acosh_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_acosh_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_acosh_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_acosh_mlu_uint8",
# TODO(PYTORCH-9105): complex is not support.
"test_ops_py_TestCommonMLU_test_python_ref__refs_add_mlu_complex64",
# TODO(PYTORCH-9105): complex is not support.
"test_ops_py_TestCommonMLU_test_python_ref__refs_addcdiv_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_addcdiv_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_all_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_all_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_allclose_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_allclose_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_allclose_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_allclose_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_amax_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_amin_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_amin_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_amin_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_amin_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_amin_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_amin_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_amin_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_amin_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_any_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_any_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_as_strided_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_asin_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_asin_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_asin_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_asin_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_asin_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_asin_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_asin_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_asin_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_asin_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_asin_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_asinh_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_asinh_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_asinh_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_asinh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_asinh_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_asinh_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_asinh_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_asinh_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_asinh_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_asinh_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atan2_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atan2_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atan2_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atan2_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atan2_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atan2_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atan2_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atan2_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atan_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atan_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atan_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atan_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atan_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atan_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atan_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atan_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atan_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atan_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atanh_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atanh_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atanh_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atanh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atanh_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atanh_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atanh_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atanh_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atanh_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atanh_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_1d_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_1d_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_1d_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_1d_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_1d_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_1d_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_1d_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_1d_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_1d_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_1d_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_2d_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_2d_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_2d_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_2d_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_2d_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_2d_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_2d_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_2d_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_2d_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_2d_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_3d_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_3d_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_3d_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_3d_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_3d_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_3d_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_3d_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_3d_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_3d_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_atleast_3d_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_broadcast_shapes_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_broadcast_tensors_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_broadcast_tensors_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_broadcast_tensors_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_broadcast_tensors_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_broadcast_tensors_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_broadcast_tensors_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_broadcast_tensors_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_broadcast_tensors_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_broadcast_tensors_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_broadcast_to_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_broadcast_to_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_broadcast_to_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_broadcast_to_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_broadcast_to_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_broadcast_to_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_broadcast_to_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_broadcast_to_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_broadcast_to_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_cat_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_cat_mlu_complex64", # Depends on cast supports complex.
"test_ops_py_TestCommonMLU_test_python_ref__refs_ceil_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_ceil_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_ceil_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_ceil_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_ceil_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_clamp_mlu_bfloat16",
# PYTORCH-9208 start
"test_ops_py_TestCommonMLU_test_python_ref__refs_clamp_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_clamp_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_clamp_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_clamp_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_clamp_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_clamp_mlu_uint8",
# PYTORCH-9208 end
"test_ops_py_TestCommonMLU_test_python_ref__refs_clamp_max_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_clamp_min_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_clone_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_clone_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_column_stack_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_column_stack_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_column_stack_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_column_stack_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_column_stack_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_column_stack_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_column_stack_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_column_stack_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_column_stack_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_column_stack_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_conj_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_conj_mlu_complex64",           # TODO(PYTORCH-8738)
"test_ops_py_TestCommonMLU_test_python_ref__refs_conj_physical_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_conj_physical_mlu_complex64",  # TODO(PYTORCH-8738)
"test_ops_py_TestCommonMLU_test_python_ref__refs_constant_pad_nd_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_constant_pad_nd_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_contiguous_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_copysign_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_copysign_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_copysign_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_copysign_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_copysign_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_copysign_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_copysign_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_copysign_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_cos_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_cos_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_cos_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_cos_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_cos_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_cos_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_cos_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_cos_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_cos_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_cos_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_cosh_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_cosh_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_cosh_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_cosh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_cosh_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_cosh_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_cosh_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_cosh_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_cosh_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_cosh_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_cumsum_mlu_bfloat16", # cumsum op does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref__refs_cumsum_mlu_complex64", # cumsum op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref__refs_cumsum_mlu_uint8", # where op does not support uint8 on mlu
"test_ops_py_TestCommonMLU_test_python_ref__refs_diag_embed_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_diag_embed_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_diag_embed_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_diag_embed_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_diagonal_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_diagonal_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_digamma_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_digamma_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_digamma_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_digamma_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_digamma_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_digamma_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_digamma_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_div_floor_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_ops_py_TestCommonMLU_test_python_ref__refs_div_no_rounding_mode_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_ops_py_TestCommonMLU_test_python_ref__refs_div_no_rounding_mode_mlu_complex32", # TODO(PYTORCH-8724): div not support complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref__refs_div_no_rounding_mode_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref__refs_div_trunc_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_ops_py_TestCommonMLU_test_python_ref__refs_div_trunc_rounding_mlu_float16", # TODO(CNNLCORE-2677): div precision problem on 370 platform
"test_ops_py_TestCommonMLU_test_python_ref__refs_dsplit_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_dsplit_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_dsplit_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_dsplit_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_dsplit_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_dsplit_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_dsplit_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_dsplit_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_dsplit_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_dsplit_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_dstack_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_dstack_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_dstack_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_dstack_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_dstack_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_dstack_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_dstack_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_dstack_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_dstack_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_dstack_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_empty_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_empty_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_empty_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_empty_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_empty_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_empty_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_empty_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_empty_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_empty_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_empty_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_empty_like_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_empty_like_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_empty_like_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_empty_like_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_empty_like_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_empty_like_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_empty_like_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_empty_like_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_empty_like_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_empty_like_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_eq_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_eq_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_eq_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_erf_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_erf_mlu_float16", # input inf/-inf, output is 1/-1
"test_ops_py_TestCommonMLU_test_python_ref__refs_erfc_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_erfc_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_erfc_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_erfc_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_erfc_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_erfc_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_erfc_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_erfc_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_exp2_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_exp2_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_exp2_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_exp2_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_exp2_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_exp2_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_exp2_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_exp2_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_exp_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_exp_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_exp_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_expm1_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_eye_mlu_complex64",  # TODO(PYTORCH-8910): MLU eye don't support tensor dtype ComplexFloat.
"test_ops_py_TestCommonMLU_test_python_ref__refs_eye_mlu_uint8",  # TODO(PYTORCH-10149): where op uint8 dtype problem.
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fft2_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fft2_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fft2_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fft2_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fft2_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fft2_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fft2_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fft2_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fft_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fft_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fft_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fft_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fft_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fft_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fft_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fft_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fft_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fftn_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fftn_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fftn_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fftn_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fftn_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fftn_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fftn_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fftn_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fftshift_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fftshift_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fftshift_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fftshift_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fftshift_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fftshift_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fftshift_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fftshift_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fftshift_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_fftshift_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_hfft2_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_hfft2_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_hfft2_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_hfft2_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_hfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_hfft2_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_hfft2_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_hfft2_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_hfft2_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_hfft_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_hfft_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_hfft_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_hfft_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_hfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_hfft_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_hfft_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_hfft_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_hfft_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_hfftn_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_hfftn_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_hfftn_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_hfftn_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_hfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_hfftn_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_hfftn_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_hfftn_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_hfftn_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifft2_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifft2_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifft2_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifft2_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifft2_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifft2_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifft2_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifft2_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifft_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifft_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifft_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifft_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifft_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifft_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifft_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifft_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifft_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifftn_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifftn_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifftn_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifftn_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifftn_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifftn_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifftn_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifftn_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifftshift_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifftshift_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifftshift_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifftshift_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifftshift_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifftshift_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifftshift_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifftshift_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifftshift_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ifftshift_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ihfft2_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ihfft2_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ihfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ihfft2_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ihfft2_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ihfft2_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ihfft2_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ihfft_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ihfft_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ihfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ihfft_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ihfft_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ihfft_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ihfft_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ihfftn_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ihfftn_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ihfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ihfftn_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ihfftn_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ihfftn_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_ihfftn_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_irfft2_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_irfft2_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_irfft2_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_irfft2_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_irfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_irfft2_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_irfft2_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_irfft2_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_irfft2_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_irfft_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_irfft_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_irfft_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_irfft_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_irfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_irfft_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_irfft_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_irfft_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_irfft_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_irfftn_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_irfftn_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_irfftn_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_irfftn_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_irfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_irfftn_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_irfftn_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_irfftn_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_irfftn_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_rfft2_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_rfft2_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_rfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_rfft2_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_rfft2_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_rfft2_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_rfft2_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_rfft_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_rfft_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_rfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_rfft_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_rfft_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_rfft_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_rfft_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_rfftn_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_rfftn_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_rfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_rfftn_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_rfftn_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_rfftn_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fft_rfftn_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fill_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fill_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fill_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_flatten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_flatten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_flatten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_flatten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_flatten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_flatten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_flatten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_flatten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_flatten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_flatten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_flip_mlu_bfloat16", # TODO(PYTORCH-8802): flip not support bf16
"test_ops_py_TestCommonMLU_test_python_ref__refs_flip_mlu_complex64", # TODO(PYTORCH-8802): flip not support complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref__refs_fliplr_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fliplr_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fliplr_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fliplr_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fliplr_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fliplr_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fliplr_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fliplr_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fliplr_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_flipud_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_flipud_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_flipud_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_flipud_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_flipud_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_flipud_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_flipud_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_flipud_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_flipud_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_float_power_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_float_power_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_float_power_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_float_power_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_float_power_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_float_power_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_float_power_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_float_power_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_float_power_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_floor_mlu_bfloat16", # TODO(PYTORCH-8724): floor not support bf16
"test_ops_py_TestCommonMLU_test_python_ref__refs_floor_mlu_int16", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref__refs_floor_mlu_int32", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref__refs_floor_mlu_int8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref__refs_floor_mlu_uint8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref__refs_floor_divide_mlu_bfloat16", # TODO(PYTORCH-8724): floor divide not support bf16
"test_ops_py_TestCommonMLU_test_python_ref__refs_floor_divide_mlu_float16", # CNNLCORE-2677 div have precision problem on 370 platform
"test_ops_py_TestCommonMLU_test_python_ref__refs_fmax_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fmax_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fmax_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fmax_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fmax_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fmax_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fmax_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fmax_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fmin_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fmin_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fmin_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fmin_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fmin_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fmin_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fmin_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fmin_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_fmod_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_frac_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_gcd_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_gcd_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_gcd_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_gcd_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_ge_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_gt_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_heaviside_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_heaviside_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_heaviside_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_heaviside_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_heaviside_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_heaviside_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_heaviside_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_heaviside_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_hsplit_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_hsplit_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_hsplit_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_hsplit_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_hsplit_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_hsplit_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_hsplit_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_hsplit_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_hsplit_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_hsplit_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_hstack_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_hstack_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_hstack_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_hstack_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_hstack_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_hstack_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_hstack_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_hstack_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_hstack_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_hstack_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_hypot_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_hypot_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_hypot_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_i0_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_i0_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_i0_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_i0_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_i0_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_i0_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_i0_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_i0_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_igamma_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_igammac_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_imag_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_imag_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_index_add_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_index_add_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_index_add_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_index_add_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_index_add_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_index_add_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_index_copy_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_index_copy_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_index_fill_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_index_fill_mlu_complex64",
# TODO(PYTORCH-9186): bfloat16 and complex64 is not support.
"test_ops_py_TestCommonMLU_test_python_ref__refs_index_select_mlu_bfloat16",
# TODO(PYTORCH-9186): index_select_mlu is not support bfloat16 and complex64.
"test_ops_py_TestCommonMLU_test_python_ref__refs_isclose_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isclose_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isclose_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isclose_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isclose_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isclose_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isclose_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isclose_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isclose_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isfinite_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isfinite_mlu_complex64", # failed because 'fill_internal_with_scalar' is not implemented for 'ComplexFloat'
"test_ops_py_TestCommonMLU_test_python_ref__refs_isinf_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isinf_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isinf_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isinf_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isinf_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isinf_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isinf_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isinf_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isinf_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isinf_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isnan_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isnan_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isneginf_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isneginf_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isneginf_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isneginf_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isneginf_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isneginf_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isneginf_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isneginf_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isposinf_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isposinf_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isposinf_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isposinf_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isposinf_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isposinf_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isposinf_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isposinf_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isreal_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isreal_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isreal_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isreal_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isreal_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isreal_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isreal_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isreal_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isreal_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_isreal_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_lcm_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_lcm_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_lcm_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_lcm_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_le_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_lgamma_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_lgamma_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_lgamma_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_lgamma_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_lgamma_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_lgamma_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_lgamma_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_linalg_matrix_norm_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_linalg_matrix_norm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_linalg_matrix_norm_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_linalg_matrix_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_linalg_norm_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_linalg_norm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_linalg_norm_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_linalg_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_linalg_svd_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_linalg_svdvals_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_linalg_svdvals_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_linalg_vector_norm_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_linalg_vector_norm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_linalg_vector_norm_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_linalg_vector_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_linspace_mlu_complex64", #TODO(PYTORCH-8738): mlu full not support complex64.
"test_ops_py_TestCommonMLU_test_python_ref__refs_linspace_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_linspace_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_linspace_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_linspace_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_log10_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_log10_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_log10_mlu_uint8", # masked_fill doesn't support uint8.
"test_ops_py_TestCommonMLU_test_python_ref__refs_log1p_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_log2_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_log2_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_log2_mlu_uint8", # masked_fill doesn't support uint8.
"test_ops_py_TestCommonMLU_test_python_ref__refs_log_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_log_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_log_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_log_mlu_uint8", # masked_fill doesn't support uint8.
"test_ops_py_TestCommonMLU_test_python_ref__refs_logical_and_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_logical_and_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_logical_not_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_logical_not_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_logical_or_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_logical_or_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_logical_xor_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_logical_xor_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_logspace_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_logspace_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_logspace_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_logspace_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_logspace_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_logspace_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_logspace_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_logspace_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_logsumexp_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_logsumexp_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_logsumexp_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_logsumexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_logsumexp_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_logsumexp_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_logsumexp_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_logsumexp_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_lt_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_masked_fill_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_masked_fill_mlu_bool", # where op does not support bool type
"test_ops_py_TestCommonMLU_test_python_ref__refs_masked_fill_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_masked_fill_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_masked_fill_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_maximum_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_mean_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_mean_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_meshgrid_list_of_tensors_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_meshgrid_list_of_tensors_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_meshgrid_list_of_tensors_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_meshgrid_list_of_tensors_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_meshgrid_list_of_tensors_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_meshgrid_list_of_tensors_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_meshgrid_list_of_tensors_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_meshgrid_list_of_tensors_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_meshgrid_list_of_tensors_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_meshgrid_variadic_tensors_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_meshgrid_variadic_tensors_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_meshgrid_variadic_tensors_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_meshgrid_variadic_tensors_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_meshgrid_variadic_tensors_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_meshgrid_variadic_tensors_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_meshgrid_variadic_tensors_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_meshgrid_variadic_tensors_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_meshgrid_variadic_tensors_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_minimum_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_movedim_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_movedim_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_movedim_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_movedim_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_movedim_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_movedim_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_movedim_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_movedim_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_movedim_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_movedim_mlu_uint8",
# TODO(PYTORCH-9105): complex is not support.
"test_ops_py_TestCommonMLU_test_python_ref__refs_mul_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nan_to_num_mlu_bfloat16", # TODO(PYTORCH-10157)
# TODO(PYTORCH-9186): bfloat16 is not support.
"test_ops_py_TestCommonMLU_test_python_ref__refs_narrow_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_native_layer_norm_mlu_bfloat16", # TODO(PYTORCH-10252)
"test_ops_py_TestCommonMLU_test_python_ref__refs_native_layer_norm_mlu_float16", # TODO(PYTORCH-10314)
"test_ops_py_TestCommonMLU_test_python_ref__refs_native_layer_norm_mlu_float32", # TODO(PYTORCH-10314)
"test_ops_py_TestCommonMLU_test_python_ref__refs_ne_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_ne_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_neg_mlu_bfloat16",    #dtype not support
"test_ops_py_TestCommonMLU_test_python_ref__refs_neg_mlu_complex32",    #dtype not support
"test_ops_py_TestCommonMLU_test_python_ref__refs_neg_mlu_complex64",    #dtype not support
"test_ops_py_TestCommonMLU_test_python_ref__refs_neg_mlu_int16",    #dtype not support
"test_ops_py_TestCommonMLU_test_python_ref__refs_neg_mlu_int8",    #dtype not support
"test_ops_py_TestCommonMLU_test_python_ref__refs_neg_mlu_uint8",    #dtype not support
"test_ops_py_TestCommonMLU_test_python_ref__refs_new_empty_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_new_empty_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_new_empty_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_new_empty_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_new_empty_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_new_empty_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_new_empty_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_new_empty_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_new_empty_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_new_empty_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_new_full_mlu_bfloat16", # TODO(PYTORCH-8738)
"test_ops_py_TestCommonMLU_test_python_ref__refs_new_full_mlu_complex32", # TODO(PYTORCH-8738)
"test_ops_py_TestCommonMLU_test_python_ref__refs_new_full_mlu_complex64", # TODO(PYTORCH-8738)
"test_ops_py_TestCommonMLU_test_python_ref__refs_new_ones_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_new_ones_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_new_ones_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_new_zeros_mlu_bfloat16", # zeros op does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref__refs_new_zeros_mlu_complex32", # zeros op does not support complex32 on mlu
"test_ops_py_TestCommonMLU_test_python_ref__refs_new_zeros_mlu_complex64", # zeros op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref__refs_nextafter_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nextafter_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_celu_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_celu_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_celu_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_dropout_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_elu_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_gelu_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_gelu_mlu_float16", # accuracy beyond thershold
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_gelu_mlu_float32", # accuracy beyond thershold
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_glu_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_hardshrink_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_hardshrink_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_hardtanh_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_hardtanh_mlu_float16", # [PYTORCH-9208]: [cnnlClip]Parameter min must be less than max
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_hardtanh_mlu_float32", # [PYTORCH-9208]: [cnnlClip]Parameter min must be less than max
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_hinge_embedding_loss_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_hinge_embedding_loss_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_hinge_embedding_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_huber_loss_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_huber_loss_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_huber_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_l1_loss_mlu_bfloat16", # l1_loss op does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_l1_loss_mlu_complex64", # l1_loss op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_layer_norm_mlu_bfloat16", # TODO(PYTORCH-10252)
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_layer_norm_mlu_float16", # TODO(PYTORCH-10314)
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_layer_norm_mlu_float32", # TODO(PYTORCH-10314)
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_leaky_relu_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_margin_ranking_loss_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_margin_ranking_loss_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_margin_ranking_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_margin_ranking_loss_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_margin_ranking_loss_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_margin_ranking_loss_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_margin_ranking_loss_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_mish_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_mish_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_mish_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_pairwise_distance_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_pairwise_distance_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_pairwise_distance_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_pairwise_distance_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_pairwise_distance_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_pairwise_distance_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_pairwise_distance_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_pairwise_distance_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_pdist_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_poisson_nll_loss_mlu_bfloat16", # [PYTORCH-8789] MLU abs don't support tensor dtype BFloat16.
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_poisson_nll_loss_mlu_int16", # [PYTORCH-8789] MLU abs don't support tensor dtype Short.
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_poisson_nll_loss_mlu_int8", # [PYTORCH-8789] MLU abs don't support tensor dtype Char.
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_poisson_nll_loss_mlu_uint8",# [PYTORCH-8789] MLU abs don't support tensor dtype Byte.
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_prelu_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_prelu_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_relu6_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_relu6_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_relu6_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_relu6_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_relu6_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_relu6_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_relu6_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_relu_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_selu_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_softplus_mlu_bfloat16",
# softplus accuracy not pass because precise value compute with double.
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_softplus_mlu_float16", # CNNLCORE-14209
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_softplus_mlu_float32", # CNNLCORE-14209
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_softshrink_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_softshrink_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_softshrink_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_tanhshrink_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_tanhshrink_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_tanhshrink_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_tanhshrink_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_tanhshrink_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_tanhshrink_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_tanhshrink_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_tanhshrink_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_threshold_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_threshold_mlu_float16",  # On MLU300 series, If input is negative infinity, then output is NaN
"test_ops_py_TestCommonMLU_test_python_ref__refs_nn_functional_threshold_mlu_float32",  # On MLU300 series, If input is negative infinity, then output is NaN
"test_ops_py_TestCommonMLU_test_python_ref__refs_norm_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_norm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_norm_mlu_float16", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_ops_py_TestCommonMLU_test_python_ref__refs_norm_mlu_float32", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_ops_py_TestCommonMLU_test_python_ref__refs_ones_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_ones_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_ones_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_positive_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_positive_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_positive_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_positive_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_positive_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_positive_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_positive_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_positive_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_positive_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_pow_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_pow_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_pow_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_pow_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_pow_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_pow_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_pow_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_prod_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_prod_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_prod_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_randn_mlu_bfloat16", # TODO(PYTORCH-10321)
"test_ops_py_TestCommonMLU_test_python_ref__refs_randn_mlu_complex32", # TODO(PYTORCH-10321)
"test_ops_py_TestCommonMLU_test_python_ref__refs_ravel_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_ravel_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_ravel_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_ravel_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_ravel_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_ravel_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_ravel_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_ravel_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_ravel_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_ravel_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_real_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_real_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_real_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_real_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_real_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_real_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_real_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_real_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_real_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_real_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_reciprocal_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_reciprocal_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_remainder_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_reshape_as_mlu_bfloat16", # BFloat16 is not supported by reshape_as on MLU
"test_ops_py_TestCommonMLU_test_python_ref__refs_reshape_mlu_bfloat16", # BFloat16 is not supported by reshape on MLU
"test_ops_py_TestCommonMLU_test_python_ref__refs_roll_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_roll_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_rot90_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_rot90_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_rot90_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_rot90_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_rot90_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_rot90_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_rot90_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_rot90_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_rot90_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_round_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_rsqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu sqrt not support bf16
"test_ops_py_TestCommonMLU_test_python_ref__refs_rsqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref__refs_rsqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
# TODO(PYTORCH-9105): complex is not support.
"test_ops_py_TestCommonMLU_test_python_ref__refs_rsub_mlu_complex64",
# TODO: (CNNLCORE-12770) gpu will promote half to float.
"test_ops_py_TestCommonMLU_test_python_ref__refs_rsub_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sgn_mlu_bfloat16", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref__refs_sgn_mlu_bool", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref__refs_sgn_mlu_complex32", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref__refs_sgn_mlu_complex64", # TODO(PYTORCH-8730): cnnl cast not support complex
"test_ops_py_TestCommonMLU_test_python_ref__refs_sgn_mlu_int16", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref__refs_sgn_mlu_int32", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref__refs_sgn_mlu_int8", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref__refs_sgn_mlu_uint8", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref__refs_sigmoid_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sigmoid_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sigmoid_mlu_uint8", # masked_fill doesn't support uint8.
"test_ops_py_TestCommonMLU_test_python_ref__refs_sign_mlu_bfloat16", # TODO(PYTORCH-8947)
"test_ops_py_TestCommonMLU_test_python_ref__refs_sign_mlu_bool", # TODO(PYTORCH-8947)
"test_ops_py_TestCommonMLU_test_python_ref__refs_sign_mlu_int16", # TODO(PYTORCH-8947)
"test_ops_py_TestCommonMLU_test_python_ref__refs_sign_mlu_int32", # TODO(PYTORCH-8947)
"test_ops_py_TestCommonMLU_test_python_ref__refs_sign_mlu_int8", # TODO(PYTORCH-8947)
"test_ops_py_TestCommonMLU_test_python_ref__refs_sign_mlu_uint8", # TODO(PYTORCH-8947)
"test_ops_py_TestCommonMLU_test_python_ref__refs_signbit_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_signbit_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_signbit_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_signbit_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_signbit_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_signbit_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_signbit_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_signbit_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sin_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sin_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sin_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sin_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sin_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sin_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sin_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sin_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sin_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sin_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sinc_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sinc_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sinc_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sinc_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sinc_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sinc_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sinc_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sinc_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sinc_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sinh_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sinh_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sinh_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sinh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sinh_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sinh_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sinh_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sinh_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sinh_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sinh_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_bessel_j0_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_bessel_j0_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_bessel_j0_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_bessel_j0_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_bessel_j0_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_bessel_j0_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_bessel_j1_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_bessel_j1_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_bessel_j1_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_bessel_j1_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_bessel_j1_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_bessel_j1_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_i0e_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_i0e_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_i0e_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_i0e_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_i0e_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_i0e_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_i0e_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_i0e_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_i1_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_i1_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_i1_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_i1_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_i1_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_i1_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_i1e_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_i1e_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_i1e_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_i1e_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_i1e_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_i1e_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_logit_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_logit_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_logit_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_logit_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_logit_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_logit_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_logit_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_logit_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_multigammaln_mvlgamma_p_1_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_multigammaln_mvlgamma_p_1_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_multigammaln_mvlgamma_p_1_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_multigammaln_mvlgamma_p_1_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_multigammaln_mvlgamma_p_1_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_multigammaln_mvlgamma_p_1_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_multigammaln_mvlgamma_p_3_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_multigammaln_mvlgamma_p_3_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_multigammaln_mvlgamma_p_3_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_multigammaln_mvlgamma_p_3_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_multigammaln_mvlgamma_p_3_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_multigammaln_mvlgamma_p_3_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_multigammaln_mvlgamma_p_5_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_multigammaln_mvlgamma_p_5_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_multigammaln_mvlgamma_p_5_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_multigammaln_mvlgamma_p_5_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_multigammaln_mvlgamma_p_5_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_multigammaln_mvlgamma_p_5_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_spherical_bessel_j0_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_spherical_bessel_j0_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_spherical_bessel_j0_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_spherical_bessel_j0_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_spherical_bessel_j0_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_spherical_bessel_j0_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_zeta_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_zeta_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_zeta_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_zeta_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_zeta_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_special_zeta_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu sqrt not support bf16
"test_ops_py_TestCommonMLU_test_python_ref__refs_sqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref__refs_sqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref__refs_square_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_square_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_square_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_square_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_square_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_square_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_square_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_square_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_square_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_squeeze_mlu_bfloat16", # squeeze op unsupport bf16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref__refs_stack_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_std_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_std_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_std_mean_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_std_mean_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_std_mean_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_std_mean_mlu_float32",
# TODO(PYTORCH-9105): complex is not support.
"test_ops_py_TestCommonMLU_test_python_ref__refs_sub_mlu_complex64",
# TODO: (CNNLCORE-12770) gpu will promote half to float.
"test_ops_py_TestCommonMLU_test_python_ref__refs_sum_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sum_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sum_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sum_to_size_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sum_to_size_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sum_to_size_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sum_to_size_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sum_to_size_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sum_to_size_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sum_to_size_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sum_to_size_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_sum_to_size_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_t_mlu_bfloat16", # t unsupport bf16
"test_ops_py_TestCommonMLU_test_python_ref__refs_tan_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_tan_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_tan_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_tan_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_tan_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_tan_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_tan_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_tan_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_tan_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_tan_mlu_uint8",
# TODO(PYTORCH-10055): tanh not support dtype
"test_ops_py_TestCommonMLU_test_python_ref__refs_tanh_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_tanh_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_tanh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_tanh_mlu_uint8", # masked_fill not support uint8
# TODO(): bfloat16 is not support.
"test_ops_py_TestCommonMLU_test_python_ref__refs_tensor_split_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_to_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_to_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_trace_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_trace_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_trace_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_trace_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_trace_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_trace_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_trace_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_trace_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_trace_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_trace_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_tril_indices_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_triu_indices_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_true_divide_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_true_divide_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_true_divide_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_true_divide_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_true_divide_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_true_divide_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_true_divide_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_true_divide_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_true_divide_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_true_divide_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_trunc_mlu_bfloat16", # TODO(PYTORCH-8724): trunc not support bf16
"test_ops_py_TestCommonMLU_test_python_ref__refs_trunc_mlu_int16", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref__refs_trunc_mlu_int32", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref__refs_trunc_mlu_int8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref__refs_trunc_mlu_uint8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref__refs_unflatten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_unflatten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_unflatten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_unflatten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_unflatten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_unflatten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_unflatten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_unflatten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_unflatten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_unflatten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_unfold_copy_mlu_bfloat16", # unfold op does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref__refs_unfold_copy_mlu_complex32", # unfold op does not support complex32 on mlu
"test_ops_py_TestCommonMLU_test_python_ref__refs_unfold_copy_mlu_complex64", # unfold op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref__refs_unfold_mlu_bfloat16", # unfold op does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref__refs_unfold_mlu_complex32", # unfold op does not support complex32 on mlu
"test_ops_py_TestCommonMLU_test_python_ref__refs_unfold_mlu_complex64", # unfold op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref__refs_unsqueeze_mlu_bfloat16", # unsqueeze op unsupport bf16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref__refs_var_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_var_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_var_mean_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_var_mean_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_var_mean_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_var_mean_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_view_as_mlu_bfloat16", # # BFloat16 is not supported by view_as on MLU
"test_ops_py_TestCommonMLU_test_python_ref__refs_view_mlu_bfloat16", # BFloat16 is not supported by view on MLU
"test_ops_py_TestCommonMLU_test_python_ref__refs_vsplit_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_vsplit_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_vsplit_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_vsplit_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_vsplit_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_vsplit_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_vsplit_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_vsplit_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_vsplit_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_vsplit_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_vstack_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_vstack_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_vstack_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_vstack_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_vstack_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_vstack_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_vstack_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_vstack_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_vstack_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_vstack_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_where_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref__refs_where_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref__refs_where_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref__refs_where_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref__refs_where_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref__refs_zeros_mlu_bfloat16", # zeros op does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref__refs_zeros_mlu_complex32", # zeros op does not support complex32 on mlu
"test_ops_py_TestCommonMLU_test_python_ref__refs_zeros_mlu_complex64", # zeros op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_amin_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_atan2_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_copysign_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_dsplit_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_dstack_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_fliplr_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_flipud_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_float_power_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_fmax_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_fmin_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_gcd_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_heaviside_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_hsplit_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_hstack_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_hypot_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_igamma_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_igammac_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_isclose_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_lcm_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_logspace_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_movedim_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_nextafter_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_nn_functional_hinge_embedding_loss_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_nn_functional_huber_loss_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_nn_functional_margin_ranking_loss_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_nn_functional_prelu_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_nn_functional_softshrink_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_rot90_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_special_zeta_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_sum_to_size_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_trace_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_true_divide_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_vsplit_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_errors__refs_vstack_mlu",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_abs_executor_aten_mlu_bfloat16", # TODO(PYTORCH-8789)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_abs_executor_aten_mlu_bool", # TODO(PYTORCH-8789)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_abs_executor_aten_mlu_complex32", # TODO(PYTORCH-8789)
# TODO(PYTORCH-9217): "fill" not implemented for ComplexFloat
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_abs_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_abs_executor_aten_mlu_int16", # TODO(PYTORCH-8789)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_abs_executor_aten_mlu_int8", # TODO(PYTORCH-8789)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_abs_executor_aten_mlu_uint8", # TODO(PYTORCH-8789)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acos_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acos_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acos_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acos_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acos_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acos_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acos_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acos_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acos_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acos_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acos_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acos_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acos_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acos_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acos_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acos_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acos_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acos_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acos_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acos_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acosh_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acosh_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acosh_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acosh_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acosh_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acosh_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acosh_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acosh_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acosh_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acosh_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acosh_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acosh_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acosh_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acosh_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acosh_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acosh_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acosh_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acosh_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acosh_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_acosh_executor_nvfuser_mlu_uint8",
# TODO(PYTORCH-9105): complex is not support.
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_add_executor_aten_mlu_complex64",
# TODO: (CNNLCORE-12770) gpu will promote half to float.
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_add_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_add_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_add_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_add_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_add_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_add_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_add_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_add_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_add_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_add_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_addcdiv_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_addcdiv_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_addcdiv_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_addcdiv_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_addcdiv_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_addcdiv_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_addr_executor_aten_mlu_bool",  # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Bool.
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_addr_executor_aten_mlu_complex64",  # TODO(PYTORCH-8811): MLU addr don't support tensor dtype ComplexFloat.
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_addr_executor_aten_mlu_float16",  # TODO(PYTORCH-10364): Calculation error when beta=0 and alpha=0.
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_addr_executor_aten_mlu_float32",  # TODO(PYTORCH-10364): Calculation error when beta=0 and alpha=0.
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_addr_executor_aten_mlu_int16",  # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Short.
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_addr_executor_aten_mlu_int32",  # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Int.
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_addr_executor_aten_mlu_int8",  # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Char.
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_addr_executor_aten_mlu_uint8",  # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Byte.
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_addr_executor_nvfuser_mlu_bfloat16",  # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_addr_executor_nvfuser_mlu_bool",  # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_addr_executor_nvfuser_mlu_complex64",  # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_addr_executor_nvfuser_mlu_float16",  # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_addr_executor_nvfuser_mlu_float32",  # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_addr_executor_nvfuser_mlu_int16",  # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_addr_executor_nvfuser_mlu_int32",  # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_addr_executor_nvfuser_mlu_int8",  # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_addr_executor_nvfuser_mlu_uint8",  # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_all_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_all_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_all_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_all_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_allclose_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_allclose_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_allclose_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_allclose_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_allclose_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_allclose_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_allclose_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_allclose_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_amax_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_amax_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_amin_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_amin_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_amin_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_amin_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_amin_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_amin_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_amin_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_amin_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_amin_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_amin_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_amin_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_amin_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_amin_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_amin_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_amin_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_amin_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_any_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_any_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_any_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_any_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_as_strided_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_as_strided_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_as_strided_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_as_strided_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_as_strided_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_as_strided_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_as_strided_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_as_strided_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_as_strided_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_as_strided_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asin_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asin_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asin_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asin_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asin_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asin_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asin_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asin_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asin_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asin_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asin_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asin_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asin_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asin_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asin_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asin_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asin_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asin_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asin_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asin_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asinh_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asinh_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asinh_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asinh_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asinh_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asinh_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asinh_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asinh_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asinh_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asinh_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asinh_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asinh_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asinh_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asinh_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asinh_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asinh_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asinh_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asinh_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asinh_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_asinh_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan2_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan2_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan2_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan2_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan2_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan2_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan2_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan2_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan2_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan2_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan2_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan2_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan2_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan2_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan2_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan2_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atan_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atanh_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atanh_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atanh_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atanh_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atanh_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atanh_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atanh_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atanh_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atanh_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atanh_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atanh_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atanh_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atanh_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atanh_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atanh_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atanh_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atanh_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atanh_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atanh_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atanh_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_1d_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_1d_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_1d_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_1d_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_1d_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_1d_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_1d_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_1d_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_1d_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_1d_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_1d_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_1d_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_1d_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_1d_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_1d_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_1d_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_1d_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_1d_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_1d_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_1d_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_2d_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_2d_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_2d_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_2d_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_2d_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_2d_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_2d_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_2d_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_2d_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_2d_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_2d_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_2d_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_2d_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_2d_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_2d_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_2d_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_2d_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_2d_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_2d_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_2d_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_3d_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_3d_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_3d_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_3d_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_3d_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_3d_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_3d_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_3d_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_3d_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_3d_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_3d_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_3d_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_3d_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_3d_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_3d_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_3d_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_3d_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_3d_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_3d_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_atleast_3d_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_bitwise_and_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_bitwise_and_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_bitwise_and_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_bitwise_and_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_bitwise_and_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_bitwise_left_shift_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_bitwise_left_shift_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_bitwise_left_shift_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_bitwise_left_shift_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_bitwise_not_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_bitwise_not_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_bitwise_not_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_bitwise_not_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_bitwise_not_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_bitwise_or_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_bitwise_or_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_bitwise_or_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_bitwise_or_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_bitwise_or_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_bitwise_xor_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_bitwise_xor_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_bitwise_xor_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_bitwise_xor_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_bitwise_xor_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_shapes_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_shapes_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_tensors_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_tensors_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_tensors_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_tensors_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_tensors_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_tensors_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_tensors_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_tensors_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_tensors_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_tensors_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_tensors_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_tensors_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_tensors_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_tensors_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_tensors_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_tensors_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_tensors_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_tensors_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_to_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_to_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_to_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_to_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_to_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_to_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_to_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_to_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_to_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_to_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_to_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_to_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_to_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_to_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_to_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_to_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_to_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_broadcast_to_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cat_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cat_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cat_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cat_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ceil_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ceil_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ceil_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ceil_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ceil_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clamp_executor_aten_mlu_bfloat16",
# PYTORCH-9208 start
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clamp_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clamp_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clamp_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clamp_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clamp_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clamp_executor_aten_mlu_uint8",
# PYTORCH-9208 end
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clamp_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clamp_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clamp_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clamp_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clamp_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clamp_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clamp_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clamp_max_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clamp_max_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clamp_min_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clamp_min_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clone_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clone_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clone_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clone_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clone_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clone_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clone_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clone_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clone_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clone_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clone_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_clone_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_column_stack_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_column_stack_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_column_stack_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_column_stack_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_column_stack_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_column_stack_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_column_stack_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_column_stack_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_column_stack_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_column_stack_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_column_stack_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_column_stack_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_column_stack_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_column_stack_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_column_stack_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_column_stack_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_column_stack_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_column_stack_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_column_stack_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_column_stack_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_conj_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_conj_executor_aten_mlu_complex64", # TODO(PYTORCH-8738)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_conj_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_conj_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_conj_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_conj_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_conj_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_conj_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_conj_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_conj_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_conj_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_conj_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_conj_physical_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_conj_physical_executor_aten_mlu_complex64", # TODO(PYTORCH-8738)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_conj_physical_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_conj_physical_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_conj_physical_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_conj_physical_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_conj_physical_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_conj_physical_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_conj_physical_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_conj_physical_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_conj_physical_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_conj_physical_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_constant_pad_nd_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_constant_pad_nd_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_constant_pad_nd_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_constant_pad_nd_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_contiguous_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_contiguous_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_contiguous_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_contiguous_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_contiguous_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_contiguous_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_contiguous_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_contiguous_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_contiguous_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_contiguous_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_copysign_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_copysign_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_copysign_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_copysign_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_copysign_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_copysign_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_copysign_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_copysign_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_copysign_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_copysign_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_copysign_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_copysign_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_copysign_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_copysign_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_copysign_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_copysign_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cos_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cos_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cos_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cos_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cos_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cos_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cos_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cos_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cos_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cos_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cos_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cos_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cos_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cos_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cos_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cos_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cos_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cos_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cos_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cos_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cosh_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cosh_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cosh_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cosh_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cosh_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cosh_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cosh_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cosh_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cosh_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cosh_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cosh_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cosh_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cosh_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cosh_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cosh_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cosh_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cosh_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cosh_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cosh_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cosh_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cumsum_executor_aten_mlu_bfloat16", # cumsum op does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cumsum_executor_aten_mlu_complex64", # cumsum op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cumsum_executor_aten_mlu_uint8", # where op does not support uint8 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cumsum_executor_nvfuser_mlu_bfloat16", # cumsum op does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cumsum_executor_nvfuser_mlu_complex64", # cumsum op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_cumsum_executor_nvfuser_mlu_uint8", # where op does not support uint8 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_diag_embed_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_diag_embed_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_diag_embed_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_diag_embed_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_diag_embed_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_diag_embed_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_diag_embed_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_diag_embed_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_diag_embed_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_diag_embed_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_diag_embed_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_diag_embed_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_diag_embed_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_diag_embed_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_diagonal_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_diagonal_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_diagonal_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_diagonal_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_diagonal_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_diagonal_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_diagonal_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_diagonal_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_diagonal_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_diagonal_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_diagonal_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_diagonal_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_digamma_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_digamma_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_digamma_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_digamma_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_digamma_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_digamma_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_digamma_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_digamma_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_digamma_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_digamma_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_digamma_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_digamma_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_digamma_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_digamma_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_floor_rounding_executor_aten_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_floor_rounding_executor_nvfuser_mlu_bfloat16", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_floor_rounding_executor_nvfuser_mlu_float16", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_floor_rounding_executor_nvfuser_mlu_float32", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_floor_rounding_executor_nvfuser_mlu_int16", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_floor_rounding_executor_nvfuser_mlu_int32", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_floor_rounding_executor_nvfuser_mlu_int8", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_floor_rounding_executor_nvfuser_mlu_uint8", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_no_rounding_mode_executor_aten_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_no_rounding_mode_executor_aten_mlu_complex32", # TODO(PYTORCH-8724): div not support complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_no_rounding_mode_executor_aten_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_no_rounding_mode_executor_nvfuser_mlu_bfloat16", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_no_rounding_mode_executor_nvfuser_mlu_bool", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_no_rounding_mode_executor_nvfuser_mlu_complex32", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_no_rounding_mode_executor_nvfuser_mlu_complex64", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_no_rounding_mode_executor_nvfuser_mlu_float16", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_no_rounding_mode_executor_nvfuser_mlu_float32", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_no_rounding_mode_executor_nvfuser_mlu_int16", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_no_rounding_mode_executor_nvfuser_mlu_int32", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_no_rounding_mode_executor_nvfuser_mlu_int8", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_no_rounding_mode_executor_nvfuser_mlu_uint8", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_trunc_rounding_executor_aten_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_trunc_rounding_executor_aten_mlu_float16", # TODO(CNNLCORE-2677): div precision problem on 370 platform
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_trunc_rounding_executor_nvfuser_mlu_bfloat16", # TODO(PYTORCH-5783): nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_trunc_rounding_executor_nvfuser_mlu_float16", # TODO(PYTORCH-5783): nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_trunc_rounding_executor_nvfuser_mlu_float32", # TODO(PYTORCH-5783): nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_trunc_rounding_executor_nvfuser_mlu_int16", # TODO(PYTORCH-5783): nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_trunc_rounding_executor_nvfuser_mlu_int32", # TODO(PYTORCH-5783): nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_trunc_rounding_executor_nvfuser_mlu_int8", # TODO(PYTORCH-5783): nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_div_trunc_rounding_executor_nvfuser_mlu_uint8", # TODO(PYTORCH-5783): nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dsplit_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dsplit_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dsplit_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dsplit_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dsplit_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dsplit_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dsplit_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dsplit_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dsplit_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dsplit_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dsplit_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dsplit_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dsplit_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dsplit_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dsplit_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dsplit_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dsplit_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dsplit_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dsplit_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dsplit_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dstack_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dstack_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dstack_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dstack_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dstack_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dstack_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dstack_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dstack_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dstack_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dstack_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dstack_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dstack_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dstack_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dstack_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dstack_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dstack_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dstack_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dstack_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dstack_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_dstack_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_like_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_like_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_like_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_like_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_like_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_like_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_like_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_like_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_like_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_like_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_like_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_like_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_like_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_like_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_like_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_like_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_like_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_like_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_like_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_empty_like_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_eq_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_eq_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_eq_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_eq_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_eq_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_eq_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_eq_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_eq_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_eq_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_eq_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_eq_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_eq_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_eq_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_erf_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_erf_executor_aten_mlu_float16", # input is inf/-inf, output is 1/-1.
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_erf_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_erfc_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_erfc_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_erfc_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_erfc_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_erfc_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_erfc_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_erfc_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_erfc_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_erfc_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_erfc_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_erfc_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_erfc_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_erfc_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_erfc_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_erfc_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_erfc_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_erfinv_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_erfinv_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_erfinv_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_erfinv_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_erfinv_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_erfinv_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_erfinv_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp2_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp2_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp2_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp2_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp2_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp2_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp2_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp2_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp2_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp2_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp2_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp2_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp2_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp2_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp2_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp2_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_exp_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_expand_as_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_expand_as_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_expand_as_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_expand_as_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_expand_as_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_expand_as_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_expand_as_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_expand_as_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_expand_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_expand_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_expand_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_expand_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_expand_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_expand_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_expand_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_expand_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_expm1_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_expm1_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_expm1_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_expm1_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_expm1_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_expm1_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_expm1_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_expm1_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_expm1_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_eye_executor_aten_mlu_complex64",  # TODO(PYTORCH-8910): MLU eye don't support tensor dtype ComplexFloat.
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_eye_executor_aten_mlu_uint8",  # TODO(PYTORCH-10149): where op uint8 dtype problem.
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_eye_executor_nvfuser_mlu_bfloat16",  # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_eye_executor_nvfuser_mlu_bool",  # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_eye_executor_nvfuser_mlu_complex64",  # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_eye_executor_nvfuser_mlu_float16",  # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_eye_executor_nvfuser_mlu_float32",  # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_eye_executor_nvfuser_mlu_int16",  # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_eye_executor_nvfuser_mlu_int32",  # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_eye_executor_nvfuser_mlu_int8",  # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_eye_executor_nvfuser_mlu_uint8",  # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft2_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft2_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft2_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft2_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft2_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft2_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft2_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft2_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft2_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft2_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft2_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft2_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft2_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft2_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft2_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft2_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft2_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft2_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fft_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftn_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftn_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftn_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftn_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftn_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftn_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftn_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftn_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftn_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftn_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftn_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftn_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftn_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftn_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftn_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftn_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftn_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftn_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftshift_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftshift_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftshift_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftshift_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftshift_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftshift_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftshift_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftshift_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftshift_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftshift_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftshift_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftshift_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftshift_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftshift_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftshift_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftshift_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftshift_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftshift_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftshift_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_fftshift_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft2_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft2_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft2_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft2_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft2_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft2_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft2_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft2_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft2_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft2_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft2_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft2_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft2_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft2_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft2_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft2_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft2_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft2_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfft_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfftn_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfftn_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfftn_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfftn_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfftn_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfftn_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfftn_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfftn_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfftn_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfftn_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfftn_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfftn_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfftn_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfftn_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfftn_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfftn_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfftn_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_hfftn_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft2_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft2_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft2_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft2_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft2_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft2_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft2_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft2_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft2_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft2_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft2_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft2_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft2_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft2_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft2_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft2_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft2_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft2_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifft_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftn_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftn_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftn_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftn_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftn_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftn_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftn_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftn_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftn_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftn_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftn_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftn_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftn_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftn_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftn_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftn_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftn_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftn_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftshift_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftshift_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftshift_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftshift_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftshift_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftshift_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftshift_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftshift_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftshift_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftshift_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftshift_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftshift_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftshift_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftshift_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftshift_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftshift_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftshift_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftshift_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftshift_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ifftshift_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft2_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft2_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft2_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft2_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft2_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft2_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft2_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft2_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft2_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft2_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft2_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft2_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft2_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft2_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfft_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfftn_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfftn_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfftn_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfftn_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfftn_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfftn_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfftn_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfftn_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfftn_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfftn_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfftn_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfftn_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfftn_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_ihfftn_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft2_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft2_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft2_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft2_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft2_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft2_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft2_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft2_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft2_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft2_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft2_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft2_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft2_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft2_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft2_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft2_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft2_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft2_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfft_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfftn_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfftn_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfftn_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfftn_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfftn_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfftn_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfftn_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfftn_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfftn_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfftn_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfftn_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfftn_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfftn_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfftn_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfftn_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfftn_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfftn_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_irfftn_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft2_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft2_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft2_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft2_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft2_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft2_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft2_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft2_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft2_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft2_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft2_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft2_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft2_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft2_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfft_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfftn_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfftn_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfftn_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfftn_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfftn_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfftn_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfftn_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfftn_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfftn_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfftn_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfftn_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfftn_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfftn_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fft_rfftn_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fill_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fill_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fill_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fill_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fill_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fill_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fill_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fill_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fill_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fill_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fill_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fill_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fill_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flatten_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flatten_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flatten_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flatten_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flatten_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flatten_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flatten_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flatten_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flatten_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flatten_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flatten_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flatten_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flatten_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flatten_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flatten_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flatten_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flatten_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flatten_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flatten_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flatten_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flip_executor_aten_mlu_bfloat16", # TODO(PYTORCH-8802): flip not support bf16
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flip_executor_aten_mlu_complex64", # TODO(PYTORCH-8802): flip not support complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flip_executor_nvfuser_mlu_bfloat16", # nvfuser is not supported
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flip_executor_nvfuser_mlu_bool", # nvfuser is not supported
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flip_executor_nvfuser_mlu_complex64", # nvfuser is not supported
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flip_executor_nvfuser_mlu_float16", # nvfuser is not supported
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flip_executor_nvfuser_mlu_float32", # nvfuser is not supported
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flip_executor_nvfuser_mlu_int16", # nvfuser is not supported
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flip_executor_nvfuser_mlu_int32", # nvfuser is not supported
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flip_executor_nvfuser_mlu_int8", # nvfuser is not supported
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flip_executor_nvfuser_mlu_uint8", # nvfuser is not supported
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fliplr_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fliplr_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fliplr_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fliplr_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fliplr_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fliplr_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fliplr_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fliplr_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fliplr_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fliplr_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fliplr_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fliplr_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fliplr_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fliplr_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fliplr_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fliplr_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fliplr_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fliplr_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flipud_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flipud_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flipud_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flipud_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flipud_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flipud_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flipud_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flipud_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flipud_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flipud_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flipud_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flipud_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flipud_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flipud_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flipud_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flipud_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flipud_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_flipud_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_float_power_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_float_power_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_float_power_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_float_power_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_float_power_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_float_power_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_float_power_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_float_power_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_float_power_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_float_power_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_float_power_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_float_power_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_float_power_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_float_power_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_float_power_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_float_power_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_float_power_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_float_power_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_floor_divide_executor_aten_mlu_bfloat16", # TODO(PYTORCH-8724): floor divide not support bf16
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_floor_divide_executor_aten_mlu_float16", # CNNLCORE-2667 div have precision problem on 370 platform
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_floor_divide_executor_nvfuser_mlu_bfloat16", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_floor_divide_executor_nvfuser_mlu_float16", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_floor_divide_executor_nvfuser_mlu_float32", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_floor_divide_executor_nvfuser_mlu_int16", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_floor_divide_executor_nvfuser_mlu_int32", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_floor_divide_executor_nvfuser_mlu_int8", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_floor_divide_executor_nvfuser_mlu_uint8", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_floor_executor_aten_mlu_bfloat16", # TODO(PYTORCH-8724): floor not support bf16
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_floor_executor_aten_mlu_int16", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_floor_executor_aten_mlu_int32", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_floor_executor_aten_mlu_int8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_floor_executor_aten_mlu_uint8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_floor_executor_nvfuser_mlu_bfloat16", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_floor_executor_nvfuser_mlu_float16", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_floor_executor_nvfuser_mlu_float32", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_floor_executor_nvfuser_mlu_int16", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_floor_executor_nvfuser_mlu_int32", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_floor_executor_nvfuser_mlu_int8", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_floor_executor_nvfuser_mlu_uint8", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmax_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmax_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmax_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmax_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmax_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmax_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmax_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmax_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmax_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmax_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmax_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmax_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmax_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmax_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmax_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmax_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmin_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmin_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmin_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmin_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmin_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmin_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmin_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmin_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmin_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmin_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmin_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmin_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmin_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmin_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmin_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_fmin_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_frac_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_frac_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_gcd_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_gcd_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_gcd_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_gcd_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_gcd_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_gcd_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_gcd_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_gcd_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ge_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ge_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ge_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ge_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ge_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ge_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ge_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ge_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ge_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_gt_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_gt_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_gt_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_gt_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_gt_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_gt_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_gt_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_gt_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_gt_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_heaviside_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_heaviside_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_heaviside_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_heaviside_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_heaviside_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_heaviside_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_heaviside_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_heaviside_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_heaviside_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_heaviside_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_heaviside_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_heaviside_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_heaviside_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_heaviside_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_heaviside_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_heaviside_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hsplit_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hsplit_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hsplit_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hsplit_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hsplit_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hsplit_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hsplit_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hsplit_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hsplit_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hsplit_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hsplit_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hsplit_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hsplit_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hsplit_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hsplit_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hsplit_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hsplit_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hsplit_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hsplit_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hsplit_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hstack_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hstack_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hstack_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hstack_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hstack_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hstack_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hstack_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hstack_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hstack_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hstack_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hstack_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hstack_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hstack_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hstack_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hstack_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hstack_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hstack_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hstack_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hstack_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hstack_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hypot_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hypot_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hypot_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hypot_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hypot_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_hypot_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_i0_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_i0_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_i0_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_i0_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_i0_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_i0_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_i0_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_i0_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_i0_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_i0_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_i0_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_i0_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_i0_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_i0_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_i0_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_i0_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_igamma_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_igamma_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_igammac_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_igammac_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_imag_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_imag_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_imag_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_imag_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_add_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_add_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_add_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_add_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_add_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_add_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_add_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_add_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_add_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_add_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_add_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_add_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_add_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_add_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_add_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_add_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_copy_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_copy_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_copy_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_copy_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_fill_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_fill_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_fill_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_fill_executor_nvfuser_mlu_complex64",
# TODO(PYTORCH-9186): bfloat16 and complex64 is not support. Depends on aten.index too.
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_select_executor_aten_mlu_complex64",
# TODO(PYTORCH-9186): index select mlu is not support bfloat16 and complex64.
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_select_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_select_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_select_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_select_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_select_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_select_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_select_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_select_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_select_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_index_select_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isclose_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isclose_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isclose_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isclose_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isclose_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isclose_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isclose_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isclose_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isclose_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isclose_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isclose_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isclose_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isclose_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isclose_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isclose_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isclose_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isclose_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isclose_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isfinite_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isfinite_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isinf_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isinf_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isinf_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isinf_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isinf_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isinf_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isinf_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isinf_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isinf_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isinf_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isinf_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isinf_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isinf_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isinf_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isinf_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isinf_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isinf_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isinf_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isinf_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isinf_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isnan_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isnan_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isnan_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isnan_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isnan_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isnan_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isnan_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isnan_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isnan_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isnan_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isnan_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isneginf_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isneginf_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isneginf_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isneginf_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isneginf_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isneginf_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isneginf_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isneginf_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isneginf_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isneginf_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isneginf_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isneginf_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isneginf_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isneginf_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isneginf_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isneginf_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isposinf_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isposinf_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isposinf_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isposinf_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isposinf_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isposinf_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isposinf_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isposinf_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isposinf_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isposinf_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isposinf_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isposinf_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isposinf_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isposinf_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isposinf_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isposinf_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isreal_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isreal_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isreal_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isreal_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isreal_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isreal_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isreal_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isreal_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isreal_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isreal_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isreal_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isreal_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isreal_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isreal_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isreal_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isreal_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isreal_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isreal_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isreal_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_isreal_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lcm_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lcm_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lcm_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lcm_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lcm_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lcm_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lcm_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lcm_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_le_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_le_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_le_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_le_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_le_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_le_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_le_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_le_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_le_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lgamma_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lgamma_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lgamma_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lgamma_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lgamma_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lgamma_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lgamma_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lgamma_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lgamma_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lgamma_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lgamma_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lgamma_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lgamma_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lgamma_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_matrix_norm_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_matrix_norm_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_matrix_norm_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_matrix_norm_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_matrix_norm_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_matrix_norm_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_matrix_norm_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_matrix_norm_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_norm_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_norm_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_norm_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_norm_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_norm_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_norm_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_norm_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_norm_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_svd_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_svd_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_svdvals_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_svdvals_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_svdvals_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_svdvals_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_vector_norm_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_vector_norm_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_vector_norm_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_vector_norm_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_vector_norm_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_vector_norm_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_vector_norm_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linalg_vector_norm_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linspace_executor_aten_mlu_complex64", #TODO(PYTORCH-8738): mlu full not support complex64.
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linspace_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linspace_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linspace_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linspace_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linspace_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linspace_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linspace_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linspace_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linspace_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linspace_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_linspace_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log10_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log10_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log10_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log10_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log10_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log10_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log10_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log10_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log10_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log10_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log10_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log10_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log1p_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log1p_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log1p_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log1p_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log1p_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log1p_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log1p_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log1p_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log1p_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log2_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log2_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log2_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log2_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log2_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log2_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log2_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log2_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log2_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log2_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log2_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log2_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log_softmax_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_log_softmax_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logical_and_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logical_and_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logical_and_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logical_and_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logical_not_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logical_not_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logical_not_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logical_not_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logical_or_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logical_or_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logical_or_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logical_or_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logical_xor_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logical_xor_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logical_xor_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logical_xor_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logspace_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logspace_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logspace_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logspace_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logspace_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logspace_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logspace_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logspace_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logspace_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logspace_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logspace_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logspace_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logspace_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logspace_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logspace_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logspace_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logsumexp_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logsumexp_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logsumexp_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logsumexp_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logsumexp_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logsumexp_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logsumexp_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logsumexp_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logsumexp_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logsumexp_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logsumexp_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logsumexp_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logsumexp_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logsumexp_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logsumexp_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_logsumexp_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lt_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lt_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lt_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lt_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lt_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lt_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lt_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lt_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_lt_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_masked_fill_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_masked_fill_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_masked_fill_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_masked_fill_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_masked_fill_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_masked_fill_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_masked_fill_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_masked_fill_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_maximum_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_maximum_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_mean_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_mean_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_mean_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_mean_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_minimum_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_minimum_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_movedim_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_movedim_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_movedim_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_movedim_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_movedim_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_movedim_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_movedim_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_movedim_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_movedim_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_movedim_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_movedim_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_movedim_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_movedim_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_movedim_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_movedim_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_movedim_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_movedim_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_movedim_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_movedim_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_movedim_executor_nvfuser_mlu_uint8",
# TODO(PYTORCH-9105): complex is not support.
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_mul_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_mul_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_mul_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_mul_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_mul_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_mul_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_mul_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_mul_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_mul_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_mul_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_mul_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_mul_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nan_to_num_executor_aten_mlu_bfloat16", # TODO(PYTORCH-10157)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nan_to_num_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nan_to_num_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nan_to_num_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nan_to_num_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nan_to_num_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nan_to_num_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nan_to_num_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nan_to_num_executor_nvfuser_mlu_uint8",
# TODO(PYTORCH-9186): bfloat16 is not support.
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_narrow_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_narrow_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_narrow_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_narrow_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_narrow_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_narrow_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_narrow_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_narrow_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_narrow_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_narrow_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_narrow_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_native_layer_norm_executor_aten_mlu_bfloat16", # TODO(PYTORCH-10252)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_native_layer_norm_executor_aten_mlu_float16", # TODO(PYTORCH-10314)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_native_layer_norm_executor_aten_mlu_float32", # TODO(PYTORCH-10314)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_native_layer_norm_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_native_layer_norm_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_native_layer_norm_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ne_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ne_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ne_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ne_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ne_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ne_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ne_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ne_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ne_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ne_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ne_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_neg_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_neg_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_neg_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_neg_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_neg_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_neg_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_neg_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_neg_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_neg_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_neg_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_neg_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_neg_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_neg_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_neg_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_neg_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_empty_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_empty_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_empty_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_empty_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_empty_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_empty_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_empty_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_empty_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_empty_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_empty_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_empty_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_empty_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_empty_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_empty_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_empty_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_empty_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_empty_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_empty_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_empty_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_empty_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_full_executor_aten_mlu_bfloat16", # TODO(PYTORCH-8738)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_full_executor_aten_mlu_complex32", # TODO(PYTORCH-8738)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_full_executor_aten_mlu_complex64", # TODO(PYTORCH-8738)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_full_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_full_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_full_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_full_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_full_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_full_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_full_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_full_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_full_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_full_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_ones_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_ones_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_ones_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_ones_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_ones_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_ones_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_ones_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_ones_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_ones_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_ones_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_ones_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_ones_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_ones_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_zeros_executor_aten_mlu_bfloat16", # zeros does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_zeros_executor_aten_mlu_complex32", # zeros does not support complex32 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_zeros_executor_aten_mlu_complex64", # zeros does not support complec64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_zeros_executor_nvfuser_mlu_bfloat16", # zeros does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_zeros_executor_nvfuser_mlu_complex32", # zeros does not support complex32 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_new_zeros_executor_nvfuser_mlu_complex64", # zeros does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nextafter_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nextafter_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nextafter_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nextafter_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_celu_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_celu_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_celu_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_celu_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_celu_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_celu_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_dropout_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_dropout_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_elu_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_elu_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_gelu_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_gelu_executor_aten_mlu_float16", # accuracy beyond thershold
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_gelu_executor_aten_mlu_float32", # accuracy beyond thershold
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_gelu_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_glu_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_glu_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_hardshrink_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_hardshrink_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_hardshrink_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_hardshrink_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_hardshrink_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_hardshrink_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_hardtanh_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_hardtanh_executor_aten_mlu_float16", # [PYTORCH-9208]: [cnnlClip]Parameter min must be less than max
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_hardtanh_executor_aten_mlu_float32", # [PYTORCH-9208]: [cnnlClip]Parameter min must be less than max
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_hardtanh_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_hinge_embedding_loss_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_hinge_embedding_loss_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_hinge_embedding_loss_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_hinge_embedding_loss_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_hinge_embedding_loss_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_hinge_embedding_loss_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_huber_loss_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_huber_loss_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_huber_loss_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_huber_loss_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_huber_loss_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_huber_loss_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_l1_loss_executor_aten_mlu_bfloat16", # l1_loss op does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_l1_loss_executor_aten_mlu_complex64", # l1_loss op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_l1_loss_executor_nvfuser_mlu_bfloat16", # l1_loss op does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_l1_loss_executor_nvfuser_mlu_complex64", # l1_loss op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_layer_norm_executor_aten_mlu_bfloat16", # TODO(PYTORCH-10252)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_layer_norm_executor_aten_mlu_float16", # TODO(PYTORCH-10314)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_layer_norm_executor_aten_mlu_float32", # TODO(PYTORCH-10314)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_layer_norm_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_layer_norm_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_layer_norm_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_leaky_relu_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_leaky_relu_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_mish_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_mish_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_mish_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_mish_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_mish_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_mish_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_pdist_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_pdist_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_poisson_nll_loss_executor_aten_mlu_bfloat16", # [PYTORCH-8789] MLU abs don't support tensor dtype BFloat16.

"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_poisson_nll_loss_executor_aten_mlu_int16", # [PYTORCH-8789] MLU abs don't support tensor dtype Short.

"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_poisson_nll_loss_executor_aten_mlu_int8", # [PYTORCH-8789] MLU abs don't support tensor dtype Char.

"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_poisson_nll_loss_executor_aten_mlu_uint8", # [PYTORCH-8789] MLU abs don't support tensor dtype Byte.

"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_prelu_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_prelu_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_prelu_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_prelu_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_relu6_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_relu6_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_relu6_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_relu6_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_relu6_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_relu6_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_relu6_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_relu6_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_relu6_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_relu6_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_relu6_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_relu6_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_relu6_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_relu6_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_relu_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_relu_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_selu_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_selu_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_softplus_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_softplus_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_softplus_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_softplus_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_softshrink_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_softshrink_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_softshrink_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_softshrink_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_softshrink_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_softshrink_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_tanhshrink_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_tanhshrink_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_tanhshrink_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_tanhshrink_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_tanhshrink_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_tanhshrink_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_tanhshrink_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_tanhshrink_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_tanhshrink_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_tanhshrink_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_tanhshrink_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_tanhshrink_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_tanhshrink_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_tanhshrink_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_tanhshrink_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_tanhshrink_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_threshold_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_threshold_executor_aten_mlu_float16", # On MLU300 series, If input is negative infinity, then output is NaN
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_threshold_executor_aten_mlu_float32", # On MLU300 series, If input is negative infinity, then output is NaN
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_nn_functional_threshold_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_norm_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_norm_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_norm_executor_aten_mlu_float16", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_norm_executor_aten_mlu_float32", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_norm_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_norm_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_norm_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_norm_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ones_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ones_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ones_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ones_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ones_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ones_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ones_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ones_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ones_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ones_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ones_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ones_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ones_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_permute_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_permute_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_permute_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_permute_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_permute_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_permute_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_permute_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_permute_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_permute_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_permute_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_positive_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_positive_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_positive_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_positive_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_positive_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_positive_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_positive_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_positive_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_positive_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_positive_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_positive_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_positive_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_positive_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_positive_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_positive_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_positive_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_positive_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_positive_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_pow_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_pow_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_pow_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_pow_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_pow_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_pow_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_pow_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_pow_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_pow_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_pow_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_pow_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_pow_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_pow_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_pow_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_pow_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_pow_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_prod_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_prod_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_prod_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_prod_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_prod_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_prod_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ravel_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ravel_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ravel_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ravel_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ravel_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ravel_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ravel_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ravel_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ravel_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ravel_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ravel_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ravel_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ravel_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ravel_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ravel_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ravel_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ravel_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ravel_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ravel_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_ravel_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_real_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_real_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_real_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_real_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_real_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_real_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_real_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_real_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_real_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_real_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_real_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_real_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_real_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_real_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_real_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_real_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_real_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_real_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_real_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_real_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_reciprocal_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_reciprocal_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_reciprocal_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_reciprocal_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_reciprocal_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_reciprocal_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_reciprocal_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_reciprocal_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_reciprocal_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_reciprocal_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_reciprocal_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_remainder_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_remainder_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_remainder_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_remainder_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_remainder_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_remainder_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_remainder_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_remainder_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_repeat_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_repeat_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_repeat_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_repeat_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_repeat_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_repeat_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_repeat_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_repeat_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_reshape_as_executor_aten_mlu_bfloat16", # BFloat16 is not supported by reshape_as on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_reshape_as_executor_nvfuser_mlu_bfloat16", # BFloat16 is not supported by reshape_as on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_reshape_executor_aten_mlu_bfloat16", # BFloat16 is not supported by reshapeon MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_reshape_executor_nvfuser_mlu_bfloat16", # BFloat16 is not supported by reshape on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_roll_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_roll_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_roll_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_roll_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_roll_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_roll_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_roll_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_roll_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_roll_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_roll_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_roll_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_roll_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rot90_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rot90_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rot90_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rot90_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rot90_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rot90_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rot90_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rot90_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rot90_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rot90_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rot90_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rot90_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rot90_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rot90_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rot90_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rot90_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rot90_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rot90_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_round_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_round_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_round_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_round_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_round_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_round_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_round_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_round_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rsqrt_executor_aten_mlu_bfloat16", # TODO(PYTORCH-8966): mlu rsqrt not support bf16
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rsqrt_executor_aten_mlu_complex32", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rsqrt_executor_aten_mlu_complex64", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rsqrt_executor_nvfuser_mlu_bfloat16", # TODO(PYTORCH-8966): mlu rsqrt not support bf16
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rsqrt_executor_nvfuser_mlu_complex32", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rsqrt_executor_nvfuser_mlu_complex64", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
# TODO(PYTORCH-9105): complex is not support.
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rsub_executor_aten_mlu_complex64",
# TODO: (CNNLCORE-12770) gpu will promote half to float.
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rsub_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rsub_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rsub_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rsub_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rsub_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rsub_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rsub_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rsub_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_rsub_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sgn_executor_aten_mlu_bfloat16", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sgn_executor_aten_mlu_bool", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sgn_executor_aten_mlu_complex32", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sgn_executor_aten_mlu_complex64", # TODO(PYTORCH-8730): cnnl cast not support complex
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sgn_executor_aten_mlu_int16", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sgn_executor_aten_mlu_int32", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sgn_executor_aten_mlu_int8", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sgn_executor_aten_mlu_uint8", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sigmoid_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sigmoid_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sigmoid_executor_aten_mlu_uint8", # masked_fill doesn't support uint8.
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sigmoid_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sigmoid_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sign_executor_aten_mlu_bfloat16", # TODO(PYTORCH-8947)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sign_executor_aten_mlu_bool", # TODO(PYTORCH-8947)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sign_executor_aten_mlu_int16", # TODO(PYTORCH-8947)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sign_executor_aten_mlu_int32", # TODO(PYTORCH-8947)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sign_executor_aten_mlu_int8", # TODO(PYTORCH-8947)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sign_executor_aten_mlu_uint8", # TODO(PYTORCH-8947)
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_signbit_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_signbit_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_signbit_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_signbit_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_signbit_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_signbit_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_signbit_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_signbit_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_signbit_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_signbit_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_signbit_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_signbit_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_signbit_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_signbit_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_signbit_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_signbit_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sin_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sin_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sin_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sin_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sin_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sin_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sin_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sin_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sin_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sin_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sin_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sin_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sin_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sin_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sin_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sin_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sin_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sin_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sin_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sin_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinc_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinc_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinc_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinc_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinc_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinc_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinc_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinc_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinc_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinc_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinc_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinc_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinc_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinc_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinc_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinc_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinc_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinc_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinh_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinh_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinh_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinh_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinh_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinh_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinh_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinh_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinh_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinh_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinh_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinh_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinh_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinh_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinh_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinh_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinh_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinh_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinh_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sinh_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_softmax_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_softmax_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_bessel_j0_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_bessel_j0_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_bessel_j0_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_bessel_j0_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_bessel_j0_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_bessel_j0_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_bessel_j0_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_bessel_j0_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_bessel_j0_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_bessel_j0_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_bessel_j0_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_bessel_j0_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_bessel_j1_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_bessel_j1_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_bessel_j1_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_bessel_j1_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_bessel_j1_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_bessel_j1_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_bessel_j1_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_bessel_j1_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_bessel_j1_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_bessel_j1_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_bessel_j1_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_bessel_j1_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i0e_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i0e_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i0e_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i0e_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i0e_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i0e_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i0e_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i0e_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i0e_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i0e_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i0e_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i0e_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i0e_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i0e_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i0e_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i0e_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i1_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i1_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i1_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i1_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i1_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i1_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i1_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i1_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i1_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i1_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i1_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i1_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i1e_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i1e_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i1e_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i1e_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i1e_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i1e_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i1e_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i1e_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i1e_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i1e_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i1e_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_i1e_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_logit_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_logit_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_logit_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_logit_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_logit_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_logit_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_logit_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_logit_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_logit_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_logit_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_logit_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_logit_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_logit_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_logit_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_logit_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_logit_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_spherical_bessel_j0_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_spherical_bessel_j0_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_spherical_bessel_j0_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_spherical_bessel_j0_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_spherical_bessel_j0_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_spherical_bessel_j0_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_spherical_bessel_j0_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_spherical_bessel_j0_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_spherical_bessel_j0_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_spherical_bessel_j0_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_spherical_bessel_j0_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_spherical_bessel_j0_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_zeta_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_zeta_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_zeta_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_zeta_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_zeta_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_zeta_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_zeta_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_zeta_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_zeta_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_zeta_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_zeta_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_special_zeta_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sqrt_executor_aten_mlu_bfloat16", # TODO(PYTORCH-8966): mlu sqrt not support bf16
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sqrt_executor_aten_mlu_complex32", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sqrt_executor_aten_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sqrt_executor_nvfuser_mlu_bfloat16", # TODO(PYTORCH-8966): mlu sqrt not support bf16
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sqrt_executor_nvfuser_mlu_complex32", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sqrt_executor_nvfuser_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_square_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_square_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_square_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_square_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_square_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_square_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_square_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_square_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_square_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_square_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_square_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_square_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_square_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_square_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_square_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_square_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_square_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_square_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_squeeze_executor_aten_mlu_bfloat16", # unsqueeze op unsupport bf16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_stack_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_stack_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_std_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_std_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_std_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_std_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_std_mean_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_std_mean_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_std_mean_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_std_mean_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_std_mean_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_std_mean_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_std_mean_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_std_mean_executor_nvfuser_mlu_float32",
# TODO(PYTORCH-9105): complex is not support.
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sub_executor_aten_mlu_complex64",
# TODO: (CNNLCORE-12770) gpu will promote half to float.
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sub_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sub_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sub_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sub_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sub_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sub_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sub_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sub_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sub_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_to_size_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_to_size_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_to_size_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_to_size_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_to_size_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_to_size_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_to_size_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_to_size_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_to_size_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_to_size_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_to_size_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_to_size_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_to_size_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_to_size_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_to_size_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_to_size_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_to_size_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_sum_to_size_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_t_executor_aten_mlu_bfloat16", # t unsupport bf16
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tan_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tan_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tan_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tan_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tan_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tan_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tan_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tan_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tan_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tan_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tan_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tan_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tan_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tan_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tan_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tan_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tan_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tan_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tan_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tan_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tanh_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tanh_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tanh_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tanh_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tanh_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tanh_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tanh_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tanh_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tanh_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tanh_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tanh_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tanh_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tanh_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tanh_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tensor_split_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tensor_split_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tensor_split_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tensor_split_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tensor_split_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tensor_split_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tensor_split_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tensor_split_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tensor_split_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_to_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_to_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_to_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_to_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_to_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_to_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_to_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_to_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_to_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_to_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_to_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trace_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trace_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trace_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trace_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trace_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trace_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trace_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trace_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trace_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trace_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trace_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trace_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trace_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trace_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trace_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trace_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trace_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trace_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trace_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trace_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_transpose_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_transpose_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_transpose_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_transpose_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_transpose_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_transpose_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_transpose_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_transpose_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_transpose_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_transpose_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_transpose_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tril_indices_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_tril_indices_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_triu_indices_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_triu_indices_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_true_divide_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_true_divide_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_true_divide_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_true_divide_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_true_divide_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_true_divide_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_true_divide_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_true_divide_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_true_divide_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_true_divide_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_true_divide_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_true_divide_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_true_divide_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_true_divide_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_true_divide_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_true_divide_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_true_divide_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_true_divide_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_true_divide_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_true_divide_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trunc_executor_aten_mlu_bfloat16", # TODO(PYTORCH-8724): trunc not support bf16
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trunc_executor_nvfuser_mlu_bfloat16", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trunc_executor_nvfuser_mlu_float16", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trunc_executor_nvfuser_mlu_float32", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trunc_executor_nvfuser_mlu_int16", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trunc_executor_nvfuser_mlu_int32", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trunc_executor_nvfuser_mlu_int8", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_trunc_executor_nvfuser_mlu_uint8", # nvfuser is not supported on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unbind_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unbind_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unbind_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unbind_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unbind_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unbind_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unbind_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unbind_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unbind_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unbind_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unflatten_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unflatten_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unflatten_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unflatten_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unflatten_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unflatten_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unflatten_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unflatten_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unflatten_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unflatten_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unflatten_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unflatten_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unflatten_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unflatten_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unflatten_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unflatten_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unflatten_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unflatten_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unflatten_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unflatten_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unfold_copy_executor_aten_mlu_bfloat16", # unfold op does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unfold_copy_executor_aten_mlu_complex32", # unfold op does not support complex32 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unfold_copy_executor_aten_mlu_complex64", # unfold op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unfold_copy_executor_nvfuser_mlu_bfloat16", # unfold op does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unfold_copy_executor_nvfuser_mlu_complex32", # unfold op does not support complex32 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unfold_copy_executor_nvfuser_mlu_complex64", # unfold op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unfold_executor_aten_mlu_bfloat16", # unfold op does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unfold_executor_aten_mlu_complex32", # unfold op does not support complex32 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unfold_executor_aten_mlu_complex64", # unfold op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unfold_executor_nvfuser_mlu_bfloat16", # unfold op does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unfold_executor_nvfuser_mlu_complex32", # unfold op does not support complex32 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unfold_executor_nvfuser_mlu_complex64", # unfold op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_unsqueeze_executor_aten_mlu_bfloat16",# unsqueeze op unsupport bf16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_var_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_var_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_var_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_var_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_var_mean_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_var_mean_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_var_mean_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_var_mean_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_var_mean_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_var_mean_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_var_mean_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_var_mean_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_view_as_executor_aten_mlu_bfloat16", # BFloat16 is not supported bu view on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_view_as_executor_nvfuser_mlu_bfloat16", # BFloat16 is not supported bu view on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_view_executor_aten_mlu_bfloat16", # BFloat16 is not supported bu view on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_view_executor_nvfuser_mlu_bfloat16", # BFloat16 is not supported bu view on MLU
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vsplit_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vsplit_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vsplit_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vsplit_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vsplit_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vsplit_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vsplit_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vsplit_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vsplit_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vsplit_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vsplit_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vsplit_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vsplit_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vsplit_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vsplit_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vsplit_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vsplit_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vsplit_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vsplit_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vsplit_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vstack_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vstack_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vstack_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vstack_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vstack_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vstack_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vstack_executor_aten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vstack_executor_aten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vstack_executor_aten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vstack_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vstack_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vstack_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vstack_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vstack_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vstack_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vstack_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vstack_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vstack_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vstack_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_vstack_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_where_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_where_executor_aten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_where_executor_aten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_where_executor_aten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_where_executor_aten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_where_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_where_executor_nvfuser_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_where_executor_nvfuser_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_where_executor_nvfuser_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_where_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_where_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_where_executor_nvfuser_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_where_executor_nvfuser_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_where_executor_nvfuser_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_where_executor_nvfuser_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_zeros_executor_aten_mlu_bfloat16", # zeros does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_zeros_executor_aten_mlu_complex32", # zeros does not support complex32 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_zeros_executor_aten_mlu_complex64", # zeros does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_zeros_executor_nvfuser_mlu_bfloat16", # zeros does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_zeros_executor_nvfuser_mlu_complex32", # zeros does not support complex32 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor__refs_zeros_executor_nvfuser_mlu_complex64", # zeros does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_executor_ops_nvprims_native_batch_norm_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor_ops_nvprims_native_batch_norm_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor_ops_nvprims_native_batch_norm_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor_ops_nvprims_native_batch_norm_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor_ops_nvprims_native_batch_norm_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor_ops_nvprims_native_batch_norm_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor_ops_nvprims_var_mean_executor_aten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor_ops_nvprims_var_mean_executor_aten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor_ops_nvprims_var_mean_executor_aten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_executor_ops_nvprims_var_mean_executor_nvfuser_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_executor_ops_nvprims_var_mean_executor_nvfuser_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_executor_ops_nvprims_var_mean_executor_nvfuser_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_abs_mlu_bfloat16", # TODO(PYTORCH-8789)
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_abs_mlu_bool", # TODO(PYTORCH-8789)
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_abs_mlu_complex32", # TODO(PYTORCH-8789)
# TODO(PYTORCH-9217): "fill" not implemented for ComplexFloat
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_abs_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_abs_mlu_int16", # TODO(PYTORCH-8789)
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_abs_mlu_int8", # TODO(PYTORCH-8789)
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_abs_mlu_uint8", # TODO(PYTORCH-8789)
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_acos_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_acos_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_acos_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_acos_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_acos_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_acos_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_acos_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_acos_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_acos_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_acos_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_acosh_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_acosh_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_acosh_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_acosh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_acosh_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_acosh_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_acosh_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_acosh_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_acosh_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_acosh_mlu_uint8",
# # TODO(PYTORCH-9105): complex is not support.
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_add_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_acosh_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_addcdiv_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_addcdiv_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_addr_mlu_complex64",  # TODO(PYTORCH-8811): MLU addr don't support tensor dtype ComplexFloat.
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_all_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_all_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_allclose_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_allclose_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_allclose_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_allclose_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_amax_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_amin_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_amin_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_amin_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_amin_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_amin_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_amin_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_amin_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_amin_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_any_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_any_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_as_strided_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_asin_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_asin_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_asin_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_asin_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_asin_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_asin_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_asin_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_asin_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_asin_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_asin_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_asinh_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_asinh_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_asinh_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_asinh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_asinh_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_asinh_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_asinh_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_asinh_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_asinh_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_asinh_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atan2_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atan2_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atan2_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atan2_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atan2_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atan2_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atan2_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atan2_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atan_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atan_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atan_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atan_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atan_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atan_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atan_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atan_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atan_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atan_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atanh_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atanh_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atanh_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atanh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atanh_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atanh_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atanh_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atanh_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atanh_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atanh_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_1d_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_1d_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_1d_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_1d_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_1d_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_1d_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_1d_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_1d_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_1d_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_1d_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_2d_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_2d_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_2d_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_2d_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_2d_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_2d_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_2d_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_2d_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_2d_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_2d_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_3d_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_3d_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_3d_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_3d_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_3d_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_3d_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_3d_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_3d_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_3d_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_atleast_3d_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_broadcast_shapes_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_broadcast_tensors_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_broadcast_tensors_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_broadcast_tensors_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_broadcast_tensors_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_broadcast_tensors_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_broadcast_tensors_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_broadcast_tensors_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_broadcast_tensors_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_broadcast_tensors_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_broadcast_to_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_broadcast_to_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_broadcast_to_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_broadcast_to_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_broadcast_to_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_broadcast_to_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_broadcast_to_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_broadcast_to_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_broadcast_to_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_cat_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_cat_mlu_complex64", # Depends on cast supports complex.
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_ceil_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_ceil_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_ceil_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_ceil_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_ceil_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_clamp_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_clamp_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_clamp_max_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_clamp_min_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_clone_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_clone_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_column_stack_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_column_stack_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_column_stack_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_column_stack_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_column_stack_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_column_stack_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_column_stack_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_column_stack_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_column_stack_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_column_stack_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_conj_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_conj_mlu_complex64",           # TODO(PYTORCH-8738)
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_conj_physical_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_conj_physical_mlu_complex64",  # TODO(PYTORCH-8738)
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_constant_pad_nd_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_constant_pad_nd_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_contiguous_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_copysign_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_copysign_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_copysign_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_copysign_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_copysign_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_copysign_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_copysign_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_copysign_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_cos_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_cos_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_cos_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_cos_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_cos_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_cos_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_cos_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_cos_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_cos_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_cos_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_cosh_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_cosh_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_cosh_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_cosh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_cosh_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_cosh_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_cosh_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_cosh_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_cosh_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_cosh_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_cumsum_mlu_bfloat16", # cumsum op does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_cumsum_mlu_complex64", # cumsum op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_cumsum_mlu_uint8", # where op does not support uint8 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_diag_embed_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_diag_embed_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_diag_embed_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_diag_embed_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_diagonal_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_diagonal_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_digamma_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_digamma_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_digamma_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_digamma_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_digamma_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_digamma_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_digamma_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_div_floor_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_div_no_rounding_mode_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_div_no_rounding_mode_mlu_complex32", # TODO(PYTORCH-8724): div not support complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_div_no_rounding_mode_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_div_trunc_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_dsplit_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_dsplit_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_dsplit_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_dsplit_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_dsplit_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_dsplit_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_dsplit_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_dsplit_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_dsplit_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_dsplit_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_dstack_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_dstack_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_dstack_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_dstack_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_dstack_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_dstack_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_dstack_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_dstack_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_dstack_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_dstack_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_empty_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_empty_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_empty_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_empty_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_empty_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_empty_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_empty_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_empty_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_empty_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_empty_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_empty_like_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_empty_like_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_empty_like_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_empty_like_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_empty_like_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_empty_like_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_empty_like_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_empty_like_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_empty_like_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_empty_like_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_eq_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_eq_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_eq_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_erf_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_erfc_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_erfc_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_erfc_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_erfc_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_erfc_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_erfc_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_erfc_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_erfc_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_exp2_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_exp2_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_exp2_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_exp2_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_exp2_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_exp2_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_exp2_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_exp2_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_exp_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_exp_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_exp_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_expm1_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_eye_mlu_complex64",  # TODO(PYTORCH-8910): MLU eye don't support tensor dtype ComplexFloat.
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_eye_mlu_uint8",  # TODO(PYTORCH-10149): where op uint8 dtype problem.
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fft2_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fft2_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fft2_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fft2_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fft2_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fft2_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fft2_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fft2_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fft_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fft_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fft_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fft_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fft_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fft_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fft_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fft_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fft_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fftn_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fftn_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fftn_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fftn_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fftn_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fftn_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fftn_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fftn_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fftshift_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fftshift_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fftshift_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fftshift_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fftshift_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fftshift_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fftshift_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fftshift_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fftshift_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_fftshift_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_hfft2_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_hfft2_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_hfft2_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_hfft2_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_hfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_hfft2_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_hfft2_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_hfft2_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_hfft2_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_hfft_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_hfft_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_hfft_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_hfft_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_hfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_hfft_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_hfft_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_hfft_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_hfft_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_hfftn_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_hfftn_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_hfftn_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_hfftn_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_hfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_hfftn_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_hfftn_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_hfftn_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_hfftn_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifft2_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifft2_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifft2_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifft2_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifft2_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifft2_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifft2_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifft2_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifft_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifft_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifft_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifft_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifft_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifft_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifft_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifft_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifft_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifftn_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifftn_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifftn_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifftn_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifftn_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifftn_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifftn_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifftn_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifftshift_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifftshift_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifftshift_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifftshift_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifftshift_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifftshift_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifftshift_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifftshift_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifftshift_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ifftshift_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ihfft2_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ihfft2_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ihfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ihfft2_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ihfft2_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ihfft2_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ihfft2_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ihfft_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ihfft_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ihfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ihfft_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ihfft_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ihfft_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ihfft_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ihfftn_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ihfftn_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ihfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ihfftn_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ihfftn_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ihfftn_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_ihfftn_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_irfft2_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_irfft2_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_irfft2_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_irfft2_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_irfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_irfft2_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_irfft2_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_irfft2_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_irfft2_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_irfft_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_irfft_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_irfft_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_irfft_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_irfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_irfft_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_irfft_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_irfft_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_irfft_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_irfftn_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_irfftn_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_irfftn_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_irfftn_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_irfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_irfftn_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_irfftn_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_irfftn_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_irfftn_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_rfft2_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_rfft2_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_rfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_rfft2_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_rfft2_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_rfft2_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_rfft2_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_rfft_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_rfft_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_rfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_rfft_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_rfft_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_rfft_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_rfft_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_rfftn_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_rfftn_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_rfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_rfftn_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_rfftn_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_rfftn_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fft_rfftn_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fill_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fill_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fill_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_flatten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_flatten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_flatten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_flatten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_flatten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_flatten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_flatten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_flatten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_flatten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_flatten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_flip_mlu_bfloat16", # TODO(PYTORCH-8802): flip not support bf16
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_flip_mlu_complex64", # TODO(PYTORCH-8802): flip not support complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fliplr_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fliplr_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fliplr_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fliplr_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fliplr_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fliplr_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fliplr_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fliplr_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fliplr_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_flipud_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_flipud_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_flipud_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_flipud_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_flipud_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_flipud_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_flipud_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_flipud_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_flipud_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_float_power_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_float_power_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_float_power_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_float_power_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_float_power_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_float_power_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_float_power_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_float_power_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_float_power_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_floor_mlu_bfloat16", # TODO(PYTORCH-8724): floor not support bf16
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_floor_mlu_int16", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_floor_mlu_int32", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_floor_mlu_int8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_floor_mlu_uint8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_floor_divide_mlu_bfloat16", # TODO(PYTORCH-8724): floor divide not support bf16
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fmax_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fmax_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fmax_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fmax_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fmax_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fmax_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fmax_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fmax_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fmin_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fmin_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fmin_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fmin_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fmin_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fmin_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fmin_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fmin_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_fmod_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_frac_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_gcd_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_gcd_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_gcd_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_gcd_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_ge_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_gt_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_heaviside_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_heaviside_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_heaviside_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_heaviside_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_heaviside_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_heaviside_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_heaviside_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_heaviside_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_hsplit_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_hsplit_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_hsplit_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_hsplit_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_hsplit_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_hsplit_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_hsplit_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_hsplit_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_hsplit_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_hsplit_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_hstack_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_hstack_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_hstack_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_hstack_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_hstack_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_hstack_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_hstack_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_hstack_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_hstack_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_hstack_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_hypot_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_hypot_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_hypot_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_i0_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_i0_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_i0_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_i0_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_i0_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_i0_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_i0_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_i0_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_igamma_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_igammac_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_imag_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_imag_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_index_add_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_index_add_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_index_add_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_index_add_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_index_add_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_index_add_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_index_copy_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_index_copy_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_index_fill_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_index_fill_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isclose_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isclose_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isclose_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isclose_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isclose_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isclose_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isclose_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isclose_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isclose_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isfinite_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isfinite_mlu_complex64", # failed because 'fill_internal_with_scalar' is not implemented for 'ComplexFloat'
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isinf_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isinf_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isinf_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isinf_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isinf_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isinf_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isinf_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isinf_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isinf_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isinf_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isnan_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isnan_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isneginf_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isneginf_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isneginf_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isneginf_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isneginf_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isneginf_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isneginf_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isneginf_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isposinf_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isposinf_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isposinf_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isposinf_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isposinf_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isposinf_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isposinf_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isposinf_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isreal_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isreal_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isreal_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isreal_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isreal_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isreal_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isreal_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isreal_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isreal_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_isreal_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_lcm_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_lcm_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_lcm_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_lcm_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_le_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_lgamma_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_lgamma_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_lgamma_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_lgamma_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_lgamma_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_lgamma_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_lgamma_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_linalg_matrix_norm_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_linalg_matrix_norm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_linalg_matrix_norm_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_linalg_matrix_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_linalg_norm_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_linalg_norm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_linalg_norm_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_linalg_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_linalg_svd_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_linalg_svdvals_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_linalg_svdvals_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_linalg_vector_norm_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_linalg_vector_norm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_linalg_vector_norm_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_linalg_vector_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_linspace_mlu_complex64", #TODO(PYTORCH-8738): mlu full not support complex64.
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_log10_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_log10_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_log10_mlu_uint8", # masked_fill doesn't support uint8.
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_log1p_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_log2_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_log2_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_log2_mlu_uint8", # masked_fill doesn't support uint8.
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_log_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_log_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_log_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_log_mlu_uint8", # masked_fill doesn't support uint8.
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_logical_and_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_logical_and_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_logical_not_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_logical_not_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_logical_or_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_logical_or_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_logical_xor_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_logical_xor_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_logspace_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_logspace_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_logspace_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_logspace_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_logspace_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_logspace_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_logspace_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_logspace_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_logsumexp_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_logsumexp_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_logsumexp_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_logsumexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_logsumexp_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_logsumexp_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_logsumexp_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_logsumexp_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_lt_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_masked_fill_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_masked_fill_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_masked_fill_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_masked_fill_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_masked_fill_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_maximum_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_mean_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_mean_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_meshgrid_list_of_tensors_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_meshgrid_list_of_tensors_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_meshgrid_list_of_tensors_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_meshgrid_list_of_tensors_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_meshgrid_list_of_tensors_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_meshgrid_list_of_tensors_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_meshgrid_list_of_tensors_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_meshgrid_list_of_tensors_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_meshgrid_list_of_tensors_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_meshgrid_variadic_tensors_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_meshgrid_variadic_tensors_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_meshgrid_variadic_tensors_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_meshgrid_variadic_tensors_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_meshgrid_variadic_tensors_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_meshgrid_variadic_tensors_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_meshgrid_variadic_tensors_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_meshgrid_variadic_tensors_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_meshgrid_variadic_tensors_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_minimum_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_movedim_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_movedim_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_movedim_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_movedim_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_movedim_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_movedim_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_movedim_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_movedim_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_movedim_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_movedim_mlu_uint8",
# TODO(PYTORCH-9105): complex is not support.
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_mul_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nan_to_num_mlu_bfloat16", # TODO(PYTORCH-10157)
# TODO(PYTORCH-9186): bfloat16 is not support.
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_narrow_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_native_layer_norm_mlu_bfloat16", # TODO(PYTORCH-10252)
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_ne_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_ne_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_neg_mlu_bfloat16",    #dtype not support
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_neg_mlu_complex32",    #dtype not support
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_neg_mlu_complex64",    #dtype not support
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_neg_mlu_int16",    #dtype not support
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_neg_mlu_int8",    #dtype not support
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_neg_mlu_uint8",    #dtype not support
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_new_empty_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_new_empty_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_new_empty_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_new_empty_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_new_empty_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_new_empty_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_new_empty_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_new_empty_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_new_empty_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_new_empty_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_new_full_mlu_bfloat16", # TODO(PYTORCH-8738)
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_new_full_mlu_complex32", # TODO(PYTORCH-8738)
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_new_full_mlu_complex64", # TODO(PYTORCH-8738)
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_new_ones_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_new_ones_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_new_ones_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_new_zeros_mlu_bfloat16", # zeros does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_new_zeros_mlu_complex32", # zeros does not support complex32 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_new_zeros_mlu_complex64", # zeros does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nextafter_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nextafter_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_celu_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_celu_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_celu_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_elu_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_gelu_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_glu_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_hardshrink_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_hardshrink_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_hardshrink_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_hardtanh_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_hardtanh_mlu_float16",# [PYTORCH-9208]: [cnnlClip]Parameter min must be less than max
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_hardtanh_mlu_float32",# [PYTORCH-9208]: [cnnlClip]Parameter min must be less than max
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_hinge_embedding_loss_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_hinge_embedding_loss_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_hinge_embedding_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_huber_loss_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_huber_loss_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_huber_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_l1_loss_mlu_bfloat16", # l1_loss op does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_l1_loss_mlu_complex64", # l1_loss op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_layer_norm_mlu_bfloat16", # TODO(PYTORCH-10252)
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_leaky_relu_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_margin_ranking_loss_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_margin_ranking_loss_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_margin_ranking_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_margin_ranking_loss_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_margin_ranking_loss_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_margin_ranking_loss_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_margin_ranking_loss_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_mish_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_mish_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_mish_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_pairwise_distance_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_pairwise_distance_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_pairwise_distance_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_pairwise_distance_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_pairwise_distance_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_pairwise_distance_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_pairwise_distance_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_pairwise_distance_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_pdist_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_poisson_nll_loss_mlu_bfloat16", # [PYTORCH-8789] MLU abs don't support tensor dtype BFloat16.
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_poisson_nll_loss_mlu_int16", # [PYTORCH-8789] MLU abs don't support tensor dtype Short.
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_poisson_nll_loss_mlu_int8", # [PYTORCH-8789] MLU abs don't support tensor dtype Char.
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_poisson_nll_loss_mlu_uint8", # [PYTORCH-8789] MLU abs don't support tensor dtype Byte.
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_prelu_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_prelu_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_relu6_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_relu6_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_relu6_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_relu6_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_relu6_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_relu6_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_relu6_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_relu_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_selu_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_softplus_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_softshrink_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_softshrink_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_softshrink_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_tanhshrink_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_tanhshrink_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_tanhshrink_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_tanhshrink_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_tanhshrink_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_tanhshrink_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_tanhshrink_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_tanhshrink_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_nn_functional_threshold_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_norm_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_ones_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_ones_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_ones_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_positive_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_positive_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_positive_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_positive_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_positive_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_positive_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_positive_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_positive_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_positive_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_pow_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_pow_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_pow_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_pow_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_pow_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_pow_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_pow_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_prod_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_prod_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_prod_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_randn_mlu_bfloat16", # TODO(PYTORCH-10321)
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_randn_mlu_complex32", # TODO(PYTORCH-10321)
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_ravel_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_ravel_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_ravel_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_ravel_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_ravel_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_ravel_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_ravel_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_ravel_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_ravel_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_ravel_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_real_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_real_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_real_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_real_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_real_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_real_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_real_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_real_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_real_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_real_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_reciprocal_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_reciprocal_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_remainder_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_reshape_as_mlu_bfloat16", # BFloat16 is not supported by reshape_as on MLU
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_reshape_mlu_bfloat16", # BFloat16 is not supported by reshape on MLU
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_roll_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_roll_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_rot90_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_rot90_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_rot90_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_rot90_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_rot90_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_rot90_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_rot90_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_rot90_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_rot90_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_round_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_rsqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu rsqrt not support bf16 and complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_rsqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu rsqrt not support bf16 and complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_rsqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu rsqrt not support bf16 and complex dtypes
# TODO(PYTORCH-9105): complex is not support.
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_rsub_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sgn_mlu_bfloat16", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sgn_mlu_bool", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sgn_mlu_complex32", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sgn_mlu_complex64", # TODO(PYTORCH-9007): not support calculation with complex and fp32
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sgn_mlu_int16", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sgn_mlu_int32", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sgn_mlu_int8", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sgn_mlu_uint8", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sigmoid_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sigmoid_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sigmoid_mlu_uint8", # masked_fill doesn't support uint8.
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sign_mlu_bfloat16", # TODO(PYTORCH-8947)
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sign_mlu_bool", # TODO(PYTORCH-8947)
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sign_mlu_int16", # TODO(PYTORCH-8947)
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sign_mlu_int32", # TODO(PYTORCH-8947)
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sign_mlu_int8", # TODO(PYTORCH-8947)
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sign_mlu_uint8", # TODO(PYTORCH-8947)
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_signbit_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_signbit_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_signbit_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_signbit_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_signbit_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_signbit_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_signbit_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_signbit_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sin_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sin_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sin_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sin_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sin_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sin_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sin_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sin_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sin_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sin_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sinc_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sinc_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sinc_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sinc_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sinc_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sinc_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sinc_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sinc_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sinc_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sinh_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sinh_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sinh_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sinh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sinh_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sinh_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sinh_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sinh_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sinh_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sinh_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_bessel_j0_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_bessel_j0_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_bessel_j0_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_bessel_j0_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_bessel_j0_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_bessel_j0_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_bessel_j1_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_bessel_j1_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_bessel_j1_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_bessel_j1_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_bessel_j1_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_bessel_j1_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_i0e_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_i0e_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_i0e_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_i0e_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_i0e_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_i0e_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_i0e_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_i0e_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_i1_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_i1_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_i1_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_i1_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_i1_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_i1_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_i1e_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_i1e_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_i1e_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_i1e_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_i1e_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_i1e_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_logit_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_logit_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_logit_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_logit_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_logit_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_logit_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_logit_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_logit_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_1_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_1_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_1_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_1_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_1_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_1_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_3_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_3_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_3_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_3_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_3_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_3_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_5_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_5_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_5_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_5_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_5_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_5_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_spherical_bessel_j0_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_spherical_bessel_j0_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_spherical_bessel_j0_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_spherical_bessel_j0_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_spherical_bessel_j0_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_spherical_bessel_j0_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_zeta_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_zeta_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_zeta_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_zeta_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_zeta_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_special_zeta_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu sqrt not support bf16 and complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu sqrt not support bf16 and complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support bf16 and complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_square_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_square_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_square_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_square_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_square_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_square_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_square_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_square_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_square_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_squeeze_mlu_bfloat16",# squeeze op unsupport bf16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_stack_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_std_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_std_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_std_mean_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_std_mean_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_std_mean_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_std_mean_mlu_float32",
# TODO: (CNNLCORE-12770) gpu will promote half to float.
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sub_mlu_complex64",
# TODO(PYTORCH-9105): complex is not support.
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sum_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sum_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sum_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sum_to_size_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sum_to_size_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sum_to_size_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sum_to_size_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sum_to_size_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sum_to_size_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sum_to_size_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sum_to_size_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_sum_to_size_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_t_mlu_bfloat16", # t unsupport bf16
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_tan_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_tan_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_tan_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_tan_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_tan_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_tan_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_tan_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_tan_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_tan_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_tan_mlu_uint8",
# TODO(PYTORCH-10055): tanh not support dtype
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_tanh_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_tanh_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_tanh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_tanh_mlu_uint8", # masked_fill not support uint8
# TODO(PYTORCH-9105): bfloat16 is not support.
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_tensor_split_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_to_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_to_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_trace_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_trace_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_trace_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_trace_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_trace_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_trace_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_trace_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_trace_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_trace_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_trace_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_tril_indices_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_triu_indices_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_true_divide_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_true_divide_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_true_divide_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_true_divide_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_true_divide_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_true_divide_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_true_divide_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_true_divide_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_true_divide_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_true_divide_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_trunc_mlu_bfloat16", # TODO(PYTORCH-8724): trunc not support bf16
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_trunc_mlu_int16", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_trunc_mlu_int32", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_trunc_mlu_int8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_trunc_mlu_uint8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_unflatten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_unflatten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_unflatten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_unflatten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_unflatten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_unflatten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_unflatten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_unflatten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_unflatten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_unflatten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_unfold_copy_mlu_bfloat16", # unfold op does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_unfold_copy_mlu_complex32", # unfold op does not support complex32 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_unfold_copy_mlu_complex64", # unfold op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_unfold_mlu_bfloat16", # unfold op does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_unfold_mlu_complex32", # unfold op does not support complex32 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_unfold_mlu_complex64", # unfold op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_unsqueeze_mlu_bfloat16", # unsqueeze op unsupport bf16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_var_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_var_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_var_mean_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_var_mean_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_var_mean_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_var_mean_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_view_as_mlu_bfloat16", # BFloat16 is not supported by view_as on MLU
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_view_mlu_bfloat16", # BFloat16 is not supported by view on MLU
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_vsplit_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_vsplit_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_vsplit_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_vsplit_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_vsplit_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_vsplit_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_vsplit_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_vsplit_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_vsplit_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_vsplit_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_vstack_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_vstack_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_vstack_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_vstack_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_vstack_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_vstack_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_vstack_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_vstack_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_vstack_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_vstack_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_where_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_where_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_where_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_where_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_where_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_zeros_mlu_bfloat16", # zeros does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_zeros_mlu_complex32", # zeros does not support complex32 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_meta__refs_zeros_mlu_complex64", # zeros does not support complex64 on mlu
# TODO(PYTORCH-9186): index select mlu is not support bfloat16 and complex.
"test_ops_py_TestCommonMLU_test_python_ref_meta_ops_nvprims_native_batch_norm_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta_ops_nvprims_native_batch_norm_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta_ops_nvprims_native_batch_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_meta_ops_nvprims_var_mean_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_meta_ops_nvprims_var_mean_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_meta_ops_nvprims_var_mean_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_ops_nvprims_native_batch_norm_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_ops_nvprims_native_batch_norm_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_ops_nvprims_native_batch_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_ops_nvprims_var_mean_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_ops_nvprims_var_mean_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_ops_nvprims_var_mean_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_abs_mlu_bfloat16", # TODO(PYTORCH-8789)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_abs_mlu_bool", # TODO(PYTORCH-8789)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_abs_mlu_complex32", # TODO(PYTORCH-8789)
# TODO(PYTORCH-9217): "fill" not implemented for ComplexFloat
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_abs_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_abs_mlu_int16", # TODO(PYTORCH-8789)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_abs_mlu_int8", # TODO(PYTORCH-8789)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_abs_mlu_uint8", # TODO(PYTORCH-8789)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_acos_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_acos_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_acos_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_acos_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_acos_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_acos_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_acos_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_acos_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_acos_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_acos_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_acosh_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_acosh_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_acosh_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_acosh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_acosh_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_acosh_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_acosh_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_acosh_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_acosh_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_acosh_mlu_uint8",
# TODO: (CNNLCORE-12770) gpu will promote half to float.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_add_mlu_complex64",
# TODO(PYTORCH-9105): complex is not support.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_addcdiv_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_addcdiv_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_addr_mlu_bool",  # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Bool.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_addr_mlu_complex64",  # TODO(PYTORCH-8811): MLU addr don't support tensor dtype ComplexFloat.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_addr_mlu_float16",  # TODO(PYTORCH-10364): Calculation error when beta=0 and alpha=0.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_addr_mlu_float32",  # TODO(PYTORCH-10364): Calculation error when beta=0 and alpha=0.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_addr_mlu_int16",  # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Short.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_addr_mlu_int32",  # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Int.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_addr_mlu_int8",  # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Char.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_addr_mlu_uint8",  # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Byte.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_all_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_all_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_allclose_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_allclose_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_allclose_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_allclose_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_amax_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_amin_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_amin_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_amin_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_amin_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_amin_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_amin_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_amin_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_amin_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_any_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_any_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_as_strided_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_asin_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_asin_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_asin_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_asin_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_asin_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_asin_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_asin_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_asin_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_asin_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_asin_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_asinh_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_asinh_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_asinh_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_asinh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_asinh_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_asinh_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_asinh_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_asinh_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_asinh_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_asinh_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atan2_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atan2_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atan2_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atan2_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atan2_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atan2_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atan2_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atan2_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atan_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atan_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atan_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atan_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atan_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atan_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atan_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atan_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atan_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atan_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atanh_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atanh_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atanh_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atanh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atanh_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atanh_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atanh_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atanh_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atanh_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atanh_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_1d_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_1d_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_1d_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_1d_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_1d_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_1d_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_1d_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_1d_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_1d_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_1d_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_2d_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_2d_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_2d_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_2d_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_2d_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_2d_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_2d_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_2d_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_2d_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_2d_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_3d_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_3d_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_3d_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_3d_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_3d_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_3d_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_3d_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_3d_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_3d_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_atleast_3d_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_broadcast_shapes_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_broadcast_tensors_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_broadcast_tensors_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_broadcast_tensors_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_broadcast_tensors_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_broadcast_tensors_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_broadcast_tensors_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_broadcast_tensors_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_broadcast_tensors_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_broadcast_tensors_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_broadcast_to_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_broadcast_to_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_broadcast_to_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_broadcast_to_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_broadcast_to_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_broadcast_to_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_broadcast_to_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_broadcast_to_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_broadcast_to_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_cat_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_cat_mlu_complex64", # Depends on cast supports complex.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_ceil_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_ceil_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_ceil_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_ceil_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_ceil_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_clamp_mlu_bfloat16",
# PYTORCH-9208 start
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_clamp_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_clamp_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_clamp_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_clamp_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_clamp_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_clamp_mlu_uint8",
# PYTORCH-9208 end
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_clamp_max_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_clamp_min_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_clone_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_clone_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_column_stack_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_column_stack_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_column_stack_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_column_stack_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_column_stack_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_column_stack_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_column_stack_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_column_stack_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_column_stack_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_column_stack_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_conj_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_conj_mlu_complex64",            # TODO(PYTORCH-8738)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_conj_physical_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_conj_physical_mlu_complex64",   # TODO(PYTORCH-8738)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_constant_pad_nd_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_constant_pad_nd_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_contiguous_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_copysign_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_copysign_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_copysign_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_copysign_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_copysign_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_copysign_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_copysign_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_copysign_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_cos_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_cos_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_cos_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_cos_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_cos_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_cos_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_cos_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_cos_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_cos_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_cos_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_cosh_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_cosh_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_cosh_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_cosh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_cosh_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_cosh_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_cosh_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_cosh_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_cosh_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_cosh_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_cumsum_mlu_bfloat16", # cumsum op does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_cumsum_mlu_complex64", # cumsum op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_cumsum_mlu_uint8", # where op does not support uint8 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_diag_embed_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_diag_embed_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_diag_embed_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_diag_embed_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_diagonal_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_digamma_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_digamma_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_digamma_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_digamma_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_digamma_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_digamma_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_digamma_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_div_floor_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_div_no_rounding_mode_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_div_no_rounding_mode_mlu_complex32", # TODO(PYTORCH-8724): div not support complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_div_no_rounding_mode_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_div_trunc_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_div_trunc_rounding_mlu_float16", # TODO(CNNLCORE-2677): div precision problem on 370 platform
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_dsplit_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_dsplit_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_dsplit_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_dsplit_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_dsplit_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_dsplit_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_dsplit_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_dsplit_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_dsplit_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_dsplit_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_dstack_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_dstack_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_dstack_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_dstack_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_dstack_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_dstack_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_dstack_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_dstack_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_dstack_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_dstack_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_empty_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_empty_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_empty_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_empty_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_empty_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_empty_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_empty_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_empty_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_empty_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_empty_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_empty_like_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_empty_like_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_empty_like_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_empty_like_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_empty_like_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_empty_like_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_empty_like_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_empty_like_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_empty_like_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_empty_like_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_eq_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_eq_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_eq_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_erf_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_erf_mlu_float16", # input inf/-inf, output 1/-1.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_erfc_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_erfc_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_erfc_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_erfc_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_erfc_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_erfc_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_erfc_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_erfc_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_exp2_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_exp2_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_exp2_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_exp2_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_exp2_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_exp2_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_exp2_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_exp2_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_exp_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_exp_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_exp_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_expm1_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_eye_mlu_complex64",  # TODO(PYTORCH-8910): MLU eye don't support tensor dtype ComplexFloat.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_eye_mlu_uint8",  # TODO(PYTORCH-10149): where op uint8 dtype problem.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fft2_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fft2_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fft2_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fft2_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fft2_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fft2_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fft2_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fft2_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fft_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fft_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fft_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fft_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fft_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fft_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fft_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fft_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fft_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fftn_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fftn_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fftn_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fftn_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fftn_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fftn_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fftn_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fftn_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fftshift_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fftshift_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fftshift_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fftshift_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fftshift_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fftshift_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fftshift_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fftshift_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fftshift_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_fftshift_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_hfft2_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_hfft2_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_hfft2_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_hfft2_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_hfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_hfft2_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_hfft2_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_hfft2_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_hfft2_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_hfft_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_hfft_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_hfft_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_hfft_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_hfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_hfft_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_hfft_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_hfft_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_hfft_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_hfftn_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_hfftn_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_hfftn_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_hfftn_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_hfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_hfftn_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_hfftn_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_hfftn_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_hfftn_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifft2_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifft2_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifft2_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifft2_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifft2_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifft2_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifft2_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifft2_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifft_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifft_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifft_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifft_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifft_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifft_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifft_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifft_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifft_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifftn_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifftn_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifftn_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifftn_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifftn_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifftn_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifftn_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifftn_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifftshift_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifftshift_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifftshift_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifftshift_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifftshift_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifftshift_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifftshift_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifftshift_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifftshift_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ifftshift_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ihfft2_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ihfft2_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ihfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ihfft2_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ihfft2_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ihfft2_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ihfft2_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ihfft_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ihfft_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ihfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ihfft_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ihfft_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ihfft_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ihfft_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ihfftn_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ihfftn_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ihfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ihfftn_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ihfftn_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ihfftn_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_ihfftn_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_irfft2_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_irfft2_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_irfft2_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_irfft2_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_irfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_irfft2_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_irfft2_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_irfft2_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_irfft2_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_irfft_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_irfft_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_irfft_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_irfft_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_irfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_irfft_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_irfft_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_irfft_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_irfft_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_irfftn_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_irfftn_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_irfftn_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_irfftn_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_irfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_irfftn_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_irfftn_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_irfftn_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_irfftn_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_rfft2_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_rfft2_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_rfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_rfft2_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_rfft2_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_rfft2_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_rfft2_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_rfft_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_rfft_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_rfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_rfft_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_rfft_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_rfft_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_rfft_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_rfftn_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_rfftn_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_rfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_rfftn_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_rfftn_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_rfftn_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fft_rfftn_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fill_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fill_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fill_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_flatten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_flatten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_flatten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_flatten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_flatten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_flatten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_flatten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_flatten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_flatten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_flatten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_flip_mlu_bfloat16", # TODO(PYTORCH-8802): flip not support bf16
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_flip_mlu_complex64", # TODO(PYTORCH-8802): flip not support complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fliplr_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fliplr_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fliplr_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fliplr_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fliplr_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fliplr_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fliplr_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fliplr_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fliplr_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_flipud_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_flipud_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_flipud_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_flipud_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_flipud_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_flipud_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_flipud_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_flipud_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_flipud_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_float_power_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_float_power_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_float_power_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_float_power_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_float_power_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_float_power_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_float_power_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_float_power_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_float_power_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_floor_mlu_bfloat16", # TODO(PYTORCH-8724): floor not support bf16
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_floor_mlu_int16", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_floor_mlu_int32", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_floor_mlu_int8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_floor_mlu_uint8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_floor_divide_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_floor_divide_mlu_float16", # CNNLCORE-2667 div have precision problem on 370 platform
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fmax_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fmax_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fmax_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fmax_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fmax_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fmax_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fmax_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fmax_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fmin_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fmin_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fmin_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fmin_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fmin_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fmin_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fmin_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fmin_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_fmod_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_frac_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_gcd_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_gcd_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_gcd_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_gcd_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_ge_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_gt_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_heaviside_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_heaviside_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_heaviside_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_heaviside_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_heaviside_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_heaviside_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_heaviside_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_heaviside_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_hsplit_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_hsplit_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_hsplit_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_hsplit_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_hsplit_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_hsplit_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_hsplit_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_hsplit_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_hsplit_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_hsplit_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_hstack_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_hstack_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_hstack_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_hstack_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_hstack_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_hstack_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_hstack_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_hstack_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_hstack_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_hstack_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_hypot_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_hypot_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_hypot_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_i0_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_i0_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_i0_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_i0_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_i0_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_i0_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_i0_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_i0_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_igamma_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_igammac_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_imag_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_imag_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_index_add_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_index_add_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_index_add_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_index_add_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_index_add_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_index_add_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_index_copy_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_index_copy_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_index_fill_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_index_fill_mlu_complex64",
# TODO(PYTORCH-9186): bfloat16 and complex64 is not support.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_index_select_mlu_complex64",
# TODO(PYTORCH-9186): index select mlu is not support bfloat16 and complex.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isclose_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isclose_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isclose_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isclose_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isclose_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isclose_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isclose_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isclose_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isclose_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isfinite_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isfinite_mlu_complex64", # failed because 'fill_internal_with_scalar' is not implemented for 'ComplexFloat'
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isinf_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isinf_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isinf_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isinf_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isinf_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isinf_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isinf_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isinf_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isinf_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isinf_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isnan_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isnan_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isneginf_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isneginf_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isneginf_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isneginf_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isneginf_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isneginf_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isneginf_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isneginf_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isposinf_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isposinf_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isposinf_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isposinf_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isposinf_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isposinf_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isposinf_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isposinf_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isreal_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isreal_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isreal_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isreal_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isreal_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isreal_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isreal_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isreal_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isreal_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_isreal_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_lcm_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_lcm_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_lcm_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_lcm_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_le_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_lgamma_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_lgamma_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_lgamma_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_lgamma_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_lgamma_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_lgamma_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_lgamma_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_linalg_matrix_norm_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_linalg_matrix_norm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_linalg_matrix_norm_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_linalg_matrix_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_linalg_norm_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_linalg_norm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_linalg_norm_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_linalg_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_linalg_svd_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_linalg_svdvals_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_linalg_svdvals_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_linalg_vector_norm_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_linalg_vector_norm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_linalg_vector_norm_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_linalg_vector_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_linspace_mlu_complex64", #TODO(PYTORCH-8738): mlu full not support complex64.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_linspace_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_linspace_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_linspace_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_linspace_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_log10_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_log10_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_log10_mlu_uint8", # masked_fill doesn't support uint8.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_log1p_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_log2_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_log2_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_log2_mlu_uint8", # masked_fill doesn't support uint8.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_log_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_log_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_log_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_log_mlu_uint8", # masked_fill doesn't support uint8.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_logical_and_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_logical_and_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_logical_not_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_logical_not_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_logical_or_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_logical_or_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_logical_xor_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_logical_xor_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_logspace_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_logspace_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_logspace_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_logspace_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_logspace_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_logspace_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_logspace_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_logspace_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_logsumexp_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_logsumexp_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_logsumexp_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_logsumexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_logsumexp_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_logsumexp_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_logsumexp_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_logsumexp_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_lt_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_masked_fill_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_masked_fill_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_masked_fill_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_masked_fill_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_masked_fill_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_maximum_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_mean_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_mean_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_meshgrid_list_of_tensors_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_meshgrid_list_of_tensors_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_meshgrid_list_of_tensors_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_meshgrid_list_of_tensors_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_meshgrid_list_of_tensors_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_meshgrid_list_of_tensors_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_meshgrid_list_of_tensors_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_meshgrid_list_of_tensors_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_meshgrid_list_of_tensors_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_meshgrid_variadic_tensors_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_meshgrid_variadic_tensors_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_meshgrid_variadic_tensors_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_meshgrid_variadic_tensors_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_meshgrid_variadic_tensors_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_meshgrid_variadic_tensors_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_meshgrid_variadic_tensors_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_meshgrid_variadic_tensors_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_meshgrid_variadic_tensors_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_minimum_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_movedim_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_movedim_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_movedim_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_movedim_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_movedim_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_movedim_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_movedim_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_movedim_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_movedim_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_movedim_mlu_uint8",
# TODO(PYTORCH-9105): complex is not support.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_mul_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nan_to_num_mlu_bfloat16", # TODO(PYTORCH-10157)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_native_layer_norm_mlu_bfloat16", # TODO(PYTORCH-10252)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_native_layer_norm_mlu_float32", # TODO(PYTORCH-10314)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_ne_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_ne_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_neg_mlu_bfloat16",    #dtype not support
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_neg_mlu_complex32",    #dtype not support
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_neg_mlu_complex64",    #dtype not support
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_neg_mlu_int16",    #dtype not support
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_neg_mlu_int8",    #dtype not support
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_neg_mlu_uint8",    #dtype not support
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_new_empty_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_new_empty_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_new_empty_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_new_empty_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_new_empty_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_new_empty_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_new_empty_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_new_empty_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_new_empty_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_new_empty_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_new_full_mlu_bfloat16", # TODO(PYTORCH-8738)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_new_full_mlu_complex32", # TODO(PYTORCH-8738)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_new_full_mlu_complex64", # TODO(PYTORCH-8738)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_new_ones_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_new_ones_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_new_ones_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_new_zeros_mlu_bfloat16", # zeros does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_new_zeros_mlu_complex32", # zeros does not support complex32 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_new_zeros_mlu_complex64", # zeros does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nextafter_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nextafter_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_celu_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_celu_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_celu_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_elu_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_gelu_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_gelu_mlu_float16", # accuracy beyond thershold
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_gelu_mlu_float32", # accuracy beyond thershold
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_glu_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_hardshrink_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_hardshrink_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_hardshrink_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_hardtanh_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_hardtanh_mlu_float16", # [PYTORCH-9208]: [cnnlClip]Parameter min must be less than max
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_hardtanh_mlu_float32", # [PYTORCH-9208]: [cnnlClip]Parameter min must be less than max
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_hinge_embedding_loss_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_hinge_embedding_loss_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_hinge_embedding_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_huber_loss_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_huber_loss_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_huber_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_l1_loss_mlu_bfloat16", # l1_loss op does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_l1_loss_mlu_complex64", # l1_loss op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_layer_norm_mlu_bfloat16", # TODO(PYTORCH-10252)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_leaky_relu_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_margin_ranking_loss_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_margin_ranking_loss_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_margin_ranking_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_margin_ranking_loss_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_margin_ranking_loss_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_margin_ranking_loss_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_margin_ranking_loss_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_mish_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_mish_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_mish_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_pairwise_distance_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_pairwise_distance_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_pairwise_distance_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_pairwise_distance_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_pairwise_distance_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_pairwise_distance_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_pairwise_distance_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_pairwise_distance_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_pdist_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_poisson_nll_loss_mlu_bfloat16", # [PYTORCH-8789] MLU abs don't support tensor dtype BFloat16.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_poisson_nll_loss_mlu_int16", # [PYTORCH-8789] MLU abs don't support tensor dtype Short.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_poisson_nll_loss_mlu_int8", # [PYTORCH-8789] MLU abs don't support tensor dtype Char.

"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_poisson_nll_loss_mlu_uint8", # [PYTORCH-8789] MLU abs don't support tensor dtype Byte.

"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_prelu_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_prelu_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_relu6_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_relu6_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_relu6_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_relu6_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_relu6_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_relu6_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_relu6_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_relu_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_selu_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_softplus_mlu_bfloat16",
# softplus accuracy not pass because precise value compute with double.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_softplus_mlu_float16", # CNNLCORE-14209
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_softplus_mlu_float32", # CNNLCORE-14209
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_softshrink_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_softshrink_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_softshrink_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_tanhshrink_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_tanhshrink_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_tanhshrink_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_tanhshrink_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_tanhshrink_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_tanhshrink_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_tanhshrink_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_tanhshrink_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_threshold_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_threshold_mlu_float16",  # On MLU300 series, If input is negative infinity, then output is NaN
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_nn_functional_threshold_mlu_float32",  # On MLU300 series, If input is negative infinity, then output is NaN
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_norm_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_norm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_norm_mlu_float16", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_norm_mlu_float32", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_ones_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_ones_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_ones_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_positive_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_positive_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_positive_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_positive_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_positive_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_positive_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_positive_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_positive_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_positive_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_pow_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_pow_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_pow_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_pow_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_pow_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_pow_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_pow_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_prod_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_prod_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_prod_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_randn_mlu_bfloat16", # TODO(PYTORCH-10321)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_randn_mlu_complex32", # TODO(PYTORCH-10321)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_ravel_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_ravel_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_ravel_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_ravel_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_ravel_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_ravel_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_ravel_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_ravel_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_ravel_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_ravel_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_real_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_real_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_real_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_real_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_real_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_real_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_real_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_real_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_real_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_real_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_reciprocal_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_reciprocal_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_remainder_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_reshape_as_mlu_bfloat16", # BFloat16 is not supported by reshape_as on MLU
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_reshape_mlu_bfloat16", # BFloat16 is not supported by reshape on MLU
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_roll_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_roll_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_rot90_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_rot90_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_rot90_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_rot90_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_rot90_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_rot90_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_rot90_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_rot90_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_rot90_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_round_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_rsqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu rsqrt not support bf16 and complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_rsqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu rsqrt not support bf16 and complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_rsqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu rsqrt not support bf16 and complex dtypes
# TODO(PYTORCH-9105): complex is not support.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_rsub_mlu_complex64",
# TODO: (CNNLCORE-12770) gpu will promote half to float.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_rsub_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sgn_mlu_bfloat16", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sgn_mlu_bool", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sgn_mlu_complex32", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sgn_mlu_complex64", # TODO(PYTORCH-9007): not support calculation with complex and fp32
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sgn_mlu_int16", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sgn_mlu_int32", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sgn_mlu_int8", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sgn_mlu_uint8", # TODO(PYTORCH-8948)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sigmoid_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sigmoid_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sigmoid_mlu_uint8", # masked_fill doesn't support uint8.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sign_mlu_bfloat16", # TODO(PYTORCH-8947)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sign_mlu_bool", # TODO(PYTORCH-8947)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sign_mlu_int16", # TODO(PYTORCH-8947)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sign_mlu_int32", # TODO(PYTORCH-8947)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sign_mlu_int8", # TODO(PYTORCH-8947)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sign_mlu_uint8", # TODO(PYTORCH-8947)
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_signbit_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_signbit_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_signbit_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_signbit_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_signbit_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_signbit_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_signbit_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_signbit_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sin_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sin_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sin_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sin_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sin_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sin_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sin_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sin_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sin_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sin_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sinc_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sinc_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sinc_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sinc_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sinc_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sinc_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sinc_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sinc_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sinc_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sinh_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sinh_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sinh_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sinh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sinh_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sinh_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sinh_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sinh_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sinh_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sinh_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_bessel_j0_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_bessel_j0_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_bessel_j0_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_bessel_j0_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_bessel_j0_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_bessel_j0_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_bessel_j1_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_bessel_j1_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_bessel_j1_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_bessel_j1_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_bessel_j1_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_bessel_j1_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_i0e_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_i0e_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_i0e_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_i0e_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_i0e_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_i0e_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_i0e_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_i0e_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_i1_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_i1_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_i1_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_i1_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_i1_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_i1_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_i1e_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_i1e_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_i1e_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_i1e_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_i1e_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_i1e_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_logit_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_logit_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_logit_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_logit_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_logit_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_logit_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_logit_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_logit_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_1_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_1_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_1_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_1_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_1_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_1_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_3_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_3_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_3_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_3_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_3_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_3_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_5_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_5_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_5_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_5_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_5_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_5_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_spherical_bessel_j0_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_spherical_bessel_j0_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_spherical_bessel_j0_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_spherical_bessel_j0_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_spherical_bessel_j0_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_spherical_bessel_j0_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_zeta_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_zeta_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_zeta_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_zeta_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_zeta_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_special_zeta_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu sqrt not support bf16 and complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu sqrt not support bf16 and complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support bf16 and complex dtypes
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_square_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_square_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_square_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_square_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_square_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_square_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_square_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_square_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_square_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_squeeze_mlu_bfloat16", # squeeze op unsupport bf16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_stack_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_std_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_std_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_std_mean_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_std_mean_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_std_mean_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_std_mean_mlu_float32",
# TODO(PYTORCH-9105): complex is not support.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sub_mlu_complex64",
# TODO: (CNNLCORE-12770) gpu will promote half to float.
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sum_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sum_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sum_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sum_to_size_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sum_to_size_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sum_to_size_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sum_to_size_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sum_to_size_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sum_to_size_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sum_to_size_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sum_to_size_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_sum_to_size_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_t_mlu_bfloat16", # t unsupport bf16
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_tan_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_tan_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_tan_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_tan_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_tan_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_tan_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_tan_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_tan_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_tan_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_tan_mlu_uint8",
# TODO(PYTORCH-10055): tanh not support dtype
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_tanh_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_tanh_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_tanh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_tanh_mlu_uint8", # masked_fill not support uint8
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_tensor_split_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_to_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_to_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_trace_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_trace_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_trace_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_trace_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_trace_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_trace_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_trace_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_trace_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_trace_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_trace_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_tril_indices_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_triu_indices_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_true_divide_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_true_divide_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_true_divide_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_true_divide_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_true_divide_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_true_divide_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_true_divide_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_true_divide_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_true_divide_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_true_divide_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_trunc_mlu_bfloat16", # TODO(PYTORCH-8724): trunc not support bf16
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_trunc_mlu_int16", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_trunc_mlu_int32", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_trunc_mlu_int8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_trunc_mlu_uint8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_unflatten_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_unflatten_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_unflatten_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_unflatten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_unflatten_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_unflatten_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_unflatten_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_unflatten_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_unflatten_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_unflatten_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_unfold_copy_mlu_bfloat16", # unfold op does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_unfold_copy_mlu_complex32", # unfold op does not support complex32 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_unfold_copy_mlu_complex64", # unfold op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_unfold_mlu_bfloat16", # unfold op does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_unfold_mlu_complex32", # unfold op does not support complex32 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_unfold_mlu_complex64", # unfold op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_unsqueeze_mlu_bfloat16",# unsqueeze op unsupport bf16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_var_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_var_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_var_mean_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_var_mean_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_var_mean_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_var_mean_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_view_as_mlu_bfloat16", # BFloat16 is not supported by view_as on MLU
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_view_mlu_bfloat16", # BFloat16 is not supported by view on MLU
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_vsplit_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_vsplit_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_vsplit_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_vsplit_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_vsplit_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_vsplit_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_vsplit_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_vsplit_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_vsplit_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_vsplit_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_vstack_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_vstack_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_vstack_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_vstack_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_vstack_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_vstack_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_vstack_mlu_int16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_vstack_mlu_int32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_vstack_mlu_int8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_vstack_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_where_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_where_mlu_bool",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_where_mlu_complex32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_where_mlu_complex64",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_where_mlu_uint8",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_zeros_mlu_bfloat16", # zeros does not support bfloat16 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_zeros_mlu_complex32", # zeros does not support complex32 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback__refs_zeros_mlu_complex64", # zeros does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback_ops_nvprims_native_batch_norm_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback_ops_nvprims_native_batch_norm_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback_ops_nvprims_native_batch_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback_ops_nvprims_var_mean_mlu_bfloat16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback_ops_nvprims_var_mean_mlu_float16",
"test_ops_py_TestCommonMLU_test_python_ref_torch_fallback_ops_nvprims_var_mean_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_H_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_H_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_T_mlu_complex64", # Depends on fill supports complex.
"test_ops_py_TestCommonMLU_test_variant_consistency_eager___getitem___mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager___getitem___mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager___rdiv___mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_ops_py_TestCommonMLU_test_variant_consistency_eager___rmatmul___mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager___rmatmul___mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager___rmod___mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager___rpow___mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager___rpow___mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_acos_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_acos_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_acosh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_acosh_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_addbmm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_addcdiv_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_addcmul_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_addmm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_addmm_decomposed_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_addmv_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_addr_mlu_complex64",  # Reference: https://github.com/pytorch/pytorch/issues/50747
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_addr_mlu_float32",  # Reference: https://github.com/pytorch/pytorch/issues/50747
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_all_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_allclose_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_allclose_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_amin_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_aminmax_mlu_float32",
# TODO(PYTORCH-9180): angle_backward will using mul op to caculate
# self and grad, but grad is float and self is complex64,
# MLU mul is not support this dtype promote, and fallback
# to cpu, then shared storage failed.
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_any_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_argsort_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_argwhere_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_argwhere_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_as_strided_scatter_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_as_strided_scatter_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_asin_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_asin_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_asinh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_asinh_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_atan2_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_atan_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_atan_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_atanh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_atanh_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_atleast_1d_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_atleast_1d_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_atleast_2d_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_atleast_2d_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_atleast_3d_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_atleast_3d_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_baddbmm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_bfloat16_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_bfloat16_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_block_diag_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_block_diag_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_bmm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_bool_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_bool_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_broadcast_shapes_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_broadcast_tensors_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_broadcast_tensors_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_broadcast_to_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_broadcast_to_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_bucketize_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_byte_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_byte_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_cartesian_prod_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_cartesian_prod_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_cat_mlu_complex64", # Depends on fill supports complex.
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_cdist_mlu_float32", #TODO(PYTORCH-8665): cdist only supports p=1 now.
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_chalf_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_chalf_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_char_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_char_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_cholesky_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_cholesky_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_cholesky_inverse_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_cholesky_inverse_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_cholesky_solve_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_cholesky_solve_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_clamp_mlu_float32", #PYTORCH-9208
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_column_stack_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_column_stack_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_combinations_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_combinations_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_complex_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_conj_mlu_complex64",          # TODO(PYTORCH-10317)
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_conj_physical_mlu_complex64", # TODO(PYTORCH-10317)
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_constant_pad_nd_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_contiguous_mlu_complex64",  # TODO(PYTORCH-8891)
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_copysign_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_corrcoef_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_corrcoef_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_cos_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_cos_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_cosh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_cosh_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_count_nonzero_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_count_nonzero_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_cov_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_cov_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_cross_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_cross_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_cummax_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_cumprod_mlu_complex64", # cumprod op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_cumprod_mlu_float32", # cnnlReduce op does not support bool type
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_cumsum_mlu_complex64", # cumsum op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_cumulative_trapezoid_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_cumulative_trapezoid_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_deg2rad_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_diag_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_diag_embed_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_diagflat_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_diff_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_diff_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_digamma_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_dist_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_dist_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_div_no_rounding_mode_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_dot_mlu_complex64",  # TODO(PYTORCH-8807): MLU dot don't support tensor dtype ComplexFloat.
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_double_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_double_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_dsplit_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_dsplit_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_dstack_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_dstack_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_einsum_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_einsum_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_empty_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_empty_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_empty_like_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_empty_like_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_eq_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_equal_mlu_complex64", # TODO(PYTORCH-8756)
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_erfc_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_exp2_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_exp_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_fft2_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_fft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_fft_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_fft_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_fftn_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_fftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_fftshift_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_fftshift_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_hfft2_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_hfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_hfft_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_hfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_hfftn_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_hfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_ifft2_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_ifft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_ifft_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_ifft_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_ifftn_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_ifftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_ifftshift_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_ifftshift_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_ihfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_ihfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_ihfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_irfft2_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_irfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_irfft_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_irfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_irfftn_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_irfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_rfft2_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_rfft_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fft_rfftn_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fill_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_flatten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_flatten_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_flip_mlu_complex64", # TODO(PYTORCH-8802): flip not support complex dtypes
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fliplr_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fliplr_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_flipud_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_flipud_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_float_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_float_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_float_power_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_float_power_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fmax_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_fmin_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_frexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_full_like_mlu_complex64", # TODO(PYTORCH-8738)
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_gather_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_geqrf_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_geqrf_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_gradient_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_gradient_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_half_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_half_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_heaviside_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_histc_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_hsplit_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_hsplit_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_hstack_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_hstack_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_hypot_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_i0_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_igamma_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_igammac_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_imag_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_index_add_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_index_copy_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_index_fill_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_index_put_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_index_reduce_mlu_float32",
# TODO(PYTORCH-9105): Complex is not support.
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_index_select_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_inner_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_inner_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_int_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_int_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_isclose_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_isclose_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_isin_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_isinf_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_isinf_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_isnan_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_isneginf_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_isposinf_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_isreal_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_isreal_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_istft_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_istft_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_jiterator_2inputs_2outputs_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_jiterator_2inputs_2outputs_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_jiterator_4inputs_with_extra_args_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_jiterator_4inputs_with_extra_args_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_jiterator_binary_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_jiterator_binary_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_jiterator_binary_return_by_ref_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_jiterator_binary_return_by_ref_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_jiterator_unary_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_jiterator_unary_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_kron_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_kron_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_ldexp_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_ldexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_lerp_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_lerp_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_lgamma_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_cholesky_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_cholesky_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_cholesky_ex_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_cholesky_ex_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_cond_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_cond_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_cross_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_cross_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_det_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_det_singular_mlu_complex64",# TODO(PYTORCH-9646): mlu not support lu_factor now.
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_det_singular_mlu_float32",# TODO(PYTORCH-9646): mlu not support lu_factor now.
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_eig_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_eig_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_eigh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_eigh_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_eigvals_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_eigvals_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_eigvalsh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_eigvalsh_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_householder_product_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_householder_product_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_inv_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_inv_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_inv_ex_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_inv_ex_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_ldl_factor_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_ldl_factor_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_ldl_factor_ex_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_ldl_factor_ex_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_ldl_solve_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_ldl_solve_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_lstsq_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_lstsq_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_lstsq_grad_oriented_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_lstsq_grad_oriented_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_lu_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_lu_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_lu_factor_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_lu_factor_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_lu_factor_ex_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_lu_factor_ex_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_lu_solve_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_lu_solve_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_matrix_norm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_matrix_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_matrix_power_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_matrix_power_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_matrix_rank_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_matrix_rank_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_matrix_rank_hermitian_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_matrix_rank_hermitian_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_multi_dot_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_multi_dot_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_norm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_norm_subgradients_at_zero_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_norm_subgradients_at_zero_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_pinv_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_pinv_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_pinv_hermitian_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_pinv_hermitian_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_pinv_singular_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_pinv_singular_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_qr_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_qr_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_slogdet_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_solve_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_solve_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_solve_ex_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_solve_ex_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_solve_triangular_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_solve_triangular_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_svd_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_svdvals_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_svdvals_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_tensorinv_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_tensorinv_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_tensorsolve_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_tensorsolve_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_vander_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_vander_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_vecdot_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_vecdot_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_vector_norm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linalg_vector_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_linspace_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_log10_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_log2_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_log_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_log_softmax_dtype_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_logaddexp2_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_logaddexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_logcumsumexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_logdet_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_logdet_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_logical_and_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_logical_not_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_logical_or_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_logical_xor_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_logit_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_logspace_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_logspace_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_logsumexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_long_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_long_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_lu_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_lu_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_lu_solve_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_lu_solve_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_lu_unpack_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_lu_unpack_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_mH_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_mH_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_mT_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_mT_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_masked_amin_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_masked_cumprod_mlu_complex64", # cumprod op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_masked_cumsum_mlu_complex64", # cumsum op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_masked_fill_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_masked_logaddexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_masked_logsumexp_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_masked_mean_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_masked_median_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_masked_normalize_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_masked_normalize_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_masked_prod_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_masked_scatter_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_masked_select_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_masked_softmin_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_masked_std_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_masked_sum_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_masked_var_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_matmul_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_matmul_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_matrix_exp_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_matrix_exp_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_mean_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_meshgrid_list_of_tensors_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_meshgrid_list_of_tensors_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_meshgrid_variadic_tensors_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_meshgrid_variadic_tensors_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_mm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_mode_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_movedim_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_movedim_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_msort_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_mv_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_mvlgamma_mvlgamma_p_1_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_mvlgamma_mvlgamma_p_3_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_mvlgamma_mvlgamma_p_5_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nanmean_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nanmedian_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nanquantile_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_narrow_copy_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_narrow_copy_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_ne_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_neg_mlu_complex64",    #dtype not support
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_new_empty_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_new_empty_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_new_full_mlu_complex64", # TODO(PYTORCH-8738)
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_new_ones_mlu_complex64", # TODO(PYTORCH-8738)
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_new_zeros_mlu_complex64", # zeros does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nextafter_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional__scaled_dot_product_attention_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_adaptive_max_pool3d_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_avg_pool2d_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_avg_pool3d_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_bilinear_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_celu_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_cosine_embedding_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_cosine_similarity_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_cross_entropy_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_ctc_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_dropout_mlu_float32", # TODO(PYTORCH-10316): mlu fused_dropout not equal compose.
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_feature_alpha_dropout_without_train_mlu_complex64", #TODO(PYTORCH-8891): sum not support complex.
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_fractional_max_pool2d_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_fractional_max_pool3d_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_gaussian_nll_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_grid_sample_mlu_float32", # TODO(PYTORCH-10134)
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_group_norm_mlu_float32", # TODO(PYTORCH-9458): group_norm unsupport eps<0.
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_hardshrink_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_hardtanh_mlu_float32", # [PYTORCH-9208]: [cnnlClip]Parameter min must be less than max
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_hinge_embedding_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_huber_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_instance_norm_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_l1_loss_mlu_complex64", # l1_loss op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_linear_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_margin_ranking_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_max_pool2d_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_max_pool3d_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_max_unpool1d_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_max_unpool1d_grad_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_max_unpool2d_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_max_unpool2d_grad_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_max_unpool3d_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_max_unpool3d_grad_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_mish_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_multi_margin_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_multilabel_margin_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_multilabel_soft_margin_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_normalize_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_normalize_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_pad_circular_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_pad_circular_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_pad_constant_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_pad_constant_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_pad_reflect_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_pad_reflect_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_pad_replicate_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_pad_replicate_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_pairwise_distance_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_pairwise_distance_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_pdist_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_pixel_shuffle_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_pixel_shuffle_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_pixel_unshuffle_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_pixel_unshuffle_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_prelu_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_relu6_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_rrelu_mlu_float32", # PYTORCH-10240
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_soft_margin_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_softmin_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_softmin_with_dtype_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_softmin_with_dtype_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_softshrink_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_softsign_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_softsign_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_tanhshrink_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_tanhshrink_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_triplet_margin_loss_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_triplet_margin_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_triplet_margin_with_distance_loss_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_triplet_margin_with_distance_loss_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nn_functional_unfold_mlu_complex64",  # TODO(PYTORCH-8763): MLU nn_unfold don't support tensor dtype ComplexFloat.
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_nonzero_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_norm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_norm_mlu_float32", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_norm_fro_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_norm_inf_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_norm_inf_mlu_float32", # mlu norm not support p =inf
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_norm_nuc_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_ones_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_ones_like_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_ormqr_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_ormqr_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_pca_lowrank_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_permute_mlu_complex64", # Depends on fill supports complex.
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_pinverse_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_pinverse_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_polar_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_polygamma_polygamma_n_0_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_polygamma_polygamma_n_1_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_polygamma_polygamma_n_2_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_polygamma_polygamma_n_3_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_polygamma_polygamma_n_4_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_positive_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_positive_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_pow_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_prod_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_put_mlu_complex64", # put op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_qr_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_quantile_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_rad2deg_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_rand_like_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_rand_like_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_ravel_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_ravel_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_real_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_real_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_reciprocal_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_renorm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_renorm_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_repeat_interleave_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_reshape_as_mlu_complex64", # Depends on fill supports complex.
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_reshape_mlu_complex64", # Depends on fill supports complex.
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_resize__mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_resize__mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_resize_as__mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_resize_as__mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_resolve_conj_mlu_complex64", # TODO(PYTORCH-10317)
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_resolve_neg_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_resolve_neg_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_roll_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_rot90_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_rot90_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_round_decimals_3_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_round_decimals_neg_3_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_rsqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_scatter_add_mlu_float32", # PYTORCH-10058
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_scatter_add_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_scatter_mlu_float32", # PYTORCH-10058
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_scatter_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_scatter_reduce_amax_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_scatter_reduce_amin_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_scatter_reduce_mean_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_scatter_reduce_prod_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_scatter_reduce_sum_mlu_float32", # PYTORCH-10058
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_searchsorted_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_segment_reduce_lengths_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_segment_reduce_offsets_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_select_scatter_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_short_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_short_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_sigmoid_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_signbit_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_sin_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_sin_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_sinc_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_sinc_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_sinh_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_sinh_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_softmax_with_dtype_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_sparse_sampled_addmm_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_sparse_sampled_addmm_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_airy_ai_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_bessel_j0_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_bessel_j1_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_bessel_y0_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_bessel_y1_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_chebyshev_polynomial_t_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_chebyshev_polynomial_u_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_chebyshev_polynomial_v_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_chebyshev_polynomial_w_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_entr_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_erfcx_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_hermite_polynomial_h_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_hermite_polynomial_he_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_i0e_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_i1_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_i1e_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_laguerre_polynomial_l_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_legendre_polynomial_p_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_log_ndtr_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_modified_bessel_i0_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_modified_bessel_i1_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_modified_bessel_k0_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_modified_bessel_k1_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_ndtr_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_ndtri_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_polygamma_special_polygamma_n_0_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_scaled_modified_bessel_k0_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_scaled_modified_bessel_k1_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_shifted_chebyshev_polynomial_t_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_shifted_chebyshev_polynomial_u_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_shifted_chebyshev_polynomial_v_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_shifted_chebyshev_polynomial_w_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_spherical_bessel_j0_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_xlog1py_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_special_zeta_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_sqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_square_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_square_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_squeeze_mlu_complex64", # the testcase depends on sum op, sum unsupport complex64 on mlu
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_stack_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_std_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_std_mean_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_std_mean_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_stft_mlu_complex64",  # TODO(PYTORCH-10372): MLU stft don't support tensor dtype ComplexFloat.
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_stft_mlu_float32",  # TODO(PYTORCH-10376): MLU stft don't support backward.
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_sum_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_sum_to_size_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_sum_to_size_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_svd_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_symeig_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_symeig_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_t_mlu_complex64", # Depends on fill supports complex.
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_take_along_dim_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_take_along_dim_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_take_mlu_complex64", # take op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_tan_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_tan_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_tanh_mlu_complex64", # tanh unsupport complex64
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_tensordot_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_tensordot_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_tile_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_tile_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_to_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_to_sparse_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_to_sparse_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_trace_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_trace_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_transpose_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_trapezoid_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_trapezoid_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_trapz_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_trapz_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_triangular_solve_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_triangular_solve_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_true_divide_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_true_divide_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_unflatten_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_unflatten_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_unfold_copy_mlu_complex64", # unfold op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_unfold_mlu_complex64", # unfold op does not support complex64 on mlu
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_unique_consecutive_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_unsqueeze_mlu_complex64",# the testcase depends on sum op, sum unsupport complex64 on mlu
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_var_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_var_mean_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_var_mean_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_view_as_complex_mlu_float32", # (TODO)[PYTORCH-9217] fill op does not support complex.
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_view_as_mlu_complex64", # (TODO)[PYTORCH-9217] fill op does not support complex.
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_view_mlu_complex64", # (TODO)[PYTORCH-9217] fill op does not support complex.
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_vdot_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_vdot_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_vsplit_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_vsplit_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_vstack_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_vstack_mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_where_mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_zero__mlu_complex64",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_zero__mlu_float32",
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_zeros_mlu_complex64", # zeros does not support complex32 on mlu
"test_ops_py_TestCommonMLU_test_variant_consistency_eager_zeros_like_mlu_complex64",
"test_ops_py_TestCompositeComplianceMLU_test_backward_H_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward___getitem___mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward___rmatmul___mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward___rmod___mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward___rpow___mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_acos_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_acosh_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_amin_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_as_strided_scatter_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_asin_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_asinh_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_atan2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_atan_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_atanh_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_atleast_1d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_atleast_2d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_atleast_3d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_bfloat16_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_block_diag_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_broadcast_tensors_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_broadcast_to_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_cartesian_prod_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_cdist_mlu_float32", #TODO(PYTORCH-8665): cdist only supports p=1 now.
"test_ops_py_TestCompositeComplianceMLU_test_backward_chalf_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_cholesky_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_cholesky_inverse_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_cholesky_solve_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_clamp_mlu_float32", # PYTORCH-9208
"test_ops_py_TestCompositeComplianceMLU_test_backward_column_stack_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_combinations_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_complex_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_copysign_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_corrcoef_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_cos_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_cosh_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_cov_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_cross_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_cummax_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_cumprod_mlu_float32", # cnnlReduce op does not support bool type
"test_ops_py_TestCompositeComplianceMLU_test_backward_cumulative_trapezoid_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_deg2rad_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_diff_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_digamma_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_dist_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_double_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_dsplit_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_dstack_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_einsum_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_erfc_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_exp2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_fft_fft2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_fft_fft_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_fft_fftn_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_fft_fftshift_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_fft_hfft2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_fft_hfft_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_fft_hfftn_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_fft_ifft2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_fft_ifft_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_fft_ifftn_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_fft_ifftshift_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_fft_ihfft2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_fft_ihfft_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_fft_ihfftn_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_fft_irfft2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_fft_irfft_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_fft_irfftn_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_fft_rfft2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_fft_rfft_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_fft_rfftn_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_flatten_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_fliplr_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_flipud_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_float_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_float_power_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_fmax_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_fmin_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_frexp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_gradient_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_half_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_hsplit_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_hstack_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_hypot_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_i0_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_index_reduce_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_inner_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_istft_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_kron_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_ldexp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_lerp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_lgamma_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_cholesky_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_cholesky_ex_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_cond_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_cross_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_det_singular_mlu_float32",# TODO(PYTORCH-9646): mlu not support lu_factor now.
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_eig_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_eigh_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_eigvals_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_eigvalsh_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_householder_product_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_inv_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_inv_ex_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_lstsq_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_lstsq_grad_oriented_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_lu_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_lu_factor_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_lu_factor_ex_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_lu_solve_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_matrix_norm_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_matrix_power_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_multi_dot_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_norm_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_norm_subgradients_at_zero_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_pinv_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_pinv_hermitian_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_pinv_singular_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_qr_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_solve_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_solve_ex_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_solve_triangular_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_svdvals_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_tensorinv_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_tensorsolve_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_vander_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_vecdot_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_linalg_vector_norm_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_logaddexp2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_logaddexp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_logcumsumexp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_logdet_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_logit_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_logsumexp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_lu_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_lu_solve_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_lu_unpack_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_mH_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_mT_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_masked_amin_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_masked_logaddexp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_masked_logsumexp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_masked_median_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_masked_normalize_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_masked_softmin_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_matmul_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_matrix_exp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_meshgrid_list_of_tensors_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_meshgrid_variadic_tensors_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_mode_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_movedim_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_msort_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_mvlgamma_mvlgamma_p_1_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_mvlgamma_mvlgamma_p_3_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_mvlgamma_mvlgamma_p_5_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nanmean_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nanmedian_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nanquantile_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_narrow_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional__scaled_dot_product_attention_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_adaptive_max_pool3d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_avg_pool2d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_avg_pool3d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_bilinear_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_celu_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_cosine_embedding_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_cosine_similarity_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_cross_entropy_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_ctc_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_fractional_max_pool2d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_fractional_max_pool3d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_gaussian_nll_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_grid_sample_mlu_float32", # TODO(PYTORCH-10134)
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_group_norm_mlu_float32", # TODO(PYTORCH-9648): Assertion is not satisfied.
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_hardshrink_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_hardtanh_mlu_float32",# [PYTORCH-9208]: [cnnlClip]Parameter min must be less than max
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_hinge_embedding_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_huber_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_instance_norm_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_margin_ranking_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_max_pool2d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_max_pool3d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_max_unpool1d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_max_unpool1d_grad_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_max_unpool2d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_max_unpool2d_grad_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_max_unpool3d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_max_unpool3d_grad_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_mish_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_multi_margin_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_multilabel_margin_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_multilabel_soft_margin_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_normalize_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_pad_circular_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_pad_constant_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_pad_reflect_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_pad_replicate_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_pairwise_distance_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_pdist_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_pixel_shuffle_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_pixel_unshuffle_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_prelu_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_relu6_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_soft_margin_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_softmin_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_softmin_with_dtype_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_softshrink_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_softsign_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_tanhshrink_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_triplet_margin_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_nn_functional_triplet_margin_with_distance_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_norm_mlu_float32", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_ops_py_TestCompositeComplianceMLU_test_backward_norm_inf_mlu_float32", # mlu norm not support p = inf
"test_ops_py_TestCompositeComplianceMLU_test_backward_pca_lowrank_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_pinverse_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_polar_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_polygamma_polygamma_n_0_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_polygamma_polygamma_n_1_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_polygamma_polygamma_n_2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_polygamma_polygamma_n_3_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_polygamma_polygamma_n_4_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_positive_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_quantile_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_rad2deg_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_ravel_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_real_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_renorm_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_resolve_neg_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_rot90_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_scatter_reduce_amax_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_scatter_reduce_amin_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_scatter_reduce_mean_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_scatter_reduce_prod_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_segment_reduce_lengths_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_segment_reduce_offsets_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_select_scatter_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_sin_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_sinc_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_sinh_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_sparse_sampled_addmm_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_special_entr_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_special_erfcx_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_special_i0e_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_special_i1_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_special_i1e_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_special_log_ndtr_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_special_ndtr_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_special_ndtri_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_special_polygamma_special_polygamma_n_0_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_special_xlog1py_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_split_with_sizes_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_square_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_std_mean_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_stft_mlu_float32",  # TODO(PYTORCH-10376): MLU stft don't support backward.
"test_ops_py_TestCompositeComplianceMLU_test_backward_sum_to_size_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_symeig_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_take_along_dim_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_tan_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_tensordot_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_tile_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_to_sparse_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_trace_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_trapezoid_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_trapz_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_triangular_solve_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_true_divide_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_unflatten_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_var_mean_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_view_as_complex_mlu_float32", # (TODO)[PYTORCH-9217] fill op does not support complex.
"test_ops_py_TestCompositeComplianceMLU_test_backward_vdot_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_vsplit_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_vstack_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_backward_zero__mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_H_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad___getitem___mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad___rmatmul___mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad___rmod___mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad___rpow___mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_acos_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_acosh_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_allclose_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_amin_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_aminmax_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_argsort_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_argwhere_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_as_strided_scatter_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_asin_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_asinh_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_atan2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_atan_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_atanh_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_atleast_1d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_atleast_2d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_atleast_3d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_bfloat16_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_block_diag_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_bool_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_broadcast_shapes_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_broadcast_tensors_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_broadcast_to_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_bucketize_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_byte_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_cartesian_prod_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_cdist_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_chalf_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_char_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_cholesky_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_cholesky_inverse_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_cholesky_solve_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_clamp_mlu_float32", # PYTORCH-9208
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_column_stack_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_combinations_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_complex_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_copysign_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_corrcoef_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_cos_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_cosh_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_count_nonzero_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_cov_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_cross_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_cummax_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_cumulative_trapezoid_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_deg2rad_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_diff_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_digamma_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_dist_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_double_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_dsplit_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_dstack_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_einsum_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_empty_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_empty_like_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_erfc_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_exp2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_fft_fft2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_fft_fft_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_fft_fftn_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_fft_fftshift_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_fft_hfft2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_fft_hfft_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_fft_hfftn_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_fft_ifft2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_fft_ifft_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_fft_ifftn_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_fft_ifftshift_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_fft_ihfft2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_fft_ihfft_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_fft_ihfftn_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_fft_irfft2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_fft_irfft_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_fft_irfftn_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_fft_rfft2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_fft_rfft_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_fft_rfftn_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_flatten_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_fliplr_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_flipud_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_float_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_float_power_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_fmax_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_fmin_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_frexp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_geqrf_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_gradient_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_half_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_heaviside_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_histc_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_hsplit_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_hstack_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_hypot_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_i0_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_igamma_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_igammac_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_index_reduce_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_inner_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_int_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_isclose_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_isin_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_isinf_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_isneginf_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_isposinf_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_isreal_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_istft_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_jiterator_2inputs_2outputs_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_jiterator_4inputs_with_extra_args_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_jiterator_binary_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_jiterator_binary_return_by_ref_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_jiterator_unary_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_kron_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_ldexp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_lerp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_lgamma_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_cholesky_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_cholesky_ex_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_cond_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_cross_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_det_mlu_float32",# TODO(PYTORCH-10251): mlu det use fused but native use compose.
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_det_singular_mlu_float32",# TODO(PYTORCH-9646): mlu not support lu_factor now.
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_eig_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_eigh_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_eigvals_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_eigvalsh_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_householder_product_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_inv_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_inv_ex_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_ldl_factor_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_ldl_factor_ex_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_ldl_solve_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_lstsq_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_lstsq_grad_oriented_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_lu_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_lu_factor_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_lu_factor_ex_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_lu_solve_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_matrix_norm_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_matrix_power_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_matrix_rank_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_matrix_rank_hermitian_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_multi_dot_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_norm_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_pinv_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_pinv_hermitian_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_pinv_singular_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_qr_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_solve_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_solve_ex_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_solve_triangular_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_svdvals_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_tensorinv_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_tensorsolve_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_vander_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_vecdot_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_linalg_vector_norm_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_logaddexp2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_logaddexp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_logcumsumexp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_logdet_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_logit_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_logspace_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_logsumexp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_long_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_lu_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_lu_solve_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_lu_unpack_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_mH_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_mT_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_masked_amin_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_masked_logaddexp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_masked_logsumexp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_masked_median_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_masked_normalize_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_masked_prod_mlu_float32", # AssertionError: Scalars are not close!Absolute difference: 4.0, Relative difference: 2.2430325800482252e-05
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_masked_softmin_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_matmul_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_matrix_exp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_meshgrid_list_of_tensors_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_meshgrid_variadic_tensors_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_mode_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_movedim_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_msort_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_mvlgamma_mvlgamma_p_1_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_mvlgamma_mvlgamma_p_3_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_mvlgamma_mvlgamma_p_5_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nanmean_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nanmedian_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nanquantile_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_narrow_copy_mlu_float32",    # TODO(PYTORCH-9290): We can not calc save_invstd due to lack of kernel.
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_native_batch_norm_mlu_float32",    # TODO(PYTORCH-9290): We can not calc save_invstd due to lack of kernel.
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_new_empty_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_new_ones_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nextafter_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional__scaled_dot_product_attention_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_adaptive_max_pool3d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_avg_pool2d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_avg_pool3d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_bilinear_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_celu_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_cosine_embedding_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_cosine_similarity_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_cross_entropy_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_ctc_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_fractional_max_pool2d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_fractional_max_pool3d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_gaussian_nll_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_grid_sample_mlu_float32", # TODO(PYTORCH-10134)
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_group_norm_mlu_float32", # TODO(PYTORCH-9648): Assertion is not satisfied.
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_hardshrink_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_hardtanh_mlu_float32", # [PYTORCH-9208]: [cnnlClip]Parameter min must be less than max
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_hinge_embedding_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_huber_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_instance_norm_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_margin_ranking_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_max_pool2d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_max_pool3d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_max_unpool1d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_max_unpool1d_grad_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_max_unpool2d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_max_unpool2d_grad_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_max_unpool3d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_max_unpool3d_grad_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_mish_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_multi_margin_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_multilabel_margin_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_multilabel_soft_margin_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_normalize_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_pad_circular_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_pad_constant_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_pad_reflect_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_pad_replicate_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_pairwise_distance_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_pdist_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_pixel_shuffle_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_pixel_unshuffle_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_prelu_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_relu6_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_rrelu_mlu_float32", # PYTORCH-10240
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_soft_margin_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_softmin_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_softmin_with_dtype_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_softshrink_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_softsign_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_tanhshrink_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_triplet_margin_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nn_functional_triplet_margin_with_distance_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_nonzero_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_norm_mlu_float32", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_norm_inf_mlu_float32", # mlu norm not support p = inf
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_ones_like_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_ormqr_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_pca_lowrank_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_pinverse_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_polar_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_polygamma_polygamma_n_0_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_polygamma_polygamma_n_1_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_polygamma_polygamma_n_2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_polygamma_polygamma_n_3_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_polygamma_polygamma_n_4_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_positive_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_quantile_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_rad2deg_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_rand_like_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_ravel_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_real_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_renorm_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_resize__mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_resize_as__mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_resolve_neg_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_rot90_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_scatter_reduce_amax_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_scatter_reduce_amin_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_scatter_reduce_mean_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_scatter_reduce_prod_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_searchsorted_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_segment_reduce_lengths_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_segment_reduce_offsets_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_select_scatter_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_short_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_signbit_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_sin_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_sinc_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_sinh_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_sparse_sampled_addmm_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_airy_ai_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_bessel_j0_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_bessel_j1_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_bessel_y0_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_bessel_y1_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_chebyshev_polynomial_t_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_chebyshev_polynomial_u_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_chebyshev_polynomial_v_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_chebyshev_polynomial_w_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_entr_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_erfcx_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_hermite_polynomial_h_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_hermite_polynomial_he_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_i0e_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_i1_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_i1e_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_laguerre_polynomial_l_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_legendre_polynomial_p_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_log_ndtr_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_modified_bessel_i0_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_modified_bessel_i1_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_modified_bessel_k0_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_modified_bessel_k1_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_ndtr_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_ndtri_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_polygamma_special_polygamma_n_0_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_scaled_modified_bessel_k0_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_scaled_modified_bessel_k1_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_shifted_chebyshev_polynomial_t_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_shifted_chebyshev_polynomial_u_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_shifted_chebyshev_polynomial_v_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_shifted_chebyshev_polynomial_w_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_spherical_bessel_j0_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_xlog1py_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_special_zeta_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_square_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_std_mean_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_stft_mlu_float32",  # TODO(PYTORCH-10374): CNNL FFT currently only support onesided.
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_sum_to_size_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_symeig_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_take_along_dim_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_tan_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_tensordot_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_tile_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_to_sparse_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_trace_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_trapezoid_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_trapz_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_triangular_solve_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_true_divide_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_unflatten_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_unique_consecutive_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_var_mean_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_vdot_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_vsplit_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_vstack_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_zero__mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_forward_ad_zeros_like_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_H_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator___getitem___mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator___rmatmul___mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator___rmod___mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator___rpow___mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_acos_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_acosh_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_allclose_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_amin_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_aminmax_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_argsort_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_argwhere_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_as_strided_scatter_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_asin_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_asinh_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_atan2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_atan_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_atanh_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_atleast_1d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_atleast_2d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_atleast_3d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_bfloat16_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_block_diag_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_bool_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_broadcast_shapes_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_broadcast_tensors_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_broadcast_to_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_bucketize_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_byte_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_cartesian_prod_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_cdist_mlu_float32", #TODO(PYTORCH-8665): cdist only supports p=1 now.
"test_ops_py_TestCompositeComplianceMLU_test_operator_chalf_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_char_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_cholesky_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_cholesky_inverse_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_cholesky_solve_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_clamp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_column_stack_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_combinations_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_complex_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_copysign_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_corrcoef_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_cos_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_cosh_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_count_nonzero_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_cov_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_cross_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_cummax_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_cumulative_trapezoid_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_deg2rad_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_diff_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_digamma_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_dist_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_double_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_dsplit_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_dstack_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_einsum_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_empty_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_empty_like_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_erfc_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_exp2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_fft_fft2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_fft_fft_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_fft_fftn_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_fft_fftshift_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_fft_hfft2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_fft_hfft_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_fft_hfftn_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_fft_ifft2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_fft_ifft_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_fft_ifftn_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_fft_ifftshift_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_fft_ihfft2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_fft_ihfft_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_fft_ihfftn_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_fft_irfft2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_fft_irfft_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_fft_irfftn_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_fft_rfft2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_fft_rfft_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_fft_rfftn_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_flatten_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_fliplr_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_flipud_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_float_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_float_power_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_fmax_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_fmin_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_frexp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_geqrf_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_gradient_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_half_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_heaviside_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_histc_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_hsplit_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_hstack_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_hypot_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_i0_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_igamma_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_igammac_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_index_reduce_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_inner_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_int_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_isclose_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_isin_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_isinf_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_isneginf_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_isposinf_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_isreal_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_istft_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_jiterator_2inputs_2outputs_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_jiterator_4inputs_with_extra_args_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_jiterator_binary_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_jiterator_binary_return_by_ref_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_jiterator_unary_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_kron_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_ldexp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_lerp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_lgamma_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_cholesky_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_cholesky_ex_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_cond_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_cross_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_det_singular_mlu_float32",# TODO(PYTORCH-9646): mlu not support lu_factor now.
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_eig_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_eigh_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_eigvals_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_eigvalsh_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_householder_product_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_inv_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_inv_ex_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_ldl_factor_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_ldl_factor_ex_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_ldl_solve_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_lstsq_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_lstsq_grad_oriented_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_lu_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_lu_factor_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_lu_factor_ex_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_lu_solve_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_matrix_norm_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_matrix_power_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_matrix_rank_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_matrix_rank_hermitian_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_multi_dot_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_norm_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_norm_subgradients_at_zero_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_pinv_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_pinv_hermitian_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_pinv_singular_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_qr_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_solve_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_solve_ex_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_solve_triangular_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_svdvals_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_tensorinv_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_tensorsolve_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_vander_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_vecdot_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_linalg_vector_norm_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_logaddexp2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_logaddexp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_logcumsumexp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_logdet_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_logit_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_logspace_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_logsumexp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_long_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_lu_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_lu_solve_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_lu_unpack_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_mH_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_mT_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_masked_amin_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_masked_logaddexp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_masked_logsumexp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_masked_median_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_masked_normalize_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_masked_softmin_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_matmul_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_matrix_exp_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_meshgrid_list_of_tensors_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_meshgrid_variadic_tensors_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_mode_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_movedim_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_msort_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_mvlgamma_mvlgamma_p_1_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_mvlgamma_mvlgamma_p_3_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_mvlgamma_mvlgamma_p_5_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nanmean_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nanmedian_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nanquantile_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_narrow_copy_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_native_batch_norm_mlu_float32",    # TODO(PYTORCH-9290): We can not calc save_invstd due to lack of kernel.
"test_ops_py_TestCompositeComplianceMLU_test_operator_new_empty_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nextafter_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional__scaled_dot_product_attention_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_adaptive_max_pool3d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_avg_pool2d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_avg_pool3d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_bilinear_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_celu_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_cosine_embedding_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_cosine_similarity_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_cross_entropy_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_ctc_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_fractional_max_pool2d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_fractional_max_pool3d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_gaussian_nll_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_grid_sample_mlu_float32", # TODO(PYTORCH-10134)
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_group_norm_mlu_float32", # TODO(PYTORCH-9458): group_norm unsupport eps<0.
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_hardshrink_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_hardtanh_mlu_float32", # [PYTORCH-9208]: [cnnlClip]Parameter min must be less than max
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_hinge_embedding_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_huber_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_instance_norm_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_margin_ranking_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_max_pool2d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_max_pool3d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_max_unpool1d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_max_unpool1d_grad_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_max_unpool2d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_max_unpool2d_grad_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_max_unpool3d_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_max_unpool3d_grad_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_mish_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_multi_margin_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_multilabel_margin_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_multilabel_soft_margin_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_normalize_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_pad_circular_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_pad_constant_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_pad_reflect_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_pad_replicate_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_pairwise_distance_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_pdist_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_pixel_shuffle_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_pixel_unshuffle_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_prelu_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_relu6_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_soft_margin_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_softmin_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_softmin_with_dtype_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_softshrink_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_softsign_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_tanhshrink_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_triplet_margin_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_nn_functional_triplet_margin_with_distance_loss_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_norm_mlu_float32", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_ops_py_TestCompositeComplianceMLU_test_operator_norm_inf_mlu_float32", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_ops_py_TestCompositeComplianceMLU_test_operator_norm_nuc_mlu_float32", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_ops_py_TestCompositeComplianceMLU_test_operator_ormqr_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_pca_lowrank_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_pinverse_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_polar_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_polygamma_polygamma_n_0_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_polygamma_polygamma_n_1_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_polygamma_polygamma_n_2_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_polygamma_polygamma_n_3_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_polygamma_polygamma_n_4_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_positive_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_quantile_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_rad2deg_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_rand_like_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_ravel_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_real_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_renorm_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_resize__mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_resize_as__mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_resolve_neg_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_rot90_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_scatter_reduce_amax_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_scatter_reduce_amin_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_scatter_reduce_mean_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_scatter_reduce_prod_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_searchsorted_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_segment_reduce_lengths_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_segment_reduce_offsets_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_select_scatter_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_short_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_signbit_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_sin_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_sinc_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_sinh_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_sparse_sampled_addmm_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_airy_ai_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_bessel_j0_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_bessel_j1_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_bessel_y0_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_bessel_y1_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_chebyshev_polynomial_t_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_chebyshev_polynomial_u_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_chebyshev_polynomial_v_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_chebyshev_polynomial_w_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_entr_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_erfcx_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_hermite_polynomial_h_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_hermite_polynomial_he_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_i0e_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_i1_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_i1e_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_laguerre_polynomial_l_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_legendre_polynomial_p_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_log_ndtr_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_modified_bessel_i0_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_modified_bessel_i1_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_modified_bessel_k0_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_modified_bessel_k1_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_ndtr_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_ndtri_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_polygamma_special_polygamma_n_0_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_scaled_modified_bessel_k0_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_scaled_modified_bessel_k1_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_shifted_chebyshev_polynomial_t_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_shifted_chebyshev_polynomial_u_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_shifted_chebyshev_polynomial_v_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_shifted_chebyshev_polynomial_w_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_spherical_bessel_j0_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_xlog1py_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_special_zeta_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_square_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_std_mean_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_stft_mlu_float32",  # TODO(PYTORCH-10374): CNNL FFT currently only support onesided.
"test_ops_py_TestCompositeComplianceMLU_test_operator_sum_to_size_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_symeig_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_take_along_dim_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_tan_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_tensordot_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_tile_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_to_sparse_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_trace_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_trapezoid_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_trapz_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_triangular_solve_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_true_divide_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_unflatten_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_unique_consecutive_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_var_mean_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_vdot_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_vsplit_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_vstack_mlu_float32",
"test_ops_py_TestCompositeComplianceMLU_test_operator_zero__mlu_float32",
"test_ops_py_TestMathBitsMLU_test_conj_view_H_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_T_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view___getitem___mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view___rdiv___mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_ops_py_TestMathBitsMLU_test_conj_view___rmatmul___mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view___rpow___mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_acos_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_acosh_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_add_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_addcdiv_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_addr_mlu_complex64",  # TODO(PYTORCH-8811): MLU addr don't support tensor dtype ComplexFloat.
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_all_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_allclose_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_any_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_as_strided_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_asin_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_asinh_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_atan_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_atanh_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_atleast_1d_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_atleast_2d_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_atleast_3d_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_broadcast_tensors_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_broadcast_to_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_column_stack_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_constant_pad_nd_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_cos_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_cosh_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_cumsum_mlu_complex64", # cumsum op does not support complex64 on mlu
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_diag_embed_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_div_no_rounding_mode_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_dsplit_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_dstack_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_empty_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_empty_like_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_eq_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_exp_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_fft_fft2_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_fft_fft_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_fft_fftn_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_fft_fftshift_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_fft_hfft2_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_fft_hfft_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_fft_hfftn_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_fft_ifft2_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_fft_ifft_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_fft_ifftn_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_fft_ifftshift_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_fft_irfft2_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_fft_irfft_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_fft_irfftn_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_fill_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_flatten_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_flip_mlu_complex64", # TODO(PYTORCH-8802): flip not support complex dtypes
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_fliplr_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_flipud_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_float_power_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_hsplit_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_hstack_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_imag_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_index_add_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_index_copy_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_index_fill_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_index_select_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_isclose_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_isinf_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_isnan_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_isreal_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_linalg_matrix_norm_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_linalg_norm_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_linalg_svd_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_linalg_svdvals_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_linalg_vector_norm_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_linspace_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_log10_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_log2_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_log_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_logical_and_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_logical_not_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_logical_or_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_logical_xor_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_logspace_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_masked_fill_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_mean_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_meshgrid_list_of_tensors_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_meshgrid_variadic_tensors_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_movedim_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_mul_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_ne_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_neg_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_new_empty_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_new_full_mlu_complex64", # TODO(PYTORCH-8738)
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_new_ones_mlu_complex64", # TODO(PYTORCH-8738)
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_new_zeros_mlu_complex64", # zeros does not support complex64 on mlu
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_nn_functional_l1_loss_mlu_complex64", # l1_loss op does not support complex64 on mlu
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_nn_functional_pairwise_distance_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_nn_functional_tanhshrink_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_ones_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_positive_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_pow_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_prod_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_ravel_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_real_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_reciprocal_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_rot90_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_rsqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_rsub_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_sgn_mlu_complex64", # TODO(PYTORCH-9007): not support calculation with complex and fp32
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_sigmoid_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_sin_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_sinc_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_sinh_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_sqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_square_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_std_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_std_mean_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_sub_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_sum_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_sum_to_size_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_tan_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_tanh_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_to_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_trace_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_true_divide_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_unflatten_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_unfold_copy_mlu_complex64", # unfold op does not support complex64 on mlu
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_unfold_mlu_complex64", # unfold op does not support complex64 on mlu
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_var_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_var_mean_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_vsplit_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_vstack_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_where_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view__refs_zeros_mlu_complex64",  # zeros does not support complex64 on mlu
"test_ops_py_TestMathBitsMLU_test_conj_view_acos_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_acosh_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_addbmm_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_addcdiv_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_addcmul_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_addmm_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_addmm_decomposed_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_addmv_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_addr_mlu_complex64",  # TODO(PYTORCH-8811): MLU addr don't support tensor dtype ComplexFloat.
"test_ops_py_TestMathBitsMLU_test_conj_view_all_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_allclose_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_any_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_argwhere_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_as_strided_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_as_strided_scatter_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_asin_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_asinh_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_atan_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_atanh_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_atleast_1d_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_atleast_2d_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_atleast_3d_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_baddbmm_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_bfloat16_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_block_diag_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_bmm_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_bool_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_broadcast_tensors_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_broadcast_to_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_byte_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_cartesian_prod_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_cat_mlu_complex64", # Depends on copy supports conj.
"test_ops_py_TestMathBitsMLU_test_conj_view_chalf_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_char_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_cholesky_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_cholesky_inverse_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_cholesky_solve_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_clone_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_column_stack_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_combinations_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_conj_mlu_complex64",          # TODO(PYTORCH-10317)
"test_ops_py_TestMathBitsMLU_test_conj_view_conj_physical_mlu_complex64", # TODO(PYTORCH-10317)
"test_ops_py_TestMathBitsMLU_test_conj_view_constant_pad_nd_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_contiguous_mlu_complex64", # TODO(PYTORCH-8891)
"test_ops_py_TestMathBitsMLU_test_conj_view_corrcoef_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_cos_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_cosh_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_count_nonzero_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_cov_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_cross_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_cumprod_mlu_complex64", # cumprod op does not support complex64 on mlu
"test_ops_py_TestMathBitsMLU_test_conj_view_cumsum_mlu_complex64", # cumsum op does not support complex64 on mlu
"test_ops_py_TestMathBitsMLU_test_conj_view_cumulative_trapezoid_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_diag_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_diag_embed_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_diagflat_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_diff_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_dist_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_div_no_rounding_mode_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_ops_py_TestMathBitsMLU_test_conj_view_dot_mlu_complex64",  # TODO(PYTORCH-8807): MLU dot don't support tensor dtype ComplexFloat.
"test_ops_py_TestMathBitsMLU_test_conj_view_double_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_dsplit_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_dstack_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_einsum_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_empty_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_empty_like_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_eq_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_equal_mlu_complex64", # TODO(PYTORCH-8756)
"test_ops_py_TestMathBitsMLU_test_conj_view_exp_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_fft_fft2_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_fft_fft_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_fft_fftn_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_fft_fftshift_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_fft_hfft2_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_fft_hfft_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_fft_hfftn_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_fft_ifft2_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_fft_ifft_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_fft_ifftn_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_fft_ifftshift_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_fft_irfft2_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_fft_irfft_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_fft_irfftn_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_fill_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_flatten_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_flip_mlu_complex64", # TODO(PYTORCH-8802): flip not support complex dtypes
"test_ops_py_TestMathBitsMLU_test_conj_view_fliplr_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_flipud_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_float_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_float_power_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_full_like_mlu_complex64", # TODO(PYTORCH-8738)
"test_ops_py_TestMathBitsMLU_test_conj_view_gather_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_geqrf_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_gradient_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_half_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_hsplit_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_hstack_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_imag_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_index_add_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_index_copy_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_index_fill_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_index_put_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_index_select_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_inner_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_int_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_isclose_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_isinf_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_isnan_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_isreal_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_istft_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_jiterator_2inputs_2outputs_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_jiterator_4inputs_with_extra_args_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_jiterator_binary_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_jiterator_binary_return_by_ref_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_jiterator_unary_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_kron_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_ldexp_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_lerp_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_cholesky_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_cholesky_ex_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_cond_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_cross_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_det_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_det_singular_mlu_complex64",# TODO(PYTORCH-9646): mlu not support lu_factor now.
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_eig_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_eigh_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_eigvals_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_eigvalsh_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_householder_product_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_inv_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_inv_ex_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_ldl_factor_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_ldl_factor_ex_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_ldl_solve_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_lstsq_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_lstsq_grad_oriented_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_lu_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_lu_factor_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_lu_factor_ex_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_lu_solve_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_matrix_norm_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_matrix_power_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_matrix_rank_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_matrix_rank_hermitian_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_multi_dot_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_norm_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_norm_subgradients_at_zero_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_pinv_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_pinv_hermitian_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_pinv_singular_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_qr_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_slogdet_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_solve_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_solve_ex_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_solve_triangular_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_svd_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_svdvals_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_tensorinv_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_tensorsolve_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_vander_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_vecdot_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linalg_vector_norm_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_linspace_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_log10_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_log2_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_log_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_log_softmax_dtype_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_logdet_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_logical_and_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_logical_not_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_logical_or_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_logical_xor_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_logspace_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_long_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_lu_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_lu_solve_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_lu_unpack_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_mH_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_mT_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_masked_cumprod_mlu_complex64", # cumprod op does not support complex64 on mlu
"test_ops_py_TestMathBitsMLU_test_conj_view_masked_cumsum_mlu_complex64", # cumsum op does not support complex64 on mlu
"test_ops_py_TestMathBitsMLU_test_conj_view_masked_fill_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_masked_mean_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_masked_normalize_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_masked_prod_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_masked_scatter_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_masked_select_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_masked_std_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_masked_sum_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_masked_var_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_matmul_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_matrix_exp_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_mean_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_meshgrid_list_of_tensors_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_meshgrid_variadic_tensors_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_mm_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_movedim_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_mv_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_narrow_copy_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_narrow_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_ne_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_neg_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_new_empty_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_new_full_mlu_complex64", # TODO(PYTORCH-8738)
"test_ops_py_TestMathBitsMLU_test_conj_view_new_ones_mlu_complex64", # TODO(PYTORCH-8738)
"test_ops_py_TestMathBitsMLU_test_conj_view_new_zeros_mlu_complex64",  # zeros does not support complex64 on mlu
"test_ops_py_TestMathBitsMLU_test_conj_view_nn_functional_feature_alpha_dropout_without_train_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_nn_functional_l1_loss_mlu_complex64", # l1_loss op does not support complex64 on mlu
"test_ops_py_TestMathBitsMLU_test_conj_view_nn_functional_linear_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_nn_functional_normalize_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_nn_functional_pad_circular_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_nn_functional_pad_constant_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_nn_functional_pad_reflect_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_nn_functional_pad_replicate_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_nn_functional_pairwise_distance_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_nn_functional_pixel_shuffle_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_nn_functional_pixel_unshuffle_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_nn_functional_softmin_with_dtype_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_nn_functional_softsign_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_nn_functional_tanhshrink_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_nn_functional_triplet_margin_loss_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_nn_functional_triplet_margin_with_distance_loss_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_nn_functional_unfold_mlu_complex64",  # TODO(PYTORCH-8763): MLU nn_unfold don't support tensor dtype ComplexFloat.
"test_ops_py_TestMathBitsMLU_test_conj_view_nonzero_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_norm_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_norm_fro_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_norm_inf_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_norm_nuc_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_ones_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_ones_like_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_ormqr_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_permute_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_pinverse_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_positive_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_pow_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_prod_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_put_mlu_complex64", # put op does not support complex64 on mlu
"test_ops_py_TestMathBitsMLU_test_conj_view_qr_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_rand_like_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_ravel_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_real_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_reciprocal_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_renorm_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_repeat_interleave_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_reshape_as_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_reshape_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_resize__mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_resize_as__mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_resolve_conj_mlu_complex64",  # TODO(PYTORCH-10317)
"test_ops_py_TestMathBitsMLU_test_conj_view_resolve_neg_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_roll_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_rot90_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_rsqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_ops_py_TestMathBitsMLU_test_conj_view_rsub_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_scatter_add_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_scatter_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_short_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_sigmoid_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_sin_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_sinc_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_sinh_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_softmax_with_dtype_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_sparse_sampled_addmm_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_split_with_sizes_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_sqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_ops_py_TestMathBitsMLU_test_conj_view_square_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_squeeze_mlu_complex64", # the testcase depends on sum op, sum unsupport complex64 on mlu
"test_ops_py_TestMathBitsMLU_test_conj_view_std_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_std_mean_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_stft_mlu_complex64",  # TODO(PYTORCH-10372): MLU stft don't support tensor dtype ComplexFloat.
"test_ops_py_TestMathBitsMLU_test_conj_view_sub_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_sum_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_sum_to_size_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_svd_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_symeig_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_t_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_take_along_dim_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_take_mlu_complex64", # take op does not support complex64 on mlu
"test_ops_py_TestMathBitsMLU_test_conj_view_tan_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_tanh_mlu_complex64", # tanh unsupport complex64
"test_ops_py_TestMathBitsMLU_test_conj_view_tensordot_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_tile_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_to_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_to_sparse_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_trace_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_transpose_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_trapezoid_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_trapz_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_triangular_solve_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_true_divide_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_unflatten_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_unfold_copy_mlu_complex64", # unfold op does not support complex64 on mlu
"test_ops_py_TestMathBitsMLU_test_conj_view_unfold_mlu_complex64", # unfold op does not support complex64 on mlu
"test_ops_py_TestMathBitsMLU_test_conj_view_unsqueeze_mlu_complex64", # testcase depends on sum op, sum unsupport complex64 on mlu
"test_ops_py_TestMathBitsMLU_test_conj_view_var_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_var_mean_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_vdot_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_view_as_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_view_as_real_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_view_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_vsplit_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_vstack_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_where_mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_zero__mlu_complex64",
"test_ops_py_TestMathBitsMLU_test_conj_view_zeros_mlu_complex64", # zeros does not support complex64 on mlu
"test_ops_py_TestMathBitsMLU_test_conj_view_zeros_like_mlu_complex64",
"test_ops_py_TestFakeTensorMLU_test_fake_H_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake___getitem___mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake___rmatmul___mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake___rmod___mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake___rpow___mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_acos_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_acosh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_allclose_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_amin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_aminmax_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_argsort_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_argwhere_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_as_strided_scatter_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_asin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_asinh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_atan2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_atan_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_atanh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_atleast_1d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_atleast_2d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_atleast_3d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_H_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast___getitem___mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast___rmatmul___mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast___rmod___mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast___rpow___mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_acos_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_acosh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_allclose_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_amin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_aminmax_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_argsort_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_argwhere_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_as_strided_scatter_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_asin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_asinh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_atan2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_atan_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_atanh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_atleast_1d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_atleast_2d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_atleast_3d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_bfloat16_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_block_diag_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_bool_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_broadcast_shapes_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_broadcast_tensors_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_broadcast_to_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_bucketize_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_byte_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_cartesian_prod_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_chalf_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_char_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_cholesky_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_cholesky_inverse_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_cholesky_solve_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_column_stack_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_combinations_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_complex_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_copysign_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_corrcoef_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_cos_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_cosh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_count_nonzero_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_cov_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_cross_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_cummax_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_cumulative_trapezoid_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_deg2rad_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_diff_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_digamma_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_dist_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_double_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_dsplit_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_dstack_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_einsum_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_empty_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_empty_like_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_erfc_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_exp2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_fft_fft2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_fft_fft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_fft_fftn_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_fft_fftshift_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_fft_hfft2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_fft_hfft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_fft_hfftn_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_fft_ifft2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_fft_ifft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_fft_ifftn_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_fft_ifftshift_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_fft_ihfft2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_fft_ihfft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_fft_ihfftn_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_fft_irfft2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_fft_irfft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_fft_irfftn_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_fft_rfft2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_fft_rfft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_fft_rfftn_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_flatten_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_fliplr_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_flipud_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_float_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_float_power_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_fmax_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_fmin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_frexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_geqrf_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_gradient_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_half_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_heaviside_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_hsplit_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_hstack_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_hypot_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_i0_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_igamma_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_igammac_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_imag_mlu_complex64",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_index_reduce_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_inner_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_int_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_isclose_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_isin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_isinf_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_isneginf_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_isposinf_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_isreal_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_istft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_jiterator_2inputs_2outputs_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_jiterator_4inputs_with_extra_args_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_jiterator_binary_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_jiterator_binary_return_by_ref_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_jiterator_unary_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_kron_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_ldexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_lerp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_lgamma_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_cholesky_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_cholesky_ex_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_cond_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_cross_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_det_singular_mlu_float32",# TODO(PYTORCH-9646): mlu not support lu_factor now.
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_eig_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_eigh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_eigvals_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_eigvalsh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_householder_product_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_inv_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_inv_ex_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_ldl_factor_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_ldl_factor_ex_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_ldl_solve_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_lstsq_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_lstsq_grad_oriented_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_lu_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_lu_factor_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_lu_factor_ex_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_lu_solve_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_matrix_norm_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_matrix_power_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_matrix_rank_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_matrix_rank_hermitian_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_multi_dot_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_norm_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_norm_subgradients_at_zero_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_pinv_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_pinv_hermitian_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_pinv_singular_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_qr_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_solve_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_solve_ex_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_solve_triangular_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_svdvals_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_tensorinv_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_tensorsolve_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_vander_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_vecdot_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_linalg_vector_norm_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_logaddexp2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_logaddexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_logcumsumexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_logdet_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_logit_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_logspace_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_logsumexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_long_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_lu_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_lu_solve_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_lu_unpack_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_mH_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_mT_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_masked_amin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_masked_logaddexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_masked_logsumexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_masked_median_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_masked_normalize_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_masked_softmin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_matmul_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_matrix_exp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_meshgrid_list_of_tensors_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_meshgrid_variadic_tensors_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_mode_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_movedim_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_msort_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_mvlgamma_mvlgamma_p_1_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_mvlgamma_mvlgamma_p_3_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_mvlgamma_mvlgamma_p_5_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nanmean_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nanmedian_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nanquantile_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_narrow_copy_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_narrow_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_new_empty_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nextafter_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional__scaled_dot_product_attention_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_adaptive_max_pool3d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_bilinear_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_celu_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_cosine_embedding_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_cosine_similarity_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_cross_entropy_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_ctc_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_fractional_max_pool2d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_fractional_max_pool3d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_grid_sample_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_group_norm_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_hardshrink_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_hinge_embedding_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_huber_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_instance_norm_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_margin_ranking_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_max_pool1d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_max_unpool1d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_max_unpool1d_grad_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_max_unpool2d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_max_unpool2d_grad_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_max_unpool3d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_max_unpool3d_grad_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_mish_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_multi_margin_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_multilabel_margin_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_multilabel_soft_margin_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_normalize_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_pad_circular_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_pad_constant_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_pad_reflect_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_pad_replicate_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_pairwise_distance_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_pdist_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_pixel_shuffle_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_pixel_unshuffle_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_prelu_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_relu6_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_soft_margin_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_softmin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_softmin_with_dtype_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_softshrink_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_softsign_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_tanhshrink_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_triplet_margin_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_nn_functional_triplet_margin_with_distance_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_ormqr_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_pca_lowrank_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_pinverse_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_polar_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_polygamma_polygamma_n_0_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_polygamma_polygamma_n_1_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_polygamma_polygamma_n_2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_polygamma_polygamma_n_3_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_polygamma_polygamma_n_4_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_positive_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_quantile_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_rad2deg_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_rand_like_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_ravel_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_real_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_renorm_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_repeat_interleave_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_resize__mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_resize_as__mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_resolve_neg_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_rot90_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_scatter_reduce_amax_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_scatter_reduce_amin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_scatter_reduce_mean_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_scatter_reduce_prod_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_searchsorted_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_segment_reduce_lengths_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_segment_reduce_offsets_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_select_scatter_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_short_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_signbit_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_sin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_sinc_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_sinh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_sparse_sampled_addmm_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_airy_ai_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_bessel_j0_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_bessel_j1_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_bessel_y0_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_bessel_y1_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_chebyshev_polynomial_t_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_chebyshev_polynomial_u_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_chebyshev_polynomial_v_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_chebyshev_polynomial_w_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_entr_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_erfcx_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_hermite_polynomial_h_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_hermite_polynomial_he_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_i0e_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_i1_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_i1e_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_laguerre_polynomial_l_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_legendre_polynomial_p_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_log_ndtr_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_modified_bessel_i0_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_modified_bessel_i1_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_modified_bessel_k0_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_modified_bessel_k1_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_ndtr_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_ndtri_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_polygamma_special_polygamma_n_0_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_scaled_modified_bessel_k0_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_scaled_modified_bessel_k1_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_shifted_chebyshev_polynomial_t_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_shifted_chebyshev_polynomial_u_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_shifted_chebyshev_polynomial_v_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_shifted_chebyshev_polynomial_w_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_spherical_bessel_j0_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_xlog1py_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_special_zeta_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_split_with_sizes_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_square_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_std_mean_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_sum_to_size_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_symeig_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_take_along_dim_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_tan_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_tensor_split_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_tensordot_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_tile_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_to_sparse_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_trace_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_trapezoid_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_trapz_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_triangular_solve_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_true_divide_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_unflatten_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_unique_consecutive_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_var_mean_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_vdot_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_vsplit_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_vstack_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_autocast_zero__mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_bfloat16_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_block_diag_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_bool_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_broadcast_shapes_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_broadcast_tensors_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_broadcast_to_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_bucketize_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_byte_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_cartesian_prod_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_chalf_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_char_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_cholesky_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_cholesky_inverse_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_cholesky_solve_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_column_stack_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_combinations_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_complex_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_copysign_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_corrcoef_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_cos_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_cosh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_count_nonzero_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_cov_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_cross_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_H_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp___getitem___mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp___rmatmul___mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp___rmod___mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp___rpow___mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_acos_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_acosh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_amin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_as_strided_scatter_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_asin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_asinh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_atan2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_atan_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_atanh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_atleast_1d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_atleast_2d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_atleast_3d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_bfloat16_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_block_diag_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_broadcast_tensors_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_broadcast_to_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_cartesian_prod_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_cdist_mlu_float32", #TODO(PYTORCH-8665): cdist only supports p=1 now.
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_chalf_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_cholesky_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_cholesky_inverse_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_cholesky_solve_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_clamp_mlu_float32", # PYTORCH-9208
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_column_stack_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_combinations_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_complex_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_copysign_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_corrcoef_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_cos_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_cosh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_cov_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_cross_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_cummax_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_cumulative_trapezoid_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_deg2rad_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_diff_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_digamma_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_dist_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_double_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_dsplit_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_dstack_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_einsum_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_erfc_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_exp2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_fft_fft2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_fft_fft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_fft_fftn_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_fft_fftshift_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_fft_hfft2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_fft_hfft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_fft_hfftn_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_fft_ifft2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_fft_ifft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_fft_ifftn_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_fft_ifftshift_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_fft_ihfft2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_fft_ihfft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_fft_ihfftn_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_fft_irfft2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_fft_irfft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_fft_irfftn_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_fft_rfft2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_fft_rfft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_fft_rfftn_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_flatten_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_fliplr_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_flipud_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_float_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_float_power_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_fmax_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_fmin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_frexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_gradient_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_half_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_hsplit_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_hstack_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_hypot_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_i0_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_index_reduce_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_inner_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_istft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_kron_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_ldexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_lerp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_lgamma_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_cholesky_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_cholesky_ex_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_cond_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_cross_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_det_singular_mlu_float32",# TODO(PYTORCH-9646): mlu not support lu_factor now.
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_eig_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_eigh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_eigvals_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_eigvalsh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_householder_product_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_inv_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_inv_ex_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_lstsq_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_lstsq_grad_oriented_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_lu_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_lu_factor_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_lu_factor_ex_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_lu_solve_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_matrix_norm_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_matrix_power_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_multi_dot_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_norm_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_norm_subgradients_at_zero_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_pinv_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_pinv_hermitian_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_pinv_singular_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_qr_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_solve_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_solve_ex_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_solve_triangular_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_svd_mlu_float32", # Unexpected success
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_svdvals_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_tensorinv_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_tensorsolve_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_vander_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_vecdot_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_linalg_vector_norm_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_logaddexp2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_logaddexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_logcumsumexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_logdet_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_logit_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_logsumexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_lu_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_lu_solve_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_lu_unpack_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_mH_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_mT_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_masked_amin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_masked_logaddexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_masked_logsumexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_masked_median_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_masked_normalize_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_masked_softmin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_matmul_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_matrix_exp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_meshgrid_list_of_tensors_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_meshgrid_variadic_tensors_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_mode_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_movedim_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_msort_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_mvlgamma_mvlgamma_p_1_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_mvlgamma_mvlgamma_p_3_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_mvlgamma_mvlgamma_p_5_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nanmean_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nanmedian_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nanquantile_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional__scaled_dot_product_attention_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_adaptive_max_pool3d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_avg_pool2d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_avg_pool3d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_bilinear_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_celu_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_cosine_embedding_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_cosine_similarity_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_cross_entropy_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_ctc_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_fractional_max_pool2d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_fractional_max_pool3d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_gaussian_nll_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_grid_sample_mlu_float32", # TODO(PYTORCH-10134)
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_group_norm_mlu_float32", # TODO(PYTORCH-9648): Assertion is not satisfied.
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_hardshrink_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_hardtanh_mlu_float32", # [PYTORCH-9208]
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_hinge_embedding_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_huber_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_instance_norm_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_logsigmoid_mlu_float32", # unexcepted success
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_margin_ranking_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_max_pool2d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_max_pool3d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_max_unpool1d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_max_unpool1d_grad_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_max_unpool2d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_max_unpool2d_grad_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_max_unpool3d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_max_unpool3d_grad_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_mish_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_multi_margin_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_multilabel_margin_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_multilabel_soft_margin_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_normalize_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_pad_circular_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_pad_constant_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_pad_reflect_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_pad_replicate_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_pairwise_distance_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_pdist_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_pixel_shuffle_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_pixel_unshuffle_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_prelu_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_relu6_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_soft_margin_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_softmin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_softmin_with_dtype_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_softshrink_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_softsign_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_tanhshrink_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_triplet_margin_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_nn_functional_triplet_margin_with_distance_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_norm_nuc_mlu_float32", # unexcepted success
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_norm_mlu_float32", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_norm_inf_mlu_float32", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_pca_lowrank_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_pinverse_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_polar_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_polygamma_polygamma_n_0_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_polygamma_polygamma_n_1_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_polygamma_polygamma_n_2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_polygamma_polygamma_n_3_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_polygamma_polygamma_n_4_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_positive_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_quantile_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_rad2deg_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_ravel_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_real_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_renorm_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_resolve_neg_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_roll_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_rot90_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_scatter_reduce_amax_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_scatter_reduce_amin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_scatter_reduce_mean_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_scatter_reduce_prod_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_segment_reduce_lengths_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_segment_reduce_offsets_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_select_scatter_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_sin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_sinc_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_sinh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_sparse_sampled_addmm_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_special_entr_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_special_erfcx_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_special_i0e_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_special_i1_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_special_i1e_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_special_log_ndtr_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_special_ndtr_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_special_ndtri_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_special_polygamma_special_polygamma_n_0_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_special_xlog1py_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_split_with_sizes_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_square_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_std_mean_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_stft_mlu_float32",  # TODO(PYTORCH-10376): MLU stft don't support backward.
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_sum_to_size_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_svd_mlu_float32", # Unexpected success
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_symeig_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_take_along_dim_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_tan_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_tensordot_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_tile_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_to_sparse_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_trace_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_trapezoid_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_trapz_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_triangular_solve_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_true_divide_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_unflatten_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_var_mean_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_vdot_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_view_as_complex_mlu_float32", # Depends on fill supports complex.
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_vsplit_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_vstack_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_amp_zero__mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_H_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp___getitem___mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp___rmatmul___mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp___rmod___mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp___rpow___mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_acos_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_acosh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_amin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_as_strided_scatter_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_asin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_asinh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_atan2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_atan_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_atanh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_atleast_1d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_atleast_2d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_atleast_3d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_bfloat16_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_block_diag_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_broadcast_tensors_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_broadcast_to_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_cartesian_prod_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_cdist_mlu_float32", #TODO(PYTORCH-8665): cdist only supports p=1 now.
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_chalf_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_cholesky_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_cholesky_inverse_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_cholesky_solve_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_clamp_mlu_float32", # PYTORCH-9208
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_column_stack_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_combinations_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_complex_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_copysign_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_corrcoef_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_cos_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_cosh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_cov_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_cross_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_cummax_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_cumulative_trapezoid_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_deg2rad_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_diff_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_digamma_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_dist_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_double_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_dsplit_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_dstack_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_einsum_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_erfc_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_exp2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_fft_fft2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_fft_fft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_fft_fftn_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_fft_fftshift_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_fft_hfft2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_fft_hfft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_fft_hfftn_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_fft_ifft2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_fft_ifft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_fft_ifftn_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_fft_ifftshift_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_fft_ihfft2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_fft_ihfft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_fft_ihfftn_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_fft_irfft2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_fft_irfft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_fft_irfftn_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_fft_rfft2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_fft_rfft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_fft_rfftn_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_flatten_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_fliplr_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_flipud_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_float_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_float_power_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_fmax_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_fmin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_frexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_gradient_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_half_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_hsplit_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_hstack_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_hypot_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_i0_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_index_reduce_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_inner_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_istft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_kron_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_ldexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_lerp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_lgamma_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_cholesky_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_cholesky_ex_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_cond_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_cross_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_det_singular_mlu_float32",# TODO(PYTORCH-9646): mlu not support lu_factor now.
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_eig_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_eigh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_eigvals_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_eigvalsh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_householder_product_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_inv_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_inv_ex_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_lstsq_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_lstsq_grad_oriented_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_lu_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_lu_factor_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_lu_factor_ex_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_lu_solve_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_matrix_norm_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_matrix_power_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_multi_dot_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_norm_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_norm_subgradients_at_zero_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_pinv_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_pinv_hermitian_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_pinv_singular_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_qr_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_solve_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_solve_ex_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_solve_triangular_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_svd_mlu_float32", # Unexpected success
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_svdvals_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_tensorinv_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_tensorsolve_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_vander_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_vecdot_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_linalg_vector_norm_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_logaddexp2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_logaddexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_logcumsumexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_logdet_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_logit_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_logsumexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_lu_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_lu_solve_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_lu_unpack_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_mH_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_mT_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_masked_amin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_masked_logaddexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_masked_logsumexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_masked_median_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_masked_normalize_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_masked_softmin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_matmul_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_matrix_exp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_meshgrid_list_of_tensors_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_meshgrid_variadic_tensors_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_mode_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_movedim_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_msort_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_mvlgamma_mvlgamma_p_1_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_mvlgamma_mvlgamma_p_3_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_mvlgamma_mvlgamma_p_5_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nanmean_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nanmedian_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nanquantile_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional__scaled_dot_product_attention_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_adaptive_max_pool3d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_avg_pool2d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_avg_pool3d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_bilinear_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_celu_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_cosine_embedding_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_cosine_similarity_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_cross_entropy_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_ctc_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_fractional_max_pool2d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_fractional_max_pool3d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_gaussian_nll_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_grid_sample_mlu_float32", # TODO(PYTORCH-10134)
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_group_norm_mlu_float32", # TODO(PYTORCH-9648): Assertion is not satisfied.
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_hardshrink_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_hardtanh_mlu_float32",# [PYTORCH-9208]: [cnnlClip]Parameter min must be less than max
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_hinge_embedding_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_huber_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_instance_norm_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_logsigmoid_mlu_float32", # unexcepted success
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_margin_ranking_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_max_pool2d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_max_pool3d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_max_unpool1d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_max_unpool1d_grad_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_max_unpool2d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_max_unpool2d_grad_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_max_unpool3d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_max_unpool3d_grad_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_mish_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_multi_margin_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_multilabel_margin_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_multilabel_soft_margin_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_normalize_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_pad_circular_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_pad_constant_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_pad_reflect_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_pad_replicate_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_pairwise_distance_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_pdist_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_pixel_shuffle_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_pixel_unshuffle_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_prelu_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_relu6_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_soft_margin_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_softmin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_softmin_with_dtype_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_softshrink_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_softsign_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_tanhshrink_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_triplet_margin_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_nn_functional_triplet_margin_with_distance_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_norm_mlu_float32", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_norm_inf_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_norm_nuc_mlu_float32", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_pca_lowrank_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_pinverse_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_polar_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_polygamma_polygamma_n_0_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_polygamma_polygamma_n_1_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_polygamma_polygamma_n_2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_polygamma_polygamma_n_3_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_polygamma_polygamma_n_4_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_positive_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_quantile_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_rad2deg_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_ravel_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_real_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_renorm_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_resolve_neg_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_roll_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_rot90_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_scatter_reduce_amax_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_scatter_reduce_amin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_scatter_reduce_mean_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_scatter_reduce_prod_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_segment_reduce_lengths_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_segment_reduce_offsets_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_select_scatter_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_sin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_sinc_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_sinh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_sparse_sampled_addmm_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_special_entr_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_special_erfcx_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_special_i0e_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_special_i1_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_special_i1e_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_special_log_ndtr_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_special_ndtr_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_special_ndtri_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_special_polygamma_special_polygamma_n_0_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_special_xlog1py_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_square_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_std_mean_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_stft_mlu_float32",  # TODO(PYTORCH-10376): MLU stft don't support backward.
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_sum_to_size_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_svd_mlu_float32", # Unexpected success
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_svd_lowrank_mlu_float32", # Unexpected success
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_symeig_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_take_along_dim_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_tan_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_tensordot_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_tile_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_to_sparse_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_trace_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_trapezoid_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_trapz_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_triangular_solve_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_true_divide_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_unflatten_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_var_mean_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_view_as_complex_mlu_float32", # Depends on fill supports complex.
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_vdot_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_vsplit_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_vstack_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_crossref_backward_no_amp_zero__mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_cummax_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_cumulative_trapezoid_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_deg2rad_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_diff_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_digamma_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_dist_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_double_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_dsplit_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_dstack_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_einsum_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_empty_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_empty_like_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_erfc_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_exp2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_fft_fft2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_fft_fft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_fft_fftn_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_fft_fftshift_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_fft_hfft2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_fft_hfft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_fft_hfftn_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_fft_ifft2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_fft_ifft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_fft_ifftn_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_fft_ifftshift_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_fft_ihfft2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_fft_ihfft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_fft_ihfftn_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_fft_irfft2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_fft_irfft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_fft_irfftn_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_fft_rfft2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_fft_rfft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_fft_rfftn_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_flatten_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_fliplr_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_flipud_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_float_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_float_power_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_fmax_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_fmin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_frexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_geqrf_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_gradient_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_half_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_heaviside_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_hsplit_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_hstack_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_hypot_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_i0_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_igamma_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_igammac_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_imag_mlu_complex64",
"test_ops_py_TestFakeTensorMLU_test_fake_index_reduce_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_inner_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_int_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_isclose_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_isin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_isinf_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_isneginf_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_isposinf_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_isreal_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_istft_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_jiterator_2inputs_2outputs_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_jiterator_4inputs_with_extra_args_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_jiterator_binary_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_jiterator_binary_return_by_ref_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_jiterator_unary_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_kron_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_ldexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_lerp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_lgamma_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_cholesky_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_cholesky_ex_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_cond_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_cross_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_det_singular_mlu_float32",# TODO(PYTORCH-9646): mlu not support lu_factor now.
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_eig_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_eigh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_eigvals_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_eigvalsh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_householder_product_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_inv_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_inv_ex_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_ldl_factor_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_ldl_factor_ex_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_ldl_solve_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_lstsq_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_lstsq_grad_oriented_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_lu_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_lu_factor_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_lu_factor_ex_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_lu_solve_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_matrix_norm_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_matrix_power_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_matrix_rank_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_matrix_rank_hermitian_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_multi_dot_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_norm_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_norm_subgradients_at_zero_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_pinv_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_pinv_hermitian_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_pinv_singular_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_qr_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_solve_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_solve_ex_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_solve_triangular_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_svdvals_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_tensorinv_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_tensorsolve_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_vander_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_vecdot_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_linalg_vector_norm_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_logaddexp2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_logaddexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_logcumsumexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_logdet_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_logit_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_logspace_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_logsumexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_long_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_lu_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_lu_solve_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_lu_unpack_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_mH_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_mT_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_masked_amin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_masked_logaddexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_masked_logsumexp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_masked_median_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_masked_normalize_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_masked_softmin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_matmul_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_matrix_exp_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_meshgrid_list_of_tensors_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_meshgrid_variadic_tensors_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_mode_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_movedim_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_msort_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_mvlgamma_mvlgamma_p_1_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_mvlgamma_mvlgamma_p_3_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_mvlgamma_mvlgamma_p_5_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nanmean_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nanmedian_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nanquantile_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_narrow_copy_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_new_empty_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nextafter_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional__scaled_dot_product_attention_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_adaptive_max_pool3d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_bilinear_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_celu_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_cosine_embedding_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_cosine_similarity_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_cross_entropy_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_ctc_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_fractional_max_pool2d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_fractional_max_pool3d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_grid_sample_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_group_norm_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_hardshrink_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_hinge_embedding_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_huber_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_instance_norm_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_margin_ranking_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_max_pool1d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_max_unpool1d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_max_unpool1d_grad_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_max_unpool2d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_max_unpool2d_grad_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_max_unpool3d_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_max_unpool3d_grad_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_mish_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_multi_margin_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_multilabel_margin_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_multilabel_soft_margin_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_normalize_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_pad_circular_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_pad_constant_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_pad_reflect_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_pad_replicate_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_pairwise_distance_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_pdist_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_pixel_shuffle_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_pixel_unshuffle_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_prelu_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_relu6_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_soft_margin_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_softmin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_softmin_with_dtype_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_softshrink_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_softsign_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_tanhshrink_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_triplet_margin_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_nn_functional_triplet_margin_with_distance_loss_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_ormqr_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_pca_lowrank_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_pinverse_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_polar_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_polygamma_polygamma_n_0_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_polygamma_polygamma_n_1_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_polygamma_polygamma_n_2_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_polygamma_polygamma_n_3_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_polygamma_polygamma_n_4_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_positive_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_quantile_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_rad2deg_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_rand_like_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_ravel_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_real_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_renorm_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_repeat_interleave_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_resize__mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_resize_as__mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_resolve_neg_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_rot90_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_scatter_reduce_amax_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_scatter_reduce_amin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_scatter_reduce_mean_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_scatter_reduce_prod_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_searchsorted_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_segment_reduce_lengths_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_segment_reduce_offsets_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_select_scatter_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_short_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_signbit_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_sin_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_sinc_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_sinh_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_sparse_sampled_addmm_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_airy_ai_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_bessel_j0_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_bessel_j1_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_bessel_y0_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_bessel_y1_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_chebyshev_polynomial_t_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_chebyshev_polynomial_u_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_chebyshev_polynomial_v_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_chebyshev_polynomial_w_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_entr_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_erfcx_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_hermite_polynomial_h_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_hermite_polynomial_he_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_i0e_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_i1_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_i1e_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_laguerre_polynomial_l_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_legendre_polynomial_p_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_log_ndtr_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_modified_bessel_i0_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_modified_bessel_i1_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_modified_bessel_k0_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_modified_bessel_k1_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_ndtr_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_ndtri_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_polygamma_special_polygamma_n_0_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_scaled_modified_bessel_k0_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_scaled_modified_bessel_k1_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_shifted_chebyshev_polynomial_t_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_shifted_chebyshev_polynomial_u_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_shifted_chebyshev_polynomial_v_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_shifted_chebyshev_polynomial_w_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_spherical_bessel_j0_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_xlog1py_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_special_zeta_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_square_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_std_mean_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_sum_to_size_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_symeig_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_take_along_dim_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_tan_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_tensordot_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_tile_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_to_sparse_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_trace_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_trapezoid_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_trapz_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_triangular_solve_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_true_divide_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_unflatten_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_unique_consecutive_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_var_mean_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_vdot_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_vsplit_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_vstack_mlu_float32",
"test_ops_py_TestFakeTensorMLU_test_fake_zero__mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_H_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags___getitem___mlu_float32",
"test_ops_py_TestTagsMLU_test_tags___rmatmul___mlu_float32",
"test_ops_py_TestTagsMLU_test_tags___rmod___mlu_float32",
"test_ops_py_TestTagsMLU_test_tags___rpow___mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_acos_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_acosh_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_allclose_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_amin_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_asin_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_asinh_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_atan2_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_atan_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_atanh_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_atleast_1d_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_atleast_2d_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_atleast_3d_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_broadcast_shapes_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_broadcast_tensors_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_broadcast_to_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_column_stack_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_copysign_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_cos_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_cosh_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_digamma_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_dsplit_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_dstack_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_empty_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_empty_like_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_erfc_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_exp2_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_fft_fft2_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_fft_fft_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_fft_fftn_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_fft_fftshift_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_fft_hfft2_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_fft_hfft_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_fft_hfftn_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_fft_ifft2_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_fft_ifft_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_fft_ifftn_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_fft_ifftshift_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_fft_ihfft2_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_fft_ihfft_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_fft_ihfftn_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_fft_irfft2_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_fft_irfft_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_fft_irfftn_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_fft_rfft2_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_fft_rfft_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_fft_rfftn_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_flatten_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_fliplr_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_flipud_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_float_power_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_fmax_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_fmin_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_heaviside_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_hsplit_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_hstack_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_hypot_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_i0_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_igamma_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_igammac_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_imag_mlu_complex64",
"test_ops_py_TestTagsMLU_test_tags__refs_isclose_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_isinf_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_isneginf_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_isposinf_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_isreal_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_lgamma_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_linalg_matrix_norm_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_linalg_norm_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_linalg_svdvals_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_linalg_vector_norm_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_logspace_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_logsumexp_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_meshgrid_list_of_tensors_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_meshgrid_variadic_tensors_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_movedim_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_new_empty_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_nextafter_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_nn_functional_celu_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_nn_functional_hardshrink_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_nn_functional_hardtanh_mlu_float32",# [PYTORCH-9208]: [cnnlClip]Parameter min must be less than max
"test_ops_py_TestTagsMLU_test_tags__refs_nn_functional_hinge_embedding_loss_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_nn_functional_huber_loss_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_nn_functional_margin_ranking_loss_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_nn_functional_mish_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_nn_functional_pairwise_distance_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_nn_functional_pdist_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_nn_functional_prelu_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_nn_functional_relu6_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_nn_functional_softshrink_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_nn_functional_tanhshrink_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_positive_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_ravel_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_real_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_rot90_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_signbit_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_sin_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_sinc_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_sinh_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_special_bessel_j0_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_special_bessel_j1_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_special_i0e_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_special_i1_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_special_i1e_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_special_logit_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_special_multigammaln_mvlgamma_p_1_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_special_multigammaln_mvlgamma_p_3_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_special_multigammaln_mvlgamma_p_5_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_special_spherical_bessel_j0_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_special_zeta_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_square_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_std_mean_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_sum_to_size_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_tan_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_trace_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_true_divide_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_unflatten_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_var_mean_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_vsplit_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags__refs_vstack_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_acos_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_acosh_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_allclose_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_amin_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_aminmax_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_argsort_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_argwhere_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_as_strided_scatter_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_asin_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_asinh_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_atan2_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_atan_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_atanh_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_atleast_1d_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_atleast_2d_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_atleast_3d_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_bfloat16_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_block_diag_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_bool_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_broadcast_shapes_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_broadcast_tensors_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_broadcast_to_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_bucketize_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_byte_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_cartesian_prod_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_cdist_mlu_float32", #TODO(PYTORCH-8665): cdist only supports p=1 now.
"test_ops_py_TestTagsMLU_test_tags_chalf_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_char_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_cholesky_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_cholesky_inverse_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_cholesky_solve_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_clamp_mlu_float32", #PYTORCH-9208
"test_ops_py_TestTagsMLU_test_tags_column_stack_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_combinations_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_complex_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_copysign_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_corrcoef_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_cos_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_cosh_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_count_nonzero_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_cov_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_cross_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_cummax_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_cumulative_trapezoid_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_deg2rad_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_diff_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_digamma_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_dist_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_double_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_dsplit_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_dstack_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_einsum_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_empty_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_empty_like_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_erfc_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_exp2_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_fft_fft2_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_fft_fft_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_fft_fftn_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_fft_fftshift_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_fft_hfft2_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_fft_hfft_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_fft_hfftn_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_fft_ifft2_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_fft_ifft_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_fft_ifftn_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_fft_ifftshift_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_fft_ihfft2_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_fft_ihfft_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_fft_ihfftn_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_fft_irfft2_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_fft_irfft_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_fft_irfftn_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_fft_rfft2_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_fft_rfft_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_fft_rfftn_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_flatten_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_fliplr_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_flipud_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_float_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_float_power_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_fmax_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_fmin_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_frexp_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_geqrf_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_gradient_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_half_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_heaviside_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_histc_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_hsplit_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_hstack_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_hypot_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_i0_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_igamma_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_igammac_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_imag_mlu_complex64",
"test_ops_py_TestTagsMLU_test_tags_index_reduce_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_inner_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_int_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_isclose_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_isin_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_isinf_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_isneginf_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_isposinf_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_isreal_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_istft_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_jiterator_2inputs_2outputs_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_jiterator_4inputs_with_extra_args_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_jiterator_binary_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_jiterator_binary_return_by_ref_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_jiterator_unary_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_kron_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_ldexp_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_lerp_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_lgamma_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_cholesky_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_cholesky_ex_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_cond_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_cross_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_det_singular_mlu_float32",# TODO(PYTORCH-9646): mlu not support lu_factor now.
"test_ops_py_TestTagsMLU_test_tags_linalg_eig_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_eigh_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_eigvals_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_eigvalsh_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_householder_product_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_inv_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_inv_ex_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_ldl_factor_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_ldl_factor_ex_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_ldl_solve_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_lstsq_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_lstsq_grad_oriented_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_lu_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_lu_factor_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_lu_factor_ex_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_lu_solve_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_matrix_norm_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_matrix_power_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_matrix_rank_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_matrix_rank_hermitian_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_multi_dot_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_norm_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_norm_subgradients_at_zero_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_pinv_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_pinv_hermitian_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_pinv_singular_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_qr_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_solve_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_solve_ex_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_solve_triangular_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_svdvals_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_tensorinv_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_tensorsolve_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_vander_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_vecdot_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_linalg_vector_norm_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_logaddexp2_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_logaddexp_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_logcumsumexp_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_logdet_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_logit_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_logspace_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_logsumexp_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_long_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_lu_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_lu_solve_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_lu_unpack_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_mH_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_mT_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_masked_amin_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_masked_logaddexp_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_masked_logsumexp_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_masked_median_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_masked_normalize_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_masked_softmin_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_matmul_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_matrix_exp_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_meshgrid_list_of_tensors_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_meshgrid_variadic_tensors_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_mode_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_movedim_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_msort_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_mvlgamma_mvlgamma_p_1_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_mvlgamma_mvlgamma_p_3_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_mvlgamma_mvlgamma_p_5_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nanmean_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nanmedian_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nanquantile_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_narrow_copy_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_new_empty_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nextafter_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional__scaled_dot_product_attention_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_adaptive_max_pool3d_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_avg_pool2d_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_avg_pool3d_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_bilinear_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_celu_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_cosine_embedding_loss_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_cosine_similarity_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_cross_entropy_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_ctc_loss_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_fractional_max_pool2d_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_fractional_max_pool3d_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_gaussian_nll_loss_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_grid_sample_mlu_float32", # TODO(PYTORCH-10134)
"test_ops_py_TestTagsMLU_test_tags_nn_functional_group_norm_mlu_float32", # TODO(PYTORCH-9458): group_norm unsupport eps<0.
"test_ops_py_TestTagsMLU_test_tags_nn_functional_hardshrink_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_hardtanh_mlu_float32", # [PYTORCH-9208]: [cnnlClip]Parameter min must be less than max
"test_ops_py_TestTagsMLU_test_tags_nn_functional_hinge_embedding_loss_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_huber_loss_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_instance_norm_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_margin_ranking_loss_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_max_pool1d_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_max_pool2d_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_max_pool3d_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_max_unpool1d_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_max_unpool1d_grad_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_max_unpool2d_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_max_unpool2d_grad_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_max_unpool3d_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_max_unpool3d_grad_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_mish_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_multi_margin_loss_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_multilabel_margin_loss_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_multilabel_soft_margin_loss_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_normalize_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_pad_circular_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_pad_constant_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_pad_reflect_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_pad_replicate_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_pairwise_distance_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_pdist_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_pixel_shuffle_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_pixel_unshuffle_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_prelu_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_relu6_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_soft_margin_loss_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_softmin_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_softmin_with_dtype_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_softshrink_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_softsign_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_tanhshrink_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_triplet_margin_loss_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_nn_functional_triplet_margin_with_distance_loss_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_norm_mlu_float32", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_ops_py_TestTagsMLU_test_tags_norm_inf_mlu_float32",# torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_ops_py_TestTagsMLU_test_tags_ops_nvprims_native_batch_norm_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_ops_nvprims_var_mean_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_ormqr_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_pca_lowrank_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_pinverse_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_polar_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_polygamma_polygamma_n_0_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_polygamma_polygamma_n_1_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_polygamma_polygamma_n_2_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_polygamma_polygamma_n_3_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_polygamma_polygamma_n_4_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_positive_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_quantile_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_rad2deg_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_rand_like_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_ravel_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_real_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_renorm_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_resize__mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_resize_as__mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_resolve_neg_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_rot90_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_scatter_reduce_amax_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_scatter_reduce_amin_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_scatter_reduce_mean_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_scatter_reduce_prod_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_searchsorted_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_segment_reduce_lengths_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_segment_reduce_offsets_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_select_scatter_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_short_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_signbit_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_sin_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_sinc_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_sinh_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_sparse_sampled_addmm_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_airy_ai_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_bessel_j0_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_bessel_j1_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_bessel_y0_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_bessel_y1_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_chebyshev_polynomial_t_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_chebyshev_polynomial_u_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_chebyshev_polynomial_v_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_chebyshev_polynomial_w_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_entr_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_erfcx_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_hermite_polynomial_h_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_hermite_polynomial_he_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_i0e_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_i1_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_i1e_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_laguerre_polynomial_l_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_legendre_polynomial_p_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_log_ndtr_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_modified_bessel_i0_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_modified_bessel_i1_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_modified_bessel_k0_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_modified_bessel_k1_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_ndtr_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_ndtri_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_polygamma_special_polygamma_n_0_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_scaled_modified_bessel_k0_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_scaled_modified_bessel_k1_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_shifted_chebyshev_polynomial_t_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_shifted_chebyshev_polynomial_u_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_shifted_chebyshev_polynomial_v_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_shifted_chebyshev_polynomial_w_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_spherical_bessel_j0_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_xlog1py_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_special_zeta_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_square_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_std_mean_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_stft_mlu_float32",  # TODO(PYTORCH-10374): CNNL FFT currently only support onesided.
"test_ops_py_TestTagsMLU_test_tags_sum_to_size_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_symeig_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_take_along_dim_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_tan_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_tensordot_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_tile_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_to_sparse_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_trace_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_trapezoid_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_trapz_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_triangular_solve_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_true_divide_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_unflatten_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_unique_consecutive_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_var_mean_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_vdot_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_vsplit_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_vstack_mlu_float32",
"test_ops_py_TestTagsMLU_test_tags_zero__mlu_float32",
"test_optim_py_TestOptim_test_adadelta",
"test_optim_py_TestOptim_test_adadelta_complex",
"test_optim_py_TestOptim_test_adagrad",
"test_optim_py_TestOptim_test_adagrad_complex",
"test_optim_py_TestOptim_test_adagrad_sparse",
"test_optim_py_TestOptim_test_adam",
"test_optim_py_TestOptim_test_adamax",
"test_optim_py_TestOptim_test_adamw",
"test_optim_py_TestOptim_test_asgd",
"test_optim_py_TestOptim_test_duplicate_params_in_param_group",
"test_optim_py_TestOptim_test_functional_fused_adam_with_foundinf",
"test_optim_py_TestOptim_test_fused_optimizers",
"test_optim_py_TestOptim_test_invalid_param_type",
"test_optim_py_TestOptim_test_lbfgs",
"test_optim_py_TestOptim_test_lbfgs_return_type",
"test_optim_py_TestOptim_test_multi_tensor_optimizers",
"test_optim_py_TestOptim_test_nadam",
"test_optim_py_TestOptim_test_no_grad_for_all_params",
"test_optim_py_TestOptim_test_radam",
"test_optim_py_TestOptim_test_rmsprop",
"test_optim_py_TestOptim_test_rprop",
"test_optim_py_TestOptim_test_sgd",
"test_optim_py_TestOptim_test_sgd_complex",
"test_optim_py_TestOptim_test_sgd_sparse",
"test_optim_py_TestOptim_test_sparse_adam",
"test_optim_py_TestLRScheduler_test_CosineAnnealingWarmRestarts_lr1_T_mult_1",
"test_optim_py_TestLRScheduler_test_CosineAnnealingWarmRestarts_lr1_T_mult_2",
"test_optim_py_TestLRScheduler_test_CosineAnnealingWarmRestarts_lr1_T_mult_4",
"test_optim_py_TestLRScheduler_test_CosineAnnealingWarmRestarts_lr2",
"test_optim_py_TestLRScheduler_test_CosineAnnealingWarmRestarts_lr3",
"test_optim_py_TestLRScheduler_test_CosineAnnealingWarmRestarts_lr_state_dict",
"test_optim_py_TestLRScheduler_test_chained_lr1",
"test_optim_py_TestLRScheduler_test_chained_lr2",
"test_optim_py_TestLRScheduler_test_chained_lr2_get_last_lr_before_step",
"test_optim_py_TestLRScheduler_test_chained_lr3",
"test_optim_py_TestLRScheduler_test_chained_lr4",
"test_optim_py_TestLRScheduler_test_chained_lr5",
"test_optim_py_TestLRScheduler_test_closed_form_constantlr",
"test_optim_py_TestLRScheduler_test_closed_form_cos_anneal_lr",
"test_optim_py_TestLRScheduler_test_closed_form_exp_lr",
"test_optim_py_TestLRScheduler_test_closed_form_linearlr",
"test_optim_py_TestLRScheduler_test_closed_form_multi_step_lr",
"test_optim_py_TestLRScheduler_test_closed_form_poly_lr",
"test_optim_py_TestLRScheduler_test_closed_form_step_lr",
"test_optim_py_TestLRScheduler_test_compound_cosanneal_and_exp_lr",
"test_optim_py_TestLRScheduler_test_compound_cosanneal_and_linearlr",
"test_optim_py_TestLRScheduler_test_compound_cosanneal_and_multistep_lr",
"test_optim_py_TestLRScheduler_test_compound_cosanneal_and_step_lr",
"test_optim_py_TestLRScheduler_test_compound_exp_and_linearlr",
"test_optim_py_TestLRScheduler_test_compound_exp_and_multistep_lr",
"test_optim_py_TestLRScheduler_test_compound_linearlr_and_multistep_lr",
"test_optim_py_TestLRScheduler_test_compound_reduce_lr_on_plateau1",
"test_optim_py_TestLRScheduler_test_compound_reduce_lr_on_plateau2",
"test_optim_py_TestLRScheduler_test_compound_reduce_lr_on_plateau3",
"test_optim_py_TestLRScheduler_test_compound_reduce_lr_on_plateau4",
"test_optim_py_TestLRScheduler_test_compound_reduce_lr_on_plateau5",
"test_optim_py_TestLRScheduler_test_compound_step_and_constantlr",
"test_optim_py_TestLRScheduler_test_compound_step_and_exp_lr",
"test_optim_py_TestLRScheduler_test_compound_step_and_multistep_lr",
"test_optim_py_TestLRScheduler_test_constantlr",
"test_optim_py_TestLRScheduler_test_constantlr_is_constant_for_constant_epoch",
"test_optim_py_TestLRScheduler_test_constantlr_with_epoch",
"test_optim_py_TestLRScheduler_test_cos_anneal_lr",
"test_optim_py_TestLRScheduler_test_cos_anneal_lr_continue",
"test_optim_py_TestLRScheduler_test_cosine_lr_state_dict",
"test_optim_py_TestLRScheduler_test_cosine_then_cyclic",
"test_optim_py_TestLRScheduler_test_cycle_lr_cycle_momentum_fail_with_momentumless_optimizer",
"test_optim_py_TestLRScheduler_test_cycle_lr_exp_range_mode",
"test_optim_py_TestLRScheduler_test_cycle_lr_exp_range_mode_one_lr",
"test_optim_py_TestLRScheduler_test_cycle_lr_exp_range_mode_step_size_up_down",
"test_optim_py_TestLRScheduler_test_cycle_lr_invalid_mode",
"test_optim_py_TestLRScheduler_test_cycle_lr_removed_after_out_of_scope",
"test_optim_py_TestLRScheduler_test_cycle_lr_triangular2_mode",
"test_optim_py_TestLRScheduler_test_cycle_lr_triangular2_mode_one_lr",
"test_optim_py_TestLRScheduler_test_cycle_lr_triangular2_mode_step_size_up_down",
"test_optim_py_TestLRScheduler_test_cycle_lr_triangular_mode",
"test_optim_py_TestLRScheduler_test_cycle_lr_triangular_mode_one_lr",
"test_optim_py_TestLRScheduler_test_cycle_lr_triangular_mode_one_lr_no_momentum",
"test_optim_py_TestLRScheduler_test_cycle_lr_triangular_mode_step_size_up_down",
"test_optim_py_TestLRScheduler_test_cycle_lr_with_adam",
"test_optim_py_TestLRScheduler_test_cycle_lr_with_momentumless_optimizer",
"test_optim_py_TestLRScheduler_test_error_when_getlr_has_epoch",
"test_optim_py_TestLRScheduler_test_exp_lr",
"test_optim_py_TestLRScheduler_test_exp_step_lr_state_dict",
"test_optim_py_TestLRScheduler_test_exponential_lr_is_constant_for_constant_epoch",
"test_optim_py_TestLRScheduler_test_get_last_lr_constantlr",
"test_optim_py_TestLRScheduler_test_get_last_lr_linearlr",
"test_optim_py_TestLRScheduler_test_get_last_lr_multi_step_lr",
"test_optim_py_TestLRScheduler_test_get_last_lr_sequentiallr",
"test_optim_py_TestLRScheduler_test_get_last_lr_step_lr",
"test_optim_py_TestLRScheduler_test_lambda_lr",
"test_optim_py_TestLRScheduler_test_lambda_lr_state_dict_fn",
"test_optim_py_TestLRScheduler_test_lambda_lr_state_dict_obj",
"test_optim_py_TestLRScheduler_test_linear_linearlr_is_constant_for_constant_epoch",
"test_optim_py_TestLRScheduler_test_linearlr",
"test_optim_py_TestLRScheduler_test_linearlr_with_epoch",
"test_optim_py_TestLRScheduler_test_multi_step_lr",
"test_optim_py_TestLRScheduler_test_multi_step_lr_state_dict",
"test_optim_py_TestLRScheduler_test_multi_step_lr_with_epoch",
"test_optim_py_TestLRScheduler_test_multiplicative_lr",
"test_optim_py_TestLRScheduler_test_new_pattern_no_warning",
"test_optim_py_TestLRScheduler_test_new_pattern_no_warning_with_arg",
"test_optim_py_TestLRScheduler_test_new_pattern_no_warning_with_overridden_optim_step",
"test_optim_py_TestLRScheduler_test_no_cyclic_references",
"test_optim_py_TestLRScheduler_test_old_pattern_warning",
"test_optim_py_TestLRScheduler_test_old_pattern_warning_resuming",
"test_optim_py_TestLRScheduler_test_old_pattern_warning_resuming_with_arg",
"test_optim_py_TestLRScheduler_test_old_pattern_warning_with_arg",
"test_optim_py_TestLRScheduler_test_old_pattern_warning_with_overridden_optim_step",
"test_optim_py_TestLRScheduler_test_onecycle_lr_cannot_calculate_total_steps",
"test_optim_py_TestLRScheduler_test_onecycle_lr_cosine_annealing",
"test_optim_py_TestLRScheduler_test_onecycle_lr_invalid_anneal_strategy",
"test_optim_py_TestLRScheduler_test_onecycle_lr_invalid_pct_start",
"test_optim_py_TestLRScheduler_test_onecycle_lr_linear_annealing",
"test_optim_py_TestLRScheduler_test_onecycle_lr_linear_annealing_three_phases",
"test_optim_py_TestLRScheduler_test_poly_lr",
"test_optim_py_TestLRScheduler_test_polynomial_lr_is_constant_for_constant_epoch",
"test_optim_py_TestLRScheduler_test_reduce_lr_on_plateau1",
"test_optim_py_TestLRScheduler_test_reduce_lr_on_plateau2",
"test_optim_py_TestLRScheduler_test_reduce_lr_on_plateau3",
"test_optim_py_TestLRScheduler_test_reduce_lr_on_plateau4",
"test_optim_py_TestLRScheduler_test_reduce_lr_on_plateau5",
"test_optim_py_TestLRScheduler_test_reduce_lr_on_plateau6",
"test_optim_py_TestLRScheduler_test_reduce_lr_on_plateau7",
"test_optim_py_TestLRScheduler_test_reduce_lr_on_plateau8",
"test_optim_py_TestLRScheduler_test_reduce_lr_on_plateau_state_dict",
"test_optim_py_TestLRScheduler_test_sequentiallr1",
"test_optim_py_TestLRScheduler_test_sequentiallr2",
"test_optim_py_TestLRScheduler_test_sequentiallr3",
"test_optim_py_TestLRScheduler_test_sequentiallr4",
"test_optim_py_TestLRScheduler_test_step_lr",
"test_optim_py_TestLRScheduler_test_step_lr_is_constant_for_constant_epoch",
"test_optim_py_TestLRScheduler_test_step_lr_state_dict",
"test_optim_py_TestLRScheduler_test_swa_lr_state_dict",
"test_optim_py_TestLRScheduler_test_swalr_cosine_anneal_after_multiplicative",
"test_optim_py_TestLRScheduler_test_swalr_hypers",
"test_optim_py_TestLRScheduler_test_swalr_linear_anneal_after_multiplicative",
"test_optim_py_TestLRScheduler_test_swalr_no_anneal",
"test_optim_py_TestSWAUtils_test_averaged_model_all_devices",
"test_optim_py_TestSWAUtils_test_averaged_model_exponential",
"test_optim_py_TestSWAUtils_test_averaged_model_exponential_buffers",
"test_optim_py_TestSWAUtils_test_averaged_model_mixed_device",
"test_optim_py_TestSWAUtils_test_averaged_model_state_dict",
"test_optim_py_TestSWAUtils_test_bn_update_eval_momentum",
"test_optim_py_TestSWAUtils_test_update_bn_cnn",
"test_optim_py_TestSWAUtils_test_update_bn_dnn",
"test_optim_py_TestDifferentiableOptimizer_test_adam",
"test_optim_py_TestDifferentiableOptimizer_test_rmsprop",
"test_optim_py_TestDifferentiableOptimizer_test_sgd",
"test_overrides_py_TestTorchFunctionOverride_test_Tensor___mlu_array_interface_____get__",
"test_overrides_py_TestTorchFunctionOverride_test_Tensor_mlu",
"test_overrides_py_TestTorchFunctionOverride_test_torch_nn_functional_adaptive_max_pool2d_with_indices",
"test_overrides_py_TestTorchFunctionOverride_test_torch_nn_functional_max_pool2d_with_indices",
"test_overrides_py_TestTorchFunctionOverride_test_torch_nn_functional_max_pool3d_with_indices",
"test_per_overload_api_py_TestPerOverloadAPI_test_basics_opoverload",
"test_per_overload_api_py_TestPerOverloadAPI_test_basics_opoverloadpacket",
"test_per_overload_api_py_TestPerOverloadAPI_test_decompose",
"test_proxy_tensor_py_TestGenericProxyTensorReal_test_allclose",
"test_proxy_tensor_py_TestGenericProxyTensorReal_test_amp_cache",
"test_proxy_tensor_py_TestGenericProxyTensorReal_test_constant_blowup",
"test_proxy_tensor_py_TestGenericProxyTensorReal_test_constant_proxy_tensor_mut",
"test_proxy_tensor_py_TestGenericProxyTensorReal_test_constant_random",
"test_proxy_tensor_py_TestGenericProxyTensorReal_test_decomp_of_capture",
"test_proxy_tensor_py_TestGenericProxyTensorReal_test_decomposition_interpreter",
"test_proxy_tensor_py_TestGenericProxyTensorReal_test_has_proxy",
"test_proxy_tensor_py_TestGenericProxyTensorReal_test_inplace_metadata",
"test_proxy_tensor_py_TestGenericProxyTensorReal_test_isolated_graphmodule",
"test_proxy_tensor_py_TestGenericProxyTensorReal_test_make_fx_model_double_param",
"test_proxy_tensor_py_TestGenericProxyTensorReal_test_make_fx_model_fwd_bwd",
"test_proxy_tensor_py_TestGenericProxyTensorReal_test_make_fx_model_fwd_bwd_wgtupdate",
"test_proxy_tensor_py_TestGenericProxyTensorReal_test_make_fx_overloads",
"test_proxy_tensor_py_TestGenericProxyTensorReal_test_make_fx_reentrant_dispatch",
"test_proxy_tensor_py_TestGenericProxyTensorReal_test_make_fx_simple",
"test_proxy_tensor_py_TestGenericProxyTensorReal_test_mode_tracing_factory_function",
"test_proxy_tensor_py_TestGenericProxyTensorReal_test_partial_decomp",
"test_proxy_tensor_py_TestGenericProxyTensorReal_test_proxy_tensor",
"test_proxy_tensor_py_TestGenericProxyTensorReal_test_proxy_tensor_mode_with_decomp_table_preserves_proxy",
"test_proxy_tensor_py_TestGenericProxyTensorReal_test_resnet18_backward_trace",
"test_proxy_tensor_py_TestGenericProxyTensorReal_test_scalar_device",
"test_proxy_tensor_py_TestGenericProxyTensorReal_test_strides",
"test_proxy_tensor_py_TestGenericProxyTensorReal_test_tensor_constants",
"test_proxy_tensor_py_TestGenericProxyTensorReal_test_trace_subclasses",
"test_proxy_tensor_py_TestGenericProxyTensorReal_test_varargs",
"test_proxy_tensor_py_TestGenericProxyTensorFake_test_allclose",
"test_proxy_tensor_py_TestGenericProxyTensorFake_test_amp_cache",
"test_proxy_tensor_py_TestGenericProxyTensorFake_test_constant_blowup",
"test_proxy_tensor_py_TestGenericProxyTensorFake_test_constant_proxy_tensor_mut",
"test_proxy_tensor_py_TestGenericProxyTensorFake_test_constant_random",
"test_proxy_tensor_py_TestGenericProxyTensorFake_test_constant_unbind",
"test_proxy_tensor_py_TestGenericProxyTensorFake_test_decomp_of_capture",
"test_proxy_tensor_py_TestGenericProxyTensorFake_test_decomposition_interpreter",
"test_proxy_tensor_py_TestGenericProxyTensorFake_test_has_proxy",
"test_proxy_tensor_py_TestGenericProxyTensorFake_test_inplace_metadata",
"test_proxy_tensor_py_TestGenericProxyTensorFake_test_isolated_graphmodule",
"test_proxy_tensor_py_TestGenericProxyTensorFake_test_make_fx_model_double_param",
"test_proxy_tensor_py_TestGenericProxyTensorFake_test_make_fx_model_fwd_bwd",
"test_proxy_tensor_py_TestGenericProxyTensorFake_test_make_fx_model_fwd_bwd_wgtupdate",
"test_proxy_tensor_py_TestGenericProxyTensorFake_test_make_fx_overloads",
"test_proxy_tensor_py_TestGenericProxyTensorFake_test_make_fx_reentrant_dispatch",
"test_proxy_tensor_py_TestGenericProxyTensorFake_test_make_fx_simple",
"test_proxy_tensor_py_TestGenericProxyTensorFake_test_mode_tracing_factory_function",
"test_proxy_tensor_py_TestGenericProxyTensorFake_test_partial_decomp",
"test_proxy_tensor_py_TestGenericProxyTensorFake_test_proxy_tensor",
"test_proxy_tensor_py_TestGenericProxyTensorFake_test_proxy_tensor_mode_with_decomp_table_preserves_proxy",
"test_proxy_tensor_py_TestGenericProxyTensorFake_test_resnet18_backward_trace",
"test_proxy_tensor_py_TestGenericProxyTensorFake_test_scalar_device",
"test_proxy_tensor_py_TestGenericProxyTensorFake_test_strides",
"test_proxy_tensor_py_TestGenericProxyTensorFake_test_tensor_constants",
"test_proxy_tensor_py_TestGenericProxyTensorFake_test_trace_subclasses",
"test_proxy_tensor_py_TestGenericProxyTensorFake_test_varargs",
"test_proxy_tensor_py_TestGenericProxyTensorSymbolic_test_allclose",
"test_proxy_tensor_py_TestGenericProxyTensorSymbolic_test_amp_cache",
"test_proxy_tensor_py_TestGenericProxyTensorSymbolic_test_constant_blowup",
"test_proxy_tensor_py_TestGenericProxyTensorSymbolic_test_constant_proxy_tensor_mut",
"test_proxy_tensor_py_TestGenericProxyTensorSymbolic_test_constant_random",
"test_proxy_tensor_py_TestGenericProxyTensorSymbolic_test_constant_unbind",
"test_proxy_tensor_py_TestGenericProxyTensorSymbolic_test_decomp_of_capture",
"test_proxy_tensor_py_TestGenericProxyTensorSymbolic_test_decomposition_interpreter",
"test_proxy_tensor_py_TestGenericProxyTensorSymbolic_test_has_proxy",
"test_proxy_tensor_py_TestGenericProxyTensorSymbolic_test_inplace_metadata",
"test_proxy_tensor_py_TestGenericProxyTensorSymbolic_test_isolated_graphmodule",
"test_proxy_tensor_py_TestGenericProxyTensorSymbolic_test_make_fx_model_double_param",
"test_proxy_tensor_py_TestGenericProxyTensorSymbolic_test_make_fx_model_fwd_bwd",
"test_proxy_tensor_py_TestGenericProxyTensorSymbolic_test_make_fx_model_fwd_bwd_wgtupdate",
"test_proxy_tensor_py_TestGenericProxyTensorSymbolic_test_make_fx_overloads",
"test_proxy_tensor_py_TestGenericProxyTensorSymbolic_test_make_fx_reentrant_dispatch",
"test_proxy_tensor_py_TestGenericProxyTensorSymbolic_test_make_fx_simple",
"test_proxy_tensor_py_TestGenericProxyTensorSymbolic_test_mode_tracing_factory_function",
"test_proxy_tensor_py_TestGenericProxyTensorSymbolic_test_partial_decomp",
"test_proxy_tensor_py_TestGenericProxyTensorSymbolic_test_proxy_tensor",
"test_proxy_tensor_py_TestGenericProxyTensorSymbolic_test_proxy_tensor_mode_with_decomp_table_preserves_proxy",
"test_proxy_tensor_py_TestGenericProxyTensorSymbolic_test_resnet18_backward_trace",
"test_proxy_tensor_py_TestGenericProxyTensorSymbolic_test_scalar_device",
"test_proxy_tensor_py_TestGenericProxyTensorSymbolic_test_strides",
"test_proxy_tensor_py_TestGenericProxyTensorSymbolic_test_tensor_constants",
"test_proxy_tensor_py_TestGenericProxyTensorSymbolic_test_trace_subclasses",
"test_proxy_tensor_py_TestGenericProxyTensorSymbolic_test_varargs",
"test_proxy_tensor_py_TestFakeProxyTensor_test_alias",
"test_proxy_tensor_py_TestFakeProxyTensor_test_issue82547",
"test_proxy_tensor_py_TestFakeProxyTensor_test_use_fake_and_tensor",
"test_proxy_tensor_py_TestSymbolicTracing_test_binary_broadcast",
"test_proxy_tensor_py_TestSymbolicTracing_test_cat",
"test_proxy_tensor_py_TestSymbolicTracing_test_expand",
"test_proxy_tensor_py_TestSymbolicTracing_test_guards_equal",
"test_proxy_tensor_py_TestSymbolicTracing_test_multiply_shape",
"test_proxy_tensor_py_TestSymbolicTracing_test_new_empty",
"test_proxy_tensor_py_TestSymbolicTracing_test_nonidentity_transitive_guards",
"test_proxy_tensor_py_TestSymbolicTracing_test_return_symint",
"test_proxy_tensor_py_TestSymbolicTracing_test_size_with_tensor",
"test_proxy_tensor_py_TestSymbolicTracing_test_symbolic_meta",
"test_proxy_tensor_py_TestSymbolicTracing_test_symint_to_tensor",
"test_proxy_tensor_py_TestSymbolicTracing_test_unary",
"test_pruning_op_py_PruningOpTest_test_rowwise_prune_op_32bit_indices",
"test_pruning_op_py_PruningOpTest_test_rowwise_prune_op_64bit_indices",
"test_public_bindings_py_TestPublicBindings_test_correct_module_names",
"test_public_bindings_py_TestPublicBindings_test_no_new_bindings",
"test_python_dispatch_py_TestPythonRegistration_test_alias_analysis",
"test_python_dispatch_py_TestPythonRegistration_test_create_new_library",
"test_python_dispatch_py_TestPythonRegistration_test_error_for_unsupported_ns_or_kind",
"test_python_dispatch_py_TestPythonRegistration_test_error_if_fn_not_callable",
"test_python_dispatch_py_TestPythonRegistration_test_extend_library_with_dispatch_key_arg",
"test_python_dispatch_py_TestPythonRegistration_test_override_aten_ops_with_multiple_libraries",
"test_python_dispatch_py_TestPythonRegistration_test_override_cpu_sum",
"test_python_dispatch_py_TestPythonRegistration_test_override_mlu_with_jiterator",
"test_python_dispatch_py_TestPythonDispatch_test_all_same_mode",
"test_python_dispatch_py_TestPythonDispatch_test_autograd_in_attr",
"test_python_dispatch_py_TestPythonDispatch_test_basic",
"test_python_dispatch_py_TestPythonDispatch_test_capture_logs_with_torch_dispatch_mode",
"test_python_dispatch_py_TestPythonDispatch_test_construct_int_tensor",
"test_python_dispatch_py_TestPythonDispatch_test_custom_autograd",
"test_python_dispatch_py_TestPythonDispatch_test_deepcopy_non_wrapper_subclass",
"test_python_dispatch_py_TestPythonDispatch_test_deepcopy_wrapper_subclass",
"test_python_dispatch_py_TestPythonDispatch_test_deepcopy_wrapper_subclass_with_clone_returning_different_type",
"test_python_dispatch_py_TestPythonDispatch_test_detach_appears_twice_when_called_once",
"test_python_dispatch_py_TestPythonDispatch_test_device_slowpath",
"test_python_dispatch_py_TestPythonDispatch_test_dim_slowpath",
"test_python_dispatch_py_TestPythonDispatch_test_dispatch_super_call",
"test_python_dispatch_py_TestPythonDispatch_test_dispatch_super_call_list_arg",
"test_python_dispatch_py_TestPythonDispatch_test_dispatch_super_dont_autograd",
"test_python_dispatch_py_TestPythonDispatch_test_error_using_class_method_on_mode",
"test_python_dispatch_py_TestPythonDispatch_test_exception_handling",
"test_python_dispatch_py_TestPythonDispatch_test_fancy_strides",
"test_python_dispatch_py_TestPythonDispatch_test_format",
"test_python_dispatch_py_TestPythonDispatch_test_get_cur_mode",
"test_python_dispatch_py_TestPythonDispatch_test_get_mode_stack",
"test_python_dispatch_py_TestPythonDispatch_test_invalid_ret",
"test_python_dispatch_py_TestPythonDispatch_test_is_contiguous_slow_path",
"test_python_dispatch_py_TestPythonDispatch_test_kwarg_only",
"test_python_dispatch_py_TestPythonDispatch_test_kwarg_only_and_positional_default",
"test_python_dispatch_py_TestPythonDispatch_test_layout_slow_path",
"test_python_dispatch_py_TestPythonDispatch_test_like",
"test_python_dispatch_py_TestPythonDispatch_test_list_ret",
"test_python_dispatch_py_TestPythonDispatch_test_make_subclass_with_modes",
"test_python_dispatch_py_TestPythonDispatch_test_make_wrapper_subclass_noalloc",
"test_python_dispatch_py_TestPythonDispatch_test_make_wrapper_subclass_propagates_metadata",
"test_python_dispatch_py_TestPythonDispatch_test_maybe_tuple_bug",
"test_python_dispatch_py_TestPythonDispatch_test_mode_with_make_subclass",
"test_python_dispatch_py_TestPythonDispatch_test_multiple_ops_subclass",
"test_python_dispatch_py_TestPythonDispatch_test_nested_push_logging_tensor_mode",
"test_python_dispatch_py_TestPythonDispatch_test_nesting_same_mode",
"test_python_dispatch_py_TestPythonDispatch_test_new_ones",
"test_python_dispatch_py_TestPythonDispatch_test_none_wrapping",
"test_python_dispatch_py_TestPythonDispatch_test_notimplemented_mode",
"test_python_dispatch_py_TestPythonDispatch_test_out",
"test_python_dispatch_py_TestPythonDispatch_test_produce_real_type",
"test_python_dispatch_py_TestPythonDispatch_test_set_data",
"test_python_dispatch_py_TestPythonDispatch_test_shallow_copy_and_detach",
"test_python_dispatch_py_TestPythonDispatch_test_sizes_slow_path",
"test_python_dispatch_py_TestPythonDispatch_test_standard_is_not_subclass",
"test_python_dispatch_py_TestPythonDispatch_test_storage",
"test_python_dispatch_py_TestPythonDispatch_test_storage_can_be_converted_to_python_object",
"test_python_dispatch_py_TestPythonDispatch_test_strides_slow_path",
"test_python_dispatch_py_TestPythonDispatch_test_subclass_autograd_device_check",
"test_python_dispatch_py_TestPythonDispatch_test_subclass_creation",
"test_python_dispatch_py_TestPythonDispatch_test_subclass_priority",
"test_python_dispatch_py_TestPythonDispatch_test_tolist_numpy_with_torch_dispatch_mode",
"test_python_dispatch_py_TestPythonDispatch_test_torch_dispatch_mode_basic",
"test_python_dispatch_py_TestPythonDispatch_test_torch_dispatch_mode_respects_no_dispatch",
"test_python_dispatch_py_TestPythonDispatch_test_torch_dispatch_mode_subclass_priority",
"test_python_dispatch_py_TestPythonDispatch_test_torch_dispatch_mode_unrelated_tensors",
"test_python_dispatch_py_TestPythonDispatch_test_version",
"test_python_dispatch_py_TestPythonDispatch_test_with_mode_created_separately",
"test_python_dispatch_py_TestPythonDispatch_test_with_nested_modes",
"test_python_dispatch_py_TestPythonDispatch_test_wrapper_subclass_serializes",
"test_python_dispatch_py_TestPythonDispatcher_test_basic",
"test_python_dispatch_py_TestPythonDispatcher_test_lstsq",
"test_pytree_py_TestPytree_test_broadcast_to_and_flatten",
"test_pytree_py_TestPytree_test_flatten_unflatten_dict",
"test_pytree_py_TestPytree_test_flatten_unflatten_leaf",
"test_pytree_py_TestPytree_test_flatten_unflatten_list",
"test_pytree_py_TestPytree_test_flatten_unflatten_namedtuple",
"test_pytree_py_TestPytree_test_flatten_unflatten_nested",
"test_pytree_py_TestPytree_test_flatten_unflatten_odict",
"test_pytree_py_TestPytree_test_flatten_unflatten_return_type_min",
"test_pytree_py_TestPytree_test_flatten_unflatten_tuple",
"test_pytree_py_TestPytree_test_tree_all_any",
"test_pytree_py_TestPytree_test_tree_only",
"test_pytree_py_TestPytree_test_treemap",
"test_pytree_py_TestPytree_test_treespec_equality",
"test_pytree_py_TestPytree_test_treespec_repr",
"test_reductions_py_TestReductionsMLU_test_accreal_type_mlu",
"test_reductions_py_TestReductionsMLU_test_all_any_vs_numpy_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_amax_mlu_float16", # Scalars are not equal for nan
"test_reductions_py_TestReductionsMLU_test_amax_mlu_float32", # Scalars are not equal for nan
"test_reductions_py_TestReductionsMLU_test_amin_mlu_bool",
"test_reductions_py_TestReductionsMLU_test_amin_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_amin_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_amin_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_aminmax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_aminmax_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_aminmax_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_argminmax_multiple_mlu_float16", # Scalars are not equal between inf and nan
"test_reductions_py_TestReductionsMLU_test_argminmax_multiple_mlu_float32", # Scalars are not equal between inf and nan
"test_reductions_py_TestReductionsMLU_test_bucketization_mlu",
"test_reductions_py_TestReductionsMLU_test_count_nonzero_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_count_nonzero_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_count_nonzero_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_count_nonzero_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_count_nonzero_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_count_nonzero_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_count_nonzero_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_dim_arg_reduction_scalar_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_dim_arg_reduction_scalar_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_dim_arg_reduction_scalar_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_dim_arg_reduction_scalar_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_dim_arg_reduction_scalar_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_dim_arg_reduction_scalar_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_dim_arg_reduction_scalar_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_dim_default_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_default_count_nonzero_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_default_keepdim_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_default_keepdim_count_nonzero_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_default_keepdim_linalg_vector_norm_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_default_keepdim_masked_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_default_keepdim_masked_logsumexp_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_default_keepdim_nanmean_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_default_linalg_vector_norm_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_default_masked_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_default_masked_logsumexp_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_default_nanmean_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_empty_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_empty_count_nonzero_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_empty_keepdim_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_empty_keepdim_count_nonzero_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_empty_keepdim_linalg_vector_norm_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_empty_keepdim_masked_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_empty_keepdim_masked_logsumexp_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_empty_keepdim_nanmean_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_empty_linalg_vector_norm_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_empty_masked_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_empty_masked_logsumexp_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_empty_nanmean_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_count_nonzero_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_duplicate_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_duplicate_count_nonzero_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_duplicate_linalg_vector_norm_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_duplicate_masked_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_duplicate_masked_logsumexp_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_duplicate_nanmean_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_keepdim_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_keepdim_count_nonzero_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_keepdim_linalg_vector_norm_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_keepdim_masked_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_keepdim_masked_logsumexp_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_keepdim_nanmean_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_linalg_vector_norm_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_masked_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_masked_logsumexp_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_nanmean_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_unsorted_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_unsorted_count_nonzero_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_unsorted_keepdim_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_unsorted_keepdim_count_nonzero_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_unsorted_keepdim_linalg_vector_norm_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_unsorted_keepdim_masked_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_unsorted_keepdim_masked_logsumexp_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_unsorted_keepdim_nanmean_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_unsorted_linalg_vector_norm_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_unsorted_masked_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_unsorted_masked_logsumexp_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_multi_unsorted_nanmean_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_ndim_limit_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_ndim_limit_count_nonzero_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_ndim_limit_linalg_vector_norm_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_ndim_limit_masked_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_ndim_limit_masked_logsumexp_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_ndim_limit_nanmean_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_none_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_none_count_nonzero_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_none_keepdim_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_none_keepdim_count_nonzero_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_none_keepdim_linalg_vector_norm_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_none_keepdim_masked_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_none_keepdim_masked_logsumexp_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_none_keepdim_nanmean_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_none_linalg_vector_norm_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_none_masked_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_none_masked_logsumexp_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_none_nanmean_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_offbounds_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_offbounds_count_nonzero_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_offbounds_linalg_vector_norm_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_offbounds_masked_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_offbounds_masked_logsumexp_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_offbounds_nanmean_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_reduction_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_dim_reduction_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_dim_reduction_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_dim_reduction_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_dim_reduction_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_dim_reduction_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_dim_reduction_lastdim_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_dim_reduction_lastdim_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_dim_reduction_less_than_64_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_single_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_single_count_nonzero_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_single_keepdim_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_single_keepdim_count_nonzero_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_single_keepdim_linalg_vector_norm_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_single_keepdim_masked_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_single_keepdim_masked_logsumexp_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_single_keepdim_nanmean_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_single_linalg_vector_norm_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_single_masked_amin_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_single_masked_logsumexp_mlu",
"test_reductions_py_TestReductionsMLU_test_dim_single_nanmean_mlu",
"test_reductions_py_TestReductionsMLU_test_histc_bfloat16_mlu",
"test_reductions_py_TestReductionsMLU_test_histc_mlu",
"test_reductions_py_TestReductionsMLU_test_histogram_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_histogram_error_handling_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_histogramdd_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_identity_all_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_identity_any_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_identity_count_nonzero_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_identity_count_nonzero_mlu_bool",
"test_reductions_py_TestReductionsMLU_test_identity_count_nonzero_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_identity_count_nonzero_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_identity_count_nonzero_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_identity_count_nonzero_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_identity_count_nonzero_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_identity_count_nonzero_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_identity_count_nonzero_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_identity_linalg_vector_norm_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_identity_linalg_vector_norm_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_identity_linalg_vector_norm_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_identity_linalg_vector_norm_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_identity_masked_norm_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_identity_masked_prod_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_identity_masked_prod_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_identity_masked_sum_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_identity_masked_sum_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_identity_nansum_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_identity_prod_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_identity_prod_mlu_complex32",
"test_reductions_py_TestReductionsMLU_test_identity_prod_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_identity_sum_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_identity_sum_mlu_complex32",
"test_reductions_py_TestReductionsMLU_test_identity_sum_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_logsumexp_mlu",
"test_reductions_py_TestReductionsMLU_test_logsumexp_dim_mlu",
"test_reductions_py_TestReductionsMLU_test_max_mlu_bool", # CNNLCORE-13711
"test_reductions_py_TestReductionsMLU_test_max_with_inf_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_median_corner_cases_mlu", # TODO(PYTORCH-10233): nan is not correct
"test_reductions_py_TestReductionsMLU_test_median_nan_values_mlu_float16", # TODO(PYTORCH-10233): nan is not correct
"test_reductions_py_TestReductionsMLU_test_median_nan_values_mlu_float32", # TODO(PYTORCH-10233): nan is not correct
"test_reductions_py_TestReductionsMLU_test_median_real_values_mlu_float16", # TODO((PYTORCH-10233)): CPU nanmedian does not support half
"test_reductions_py_TestReductionsMLU_test_median_real_values_mlu_int32", # TODO(PYTORCH-10233): median dose not support int
"test_reductions_py_TestReductionsMLU_test_min_mlu_bool", # CNNLCORE-13711
"test_reductions_py_TestReductionsMLU_test_min_with_inf_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_mode_boolean_mlu",
"test_reductions_py_TestReductionsMLU_test_mode_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_mode_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_mode_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_mode_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_mode_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_mode_large_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_mode_large_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_mode_large_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_mode_large_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_mode_large_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_mode_large_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_mode_large_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_mode_wrong_device_mlu",
"test_reductions_py_TestReductionsMLU_test_mode_wrong_dtype_mlu",
"test_reductions_py_TestReductionsMLU_test_nan_policy_omit_nanmean_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_nan_policy_omit_nanmean_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_nan_policy_omit_nanmean_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_nan_policy_omit_nansum_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_amax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_amax_mlu_float16", # result error for nan
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_amax_mlu_float32", # result error for nan
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_amin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_amin_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_amin_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_linalg_vector_norm_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_linalg_vector_norm_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_linalg_vector_norm_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_linalg_vector_norm_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_masked_amax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_masked_amax_mlu_float16", # result error for nan
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_masked_amax_mlu_float32", # result error for nan
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_masked_amin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_masked_amin_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_masked_amin_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_masked_logsumexp_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_masked_logsumexp_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_masked_logsumexp_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_masked_mean_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_masked_mean_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_masked_norm_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_masked_prod_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_masked_prod_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_masked_std_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_masked_std_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_masked_sum_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_masked_sum_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_masked_var_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_masked_var_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_mean_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_mean_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_prod_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_prod_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_std_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_std_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_sum_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_sum_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_var_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_nan_policy_propagate_var_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_nansum_complex_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_nansum_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_all_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_amax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_amin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_amin_mlu_bool",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_amin_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_amin_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_amin_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_amin_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_amin_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_amin_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_any_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_argmax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_argmin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_count_nonzero_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_count_nonzero_mlu_bool",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_count_nonzero_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_count_nonzero_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_count_nonzero_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_count_nonzero_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_count_nonzero_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_count_nonzero_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_count_nonzero_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_linalg_vector_norm_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_linalg_vector_norm_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_linalg_vector_norm_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_linalg_vector_norm_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_amax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_amin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_amin_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_amin_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_amin_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_amin_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_amin_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_amin_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_argmax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_argmin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_logsumexp_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_logsumexp_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_logsumexp_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_logsumexp_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_logsumexp_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_logsumexp_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_logsumexp_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_mean_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_mean_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_norm_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_prod_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_prod_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_std_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_std_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_sum_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_sum_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_var_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_masked_var_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_mean_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_mean_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_nanmean_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_nanmean_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_nanmean_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_nansum_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_prod_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_prod_mlu_complex32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_prod_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_std_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_std_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_sum_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_sum_mlu_complex32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_sum_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_var_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_all_var_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_all_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_amax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_amin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_amin_mlu_bool",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_amin_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_amin_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_amin_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_amin_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_amin_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_amin_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_any_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_argmax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_argmin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_count_nonzero_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_count_nonzero_mlu_bool",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_count_nonzero_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_count_nonzero_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_count_nonzero_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_count_nonzero_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_count_nonzero_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_count_nonzero_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_count_nonzero_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_linalg_vector_norm_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_linalg_vector_norm_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_linalg_vector_norm_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_linalg_vector_norm_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_amax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_amin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_amin_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_amin_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_amin_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_amin_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_amin_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_amin_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_argmax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_argmin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_logsumexp_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_logsumexp_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_logsumexp_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_logsumexp_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_logsumexp_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_logsumexp_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_logsumexp_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_mean_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_mean_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_norm_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_prod_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_prod_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_std_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_std_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_sum_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_sum_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_var_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_masked_var_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_mean_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_mean_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_nanmean_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_nanmean_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_nanmean_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_nansum_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_prod_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_prod_mlu_complex32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_prod_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_std_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_std_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_sum_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_sum_mlu_complex32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_sum_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_var_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_expanded_var_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_all_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_amax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_amin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_amin_mlu_bool",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_amin_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_amin_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_amin_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_amin_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_amin_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_amin_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_any_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_argmax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_argmin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_count_nonzero_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_count_nonzero_mlu_bool",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_count_nonzero_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_count_nonzero_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_count_nonzero_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_count_nonzero_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_count_nonzero_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_count_nonzero_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_count_nonzero_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_linalg_vector_norm_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_linalg_vector_norm_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_linalg_vector_norm_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_linalg_vector_norm_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_amax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_amin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_amin_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_amin_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_amin_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_amin_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_amin_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_amin_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_argmax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_argmin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_logsumexp_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_logsumexp_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_logsumexp_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_logsumexp_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_logsumexp_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_logsumexp_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_logsumexp_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_mean_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_mean_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_norm_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_prod_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_prod_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_std_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_std_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_sum_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_sum_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_var_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_masked_var_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_mean_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_mean_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_nanmean_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_nanmean_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_nanmean_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_nansum_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_prod_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_prod_mlu_complex32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_prod_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_std_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_std_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_sum_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_sum_mlu_complex32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_sum_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_var_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_innermost_var_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_all_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_amax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_amin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_amin_mlu_bool",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_amin_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_amin_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_amin_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_amin_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_amin_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_amin_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_any_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_argmax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_argmin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_count_nonzero_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_count_nonzero_mlu_bool",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_count_nonzero_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_count_nonzero_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_count_nonzero_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_count_nonzero_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_count_nonzero_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_count_nonzero_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_count_nonzero_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_linalg_vector_norm_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_linalg_vector_norm_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_linalg_vector_norm_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_linalg_vector_norm_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_amax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_amin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_amin_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_amin_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_amin_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_amin_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_amin_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_amin_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_argmax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_argmin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_logsumexp_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_logsumexp_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_logsumexp_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_logsumexp_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_logsumexp_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_logsumexp_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_logsumexp_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_mean_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_mean_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_norm_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_prod_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_prod_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_std_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_std_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_sum_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_sum_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_var_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_masked_var_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_mean_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_mean_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_nanmean_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_nanmean_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_nanmean_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_nansum_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_prod_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_prod_mlu_complex32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_prod_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_std_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_std_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_sum_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_sum_mlu_complex32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_sum_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_var_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_outermost_var_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_all_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_amax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_amin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_amin_mlu_bool",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_amin_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_amin_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_amin_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_amin_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_amin_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_amin_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_any_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_argmax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_argmin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_count_nonzero_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_count_nonzero_mlu_bool",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_count_nonzero_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_count_nonzero_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_count_nonzero_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_count_nonzero_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_count_nonzero_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_count_nonzero_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_count_nonzero_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_linalg_vector_norm_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_linalg_vector_norm_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_linalg_vector_norm_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_linalg_vector_norm_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_amax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_amin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_amin_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_amin_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_amin_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_amin_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_amin_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_amin_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_argmax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_argmin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_logsumexp_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_logsumexp_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_logsumexp_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_logsumexp_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_logsumexp_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_logsumexp_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_logsumexp_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_mean_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_mean_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_norm_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_prod_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_prod_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_std_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_std_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_sum_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_sum_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_var_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_masked_var_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_mean_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_mean_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_nanmean_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_nanmean_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_nanmean_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_nansum_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_prod_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_prod_mlu_complex32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_prod_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_std_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_std_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_sum_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_sum_mlu_complex32",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_sum_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_var_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_noncontiguous_transposed_var_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_numpy_named_args_mlu",
"test_reductions_py_TestReductionsMLU_test_quantile_backward_mlu",
"test_reductions_py_TestReductionsMLU_test_quantile_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_quantile_error_mlu",
"test_reductions_py_TestReductionsMLU_test_reduce_dtype_mlu",
"test_reductions_py_TestReductionsMLU_test_reduction_split_mlu",
"test_reductions_py_TestReductionsMLU_test_reduction_vectorize_along_input_corner_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_reduction_vectorize_along_input_corner_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_reduction_vectorize_along_input_corner_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_reduction_vectorize_along_output_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_reduction_vectorize_along_output_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_reduction_vectorize_along_output_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_all_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_amin_mlu_bool",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_amin_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_amin_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_amin_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_amin_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_amin_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_amin_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_any_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_count_nonzero_mlu_bool",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_count_nonzero_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_count_nonzero_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_count_nonzero_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_count_nonzero_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_count_nonzero_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_count_nonzero_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_count_nonzero_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_masked_amin_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_masked_amin_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_masked_amin_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_masked_amin_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_masked_amin_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_masked_amin_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_masked_mean_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_masked_prod_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_masked_std_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_masked_sum_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_masked_var_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_mean_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_nanmean_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_nanmean_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_prod_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_std_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_sum_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_duplicate_values_var_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_extremal_values_all_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_extremal_values_amax_mlu_float32", # Scalars are not close for nan
"test_reductions_py_TestReductionsMLU_test_ref_extremal_values_amin_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_ref_extremal_values_any_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_extremal_values_argmax_mlu_float32", # Scalars are not equal for nan
"test_reductions_py_TestReductionsMLU_test_ref_extremal_values_argmin_mlu_float32", # Scalars are not equal for nan
"test_reductions_py_TestReductionsMLU_test_ref_extremal_values_count_nonzero_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_extremal_values_count_nonzero_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_ref_extremal_values_masked_amax_mlu_float32", # Scalars are not close for nan
"test_reductions_py_TestReductionsMLU_test_ref_extremal_values_masked_amin_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_ref_extremal_values_masked_argmax_mlu_float32", # Scalars are not equal for nan
"test_reductions_py_TestReductionsMLU_test_ref_extremal_values_masked_argmin_mlu_float32", # Scalars are not equal for nan
"test_reductions_py_TestReductionsMLU_test_ref_extremal_values_masked_mean_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_extremal_values_masked_prod_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_extremal_values_masked_std_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_extremal_values_masked_sum_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_extremal_values_masked_var_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_extremal_values_mean_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_extremal_values_nanmean_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_ref_extremal_values_prod_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_extremal_values_std_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_extremal_values_sum_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_extremal_values_var_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_all_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_amin_mlu_bool",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_amin_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_amin_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_amin_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_amin_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_amin_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_amin_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_any_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_count_nonzero_mlu_bool",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_count_nonzero_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_count_nonzero_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_count_nonzero_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_count_nonzero_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_count_nonzero_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_count_nonzero_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_count_nonzero_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_masked_amin_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_masked_amin_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_masked_amin_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_masked_amin_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_masked_amin_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_masked_amin_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_masked_mean_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_masked_prod_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_masked_std_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_masked_sum_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_masked_var_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_mean_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_nanmean_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_nanmean_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_prod_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_std_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_sum_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_scalar_input_var_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_all_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_amin_mlu_bool",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_amin_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_amin_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_amin_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_amin_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_amin_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_amin_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_any_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_count_nonzero_mlu_bool",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_count_nonzero_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_count_nonzero_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_count_nonzero_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_count_nonzero_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_count_nonzero_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_count_nonzero_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_count_nonzero_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_masked_amin_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_masked_amin_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_masked_amin_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_masked_amin_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_masked_amin_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_masked_amin_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_masked_mean_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_masked_prod_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_masked_prod_mlu_float16", #  Tensor-likes are not close!  Greatest absolute difference: 0.000244140625
"test_reductions_py_TestReductionsMLU_test_ref_small_input_masked_std_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_masked_sum_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_masked_var_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_mean_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_nanmean_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_nanmean_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_prod_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_std_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_sum_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_ref_small_input_var_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_amax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_amax_mlu_float16", # Scalars are not close for nan
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_amax_mlu_float32", # Scalars are not close for nan
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_amax_mlu_uint8", # PYTORCH-10149
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_amin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_amin_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_amin_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_amin_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_amin_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_amin_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_amin_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_argmax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_argmin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_mean_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_mean_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_mean_mlu_uint8", # PYTORCH-10149
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_prod_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_prod_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_prod_mlu_uint8", # PYTORCH-10149
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_std_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_std_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_std_mlu_uint8", # PYTORCH-10149
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_sum_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_sum_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_sum_mlu_uint8", # PYTORCH-10149
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_var_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_var_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_reference_masked_masked_var_mlu_uint8", # PYTORCH-10149
"test_reductions_py_TestReductionsMLU_test_repeated_dim_mlu",
"test_reductions_py_TestReductionsMLU_test_result_dtype_all_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_result_dtype_amax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_amin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_amin_mlu_bool",
"test_reductions_py_TestReductionsMLU_test_result_dtype_amin_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_amin_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_result_dtype_amin_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_amin_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_result_dtype_amin_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_result_dtype_amin_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_result_dtype_any_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_result_dtype_argmax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_argmin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_count_nonzero_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_count_nonzero_mlu_bool",
"test_reductions_py_TestReductionsMLU_test_result_dtype_count_nonzero_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_result_dtype_count_nonzero_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_count_nonzero_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_result_dtype_count_nonzero_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_count_nonzero_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_result_dtype_count_nonzero_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_result_dtype_count_nonzero_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_result_dtype_linalg_vector_norm_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_linalg_vector_norm_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_result_dtype_linalg_vector_norm_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_linalg_vector_norm_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_amax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_amin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_amin_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_amin_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_amin_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_amin_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_amin_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_amin_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_argmax_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_argmin_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_logsumexp_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_logsumexp_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_logsumexp_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_logsumexp_mlu_int16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_logsumexp_mlu_int32",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_logsumexp_mlu_int8",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_logsumexp_mlu_uint8",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_mean_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_mean_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_norm_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_prod_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_prod_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_std_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_std_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_sum_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_sum_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_var_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_masked_var_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_result_dtype_mean_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_mean_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_result_dtype_nanmean_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_nanmean_mlu_float16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_nanmean_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_result_dtype_nansum_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_prod_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_prod_mlu_complex32",
"test_reductions_py_TestReductionsMLU_test_result_dtype_prod_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_result_dtype_std_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_std_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_result_dtype_sum_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_sum_mlu_complex32",
"test_reductions_py_TestReductionsMLU_test_result_dtype_sum_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_result_dtype_var_mlu_bfloat16",
"test_reductions_py_TestReductionsMLU_test_result_dtype_var_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_std_correction_vs_numpy_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_std_correction_vs_numpy_mlu_float32", # std not support correction
"test_reductions_py_TestReductionsMLU_test_std_mean_all_dims_mlu",
"test_reductions_py_TestReductionsMLU_test_std_mean_correction_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_std_mean_correction_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_std_mean_mlu",
"test_reductions_py_TestReductionsMLU_test_std_mean_some_dims_mlu",
"test_reductions_py_TestReductionsMLU_test_std_vs_numpy_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_sum_vs_numpy_mlu_int16", # RuntimeError: "random_" not implemented for 'Short'
"test_reductions_py_TestReductionsMLU_test_sum_vs_numpy_mlu_int8", # RuntimeError: "random_" not implemented for 'Char'
"test_reductions_py_TestReductionsMLU_test_sum_vs_numpy_mlu_uint8", # RuntimeError: "random_" not implemented for 'Byte'
"test_reductions_py_TestReductionsMLU_test_tensor_compare_ops_empty_mlu",
"test_reductions_py_TestReductionsMLU_test_tensor_reduce_ops_empty_mlu",
"test_reductions_py_TestReductionsMLU_test_var_correction_vs_numpy_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_var_correction_vs_numpy_mlu_float32", # var not support correction
"test_reductions_py_TestReductionsMLU_test_var_mean_all_dims_mlu",
"test_reductions_py_TestReductionsMLU_test_var_mean_correction_mlu_complex64",
"test_reductions_py_TestReductionsMLU_test_var_mean_correction_mlu_float32",
"test_reductions_py_TestReductionsMLU_test_var_mean_mlu",
"test_reductions_py_TestReductionsMLU_test_var_mean_some_dims_mlu",
"test_reductions_py_TestReductionsMLU_test_var_vs_numpy_mlu_complex64",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_gather_backward_with_empty_index_tensor_sparse_grad_False_mlu_float32",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_gather_backward_with_empty_index_tensor_sparse_grad_True_mlu_float32",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_gather_bool_mlu_bool",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_gather_mlu_complex64",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_gather_mlu_float32",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter__mlu_complex64",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter__mlu_float16",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter__mlu_float32",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter__reductions_mlu_float16",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter__reductions_mlu_float32",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter__scalar_mlu_complex64",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter__scalar_mlu_float16",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter__scalar_mlu_float32",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_add__mlu_complex64",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_add__mlu_float16",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_add__mlu_float32",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_add_mult_index_base_mlu_float32",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_amax_mlu_bfloat16",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_amax_mlu_float16",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_amax_mlu_float32",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_amax_mlu_int16",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_amax_mlu_int32",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_amax_mlu_int8",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_amax_mlu_uint8",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_amin_mlu_bfloat16",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_amin_mlu_float16",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_amin_mlu_float32",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_amin_mlu_int16",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_amin_mlu_int32",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_amin_mlu_int8",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_amin_mlu_uint8",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_mean_mlu_bfloat16",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_mean_mlu_float16",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_mean_mlu_float32",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_mean_mlu_int16",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_mean_mlu_int32",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_mean_mlu_int8",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_mean_mlu_uint8",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_prod_mlu_bfloat16",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_prod_mlu_float16",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_prod_mlu_float32",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_prod_mlu_int16",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_prod_mlu_int32",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_prod_mlu_int8",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_prod_mlu_uint8",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_sum_mlu_bfloat16",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_sum_mlu_complex64",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_sum_mlu_float16",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_sum_mlu_float32",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_sum_mlu_int16",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_sum_mlu_int32",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_sum_mlu_int8",
"test_scatter_gather_ops_py_TestScatterGatherMLU_test_scatter_reduce_sum_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_H_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_H_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_H_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_H_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_H_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_H_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_H_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_H_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_H_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_H_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_T_mlu_bfloat16", # T unsupport bf16
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___getitem___mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___getitem___mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___getitem___mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___getitem___mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___getitem___mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___getitem___mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___getitem___mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___getitem___mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___getitem___mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___getitem___mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rand___mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rand___mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rand___mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rand___mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rand___mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rdiv___mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rdiv___mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rmatmul___mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rmatmul___mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rmatmul___mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rmatmul___mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rmod___mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rmod___mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rmod___mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rmod___mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rmod___mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rmod___mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rmod___mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___ror___mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___ror___mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___ror___mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___ror___mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___ror___mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rpow___mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rpow___mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rpow___mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rpow___mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rpow___mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rpow___mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rpow___mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rpow___mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rxor___mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rxor___mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rxor___mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rxor___mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness___rxor___mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_abs_mlu_bfloat16", # TODO(PYTORCH-8789)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_abs_mlu_bool", # TODO(PYTORCH-8789)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_abs_mlu_complex32", # TODO(PYTORCH-8789)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_abs_mlu_int16", # TODO(PYTORCH-8789)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_abs_mlu_int8", # TODO(PYTORCH-8789)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_abs_mlu_uint8", # TODO(PYTORCH-8789)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_acos_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_acos_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_acos_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_acos_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_acos_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_acos_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_acos_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_acos_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_acos_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_acos_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_acosh_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_acosh_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_acosh_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_acosh_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_acosh_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_acosh_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_acosh_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_acosh_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_acosh_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_acosh_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_addbmm_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_addcdiv_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_addcdiv_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_addcmul_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_addcmul_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_addcmul_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_addcmul_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_addcmul_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_addcmul_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_addmm_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_addmm_decomposed_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_addmv_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_addr_mlu_bool",  # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Bool.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_addr_mlu_complex64",  # TODO(PYTORCH-8811): MLU addr don't support tensor dtype ComplexFloat.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_addr_mlu_int16",  # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Short.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_addr_mlu_int32",  # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Int.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_addr_mlu_int8",  # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Char.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_addr_mlu_uint8",  # TODO(PYTORCH-8811): MLU addr don't support tensor dtype Byte.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_all_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_all_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_allclose_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_allclose_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_allclose_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_allclose_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_amax_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_amin_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_amin_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_amin_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_amin_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_amin_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_amin_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_amin_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_amin_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_aminmax_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_aminmax_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_aminmax_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_aminmax_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_aminmax_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_aminmax_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_aminmax_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_aminmax_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_any_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_any_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_argmax_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_argmin_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_argsort_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_argsort_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_argsort_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_argsort_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_argsort_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_argsort_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_argsort_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_argwhere_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_argwhere_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_argwhere_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_argwhere_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_argwhere_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_argwhere_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_argwhere_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_argwhere_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_argwhere_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_as_strided_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_as_strided_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_as_strided_scatter_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_as_strided_scatter_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_as_strided_scatter_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_as_strided_scatter_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_as_strided_scatter_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_as_strided_scatter_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_as_strided_scatter_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_as_strided_scatter_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_as_strided_scatter_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_as_strided_scatter_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_asin_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_asin_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_asin_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_asin_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_asin_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_asin_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_asin_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_asin_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_asin_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_asin_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_asinh_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_asinh_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_asinh_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_asinh_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_asinh_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_asinh_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_asinh_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_asinh_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_asinh_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_asinh_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atan2_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atan2_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atan2_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atan2_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atan2_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atan2_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atan2_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atan2_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atan_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atan_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atan_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atan_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atan_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atan_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atan_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atan_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atan_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atan_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atanh_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atanh_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atanh_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atanh_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atanh_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atanh_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atanh_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atanh_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atanh_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atanh_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_1d_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_1d_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_1d_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_1d_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_1d_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_1d_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_1d_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_1d_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_1d_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_1d_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_2d_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_2d_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_2d_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_2d_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_2d_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_2d_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_2d_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_2d_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_2d_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_2d_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_3d_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_3d_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_3d_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_3d_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_3d_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_3d_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_3d_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_3d_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_3d_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_atleast_3d_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_baddbmm_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bernoulli_mlu_bfloat16", # TODO(PYTORCH-10285)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bfloat16_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bfloat16_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bfloat16_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bfloat16_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bfloat16_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bfloat16_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bfloat16_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bfloat16_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bfloat16_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bfloat16_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_block_diag_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_block_diag_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_block_diag_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_block_diag_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_block_diag_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_block_diag_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_block_diag_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_block_diag_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_block_diag_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_block_diag_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bmm_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bool_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bool_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bool_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bool_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bool_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bool_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bool_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bool_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bool_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bool_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_broadcast_shapes_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_broadcast_tensors_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_broadcast_tensors_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_broadcast_tensors_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_broadcast_tensors_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_broadcast_tensors_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_broadcast_tensors_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_broadcast_tensors_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_broadcast_tensors_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_broadcast_tensors_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_broadcast_to_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_broadcast_to_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_broadcast_to_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_broadcast_to_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_broadcast_to_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_broadcast_to_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_broadcast_to_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_broadcast_to_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_broadcast_to_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bucketize_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bucketize_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bucketize_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bucketize_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bucketize_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_bucketize_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_byte_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_byte_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_byte_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_byte_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_byte_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_byte_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_byte_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_byte_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_byte_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cartesian_prod_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cartesian_prod_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cartesian_prod_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cartesian_prod_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cartesian_prod_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cartesian_prod_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cartesian_prod_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cartesian_prod_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cartesian_prod_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cat_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cdist_mlu_float32", #TODO(PYTORCH-8665): cdist only supports p=1 now.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ceil_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ceil_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ceil_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ceil_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ceil_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_chalf_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_chalf_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_chalf_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_chalf_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_chalf_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_chalf_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_chalf_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_chalf_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_chalf_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_chalf_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_char_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_char_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_char_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_char_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_char_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_char_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_char_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_char_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_char_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_char_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cholesky_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cholesky_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cholesky_inverse_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cholesky_inverse_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cholesky_solve_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cholesky_solve_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_clamp_mlu_bfloat16",
# PYTORCH-9208 start
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_clamp_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_clamp_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_clamp_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_clamp_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_clamp_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_clamp_mlu_uint8",
# PYTORCH-9208 end
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_clamp_max_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_clamp_min_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_clone_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_clone_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_column_stack_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_column_stack_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_column_stack_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_column_stack_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_column_stack_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_column_stack_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_column_stack_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_column_stack_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_column_stack_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_column_stack_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_combinations_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_combinations_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_combinations_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_combinations_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_combinations_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_combinations_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_combinations_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_combinations_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_combinations_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_complex_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_complex_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_conj_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_conj_physical_mlu_bfloat16",  # TODO(PYTORCH-10336)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_conj_physical_mlu_bool",      # TODO(PYTORCH-10336)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_conj_physical_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_conj_physical_mlu_float16",   # TODO(PYTORCH-10336)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_conj_physical_mlu_float32",   # TODO(PYTORCH-10336)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_conj_physical_mlu_int16",     # TODO(PYTORCH-10336)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_conj_physical_mlu_int32",     # TODO(PYTORCH-10336)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_conj_physical_mlu_int8",      # TODO(PYTORCH-10336)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_conj_physical_mlu_uint8",     # TODO(PYTORCH-10336)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_constant_pad_nd_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_constant_pad_nd_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_contiguous_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_copysign_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_copysign_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_copysign_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_copysign_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_copysign_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_copysign_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_copysign_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_copysign_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_corrcoef_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_corrcoef_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_corrcoef_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_corrcoef_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_corrcoef_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_corrcoef_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_corrcoef_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_corrcoef_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cos_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cos_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cos_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cos_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cos_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cos_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cos_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cos_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cos_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cos_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cosh_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cosh_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cosh_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cosh_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cosh_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cosh_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cosh_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cosh_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cosh_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cosh_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_count_nonzero_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_count_nonzero_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_count_nonzero_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_count_nonzero_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_count_nonzero_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_count_nonzero_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_count_nonzero_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_count_nonzero_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_count_nonzero_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cov_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cov_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cov_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cov_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cov_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cov_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cov_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cov_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cross_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cross_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cross_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cross_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cross_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cross_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cross_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cummax_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cummax_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cummax_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cummax_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cummax_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cummax_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cummax_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cummax_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cumprod_mlu_bfloat16", # cumprod op does not support bfloat16 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cumprod_mlu_complex64", # cumprod op does not support complex64 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cumprod_mlu_uint8", # cumprod op does not support uint8 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cummin_mlu_bfloat16", # cummin does not support bfloat16 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cumsum_mlu_bfloat16", # cumsum op does not support bfloat16 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cumsum_mlu_complex64", # cumsum op does not support complex64 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cumsum_mlu_uint8", # cumsum op does not support uint8 optput on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cumulative_trapezoid_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cumulative_trapezoid_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cumulative_trapezoid_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cumulative_trapezoid_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cumulative_trapezoid_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cumulative_trapezoid_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cumulative_trapezoid_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_cumulative_trapezoid_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_deg2rad_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_deg2rad_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_deg2rad_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_deg2rad_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_deg2rad_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_deg2rad_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_deg2rad_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_deg2rad_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_diag_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_diag_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_diag_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_diag_embed_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_diag_embed_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_diag_embed_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_diagflat_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_diagflat_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_diagonal_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_diagonal_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_diagonal_scatter_mlu_bfloat16", # depends on bfloat16
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_diff_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_diff_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_diff_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_diff_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_diff_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_diff_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_diff_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_diff_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_diff_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_digamma_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_digamma_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_digamma_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_digamma_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_digamma_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_digamma_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_digamma_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_dist_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_dist_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_dist_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_dist_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_div_floor_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_div_no_rounding_mode_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_div_no_rounding_mode_mlu_complex32", # TODO(PYTORCH-8724): div not support complex dtypes
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_div_no_rounding_mode_mlu_complex64", # TODO(PYTORCH-8724): div not support complex dtypes
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_div_trunc_rounding_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_dot_mlu_bfloat16",  # TODO(PYTORCH-8807): MLU dot don't support tensor dtype Bfloat16.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_dot_mlu_complex64",  # TODO(PYTORCH-8807): MLU dot don't support tensor dtype ComplexFloat.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_double_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_double_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_double_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_double_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_double_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_double_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_double_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_double_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_double_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_double_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_dsplit_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_dsplit_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_dsplit_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_dsplit_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_dsplit_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_dsplit_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_dsplit_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_dsplit_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_dsplit_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_dsplit_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_dstack_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_dstack_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_dstack_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_dstack_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_dstack_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_dstack_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_dstack_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_dstack_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_dstack_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_dstack_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_einsum_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_einsum_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_einsum_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_einsum_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_empty_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_empty_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_empty_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_empty_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_empty_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_empty_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_empty_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_empty_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_empty_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_empty_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_empty_like_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_empty_like_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_empty_like_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_empty_like_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_empty_like_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_empty_like_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_empty_like_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_empty_like_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_empty_like_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_empty_like_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_eq_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_eq_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_eq_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_equal_mlu_bfloat16", # TODO(PYTORCH-8756)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_equal_mlu_complex64", # TODO(PYTORCH-8756)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_erf_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_erfc_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_erfc_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_erfc_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_erfc_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_erfc_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_erfc_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_erfc_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_erfc_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_exp2_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_exp2_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_exp2_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_exp2_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_exp2_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_exp2_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_exp2_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_exp2_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_exp_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_exp_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_exp_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_expm1_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_eye_mlu_complex64",  # TODO(PYTORCH-8910): MLU eye don't support tensor dtype ComplexFloat.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_eye_mlu_uint8",  # TODO(PYTORCH-10149): where op uint8 dtype problem.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fft2_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fft2_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fft2_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fft2_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fft2_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fft2_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fft2_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fft2_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fft2_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fft_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fft_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fft_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fft_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fft_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fft_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fft_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fft_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fft_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fftn_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fftn_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fftn_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fftn_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fftn_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fftn_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fftn_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fftn_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fftn_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fftshift_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fftshift_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fftshift_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fftshift_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fftshift_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fftshift_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fftshift_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fftshift_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fftshift_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_fftshift_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_hfft2_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_hfft2_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_hfft2_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_hfft2_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_hfft2_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_hfft2_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_hfft2_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_hfft2_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_hfft2_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_hfft_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_hfft_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_hfft_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_hfft_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_hfft_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_hfft_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_hfft_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_hfft_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_hfft_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_hfftn_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_hfftn_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_hfftn_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_hfftn_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_hfftn_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_hfftn_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_hfftn_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_hfftn_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_hfftn_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifft2_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifft2_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifft2_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifft2_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifft2_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifft2_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifft2_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifft2_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifft2_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifft_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifft_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifft_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifft_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifft_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifft_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifft_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifft_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifft_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifftn_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifftn_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifftn_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifftn_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifftn_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifftn_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifftn_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifftn_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifftn_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifftshift_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifftshift_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifftshift_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifftshift_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifftshift_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifftshift_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifftshift_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifftshift_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifftshift_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ifftshift_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ihfft2_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ihfft2_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ihfft2_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ihfft2_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ihfft2_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ihfft2_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ihfft2_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ihfft_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ihfft_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ihfft_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ihfft_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ihfft_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ihfft_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ihfft_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ihfftn_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ihfftn_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ihfftn_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ihfftn_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ihfftn_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ihfftn_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_ihfftn_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_irfft2_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_irfft2_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_irfft2_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_irfft2_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_irfft2_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_irfft2_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_irfft2_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_irfft2_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_irfft2_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_irfft_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_irfft_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_irfft_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_irfft_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_irfft_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_irfft_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_irfft_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_irfft_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_irfft_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_irfftn_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_irfftn_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_irfftn_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_irfftn_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_irfftn_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_irfftn_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_irfftn_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_irfftn_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_irfftn_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_rfft2_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_rfft2_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_rfft2_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_rfft2_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_rfft2_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_rfft2_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_rfft2_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_rfft_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_rfft_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_rfft_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_rfft_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_rfft_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_rfft_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_rfft_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_rfftn_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_rfftn_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_rfftn_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_rfftn_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_rfftn_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_rfftn_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fft_rfftn_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fill_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fill_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fill_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_flatten_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_flatten_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_flatten_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_flatten_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_flatten_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_flatten_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_flatten_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_flatten_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_flatten_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_flatten_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_flip_mlu_bfloat16", # TODO(PYTORCH-8802): flip not support bf16
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_flip_mlu_complex64", # TODO(PYTORCH-8802): flip not support complex dtypes
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fliplr_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fliplr_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fliplr_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fliplr_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fliplr_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fliplr_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fliplr_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fliplr_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fliplr_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_flipud_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_flipud_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_flipud_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_flipud_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_flipud_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_flipud_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_flipud_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_flipud_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_flipud_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_float_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_float_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_float_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_float_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_float_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_float_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_float_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_float_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_float_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_float_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_float_power_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_float_power_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_float_power_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_float_power_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_float_power_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_float_power_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_float_power_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_float_power_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_float_power_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_floor_mlu_bfloat16", # TODO(PYTORCH-8724): floor not support bf16
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_floor_mlu_int16", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_floor_mlu_int32", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_floor_mlu_int8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_floor_mlu_uint8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_floor_divide_mlu_bfloat16", # TODO(PYTORCH-8724): div not support bf16
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fmax_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fmax_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fmax_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fmax_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fmax_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fmax_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fmax_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fmax_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fmin_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fmin_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fmin_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fmin_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fmin_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fmin_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fmin_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fmin_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_fmod_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_frac_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_frexp_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_frexp_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_full_like_mlu_bfloat16", # TODO(PYTORCH-8738)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_full_like_mlu_complex64", # TODO(PYTORCH-8738)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_gather_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_gather_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_gcd_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_gcd_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_gcd_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_gcd_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ge_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_geqrf_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_geqrf_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_gradient_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_gradient_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_gradient_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_gradient_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_gradient_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_gradient_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_gradient_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_gt_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_half_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_half_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_half_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_half_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_half_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_half_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_half_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_half_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_half_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_heaviside_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_heaviside_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_heaviside_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_heaviside_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_heaviside_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_heaviside_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_heaviside_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_heaviside_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_histc_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_histc_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_histc_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_histc_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_hsplit_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_hsplit_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_hsplit_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_hsplit_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_hsplit_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_hsplit_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_hsplit_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_hsplit_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_hsplit_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_hsplit_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_hstack_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_hstack_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_hstack_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_hstack_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_hstack_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_hstack_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_hstack_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_hstack_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_hstack_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_hstack_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_hypot_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_hypot_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_hypot_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_i0_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_i0_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_i0_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_i0_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_i0_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_i0_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_i0_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_i0_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_igamma_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_igammac_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_imag_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_imag_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_index_add_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_index_add_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_index_add_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_index_add_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_index_add_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_index_add_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_index_copy_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_index_copy_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_index_fill_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_index_fill_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_index_put_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_index_put_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_index_put_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_index_put_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_index_reduce_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_index_reduce_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_index_reduce_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_index_reduce_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_index_reduce_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_index_reduce_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_index_reduce_mlu_uint8",
# TODO(PYTORCH-9186): bfloat16 and complex64 is not support.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_index_select_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_index_select_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_inner_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_inner_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_inner_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_inner_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_int_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_int_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_int_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_int_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_int_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_int_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_int_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_int_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_int_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isclose_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isclose_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isclose_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isclose_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isclose_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isclose_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isclose_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isclose_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isclose_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isfinite_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isin_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isin_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isin_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isin_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isin_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isin_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isinf_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isinf_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isinf_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isinf_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isinf_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isinf_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isinf_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isinf_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isinf_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isinf_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isnan_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isnan_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isneginf_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isneginf_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isneginf_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isneginf_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isneginf_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isneginf_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isneginf_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isneginf_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isposinf_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isposinf_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isposinf_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isposinf_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isposinf_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isposinf_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isposinf_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isposinf_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isreal_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isreal_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isreal_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isreal_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isreal_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isreal_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isreal_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isreal_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isreal_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_isreal_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_istft_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_istft_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_2inputs_2outputs_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_2inputs_2outputs_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_2inputs_2outputs_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_2inputs_2outputs_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_2inputs_2outputs_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_2inputs_2outputs_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_2inputs_2outputs_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_2inputs_2outputs_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_2inputs_2outputs_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_4inputs_with_extra_args_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_4inputs_with_extra_args_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_4inputs_with_extra_args_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_4inputs_with_extra_args_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_4inputs_with_extra_args_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_4inputs_with_extra_args_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_4inputs_with_extra_args_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_4inputs_with_extra_args_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_4inputs_with_extra_args_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_binary_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_binary_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_binary_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_binary_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_binary_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_binary_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_binary_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_binary_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_binary_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_binary_return_by_ref_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_binary_return_by_ref_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_binary_return_by_ref_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_binary_return_by_ref_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_binary_return_by_ref_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_binary_return_by_ref_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_binary_return_by_ref_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_binary_return_by_ref_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_binary_return_by_ref_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_unary_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_unary_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_unary_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_unary_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_unary_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_unary_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_unary_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_unary_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_jiterator_unary_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_kron_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_kron_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_kron_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_kron_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_kron_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_kron_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_kron_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_kron_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_kron_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_kthvalue_mlu_int16",  # TODO(PYTORCH-10249): MLU kthvalue don't support tensor dtype Short.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_kthvalue_mlu_int32",  # TODO(PYTORCH-10249): MLU kthvalue don't support tensor dtype Int.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_kthvalue_mlu_int8",  # TODO(PYTORCH-10249): MLU kthvalue don't support tensor dtype Char.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_kthvalue_mlu_uint8",  # TODO(PYTORCH-10249): MLU kthvalue don't support tensor dtype Byte.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_lcm_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_lcm_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_lcm_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_lcm_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ldexp_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ldexp_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ldexp_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ldexp_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ldexp_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ldexp_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ldexp_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ldexp_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ldexp_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_le_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_lerp_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_lerp_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_lerp_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_lerp_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_lgamma_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_lgamma_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_lgamma_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_lgamma_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_lgamma_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_lgamma_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_lgamma_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_cholesky_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_cholesky_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_cholesky_ex_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_cholesky_ex_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_cond_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_cond_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_cross_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_cross_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_cross_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_cross_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_cross_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_cross_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_cross_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_det_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_det_singular_mlu_complex64",# TODO(PYTORCH-9646): mlu not support lu_factor now.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_det_singular_mlu_float32",# TODO(PYTORCH-9646): mlu not support lu_factor now.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_eig_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_eig_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_eigh_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_eigh_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_eigvals_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_eigvals_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_eigvalsh_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_eigvalsh_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_householder_product_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_householder_product_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_inv_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_inv_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_inv_ex_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_inv_ex_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_ldl_factor_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_ldl_factor_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_ldl_factor_ex_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_ldl_factor_ex_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_ldl_solve_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_ldl_solve_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_lstsq_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_lstsq_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_lstsq_grad_oriented_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_lstsq_grad_oriented_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_lu_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_lu_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_lu_factor_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_lu_factor_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_lu_factor_ex_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_lu_factor_ex_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_lu_solve_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_lu_solve_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_matrix_norm_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_matrix_norm_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_matrix_norm_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_matrix_norm_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_matrix_power_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_matrix_power_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_matrix_rank_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_matrix_rank_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_matrix_rank_hermitian_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_matrix_rank_hermitian_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_multi_dot_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_multi_dot_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_multi_dot_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_multi_dot_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_norm_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_norm_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_norm_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_norm_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_norm_subgradients_at_zero_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_norm_subgradients_at_zero_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_norm_subgradients_at_zero_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_norm_subgradients_at_zero_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_pinv_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_pinv_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_pinv_hermitian_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_pinv_hermitian_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_pinv_singular_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_pinv_singular_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_qr_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_qr_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_slogdet_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_solve_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_solve_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_solve_ex_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_solve_ex_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_solve_triangular_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_solve_triangular_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_svd_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_svdvals_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_svdvals_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_tensorinv_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_tensorinv_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_tensorsolve_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_tensorsolve_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_vander_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_vander_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_vander_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_vander_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_vander_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_vander_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_vecdot_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_vecdot_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_vecdot_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_vecdot_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_vector_norm_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_vector_norm_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_vector_norm_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linalg_vector_norm_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linspace_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linspace_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linspace_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linspace_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_linspace_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_log10_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_log10_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_log1p_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_log2_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_log2_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_log_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_log_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_log_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_log_softmax_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_log_softmax_dtype_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_log_softmax_dtype_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_log_softmax_dtype_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logaddexp2_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logaddexp2_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logaddexp_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logaddexp_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logcumsumexp_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logcumsumexp_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logcumsumexp_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logdet_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logdet_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logical_and_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logical_and_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logical_not_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logical_not_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logical_or_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logical_or_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logical_xor_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logical_xor_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logit_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logit_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logit_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logit_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logit_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logit_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logit_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logit_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logspace_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logspace_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logspace_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logspace_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logspace_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logspace_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logspace_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logspace_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logsumexp_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logsumexp_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logsumexp_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logsumexp_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logsumexp_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logsumexp_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logsumexp_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_logsumexp_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_long_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_long_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_long_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_long_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_long_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_long_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_long_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_long_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_long_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_long_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_lt_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_lu_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_lu_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_lu_solve_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_lu_solve_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_lu_unpack_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_lu_unpack_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mH_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mH_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mH_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mH_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mH_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mH_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mH_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mH_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mH_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mH_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mT_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mT_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mT_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mT_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mT_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mT_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mT_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mT_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mT_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mT_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_amax_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_amax_mlu_uint8", # cnnlSelectV2 not support uint8
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_amin_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_amin_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_amin_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_amin_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_amin_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_amin_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_amin_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_argmax_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_argmax_mlu_uint8", # cnnlSelectV2 not support uint8
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_argmin_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_argmin_mlu_uint8", # cnnlSelectV2 not support uint8
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_cumprod_mlu_bfloat16", # cumprod op does not support bfloat16 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_cumprod_mlu_bool", # cumprod op does not support bool on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_cumprod_mlu_complex64", # cumprod op does not support complex64 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_cumprod_mlu_uint8", # cumprod op does not support uint8 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_cumsum_mlu_bfloat16", # cumsum op does not support bfloat16 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_cumsum_mlu_complex64", # cumsum op does not support complex64 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_cumsum_mlu_uint8", # where op does not suppoet uint8 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_fill_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_fill_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_fill_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_fill_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_log_softmax_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_logaddexp_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_logaddexp_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_logsumexp_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_logsumexp_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_logsumexp_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_logsumexp_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_logsumexp_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_logsumexp_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_logsumexp_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_mean_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_mean_mlu_bool", # PYTORCH-10149
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_mean_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_mean_mlu_uint8", # PYTORCH-10149
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_median_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_median_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_norm_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_normalize_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_normalize_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_normalize_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_normalize_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_prod_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_prod_mlu_bool", # PYTORCH-10149
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_prod_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_prod_mlu_uint8", # PYTORCH-10149
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_scatter_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_scatter_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_scatter_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_scatter_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_scatter_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_scatter_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_scatter_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_select_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_select_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_softmax_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_softmin_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_softmin_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_softmin_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_std_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_std_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_std_mlu_uint8", # PYTORCH-10149
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_sum_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_sum_mlu_bool", # PYTORCH-10149
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_sum_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_sum_mlu_uint8", # PYTORCH-10149
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_var_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_var_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_masked_var_mlu_uint8",# PYTORCH-10149
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_matmul_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_matmul_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_matmul_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_matmul_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_matrix_exp_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_matrix_exp_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_matrix_exp_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_matrix_exp_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_max_binary_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_max_reduction_no_dim_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_max_reduction_with_dim_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_max_reduction_with_dim_mlu_bool", # cnnl max not support bool with dim.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_max_reduction_with_dim_mlu_int16",# cnnl max not support int16 with dim
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_max_reduction_with_dim_mlu_int8",# cnnl max not support int8 with dim
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_max_reduction_with_dim_mlu_uint8",# cnnl max not support uint8 with dim
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_maximum_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mean_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mean_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_median_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_median_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_median_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_median_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_meshgrid_list_of_tensors_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_meshgrid_list_of_tensors_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_meshgrid_list_of_tensors_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_meshgrid_list_of_tensors_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_meshgrid_list_of_tensors_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_meshgrid_list_of_tensors_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_meshgrid_list_of_tensors_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_meshgrid_list_of_tensors_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_meshgrid_list_of_tensors_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_meshgrid_variadic_tensors_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_meshgrid_variadic_tensors_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_meshgrid_variadic_tensors_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_meshgrid_variadic_tensors_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_meshgrid_variadic_tensors_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_meshgrid_variadic_tensors_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_meshgrid_variadic_tensors_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_meshgrid_variadic_tensors_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_meshgrid_variadic_tensors_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_min_binary_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_min_reduction_no_dim_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_min_reduction_with_dim_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_min_reduction_with_dim_mlu_bool", # cnnl min not support bool with dim
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_min_reduction_with_dim_mlu_int16",# cnnl min not support int16 with dim
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_min_reduction_with_dim_mlu_int8",# cnnl min not support int8 with dim
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_min_reduction_with_dim_mlu_uint8",# cnnl min not support uint8 with dim
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_minimum_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mm_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mode_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mode_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mode_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mode_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mode_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mode_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mode_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mode_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_movedim_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_movedim_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_movedim_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_movedim_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_movedim_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_movedim_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_movedim_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_movedim_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_movedim_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_movedim_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_msort_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_msort_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_msort_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_msort_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_msort_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_msort_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_msort_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mv_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mv_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mvlgamma_mvlgamma_p_1_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mvlgamma_mvlgamma_p_1_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mvlgamma_mvlgamma_p_1_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mvlgamma_mvlgamma_p_1_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mvlgamma_mvlgamma_p_1_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mvlgamma_mvlgamma_p_1_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mvlgamma_mvlgamma_p_3_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mvlgamma_mvlgamma_p_3_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mvlgamma_mvlgamma_p_3_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mvlgamma_mvlgamma_p_3_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mvlgamma_mvlgamma_p_3_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mvlgamma_mvlgamma_p_3_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mvlgamma_mvlgamma_p_5_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mvlgamma_mvlgamma_p_5_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mvlgamma_mvlgamma_p_5_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mvlgamma_mvlgamma_p_5_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mvlgamma_mvlgamma_p_5_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_mvlgamma_mvlgamma_p_5_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nan_to_num_mlu_bfloat16", # TODO(PYTORCH-10157)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nanmean_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nanmean_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nanmean_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nanmedian_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nanmedian_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nanmedian_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nanmedian_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nanmedian_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nanmedian_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nanquantile_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nansum_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_narrow_copy_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_narrow_copy_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_narrow_copy_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_narrow_copy_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_narrow_copy_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_narrow_copy_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_narrow_copy_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_narrow_copy_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_narrow_copy_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_narrow_copy_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_native_layer_norm_mlu_bfloat16", # TODO(PYTORCH-10252)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_native_batch_norm_mlu_bfloat16",    # Do not support BFloat16
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ne_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ne_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_new_empty_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_new_empty_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_new_empty_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_new_empty_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_new_empty_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_new_empty_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_new_empty_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_new_empty_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_new_empty_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_new_empty_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_new_full_mlu_bfloat16", # TODO(PYTORCH-8738)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_new_full_mlu_complex32", # TODO(PYTORCH-8738)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_new_full_mlu_complex64", # TODO(PYTORCH-8738)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_new_ones_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_new_ones_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_new_ones_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_new_zeros_mlu_bfloat16", # zeros op does not support bfloat16 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_new_zeros_mlu_complex32", # zeros op does not support complex32 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_new_zeros_mlu_complex64", # zeros op does not support complex64 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nextafter_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nextafter_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional__scaled_dot_product_attention_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional__scaled_dot_product_attention_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional__scaled_dot_product_attention_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_adaptive_avg_pool1d_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_adaptive_avg_pool2d_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_adaptive_avg_pool3d_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_adaptive_max_pool1d_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_adaptive_max_pool2d_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_adaptive_max_pool3d_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_adaptive_max_pool3d_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_adaptive_max_pool3d_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_avg_pool1d_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_avg_pool2d_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_avg_pool2d_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_avg_pool2d_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_avg_pool3d_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_avg_pool3d_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_avg_pool3d_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_batch_norm_mlu_bfloat16",  # Do not support BFloat16
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_bilinear_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_bilinear_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_bilinear_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_binary_cross_entropy_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_binary_cross_entropy_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_binary_cross_entropy_with_logits_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_celu_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_celu_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_celu_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_cosine_embedding_loss_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_cosine_embedding_loss_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_cosine_embedding_loss_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_cosine_embedding_loss_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_cosine_embedding_loss_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_cosine_embedding_loss_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_cosine_embedding_loss_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_cosine_embedding_loss_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_cosine_similarity_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_cosine_similarity_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_cosine_similarity_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_cross_entropy_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_cross_entropy_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_cross_entropy_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_ctc_loss_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_dropout2d_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_dropout3d_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_dropout_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_elu_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_embedding_bag_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_embedding_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_feature_alpha_dropout_with_train_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_feature_alpha_dropout_without_train_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_fractional_max_pool2d_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_fractional_max_pool2d_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_fractional_max_pool3d_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_fractional_max_pool3d_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_gaussian_nll_loss_mlu_bfloat16", # [PYTORCH-10153] MLU lt does not support tensor dtype BFloat16.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_gelu_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_glu_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_grid_sample_mlu_float16", # TODO(PYTORCH-10134)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_grid_sample_mlu_float32", # TODO(PYTORCH-10134)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_group_norm_mlu_bfloat16", # TODO(PYTORCH-9186): bfloat16 is not support.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_group_norm_mlu_float16", # TODO(PYTORCH-9458): group_norm unsupport eps<0.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_group_norm_mlu_float32", # TODO(PYTORCH-9458): group_norm unsupport eps<0.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_hardshrink_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_hardshrink_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_hardshrink_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_hardsigmoid_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_hardswish_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_hardtanh_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_hardtanh_mlu_float16",# [PYTORCH-9208]: [cnnlClip]Parameter min must be less than max
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_hardtanh_mlu_float32",# [PYTORCH-9208]: [cnnlClip]Parameter min must be less than max
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_hinge_embedding_loss_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_hinge_embedding_loss_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_hinge_embedding_loss_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_huber_loss_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_huber_loss_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_huber_loss_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_instance_norm_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_instance_norm_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_instance_norm_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_interpolate_area_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_interpolate_nearest_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_kl_div_mlu_bfloat16", # TODO(PYTORCH-10269): mlu kl_div not support bf16
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_l1_loss_mlu_bfloat16", # l1_loss op does not support bfloat16 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_l1_loss_mlu_complex64", # l1_loss op does not support complex64 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_layer_norm_mlu_bfloat16", # TODO(PYTORCH-10252)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_leaky_relu_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_linear_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_local_response_norm_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_logsigmoid_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_margin_ranking_loss_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_margin_ranking_loss_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_margin_ranking_loss_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_margin_ranking_loss_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_margin_ranking_loss_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_margin_ranking_loss_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_margin_ranking_loss_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_max_pool1d_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_max_pool2d_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_max_pool2d_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_max_pool2d_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_max_pool3d_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_max_pool3d_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_max_pool3d_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_max_unpool1d_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_max_unpool1d_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_max_unpool1d_grad_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_max_unpool1d_grad_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_max_unpool2d_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_max_unpool2d_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_max_unpool2d_grad_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_max_unpool2d_grad_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_max_unpool3d_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_max_unpool3d_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_max_unpool3d_grad_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_max_unpool3d_grad_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_mish_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_mish_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_mish_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_mse_loss_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_multi_margin_loss_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_multi_margin_loss_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_multi_margin_loss_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_multilabel_margin_loss_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_multilabel_margin_loss_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_multilabel_margin_loss_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_multilabel_soft_margin_loss_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_multilabel_soft_margin_loss_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_multilabel_soft_margin_loss_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_nll_loss_mlu_bfloat16", # [PYTORCH-10151] nll loss does not support tensor dtype BFloat16.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_normalize_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_normalize_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_normalize_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_normalize_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pad_circular_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pad_circular_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pad_circular_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pad_circular_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pad_circular_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pad_circular_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pad_circular_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pad_circular_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pad_circular_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pad_constant_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pad_constant_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pad_constant_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pad_constant_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pad_constant_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pad_constant_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pad_constant_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pad_constant_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pad_constant_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pad_reflect_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pad_reflect_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pad_reflect_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pad_reflect_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pad_replicate_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pad_replicate_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pad_replicate_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pairwise_distance_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pairwise_distance_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pairwise_distance_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pairwise_distance_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pairwise_distance_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pairwise_distance_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pairwise_distance_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pairwise_distance_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pdist_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pixel_shuffle_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pixel_shuffle_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pixel_shuffle_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pixel_shuffle_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pixel_shuffle_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pixel_shuffle_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pixel_shuffle_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pixel_shuffle_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pixel_shuffle_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pixel_unshuffle_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pixel_unshuffle_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pixel_unshuffle_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pixel_unshuffle_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pixel_unshuffle_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pixel_unshuffle_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pixel_unshuffle_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pixel_unshuffle_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_pixel_unshuffle_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_poisson_nll_loss_mlu_bfloat16", # [PYTORCH-8789] MLU abs don't support tensor dtype BFloat16.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_poisson_nll_loss_mlu_int16", # [PYTORCH-8789] MLU abs don't support tensor dtype Short.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_poisson_nll_loss_mlu_int8", # [PYTORCH-8789] MLU abs don't support tensor dtype Char.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_poisson_nll_loss_mlu_uint8", # [PYTORCH-8789] MLU abs don't support tensor dtype Byte.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_prelu_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_prelu_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_relu6_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_relu6_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_relu6_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_relu6_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_relu6_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_relu6_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_relu6_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_relu_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_rrelu_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_selu_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_silu_mlu_bfloat16",    #dtype not support
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_soft_margin_loss_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_soft_margin_loss_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_soft_margin_loss_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_softmin_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_softmin_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_softmin_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_softmin_with_dtype_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_softmin_with_dtype_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_softmin_with_dtype_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_softmin_with_dtype_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_softmin_with_dtype_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_softmin_with_dtype_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_softmin_with_dtype_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_softmin_with_dtype_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_softplus_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_softshrink_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_softshrink_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_softshrink_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_softsign_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_softsign_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_softsign_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_softsign_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_softsign_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_softsign_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_softsign_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_softsign_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_softsign_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_tanhshrink_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_tanhshrink_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_tanhshrink_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_tanhshrink_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_tanhshrink_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_tanhshrink_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_tanhshrink_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_tanhshrink_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_threshold_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_triplet_margin_loss_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_triplet_margin_loss_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_triplet_margin_loss_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_triplet_margin_loss_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_triplet_margin_loss_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_triplet_margin_loss_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_triplet_margin_loss_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_triplet_margin_loss_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_triplet_margin_with_distance_loss_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_triplet_margin_with_distance_loss_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_triplet_margin_with_distance_loss_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_triplet_margin_with_distance_loss_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_triplet_margin_with_distance_loss_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_triplet_margin_with_distance_loss_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_triplet_margin_with_distance_loss_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_triplet_margin_with_distance_loss_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_unfold_mlu_bfloat16",  # TODO(PYTORCH-8763): MLU nn_unfold don't support tensor dtype Bfloat16.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_unfold_mlu_complex64",  # TODO(PYTORCH-8763): MLU nn_unfold don't support tensor dtype ComplexFloat.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nn_functional_upsample_nearest_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nonzero_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nonzero_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_nonzero_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_norm_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_norm_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_norm_mlu_float16", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_norm_mlu_float32", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_norm_fro_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_norm_fro_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_norm_inf_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_norm_inf_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_norm_inf_mlu_float16", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=-inf.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_norm_inf_mlu_float32", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=-inf.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_norm_nuc_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_norm_nuc_mlu_float16", # cnnl svd not support float16
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_normal_mlu_bfloat16", # TODO(PYTORCH-10242)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_normal_number_mean_mlu_bfloat16", # TODO(PYTORCH-10242)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ones_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ones_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ones_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ones_like_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ones_like_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ones_like_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ormqr_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ormqr_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_outer_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_pca_lowrank_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_pinverse_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_pinverse_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polar_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_0_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_0_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_0_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_0_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_0_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_0_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_0_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_1_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_1_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_1_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_1_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_1_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_1_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_1_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_2_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_2_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_2_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_2_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_2_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_2_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_2_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_3_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_3_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_3_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_3_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_3_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_3_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_3_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_4_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_4_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_4_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_4_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_4_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_4_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_polygamma_polygamma_n_4_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_positive_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_positive_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_positive_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_positive_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_positive_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_positive_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_positive_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_positive_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_positive_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_pow_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_pow_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_pow_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_pow_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_pow_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_pow_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_pow_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_prod_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_prod_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_prod_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_put_mlu_bfloat16", # put op does not support bfloat16 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_put_mlu_bool", # when accumulate is true, put op does not support bool
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_put_mlu_complex64", # put op does not support complex64 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_qr_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_quantile_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_rad2deg_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_rad2deg_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_rad2deg_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_rad2deg_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_rad2deg_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_rad2deg_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_rad2deg_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_rad2deg_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_rand_like_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_rand_like_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_rand_like_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_rand_like_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_rand_like_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_randint_like_mlu_bfloat16", # TODO(PYTORCH-10273)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_randint_like_mlu_int16", # TODO(PYTORCH-10273)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_randint_like_mlu_int8", # TODO(PYTORCH-10273)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_randint_like_mlu_uint8", # TODO(PYTORCH-10273)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_randn_mlu_bfloat16", # TODO(PYTORCH-10321)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_randn_like_mlu_bfloat16", # TODO(PYTORCH-10321)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ravel_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ravel_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ravel_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ravel_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ravel_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ravel_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ravel_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ravel_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ravel_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_ravel_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_real_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_real_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_real_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_real_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_real_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_real_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_real_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_real_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_real_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_real_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_reciprocal_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_reciprocal_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_remainder_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_renorm_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_renorm_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_renorm_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_renorm_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_repeat_interleave_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_repeat_interleave_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_repeat_interleave_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_reshape_as_mlu_bfloat16", # BFloat16 is not supported by reshape_as on MLU
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_reshape_mlu_bfloat16", # BFloat16 is not supported by reshape on MLU
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resize__mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resize__mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resize__mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resize__mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resize__mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resize__mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resize__mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resize__mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resize__mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resize_as__mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resize_as__mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resize_as__mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resize_as__mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resize_as__mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resize_as__mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resize_as__mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resize_as__mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resize_as__mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resolve_neg_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resolve_neg_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resolve_neg_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resolve_neg_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resolve_neg_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resolve_neg_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resolve_neg_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resolve_neg_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resolve_neg_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_resolve_neg_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_roll_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_roll_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_rot90_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_rot90_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_rot90_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_rot90_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_rot90_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_rot90_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_rot90_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_rot90_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_rot90_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_round_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_round_decimals_0_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_round_decimals_0_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_round_decimals_3_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_round_decimals_3_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_round_decimals_neg_3_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_round_decimals_neg_3_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_rsqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu rsqrt not support bf16
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_rsqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_rsqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_add_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_add_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_add_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_add_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_add_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_add_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_mlu_bfloat16", #depends on bfloat16
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_mlu_bool", # scatter.reduce doesn't support bool
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_mlu_complex64", # depends on complex64
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_mlu_int16", # scatter_add doesn't support short
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_mlu_int8", # scatter_add doesn't support char
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_mlu_uint8", # scatter_add doesn't support Byte
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_amax_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_amax_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_amax_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_amax_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_amax_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_amax_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_amax_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_amin_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_amin_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_amin_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_amin_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_amin_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_amin_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_amin_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_mean_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_mean_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_mean_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_mean_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_mean_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_mean_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_mean_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_prod_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_prod_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_prod_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_prod_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_prod_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_prod_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_prod_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_sum_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_sum_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_sum_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_sum_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_scatter_reduce_sum_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_searchsorted_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_searchsorted_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_searchsorted_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_searchsorted_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_searchsorted_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_searchsorted_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_segment_reduce_lengths_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_segment_reduce_lengths_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_segment_reduce_lengths_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_segment_reduce_offsets_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_segment_reduce_offsets_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_segment_reduce_offsets_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_select_scatter_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_select_scatter_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_select_scatter_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_select_scatter_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_select_scatter_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_select_scatter_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_select_scatter_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_select_scatter_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sgn_mlu_bfloat16", # TODO(PYTORCH-8948)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sgn_mlu_bool", # TODO(PYTORCH-8948)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sgn_mlu_complex32", # TODO(PYTORCH-8948)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sgn_mlu_int16", # TODO(PYTORCH-8948)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sgn_mlu_int32", # TODO(PYTORCH-8948)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sgn_mlu_int8", # TODO(PYTORCH-8948)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sgn_mlu_uint8", # TODO(PYTORCH-8948)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_short_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_short_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_short_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_short_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_short_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_short_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_short_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_short_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_short_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sigmoid_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sigmoid_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sign_mlu_bfloat16", # TODO(PYTORCH-8947)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sign_mlu_bool", # TODO(PYTORCH-8947)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sign_mlu_int16", # TODO(PYTORCH-8947)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sign_mlu_int32", # TODO(PYTORCH-8947)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sign_mlu_int8", # TODO(PYTORCH-8947)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sign_mlu_uint8", # TODO(PYTORCH-8947)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_signbit_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_signbit_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_signbit_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_signbit_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_signbit_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_signbit_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_signbit_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_signbit_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sin_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sin_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sin_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sin_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sin_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sin_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sin_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sin_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sin_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sin_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sinc_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sinc_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sinc_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sinc_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sinc_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sinc_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sinc_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sinc_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sinc_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sinh_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sinh_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sinh_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sinh_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sinh_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sinh_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sinh_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sinh_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sinh_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sinh_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_slice_mlu_bfloat16", # slice op does not support bfloat16 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_slice_scatter_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_softmax_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_softmax_with_dtype_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_softmax_with_dtype_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sort_mlu_bfloat16",  # TODO(PYTORCH-10347): MLU sort don't support tensor dtype Bfloat16.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sparse_sampled_addmm_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sparse_sampled_addmm_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_airy_ai_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_airy_ai_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_airy_ai_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_airy_ai_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_airy_ai_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_airy_ai_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_bessel_j0_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_bessel_j0_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_bessel_j0_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_bessel_j0_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_bessel_j0_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_bessel_j0_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_bessel_j1_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_bessel_j1_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_bessel_j1_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_bessel_j1_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_bessel_j1_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_bessel_j1_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_bessel_y0_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_bessel_y0_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_bessel_y0_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_bessel_y0_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_bessel_y0_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_bessel_y0_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_bessel_y1_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_bessel_y1_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_bessel_y1_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_bessel_y1_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_bessel_y1_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_bessel_y1_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_chebyshev_polynomial_t_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_chebyshev_polynomial_t_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_chebyshev_polynomial_t_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_chebyshev_polynomial_t_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_chebyshev_polynomial_t_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_chebyshev_polynomial_t_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_chebyshev_polynomial_u_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_chebyshev_polynomial_u_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_chebyshev_polynomial_u_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_chebyshev_polynomial_u_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_chebyshev_polynomial_u_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_chebyshev_polynomial_u_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_chebyshev_polynomial_v_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_chebyshev_polynomial_v_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_chebyshev_polynomial_v_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_chebyshev_polynomial_v_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_chebyshev_polynomial_v_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_chebyshev_polynomial_v_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_chebyshev_polynomial_w_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_chebyshev_polynomial_w_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_chebyshev_polynomial_w_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_chebyshev_polynomial_w_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_chebyshev_polynomial_w_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_chebyshev_polynomial_w_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_entr_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_entr_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_entr_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_entr_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_entr_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_entr_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_entr_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_entr_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_erfcx_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_erfcx_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_erfcx_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_erfcx_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_erfcx_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_erfcx_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_hermite_polynomial_h_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_hermite_polynomial_h_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_hermite_polynomial_h_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_hermite_polynomial_h_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_hermite_polynomial_h_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_hermite_polynomial_h_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_hermite_polynomial_he_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_hermite_polynomial_he_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_hermite_polynomial_he_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_hermite_polynomial_he_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_hermite_polynomial_he_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_hermite_polynomial_he_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_i0e_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_i0e_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_i0e_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_i0e_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_i0e_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_i0e_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_i0e_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_i0e_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_i1_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_i1_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_i1_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_i1_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_i1_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_i1_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_i1e_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_i1e_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_i1e_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_i1e_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_i1e_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_i1e_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_laguerre_polynomial_l_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_laguerre_polynomial_l_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_laguerre_polynomial_l_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_laguerre_polynomial_l_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_laguerre_polynomial_l_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_laguerre_polynomial_l_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_legendre_polynomial_p_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_legendre_polynomial_p_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_legendre_polynomial_p_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_legendre_polynomial_p_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_legendre_polynomial_p_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_legendre_polynomial_p_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_log_ndtr_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_log_ndtr_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_log_ndtr_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_log_ndtr_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_log_ndtr_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_log_ndtr_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_modified_bessel_i0_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_modified_bessel_i0_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_modified_bessel_i0_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_modified_bessel_i0_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_modified_bessel_i0_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_modified_bessel_i0_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_modified_bessel_i1_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_modified_bessel_i1_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_modified_bessel_i1_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_modified_bessel_i1_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_modified_bessel_i1_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_modified_bessel_i1_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_modified_bessel_k0_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_modified_bessel_k0_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_modified_bessel_k0_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_modified_bessel_k0_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_modified_bessel_k0_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_modified_bessel_k0_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_modified_bessel_k1_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_modified_bessel_k1_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_modified_bessel_k1_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_modified_bessel_k1_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_modified_bessel_k1_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_modified_bessel_k1_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_ndtr_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_ndtr_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_ndtr_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_ndtr_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_ndtr_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_ndtr_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_ndtr_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_ndtr_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_ndtri_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_ndtri_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_ndtri_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_ndtri_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_ndtri_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_ndtri_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_polygamma_special_polygamma_n_0_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_polygamma_special_polygamma_n_0_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_polygamma_special_polygamma_n_0_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_polygamma_special_polygamma_n_0_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_polygamma_special_polygamma_n_0_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_polygamma_special_polygamma_n_0_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_polygamma_special_polygamma_n_0_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_scaled_modified_bessel_k0_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_scaled_modified_bessel_k0_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_scaled_modified_bessel_k0_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_scaled_modified_bessel_k0_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_scaled_modified_bessel_k0_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_scaled_modified_bessel_k0_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_scaled_modified_bessel_k1_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_scaled_modified_bessel_k1_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_scaled_modified_bessel_k1_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_scaled_modified_bessel_k1_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_scaled_modified_bessel_k1_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_scaled_modified_bessel_k1_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_shifted_chebyshev_polynomial_t_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_shifted_chebyshev_polynomial_t_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_shifted_chebyshev_polynomial_t_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_shifted_chebyshev_polynomial_t_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_shifted_chebyshev_polynomial_t_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_shifted_chebyshev_polynomial_t_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_shifted_chebyshev_polynomial_u_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_shifted_chebyshev_polynomial_u_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_shifted_chebyshev_polynomial_u_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_shifted_chebyshev_polynomial_u_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_shifted_chebyshev_polynomial_u_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_shifted_chebyshev_polynomial_u_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_shifted_chebyshev_polynomial_v_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_shifted_chebyshev_polynomial_v_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_shifted_chebyshev_polynomial_v_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_shifted_chebyshev_polynomial_v_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_shifted_chebyshev_polynomial_v_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_shifted_chebyshev_polynomial_v_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_shifted_chebyshev_polynomial_w_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_shifted_chebyshev_polynomial_w_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_shifted_chebyshev_polynomial_w_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_shifted_chebyshev_polynomial_w_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_shifted_chebyshev_polynomial_w_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_shifted_chebyshev_polynomial_w_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_spherical_bessel_j0_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_spherical_bessel_j0_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_spherical_bessel_j0_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_spherical_bessel_j0_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_spherical_bessel_j0_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_spherical_bessel_j0_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_xlog1py_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_xlog1py_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_xlog1py_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_xlog1py_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_xlog1py_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_xlog1py_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_xlog1py_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_xlog1py_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_zeta_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_zeta_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_zeta_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_zeta_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_zeta_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_special_zeta_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu sqrt not support bf16
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_square_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_square_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_square_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_square_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_square_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_square_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_square_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_square_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_square_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_squeeze_mlu_bfloat16", # squeeze op unsupport bf16 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_stack_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_std_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_std_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_std_mean_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_std_mean_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_std_mean_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_std_mean_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_stft_mlu_complex64",  # TODO(PYTORCH-10372): MLU stft don't support tensor dtype ComplexFloat.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_stft_mlu_float32",  # TODO(PYTORCH-10374): CNNL FFT currently only support onesided.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sum_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sum_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sum_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sum_to_size_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sum_to_size_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sum_to_size_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sum_to_size_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sum_to_size_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sum_to_size_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sum_to_size_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sum_to_size_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_sum_to_size_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_svd_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_symeig_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_symeig_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_t_mlu_bfloat16", # t unsupport bf16
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_take_along_dim_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_take_along_dim_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_take_along_dim_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_take_along_dim_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_take_along_dim_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_take_along_dim_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_take_along_dim_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_take_along_dim_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_take_along_dim_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_take_mlu_bfloat16", # take op does not support bfloat16 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_take_mlu_complex64", # take op does not support complex64 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_tan_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_tan_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_tan_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_tan_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_tan_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_tan_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_tan_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_tan_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_tan_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_tan_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_tanh_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_tanh_mlu_complex64",
# TODO(PYTORCH-9186): bfloat16 is not support.
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_tensor_split_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_tensordot_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_tensordot_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_tensordot_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_tensordot_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_tile_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_tile_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_tile_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_tile_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_tile_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_tile_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_tile_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_tile_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_tile_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_to_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_to_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_to_sparse_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_to_sparse_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_to_sparse_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_to_sparse_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_to_sparse_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_to_sparse_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_to_sparse_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_to_sparse_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_to_sparse_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_topk_mlu_bfloat16", #depends on bfloat16
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trace_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trace_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trace_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trace_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trace_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trace_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trace_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trace_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trace_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trace_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trapezoid_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trapezoid_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trapezoid_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trapezoid_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trapezoid_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trapezoid_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trapezoid_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trapezoid_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trapz_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trapz_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trapz_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trapz_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trapz_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trapz_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trapz_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trapz_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_triangular_solve_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_triangular_solve_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_tril_indices_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_triu_indices_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_true_divide_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_true_divide_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_true_divide_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_true_divide_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_true_divide_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_true_divide_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_true_divide_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_true_divide_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_true_divide_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_true_divide_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trunc_mlu_bfloat16", # TODO(PYTORCH-8724): trunc not support bf16
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trunc_mlu_int16", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trunc_mlu_int32", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trunc_mlu_int8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_trunc_mlu_uint8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unflatten_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unflatten_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unflatten_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unflatten_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unflatten_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unflatten_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unflatten_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unflatten_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unflatten_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unflatten_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unfold_copy_mlu_bfloat16", # unfold op does not support bfloat16 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unfold_copy_mlu_complex32", # unfold op does not support complex32 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unfold_copy_mlu_complex64", # unfold op does not support complex64 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unfold_mlu_bfloat16", # unfold op does not support bfloat16 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unfold_mlu_complex32", # unfold op does not support complex32 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_uniform_mlu_bfloat16", # TODO(PYTORCH-10262)
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unique_consecutive_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unique_consecutive_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unique_consecutive_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unique_consecutive_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unique_consecutive_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unique_consecutive_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unique_consecutive_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unique_mlu_bool", # unique op does not support bool on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unique_mlu_float16", # unique op does not support float16 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unique_mlu_int16", # unique op does not support int16 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unique_mlu_int8", # unique op does not support int8 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unique_mlu_uint8", # unique op does not support unit8 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_unsqueeze_mlu_bfloat16", # unsqueeze op unsupport bf16 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_var_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_var_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_var_mean_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_var_mean_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_var_mean_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_var_mean_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_vdot_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_vdot_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_vdot_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_vdot_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_view_as_mlu_bfloat16", # BFloat16 is not supproted by view_as on MLU
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_view_mlu_bfloat16", # BFloat16 is not supproted by view on MLU
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_vsplit_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_vsplit_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_vsplit_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_vsplit_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_vsplit_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_vsplit_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_vsplit_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_vsplit_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_vsplit_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_vsplit_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_vstack_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_vstack_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_vstack_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_vstack_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_vstack_mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_vstack_mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_vstack_mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_vstack_mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_vstack_mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_vstack_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_where_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_where_mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_where_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_where_mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_where_mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_xlogy_mlu_bfloat16", # TODO(PYTORCH-8751): xlogy not support bf16
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_zero__mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_zero__mlu_bool",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_zero__mlu_complex64",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_zero__mlu_float16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_zero__mlu_float32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_zero__mlu_int16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_zero__mlu_int32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_zero__mlu_int8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_zero__mlu_uint8",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_zeros_mlu_bfloat16", # zeros op does not support bfloat16 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_zeros_mlu_complex32", # zeros op does not support complex32 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_zeros_mlu_complex64", # zeros op does not support complex64 on mlu
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_zeros_like_mlu_bfloat16",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_zeros_like_mlu_complex32",
"test_schema_check_py_TestSchemaCheckModeOpInfoMLU_test_schema_correctness_zeros_like_mlu_complex64",
"test_segment_reductions_py_TestSegmentReductionsMLU_test_multi_d_mlu_bfloat16_int32",
"test_segment_reductions_py_TestSegmentReductionsMLU_test_multi_d_mlu_float16_int32",
"test_segment_reductions_py_TestSegmentReductionsMLU_test_multi_d_mlu_float32_int32",
"test_segment_reductions_py_TestSegmentReductionsMLU_test_multi_d_simple_mlu_bfloat16_int32",
"test_segment_reductions_py_TestSegmentReductionsMLU_test_multi_d_simple_mlu_float16_int32",
"test_segment_reductions_py_TestSegmentReductionsMLU_test_multi_d_simple_mlu_float32_int32",
"test_segment_reductions_py_TestSegmentReductionsMLU_test_pytorch_scatter_test_cases_reduce_max_mlu_bfloat16_int32",
"test_segment_reductions_py_TestSegmentReductionsMLU_test_pytorch_scatter_test_cases_reduce_max_mlu_float16_int32",
"test_segment_reductions_py_TestSegmentReductionsMLU_test_pytorch_scatter_test_cases_reduce_max_mlu_float32_int32",
"test_segment_reductions_py_TestSegmentReductionsMLU_test_pytorch_scatter_test_cases_reduce_mean_mlu_bfloat16_int32",
"test_segment_reductions_py_TestSegmentReductionsMLU_test_pytorch_scatter_test_cases_reduce_mean_mlu_float16_int32",
"test_segment_reductions_py_TestSegmentReductionsMLU_test_pytorch_scatter_test_cases_reduce_mean_mlu_float32_int32",
"test_segment_reductions_py_TestSegmentReductionsMLU_test_pytorch_scatter_test_cases_reduce_min_mlu_bfloat16_int32",
"test_segment_reductions_py_TestSegmentReductionsMLU_test_pytorch_scatter_test_cases_reduce_min_mlu_float16_int32",
"test_segment_reductions_py_TestSegmentReductionsMLU_test_pytorch_scatter_test_cases_reduce_min_mlu_float32_int32",
"test_segment_reductions_py_TestSegmentReductionsMLU_test_pytorch_scatter_test_cases_reduce_prod_mlu_bfloat16_int32",
"test_segment_reductions_py_TestSegmentReductionsMLU_test_pytorch_scatter_test_cases_reduce_prod_mlu_float16_int32",
"test_segment_reductions_py_TestSegmentReductionsMLU_test_pytorch_scatter_test_cases_reduce_prod_mlu_float32_int32",
"test_segment_reductions_py_TestSegmentReductionsMLU_test_pytorch_scatter_test_cases_reduce_sum_mlu_bfloat16_int32",
"test_segment_reductions_py_TestSegmentReductionsMLU_test_pytorch_scatter_test_cases_reduce_sum_mlu_float16_int32",
"test_segment_reductions_py_TestSegmentReductionsMLU_test_pytorch_scatter_test_cases_reduce_sum_mlu_float32_int32",
"test_segment_reductions_py_TestSegmentReductionsMLU_test_simple_1d_mlu_bfloat16_int32",
"test_segment_reductions_py_TestSegmentReductionsMLU_test_simple_1d_mlu_float16_int32",
"test_segment_reductions_py_TestSegmentReductionsMLU_test_simple_1d_mlu_float32_int32",
"test_segment_reductions_py_TestSegmentReductionsMLU_test_unsafe_flag_mlu_int32",
"test_serialization_py_TestOldSerialization_test_load_error_msg",
"test_serialization_py_TestOldSerialization_test_load_nonexistent_device",
"test_serialization_py_TestOldSerialization_test_load_python2_unicode_module",
"test_serialization_py_TestOldSerialization_test_load_unicode_error_msg",
"test_serialization_py_TestOldSerialization_test_save_different_dtype_error",
"test_serialization_py_TestOldSerialization_test_save_different_dtype_unallocated",
"test_serialization_py_TestOldSerialization_test_serialization",
"test_serialization_py_TestOldSerialization_test_serialization_backwards_compat",
"test_serialization_py_TestOldSerialization_test_serialization_backwards_compat_safe",
"test_serialization_py_TestOldSerialization_test_serialization_container",
"test_serialization_py_TestOldSerialization_test_serialization_container_filelike",
"test_serialization_py_TestOldSerialization_test_serialization_dill",
"test_serialization_py_TestOldSerialization_test_serialization_dill_version_not_supported",
"test_serialization_py_TestOldSerialization_test_serialization_fake_zip",
"test_serialization_py_TestOldSerialization_test_serialization_filelike",
"test_serialization_py_TestOldSerialization_test_serialization_filelike_api_requirements",
"test_serialization_py_TestOldSerialization_test_serialization_filelike_missing_attrs",
"test_serialization_py_TestOldSerialization_test_serialization_filelike_stress",
"test_serialization_py_TestOldSerialization_test_serialization_filelike_uses_readinto",
"test_serialization_py_TestOldSerialization_test_serialization_gzip",
"test_serialization_py_TestOldSerialization_test_serialization_map_location",
"test_serialization_py_TestOldSerialization_test_serialization_offset",
"test_serialization_py_TestOldSerialization_test_serialization_offset_filelike_weights_only_False",
"test_serialization_py_TestOldSerialization_test_serialization_offset_filelike_weights_only_True",
"test_serialization_py_TestOldSerialization_test_serialization_offset_gzip",
"test_serialization_py_TestOldSerialization_test_serialization_safe",
"test_serialization_py_TestOldSerialization_test_serialization_save_warnings",
"test_serialization_py_TestOldSerialization_test_serialization_sparse",
"test_serialization_py_TestOldSerialization_test_serialization_sparse_csr_invalid",
"test_serialization_py_TestOldSerialization_test_serialization_sparse_invalid",
"test_serialization_py_TestOldSerialization_test_serialization_sparse_safe",
"test_serialization_py_TestOldSerialization_test_serialization_storage_slice",
"test_serialization_py_TestOldSerialization_test_serialization_zipfile_utils",
"test_serialization_py_TestOldSerialization_test_serialize_device",
"test_serialization_py_TestSerialization_test_load_error_msg",
"test_serialization_py_TestSerialization_test_load_nonexistent_device",
"test_serialization_py_TestSerialization_test_load_python2_unicode_module",
"test_serialization_py_TestSerialization_test_load_unicode_error_msg",
"test_serialization_py_TestSerialization_test_meta_serialization_weights_only_False",
"test_serialization_py_TestSerialization_test_meta_serialization_weights_only_True",
"test_serialization_py_TestSerialization_test_pathlike_serialization_weights_only_False",
"test_serialization_py_TestSerialization_test_pathlike_serialization_weights_only_True",
"test_serialization_py_TestSerialization_test_save_different_dtype_error",
"test_serialization_py_TestSerialization_test_save_different_dtype_unallocated",
"test_serialization_py_TestSerialization_test_serialization",
"test_serialization_py_TestSerialization_test_serialization_2gb_file",
"test_serialization_py_TestSerialization_test_serialization_backwards_compat",
"test_serialization_py_TestSerialization_test_serialization_backwards_compat_safe",
"test_serialization_py_TestSerialization_test_serialization_dill",
"test_serialization_py_TestSerialization_test_serialization_dill_version_not_supported",
"test_serialization_py_TestSerialization_test_serialization_fake_zip",
"test_serialization_py_TestSerialization_test_serialization_filelike",
"test_serialization_py_TestSerialization_test_serialization_filelike_api_requirements",
"test_serialization_py_TestSerialization_test_serialization_filelike_missing_attrs",
"test_serialization_py_TestSerialization_test_serialization_filelike_stress",
"test_serialization_py_TestSerialization_test_serialization_filelike_uses_readinto",
"test_serialization_py_TestSerialization_test_serialization_gzip",
"test_serialization_py_TestSerialization_test_serialization_map_location",
"test_serialization_py_TestSerialization_test_serialization_offset_gzip",
"test_serialization_py_TestSerialization_test_serialization_safe",
"test_serialization_py_TestSerialization_test_serialization_save_warnings",
"test_serialization_py_TestSerialization_test_serialization_sparse",
"test_serialization_py_TestSerialization_test_serialization_sparse_csr_invalid",
"test_serialization_py_TestSerialization_test_serialization_sparse_invalid",
"test_serialization_py_TestSerialization_test_serialization_sparse_safe",
"test_serialization_py_TestSerialization_test_serialization_storage_slice",
"test_serialization_py_TestSerialization_test_serialization_zipfile_actually_jit",
"test_serialization_py_TestSerialization_test_serialization_zipfile_utils",
"test_serialization_py_TestSerialization_test_serialization_zipfile_weights_only_False",
"test_serialization_py_TestSerialization_test_serialization_zipfile_weights_only_True",
"test_serialization_py_TestSerialization_test_serialize_device",
"test_serialization_py_TestSerialization_test_weights_only_assert",
"test_serialization_py_TestSubclassSerialization_test_cloned_deepcopy_requires_grad_False",
"test_serialization_py_TestSubclassSerialization_test_cloned_deepcopy_requires_grad_True",
"test_serialization_py_TestSubclassSerialization_test_empty_class_serialization",
"test_serialization_py_TestSubclassSerialization_test_tensor_subclass_deepcopy",
"test_serialization_py_TestSubclassSerialization_test_tensor_subclass_getstate_overwrite",
"test_serialization_py_TestSubclassSerialization_test_tensor_subclass_wrapper_serialization",
"test_serialization_py_TestBothSerializationMLU_test_serialization_new_format_old_format_compat_mlu",
"test_serialization_py_TestBothSerializationMLU_test_serialization_new_format_old_format_compat_safe_mlu",
"test_shape_ops_py_TestShapeOpsMLU_test_complex_rot90_mlu_complex64",
"test_shape_ops_py_TestShapeOpsMLU_test_diagonal_multidim_mlu_float32",
"test_shape_ops_py_TestShapeOpsMLU_test_flip_mlu_bfloat16", # TODO(PYTORCH-8802): flip not support bf16
"test_shape_ops_py_TestShapeOpsMLU_test_flip_mlu_float32", # MLU not support quantized
"test_shape_ops_py_TestShapeOpsMLU_test_flip_mlu_complex64", # TODO(PYTORCH-8802): flip not support complex dtypes
"test_shape_ops_py_TestShapeOpsMLU_test_flip_errors_mlu_bfloat16", # TODO(PYTORCH-8802): flip not support bf16
"test_shape_ops_py_TestShapeOpsMLU_test_flip_numpy_mlu_bfloat16", # TODO(PYTORCH-8802): flip not support bf16
"test_shape_ops_py_TestShapeOpsMLU_test_flip_numpy_mlu_complex64", # TODO(PYTORCH-8802): flip not support complex dtypes
"test_shape_ops_py_TestShapeOpsMLU_test_movedim_mlu_float32",
"test_shape_ops_py_TestShapeOpsMLU_test_movedim_invalid_mlu_float32",
"test_shape_ops_py_TestShapeOpsMLU_test_nonzero_mlu_bfloat16",
"test_shape_ops_py_TestShapeOpsMLU_test_nonzero_mlu_bool",
"test_shape_ops_py_TestShapeOpsMLU_test_nonzero_mlu_float16",
"test_shape_ops_py_TestShapeOpsMLU_test_nonzero_mlu_float32",
"test_shape_ops_py_TestShapeOpsMLU_test_nonzero_mlu_int16",
"test_shape_ops_py_TestShapeOpsMLU_test_nonzero_mlu_int32",
"test_shape_ops_py_TestShapeOpsMLU_test_nonzero_mlu_int8",
"test_shape_ops_py_TestShapeOpsMLU_test_nonzero_mlu_uint8",
"test_shape_ops_py_TestShapeOpsMLU_test_rot90_mlu",
"test_shape_ops_py_TestShapeOpsMLU_test_tolist_mlu",
"test_shape_ops_py_TestShapeOpsMLU_test_trace_mlu_float16",
"test_shape_ops_py_TestShapeOpsMLU_test_trace_mlu_float32",
"test_shape_ops_py_TestShapeOpsMLU_test_trace_mlu_int16",
"test_shape_ops_py_TestShapeOpsMLU_test_trace_mlu_int32",
"test_shape_ops_py_TestShapeOpsMLU_test_trace_mlu_int8",
"test_shape_ops_py_TestShapeOpsMLU_test_trace_mlu_uint8",
"test_show_pickle_py_TestShowPickle_test_scripted_model",
"test_sort_and_select_py_TestSortAndSelectMLU_test_isin_mlu_float16",
"test_sort_and_select_py_TestSortAndSelectMLU_test_isin_mlu_float32",
"test_sort_and_select_py_TestSortAndSelectMLU_test_isin_mlu_int16",
"test_sort_and_select_py_TestSortAndSelectMLU_test_isin_mlu_int32",
"test_sort_and_select_py_TestSortAndSelectMLU_test_isin_mlu_int8",
"test_sort_and_select_py_TestSortAndSelectMLU_test_isin_mlu_uint8",
"test_sort_and_select_py_TestSortAndSelectMLU_test_isin_different_devices_mlu_float32",
"test_sort_and_select_py_TestSortAndSelectMLU_test_isin_different_devices_mlu_int16",
"test_sort_and_select_py_TestSortAndSelectMLU_test_isin_different_devices_mlu_int32",
"test_sort_and_select_py_TestSortAndSelectMLU_test_isin_different_devices_mlu_int8",
"test_sort_and_select_py_TestSortAndSelectMLU_test_isin_different_devices_mlu_uint8",
"test_sort_and_select_py_TestSortAndSelectMLU_test_isin_different_dtypes_mlu",
"test_sort_and_select_py_TestSortAndSelectMLU_test_msort_mlu_bfloat16",
"test_sort_and_select_py_TestSortAndSelectMLU_test_msort_mlu_float16",
"test_sort_and_select_py_TestSortAndSelectMLU_test_msort_mlu_float32",
"test_sort_and_select_py_TestSortAndSelectMLU_test_msort_mlu_int16",
"test_sort_and_select_py_TestSortAndSelectMLU_test_msort_mlu_int32",
"test_sort_and_select_py_TestSortAndSelectMLU_test_msort_mlu_int8",
"test_sort_and_select_py_TestSortAndSelectMLU_test_msort_mlu_uint8",
"test_sort_and_select_py_TestSortAndSelectMLU_test_sort_mlu",  # TODO(PYTORCH-10347): MLU sort don't support tensor NaN.
"test_sort_and_select_py_TestSortAndSelectMLU_test_sort_discontiguous_mlu_float32",  # TODO(PYTORCH-10349): Stride is not handled correctly.
"test_sort_and_select_py_TestSortAndSelectMLU_test_sort_discontiguous_slow_mlu_float32",  # This test is not supported on MLU.
"test_sort_and_select_py_TestSortAndSelectMLU_test_sort_large_mlu_uint8",  # MLU memory is not large enough.
"test_sort_and_select_py_TestSortAndSelectMLU_test_stable_sort_against_numpy_mlu_bfloat16",  # TODO(PYTORCH-10347): MLU sort don't support tensor dtype Bfloat16.
"test_sort_and_select_py_TestSortAndSelectMLU_test_stable_sort_mlu_bfloat16",  # TODO(PYTORCH-10347): MLU sort don't support tensor dtype Bfloat16.
"test_sort_and_select_py_TestSortAndSelectMLU_test_topk_1d_output_discontiguous_mlu_float32",
"test_sort_and_select_py_TestSortAndSelectMLU_test_topk_4d_mlu",
"test_sort_and_select_py_TestSortAndSelectMLU_test_topk_arguments_mlu",
"test_sort_and_select_py_TestSortAndSelectMLU_test_topk_bfloat16_mlu_bfloat16",
"test_sort_and_select_py_TestSortAndSelectMLU_test_topk_mlu",
"test_sort_and_select_py_TestSortAndSelectMLU_test_topk_integral_mlu_int16",
"test_sort_and_select_py_TestSortAndSelectMLU_test_topk_integral_mlu_int32",
"test_sort_and_select_py_TestSortAndSelectMLU_test_topk_integral_mlu_int8",
"test_sort_and_select_py_TestSortAndSelectMLU_test_topk_integral_mlu_uint8",
"test_sort_and_select_py_TestSortAndSelectMLU_test_topk_noncontiguous_mlu_mlu",
"test_sort_and_select_py_TestSortAndSelectMLU_test_topk_nonfinite_mlu_bfloat16",
"test_sort_and_select_py_TestSortAndSelectMLU_test_topk_nonfinite_mlu_float16",
"test_sort_and_select_py_TestSortAndSelectMLU_test_topk_nonfinite_mlu_float32",
"test_sort_and_select_py_TestSortAndSelectMLU_test_topk_zero_mlu_bfloat16",
"test_sort_and_select_py_TestSortAndSelectMLU_test_topk_zero_mlu_float32",
"test_sort_and_select_py_TestSortAndSelectMLU_test_topk_zero_mlu_int16",
"test_sort_and_select_py_TestSortAndSelectMLU_test_topk_zero_mlu_int32",
"test_sort_and_select_py_TestSortAndSelectMLU_test_topk_zero_mlu_int8",
"test_sort_and_select_py_TestSortAndSelectMLU_test_topk_zero_mlu_uint8",
"test_sort_and_select_py_TestSortAndSelectMLU_test_unique_consecutive_mlu_bool",
"test_sort_and_select_py_TestSortAndSelectMLU_test_unique_consecutive_mlu_float16",
"test_sort_and_select_py_TestSortAndSelectMLU_test_unique_consecutive_mlu_float32",
"test_sort_and_select_py_TestSortAndSelectMLU_test_unique_consecutive_mlu_int16",
"test_sort_and_select_py_TestSortAndSelectMLU_test_unique_consecutive_mlu_int32",
"test_sort_and_select_py_TestSortAndSelectMLU_test_unique_consecutive_mlu_int8",
"test_sort_and_select_py_TestSortAndSelectMLU_test_unique_consecutive_mlu_uint8",
"test_sort_and_select_py_TestSortAndSelectMLU_test_unique_mlu_bool", # unique op does not support bool on mlu
"test_sort_and_select_py_TestSortAndSelectMLU_test_unique_mlu_float16", # unique op does not support float16 on mlu
"test_sort_and_select_py_TestSortAndSelectMLU_test_unique_mlu_int16", # unique op does not support int16 on mlu
"test_sort_and_select_py_TestSortAndSelectMLU_test_unique_mlu_int8", # unique op does not support int8 on mlu
"test_sort_and_select_py_TestSortAndSelectMLU_test_unique_mlu_uint8", # unique op does not support unit8 on mlu
"test_spectral_ops_py_TestFFTMLU_test_batch_istft_mlu",
"test_spectral_ops_py_TestFFTMLU_test_complex_stft_onesided_mlu",  # TODO(PYTORCH-10372): MLU stft don't support tensor dtype ComplexDouble.
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_fft2_mlu_complex32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_fft2_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_fft2_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_fft2_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_fft_mlu_complex32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_fft_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_fft_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_fft_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_fftn_mlu_complex32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_fftn_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_fftn_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_fftn_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_hfft2_mlu_complex32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_hfft2_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_hfft2_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_hfft2_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_hfft_mlu_complex32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_hfft_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_hfft_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_hfft_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_hfftn_mlu_complex32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_hfftn_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_hfftn_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_hfftn_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_ifft2_mlu_complex32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_ifft2_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_ifft2_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_ifft2_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_ifft_mlu_complex32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_ifft_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_ifft_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_ifft_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_ifftn_mlu_complex32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_ifftn_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_ifftn_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_ifftn_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_ihfft2_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_ihfft2_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_ihfft_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_ihfft_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_ihfftn_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_ihfftn_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_irfft2_mlu_complex32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_irfft2_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_irfft2_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_irfft2_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_irfft_mlu_complex32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_irfft_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_irfft_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_irfft_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_irfftn_mlu_complex32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_irfftn_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_irfftn_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_irfftn_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_rfft2_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_rfft2_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_rfft_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_rfft_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_rfftn_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_empty_fft_fft_rfftn_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_empty_ifft_mlu",
"test_spectral_ops_py_TestFFTMLU_test_fft2_fftn_equivalence_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_fft2_fftn_equivalence_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_fft2_invalid_mlu",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_bfloat16_errors_fft_fft2_mlu_bfloat16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_bfloat16_errors_fft_fft_mlu_bfloat16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_bfloat16_errors_fft_fftn_mlu_bfloat16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_bfloat16_errors_fft_hfft2_mlu_bfloat16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_bfloat16_errors_fft_hfft_mlu_bfloat16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_bfloat16_errors_fft_hfftn_mlu_bfloat16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_bfloat16_errors_fft_ifft2_mlu_bfloat16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_bfloat16_errors_fft_ifft_mlu_bfloat16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_bfloat16_errors_fft_ifftn_mlu_bfloat16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_bfloat16_errors_fft_ihfft2_mlu_bfloat16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_bfloat16_errors_fft_ihfft_mlu_bfloat16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_bfloat16_errors_fft_ihfftn_mlu_bfloat16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_bfloat16_errors_fft_irfft2_mlu_bfloat16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_bfloat16_errors_fft_irfft_mlu_bfloat16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_bfloat16_errors_fft_irfftn_mlu_bfloat16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_bfloat16_errors_fft_rfft2_mlu_bfloat16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_bfloat16_errors_fft_rfft_mlu_bfloat16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_bfloat16_errors_fft_rfftn_mlu_bfloat16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_fft2_mlu_complex32",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_fft2_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_fft_mlu_complex32",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_fft_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_fftn_mlu_complex32",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_fftn_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_hfft2_mlu_complex32",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_hfft2_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_hfft_mlu_complex32",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_hfft_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_hfftn_mlu_complex32",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_hfftn_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_ifft2_mlu_complex32",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_ifft2_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_ifft_mlu_complex32",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_ifft_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_ifftn_mlu_complex32",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_ifftn_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_ihfft2_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_ihfft_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_ihfftn_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_irfft2_mlu_complex32",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_irfft2_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_irfft_mlu_complex32",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_irfft_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_irfftn_mlu_complex32",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_irfftn_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_rfft2_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_rfft_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_fft_half_and_chalf_not_power_of_two_error_fft_rfftn_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_fft_input_modification_mlu",
"test_spectral_ops_py_TestFFTMLU_test_fft_invalid_dtypes_mlu",
"test_spectral_ops_py_TestFFTMLU_test_fft_plan_repeatable_mlu",
"test_spectral_ops_py_TestFFTMLU_test_fft_round_trip_mlu_complex32",
"test_spectral_ops_py_TestFFTMLU_test_fft_round_trip_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_fft_round_trip_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_fft_round_trip_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_fft_type_promotion_mlu_complex32",
"test_spectral_ops_py_TestFFTMLU_test_fft_type_promotion_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_fft_type_promotion_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_fft_type_promotion_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_fft_type_promotion_mlu_int8",
"test_spectral_ops_py_TestFFTMLU_test_fftfreq_numpy_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_fftfreq_out_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_fftn_invalid_fft_fftn_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_fftn_invalid_fft_fftn_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_fftn_invalid_fft_hfftn_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_fftn_invalid_fft_hfftn_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_fftn_invalid_fft_ifftn_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_fftn_invalid_fft_ifftn_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_fftn_invalid_fft_ihfftn_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_fftn_invalid_fft_irfftn_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_fftn_invalid_fft_irfftn_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_fftn_invalid_fft_rfftn_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_fftn_round_trip_mlu_complex32",
"test_spectral_ops_py_TestFFTMLU_test_fftn_round_trip_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_fftn_round_trip_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_fftn_round_trip_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_fftshift_frequencies_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_fftshift_numpy_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_fftshift_numpy_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_hfftn_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_hfftn_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_ihfftn_mlu_float16",
"test_spectral_ops_py_TestFFTMLU_test_ihfftn_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_istft_throws_mlu",
"test_spectral_ops_py_TestFFTMLU_test_reference_1d_fft_fft_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_reference_1d_fft_fft_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_reference_1d_fft_hfft_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_reference_1d_fft_hfft_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_reference_1d_fft_ifft_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_reference_1d_fft_ifft_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_reference_1d_fft_ihfft_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_reference_1d_fft_irfft_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_reference_1d_fft_irfft_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_reference_1d_fft_rfft_mlu_float32",
"test_spectral_ops_py_TestFFTMLU_test_reference_nd_fft_fftn_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_reference_nd_fft_hfftn_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_reference_nd_fft_ifftn_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_reference_nd_fft_irfftn_mlu_complex64",
"test_spectral_ops_py_TestFFTMLU_test_stft_window_device_mlu",  # PyTorch is built without MKL support.
"test_stateless_py_TestStatelessFunctionalAPI_test_circular_references",
"test_stateless_py_TestStatelessFunctionalAPI_test_functional_batch_norm",
"test_stateless_py_TestStatelessFunctionalAPI_test_functional_call",
"test_stateless_py_TestStatelessFunctionalAPI_test_functional_call_with_data_parallel",
"test_stateless_py_TestStatelessFunctionalAPI_test_functional_call_with_gradient",
"test_stateless_py_TestStatelessFunctionalAPI_test_functional_call_with_jit",
"test_stateless_py_TestStatelessFunctionalAPI_test_reparamertize_module_fail_reset_to_original",
"test_stateless_py_TestStatelessFunctionalAPI_test_reparametrized_module_change_parametrization_original",
"test_stateless_py_TestStatelessFunctionalAPI_test_setattr",
"test_stateless_py_TestStatelessFunctionalAPI_test_tied_weights_warns",
"test_stateless_py_TestStatelessDeprecation_test_private_stateless_warns",
"test_stateless_py_TestPythonOptimizeMode_test_runs_with_optimize_flag",
"test_static_runtime_py_TestStaticModule_test_attr",
"test_static_runtime_py_TestStaticModule_test_create_object",
"test_static_runtime_py_TestStaticModule_test_fork_wait_1",
"test_static_runtime_py_TestStaticModule_test_fork_wait_1_async",
"test_static_runtime_py_TestStaticModule_test_fork_wait_2",
"test_static_runtime_py_TestStaticModule_test_fork_wait_2_async",
"test_static_runtime_py_TestStaticModule_test_fork_wait_3",
"test_static_runtime_py_TestStaticModule_test_fork_wait_3_async",
"test_static_runtime_py_TestStaticModule_test_fork_wait_4",
"test_static_runtime_py_TestStaticModule_test_fork_wait_4_async",
"test_static_runtime_py_TestStaticModule_test_fork_wait_exception",
"test_static_runtime_py_TestStaticModule_test_fork_wait_exception_async",
"test_static_runtime_py_TestStaticModule_test_fusion_loop",
"test_static_runtime_py_TestStaticModule_test_fusion_multihead_attention_layer",
"test_static_runtime_py_TestStaticModule_test_fusion_outputs",
"test_static_runtime_py_TestStaticModule_test_fusion_trivial_graph",
"test_static_runtime_py_TestStaticModule_test_leaky_relu",
"test_static_runtime_py_TestStaticModule_test_mlp",
"test_static_runtime_py_TestStaticModule_test_multihead_attention_layer",
"test_static_runtime_py_TestStaticModule_test_multihead_attention_layer_benchmark",
"test_static_runtime_py_TestStaticModule_test_trivial_graph",
"test_subclass_py_TestSubclass_test_deepcopy_base_tensor_as_param_False",
"test_subclass_py_TestSubclass_test_deepcopy_base_tensor_as_param_True",
"test_subclass_py_TestSubclass_test_deepcopy_diag_tensor_below_as_param_False",
"test_subclass_py_TestSubclass_test_deepcopy_diag_tensor_below_as_param_True",
"test_subclass_py_TestSubclass_test_deepcopy_logging_tensor_as_param_False",
"test_subclass_py_TestSubclass_test_deepcopy_logging_tensor_as_param_True",
"test_subclass_py_TestSubclass_test_deepcopy_non_wrapper_tensor_as_param_False",
"test_subclass_py_TestSubclass_test_deepcopy_non_wrapper_tensor_as_param_True",
"test_subclass_py_TestSubclass_test_deepcopy_sparse_tensor_as_param_False",
"test_subclass_py_TestSubclass_test_deepcopy_sparse_tensor_as_param_True",
"test_subclass_py_TestSubclass_test_lazy_module_base_tensor",
"test_subclass_py_TestSubclass_test_lazy_module_diag_tensor_below",
"test_subclass_py_TestSubclass_test_lazy_module_logging_tensor",
"test_subclass_py_TestSubclass_test_lazy_module_non_wrapper_tensor",
"test_subclass_py_TestSubclass_test_lazy_module_sparse_tensor",
"test_subclass_py_TestSubclass_test_module_optimization_base_tensor",
"test_subclass_py_TestSubclass_test_module_optimization_diag_tensor_below",
"test_subclass_py_TestSubclass_test_module_optimization_logging_tensor",
"test_subclass_py_TestSubclass_test_module_optimization_non_wrapper_tensor",
"test_subclass_py_TestSubclass_test_module_optimization_sparse_tensor",
"test_subclass_py_TestSubclass_test_non_rewrapping_torch_dispatch_subclass_as_parameter_throws_for_detach",
"test_subclass_py_TestSubclass_test_param_invariants_base_tensor_tensor_requires_grad_False",
"test_subclass_py_TestSubclass_test_param_invariants_base_tensor_tensor_requires_grad_True",
"test_subclass_py_TestSubclass_test_param_invariants_diag_tensor_below_tensor_requires_grad_False",
"test_subclass_py_TestSubclass_test_param_invariants_diag_tensor_below_tensor_requires_grad_True",
"test_subclass_py_TestSubclass_test_param_invariants_logging_tensor_tensor_requires_grad_False",
"test_subclass_py_TestSubclass_test_param_invariants_logging_tensor_tensor_requires_grad_True",
"test_subclass_py_TestSubclass_test_param_invariants_non_wrapper_tensor_tensor_requires_grad_False",
"test_subclass_py_TestSubclass_test_param_invariants_non_wrapper_tensor_tensor_requires_grad_True",
"test_subclass_py_TestSubclass_test_param_invariants_sparse_tensor_tensor_requires_grad_False",
"test_subclass_py_TestSubclass_test_param_invariants_sparse_tensor_tensor_requires_grad_True",
"test_subclass_py_TestSubclass_test_parametrization_base_tensor_leave_parametrized_False",
"test_subclass_py_TestSubclass_test_parametrization_base_tensor_leave_parametrized_True",
"test_subclass_py_TestSubclass_test_parametrization_diag_tensor_below_leave_parametrized_False",
"test_subclass_py_TestSubclass_test_parametrization_diag_tensor_below_leave_parametrized_True",
"test_subclass_py_TestSubclass_test_parametrization_logging_tensor_leave_parametrized_False",
"test_subclass_py_TestSubclass_test_parametrization_logging_tensor_leave_parametrized_True",
"test_subclass_py_TestSubclass_test_parametrization_non_wrapper_tensor_leave_parametrized_False",
"test_subclass_py_TestSubclass_test_parametrization_non_wrapper_tensor_leave_parametrized_True",
"test_subclass_py_TestSubclass_test_parametrization_sparse_tensor_leave_parametrized_False",
"test_subclass_py_TestSubclass_test_parametrization_sparse_tensor_leave_parametrized_True",
"test_subclass_py_TestSubclass_test_repr_base_tensor_as_param_False",
"test_subclass_py_TestSubclass_test_repr_base_tensor_as_param_True",
"test_subclass_py_TestSubclass_test_repr_diag_tensor_below_as_param_False",
"test_subclass_py_TestSubclass_test_repr_diag_tensor_below_as_param_True",
"test_subclass_py_TestSubclass_test_repr_logging_tensor_as_param_False",
"test_subclass_py_TestSubclass_test_repr_logging_tensor_as_param_True",
"test_subclass_py_TestSubclass_test_repr_non_wrapper_tensor_as_param_False",
"test_subclass_py_TestSubclass_test_repr_non_wrapper_tensor_as_param_True",
"test_subclass_py_TestSubclass_test_repr_sparse_tensor_as_param_False",
"test_subclass_py_TestSubclass_test_repr_sparse_tensor_as_param_True",
"test_subclass_py_TestSubclass_test_serialization_base_tensor_as_param_False",
"test_subclass_py_TestSubclass_test_serialization_base_tensor_as_param_True",
"test_subclass_py_TestSubclass_test_serialization_diag_tensor_below_as_param_False",
"test_subclass_py_TestSubclass_test_serialization_diag_tensor_below_as_param_True",
"test_subclass_py_TestSubclass_test_serialization_logging_tensor_as_param_False",
"test_subclass_py_TestSubclass_test_serialization_logging_tensor_as_param_True",
"test_subclass_py_TestSubclass_test_serialization_non_wrapper_tensor_as_param_False",
"test_subclass_py_TestSubclass_test_serialization_non_wrapper_tensor_as_param_True",
"test_subclass_py_TestSubclass_test_serialization_sparse_tensor_as_param_False",
"test_subclass_py_TestSubclass_test_serialization_sparse_tensor_as_param_True",
"test_subclass_py_TestSubclass_test_type_propagation_base_tensor_as_param_False",
"test_subclass_py_TestSubclass_test_type_propagation_base_tensor_as_param_True",
"test_subclass_py_TestSubclass_test_type_propagation_diag_tensor_below_as_param_False",
"test_subclass_py_TestSubclass_test_type_propagation_diag_tensor_below_as_param_True",
"test_subclass_py_TestSubclass_test_type_propagation_logging_tensor_as_param_False",
"test_subclass_py_TestSubclass_test_type_propagation_logging_tensor_as_param_True",
"test_subclass_py_TestSubclass_test_type_propagation_non_wrapper_tensor_as_param_False",
"test_subclass_py_TestSubclass_test_type_propagation_non_wrapper_tensor_as_param_True",
"test_subclass_py_TestSubclass_test_type_propagation_sparse_tensor_as_param_False",
"test_subclass_py_TestSubclass_test_type_propagation_sparse_tensor_as_param_True",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_as_tensor_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_block_diag_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_block_diag_scipy_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_cartesian_prod_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_cat_mem_overlap_mlu", # PYTORCH-9357
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_cat_out_mlu", # PYTORCH-9357
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_combinations_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_complex_type_conversions_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_constructor_device_legacy_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_constructor_dtypes_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_ctor_with_numpy_array_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_device_rounding_mlu_float16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_device_rounding_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_diag_embed_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_diagflat_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_dsplit_mlu_complex64",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_dsplit_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_dstack_mlu_complex64",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_dstack_mlu_float16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_dstack_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_dstack_mlu_int16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_dstack_mlu_int32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_dstack_mlu_int8",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_dstack_mlu_uint8",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_empty_full_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_empty_overflow_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_empty_tensor_props_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_fill_all_dtypes_and_devices_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_float_to_int_conversion_finite_mlu_bool",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_float_to_int_conversion_finite_mlu_int16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_float_to_int_conversion_finite_mlu_int32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_float_to_int_conversion_finite_mlu_int8",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_float_to_int_conversion_finite_mlu_uint8",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_float_to_int_conversion_nonfinite_mlu_bool",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_float_to_int_conversion_nonfinite_mlu_int16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_float_to_int_conversion_nonfinite_mlu_int32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_float_to_int_conversion_nonfinite_mlu_int8",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_float_to_int_conversion_nonfinite_mlu_uint8",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_hsplit_mlu_complex64",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_hsplit_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_hstack_column_stack_mlu_complex64",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_hstack_column_stack_mlu_float16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_hstack_column_stack_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_hstack_column_stack_mlu_int16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_hstack_column_stack_mlu_int32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_hstack_column_stack_mlu_int8",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_hstack_column_stack_mlu_uint8",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_kaiser_window_mlu_bfloat16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_kaiser_window_mlu_float16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_kaiser_window_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_large_linspace_mlu_int32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_like_fn_stride_proparation_vs_tensoriterator_unary_op_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_linlogspace_mem_overlap_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_linspace_mlu_bfloat16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_linspace_mlu_complex64",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_linspace_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_linspace_mlu_int16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_linspace_mlu_int32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_linspace_mlu_int8",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_linspace_mlu_uint8",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_linspace_deduction_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_linspace_device_vs_cpu_mlu_bfloat16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_linspace_device_vs_cpu_mlu_complex64",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_linspace_device_vs_cpu_mlu_float16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_linspace_device_vs_cpu_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_linspace_special_steps_mlu_bfloat16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_linspace_special_steps_mlu_complex64",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_linspace_special_steps_mlu_float16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_linspace_special_steps_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_linspace_vs_numpy_complex_mlu_complex64",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_linspace_vs_numpy_mlu_complex64",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_linspace_vs_numpy_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_logspace_base2_mlu_float16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_logspace_base2_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_logspace_mlu_bfloat16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_logspace_mlu_float16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_logspace_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_logspace_mlu_int16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_logspace_mlu_int32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_logspace_mlu_int8",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_logspace_mlu_uint8",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_logspace_deduction_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_logspace_device_vs_cpu_mlu_float16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_logspace_device_vs_cpu_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_logspace_special_steps_mlu_float16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_logspace_special_steps_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_logspace_vs_numpy_complex_mlu_complex64",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_logspace_vs_numpy_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_meshgrid_default_indexing_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_meshgrid_empty_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_meshgrid_ij_indexing_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_meshgrid_ij_indexing_is_default_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_meshgrid_inconsistent_device_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_meshgrid_inconsistent_dtype_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_meshgrid_non_1d_tensor_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_meshgrid_unsupported_indexing_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_meshgrid_vs_numpy_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_meshgrid_warns_if_no_indexing_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_meshgrid_xy_indexing_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_new_methods_requires_grad_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_new_tensor_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_offset_scalar_cast_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_random_bool_mlu", # TODO(PYTORCH-10273)
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_random_mlu_int16", # TODO(PYTORCH-10273)
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_random_mlu_int8", # TODO(PYTORCH-10273)
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_random_default_mlu_bfloat16", # TODO(PYTORCH-10273)
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_random_default_mlu_int16", # TODO(PYTORCH-10273)
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_random_default_mlu_int8", # TODO(PYTORCH-10273)
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_random_default_mlu_uint8", # TODO(PYTORCH-10273)
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_random_from_to_bool_mlu", # TODO(PYTORCH-10273)
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_random_from_to_mlu_bfloat16", # TODO(PYTORCH-10273)
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_random_from_to_mlu_float32", # TODO(PYTORCH-10287): abnormal when input boundary parameters
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_random_from_to_mlu_int16", # TODO(PYTORCH-10273)
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_random_from_to_mlu_int32", # TODO(PYTORCH-10287): abnormal when input boundary parameters
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_random_from_to_mlu_int8", # TODO(PYTORCH-10273)
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_random_from_to_mlu_uint8", # TODO(PYTORCH-10273)
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_random_full_range_mlu_bfloat16", # TODO(PYTORCH-10273)
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_random_full_range_mlu_int16", # TODO(PYTORCH-10273)
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_random_full_range_mlu_int32", # TODO(PYTORCH-10287): abnormal when input boundary parameters
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_random_full_range_mlu_int8", # TODO(PYTORCH-10273)
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_random_full_range_mlu_uint8", # TODO(PYTORCH-10273)
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_random_to_mlu_bfloat16", # TODO(PYTORCH-10273)
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_random_to_mlu_float32", # TODO(PYTORCH-10287): abnormal when input boundary parameters
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_random_to_mlu_int16", # TODO(PYTORCH-10273)
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_random_to_mlu_int32", # TODO(PYTORCH-10287): abnormal when input boundary parameters
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_random_to_mlu_int8", # TODO(PYTORCH-10273)
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_random_to_mlu_uint8", # TODO(PYTORCH-10273)
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_range_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_range_factories_64bit_indexing_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_range_warning_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_repeat_interleave_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_roll_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_signal_window_functions_window_bartlett_mlu_bfloat16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_signal_window_functions_window_bartlett_mlu_float16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_signal_window_functions_window_bartlett_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_signal_window_functions_window_blackman_mlu_bfloat16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_signal_window_functions_window_blackman_mlu_float16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_signal_window_functions_window_blackman_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_signal_window_functions_window_hamming_mlu_bfloat16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_signal_window_functions_window_hamming_mlu_float16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_signal_window_functions_window_hamming_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_signal_window_functions_window_hann_mlu_bfloat16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_signal_window_functions_window_hann_mlu_float16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_signal_window_functions_window_hann_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_simple_scalar_cast_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_stack_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_stack_out_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_strided_mismatched_stride_shape_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_tensor_ctor_device_inference_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_tensor_device_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_tensor_factories_empty_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_tensor_factory_copy_var_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_tensor_factory_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_tensor_factory_mlu_type_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_tensor_factory_mlu_type_inference_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_tensor_factory_type_inference_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_tensor_from_non_writable_numpy_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_tensor_from_sequence_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_torch_complex_mlu_float16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_torch_complex_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_torch_complex_floating_dtype_error_mlu_bool",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_torch_complex_floating_dtype_error_mlu_complex64",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_torch_complex_floating_dtype_error_mlu_int16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_torch_complex_floating_dtype_error_mlu_int32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_torch_complex_floating_dtype_error_mlu_int8",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_torch_complex_floating_dtype_error_mlu_uint8",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_torch_complex_out_dtype_error_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_torch_complex_same_dtype_error_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_torch_polar_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_unpack_double_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_vander_mlu",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_vander_types_mlu_bool",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_vander_types_mlu_complex64",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_vander_types_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_vander_types_mlu_int16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_vander_types_mlu_int32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_vander_types_mlu_int8",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_vander_types_mlu_uint8",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_vsplit_mlu_complex64",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_vsplit_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_vstack_row_stack_mlu_complex64",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_vstack_row_stack_mlu_float16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_vstack_row_stack_mlu_float32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_vstack_row_stack_mlu_int16",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_vstack_row_stack_mlu_int32",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_vstack_row_stack_mlu_int8",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_vstack_row_stack_mlu_uint8",
"test_tensor_creation_ops_py_TestTensorCreationMLU_test_zeros_dtype_layout_device_match_mlu_complex64", # zeros op does not support complex64 on mlu
"test_tensor_creation_ops_py_TestRandomTensorCreationMLU_test_rand_mlu_complex32",
"test_tensor_creation_ops_py_TestRandomTensorCreationMLU_test_rand_mlu_complex64",
"test_tensor_creation_ops_py_TestRandomTensorCreationMLU_test_rand_mlu_float32",
"test_tensor_creation_ops_py_TestRandomTensorCreationMLU_test_randn_mlu_bfloat16", # TODO(PYTORCH-10321)
"test_tensor_creation_ops_py_TestRandomTensorCreationMLU_test_randn_mlu_complex32", # TODO(PYTORCH-10321)
"test_tensor_creation_ops_py_TestRandomTensorCreationMLU_test_random_neg_values_mlu", # TODO(PYTORCH-10273)
"test_tensor_creation_ops_py_TestRandomTensorCreationMLU_test_randperm_mlu", # TODO(PYTORCH-9634): cnnl not support randperm op
"test_tensor_creation_ops_py_TestRandomTensorCreationMLU_test_randperm_device_compatibility_mlu", # TODO(PYTORCH-9634): cnnl not support randperm op
"test_tensor_creation_ops_py_TestRandomTensorCreationMLU_test_uniform_from_to_mlu_bfloat16", # TODO(PYTORCH-10262)
"test_tensor_creation_ops_py_TestLikeTensorCreationMLU_test_empty_like_mlu",
"test_tensor_creation_ops_py_TestLikeTensorCreationMLU_test_full_like_inference_mlu", # TODO(PYTORCH-8738)
"test_tensor_creation_ops_py_TestLikeTensorCreationMLU_test_ones_like_mlu",
"test_tensor_creation_ops_py_TestLikeTensorCreationMLU_test_ones_like_multiple_device_mlu",
"test_tensor_creation_ops_py_TestLikeTensorCreationMLU_test_zeros_like_mlu",
"test_tensor_creation_ops_py_TestLikeTensorCreationMLU_test_zeros_like_multiple_device_mlu",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_buffer_mlu_bool",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_buffer_mlu_complex64",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_buffer_mlu_float16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_buffer_mlu_float32",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_buffer_mlu_int16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_buffer_mlu_int32",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_buffer_mlu_int8",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_buffer_mlu_uint8",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_dlpack_mlu_bfloat16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_dlpack_mlu_complex64",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_dlpack_mlu_float16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_dlpack_mlu_float32",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_dlpack_mlu_int16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_dlpack_mlu_int32",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_dlpack_mlu_int8",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_dlpack_mlu_uint8",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_numpy_mlu_bool",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_numpy_mlu_complex64",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_numpy_mlu_float16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_numpy_mlu_float32",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_numpy_mlu_int16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_numpy_mlu_int32",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_numpy_mlu_int8",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_numpy_mlu_uint8",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_tensor_mlu_bfloat16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_tensor_mlu_bool",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_tensor_mlu_complex64",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_tensor_mlu_float16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_tensor_mlu_float32",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_tensor_mlu_int16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_tensor_mlu_int32",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_tensor_mlu_int8",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_alias_from_tensor_mlu_uint8",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_astensor_consistency_mlu",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_buffer_mlu_bool",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_buffer_mlu_complex64",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_buffer_mlu_float16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_buffer_mlu_float32",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_buffer_mlu_int16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_buffer_mlu_int32",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_buffer_mlu_int8",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_buffer_mlu_uint8",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_dlpack_mlu_bfloat16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_dlpack_mlu_complex64",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_dlpack_mlu_float16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_dlpack_mlu_float32",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_dlpack_mlu_int16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_dlpack_mlu_int32",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_dlpack_mlu_int8",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_dlpack_mlu_uint8",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_dlpack_mult_devices_mlu_bfloat16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_dlpack_mult_devices_mlu_complex64",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_dlpack_mult_devices_mlu_float16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_dlpack_mult_devices_mlu_float32",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_dlpack_mult_devices_mlu_int16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_dlpack_mult_devices_mlu_int32",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_dlpack_mult_devices_mlu_int8",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_dlpack_mult_devices_mlu_uint8",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_numpy_mlu_bool",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_numpy_mlu_complex64",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_numpy_mlu_float16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_numpy_mlu_float32",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_numpy_mlu_int16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_numpy_mlu_int32",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_numpy_mlu_int8",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_numpy_mlu_uint8",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_tensor_mult_devices_mlu_bfloat16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_tensor_mult_devices_mlu_complex64",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_tensor_mult_devices_mlu_float16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_tensor_mult_devices_mlu_float32",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_tensor_mult_devices_mlu_int16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_tensor_mult_devices_mlu_int32",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_tensor_mult_devices_mlu_int8",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_from_tensor_mult_devices_mlu_uint8",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_list_mlu_bfloat16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_list_mlu_bool",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_list_mlu_complex64",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_list_mlu_float16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_list_mlu_float32",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_list_mlu_int16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_list_mlu_int32",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_list_mlu_int8",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_list_mlu_uint8",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_tensor_mlu_bfloat16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_tensor_mlu_bool",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_tensor_mlu_complex64",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_tensor_mlu_float16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_tensor_mlu_float32",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_tensor_mlu_int16",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_tensor_mlu_int32",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_tensor_mlu_int8",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_copy_tensor_mlu_uint8",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_retain_autograd_history_mlu_complex64",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_retain_autograd_history_mlu_float32",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_unsupported_alias_mlu_float32",
"test_tensor_creation_ops_py_TestAsArrayMLU_test_unsupported_alias_mult_devices_mlu_float32",
"test_tensorboard_py_TestTensorBoardPyTorchNumpy_test_pytorch_autograd_np",
"test_tensorboard_py_TestTensorBoardPyTorchNumpy_test_pytorch_histogram",
"test_tensorboard_py_TestTensorBoardPyTorchNumpy_test_pytorch_histogram_raw",
"test_tensorboard_py_TestTensorBoardPyTorchNumpy_test_pytorch_np",
"test_tensorboard_py_TestTensorBoardPyTorchNumpy_test_pytorch_write",
"test_tensorboard_py_TestTensorBoardUtils_test_convert_to_HWC_dtype_remains_same",
"test_tensorboard_py_TestTensorBoardUtils_test_numpy_vid_uint8",
"test_tensorboard_py_TestTensorBoardUtils_test_prepare_video",
"test_tensorboard_py_TestTensorBoardUtils_test_to_HWC",
"test_tensorboard_py_TestTensorBoardWriter_test_writer",
"test_tensorboard_py_TestTensorBoardSummaryWriter_test_pathlib",
"test_tensorboard_py_TestTensorBoardSummaryWriter_test_summary_writer_close",
"test_tensorboard_py_TestTensorBoardSummaryWriter_test_summary_writer_ctx",
"test_tensorboard_py_TestTensorBoardEmbedding_test_embedding",
"test_tensorboard_py_TestTensorBoardEmbedding_test_embedding_64",
"test_tensorboard_py_TestTensorBoardSummary_test_audio",
"test_tensorboard_py_TestTensorBoardSummary_test_custom_scalars",
"test_tensorboard_py_TestTensorBoardSummary_test_empty_input",
"test_tensorboard_py_TestTensorBoardSummary_test_float32_image",
"test_tensorboard_py_TestTensorBoardSummary_test_histogram_auto",
"test_tensorboard_py_TestTensorBoardSummary_test_histogram_doane",
"test_tensorboard_py_TestTensorBoardSummary_test_histogram_fd",
"test_tensorboard_py_TestTensorBoardSummary_test_hparams_bool",
"test_tensorboard_py_TestTensorBoardSummary_test_hparams_domain_discrete",
"test_tensorboard_py_TestTensorBoardSummary_test_hparams_number",
"test_tensorboard_py_TestTensorBoardSummary_test_hparams_smoke",
"test_tensorboard_py_TestTensorBoardSummary_test_hparams_string",
"test_tensorboard_py_TestTensorBoardSummary_test_hparams_wrong_parameter",
"test_tensorboard_py_TestTensorBoardSummary_test_image_with_3_channel_batched",
"test_tensorboard_py_TestTensorBoardSummary_test_image_with_boxes",
"test_tensorboard_py_TestTensorBoardSummary_test_image_with_one_channel",
"test_tensorboard_py_TestTensorBoardSummary_test_image_with_one_channel_batched",
"test_tensorboard_py_TestTensorBoardSummary_test_image_without_channel",
"test_tensorboard_py_TestTensorBoardSummary_test_list_input",
"test_tensorboard_py_TestTensorBoardSummary_test_mesh",
"test_tensorboard_py_TestTensorBoardSummary_test_scalar_new_style",
"test_tensorboard_py_TestTensorBoardSummary_test_text",
"test_tensorboard_py_TestTensorBoardSummary_test_uint8_image",
"test_tensorboard_py_TestTensorBoardSummary_test_video",
"test_tensorboard_py_TestTensorBoardPytorchGraph_test_mlp_graph",
"test_tensorboard_py_TestTensorBoardPytorchGraph_test_nested_nn_squential",
"test_tensorboard_py_TestTensorBoardPytorchGraph_test_pytorch_graph",
"test_tensorboard_py_TestTensorBoardPytorchGraph_test_pytorch_graph_dict_input",
"test_tensorboard_py_TestTensorBoardPytorchGraph_test_torchvision_smoke",
"test_tensorboard_py_TestTensorBoardPytorchGraph_test_wrong_input_size",
"test_tensorboard_py_TestTensorBoardFigure_test_figure",
"test_tensorboard_py_TestTensorBoardFigure_test_figure_list",
"test_tensorboard_py_TestTensorBoardNumpy_test_caffe2_np",
"test_tensorboard_py_TestTensorBoardNumpy_test_caffe2_np_expect_fail",
"test_tensorboard_py_TestTensorBoardNumpy_test_caffe2_simple_cnnmodel",
"test_tensorboard_py_TestTensorBoardNumpy_test_caffe2_simple_model",
"test_tensorboard_py_TestTensorBoardNumpy_test_pytorch_np_expect_fail",
"test_tensorboard_py_TestTensorBoardNumpy_test_scalar",
"test_tensorexpr_py_TestTensorExprFuser_test_alias_analysis_input_and_module",
"test_tensorexpr_py_TestTensorExprFuser_test_alias_analysis_inputs",
"test_tensorexpr_py_TestTensorExprFuser_test_alias_analysis_module",
"test_tensorexpr_py_TestTensorExprFuser_test_all_combos",
"test_tensorexpr_py_TestTensorExprFuser_test_alpha",
"test_tensorexpr_py_TestTensorExprFuser_test_binary_ops",
"test_tensorexpr_py_TestTensorExprFuser_test_bitwise_ops",
"test_tensorexpr_py_TestTensorExprFuser_test_broadcast",
"test_tensorexpr_py_TestTensorExprFuser_test_broadcast3",
"test_tensorexpr_py_TestTensorExprFuser_test_broadcast_2",
"test_tensorexpr_py_TestTensorExprFuser_test_broadcast_big2",
"test_tensorexpr_py_TestTensorExprFuser_test_cat",
"test_tensorexpr_py_TestTensorExprFuser_test_cat_empty_tensors",
"test_tensorexpr_py_TestTensorExprFuser_test_cat_negative_dim",
"test_tensorexpr_py_TestTensorExprFuser_test_cat_only",
"test_tensorexpr_py_TestTensorExprFuser_test_cat_promote_inputs",
"test_tensorexpr_py_TestTensorExprFuser_test_cat_with_constant_dim",
"test_tensorexpr_py_TestTensorExprFuser_test_char",
"test_tensorexpr_py_TestTensorExprFuser_test_clamp",
"test_tensorexpr_py_TestTensorExprFuser_test_constant",
"test_tensorexpr_py_TestTensorExprFuser_test_double",
"test_tensorexpr_py_TestTensorExprFuser_test_double_intrinsics",
"test_tensorexpr_py_TestTensorExprFuser_test_dynamic_shape",
"test_tensorexpr_py_TestTensorExprFuser_test_easy",
"test_tensorexpr_py_TestTensorExprFuser_test_eq",
"test_tensorexpr_py_TestTensorExprFuser_test_exp_pow",
"test_tensorexpr_py_TestTensorExprFuser_test_four_arg",
"test_tensorexpr_py_TestTensorExprFuser_test_ge",
"test_tensorexpr_py_TestTensorExprFuser_test_gt",
"test_tensorexpr_py_TestTensorExprFuser_test_guard_fails",
"test_tensorexpr_py_TestTensorExprFuser_test_half_bn_relu",
"test_tensorexpr_py_TestTensorExprFuser_test_half_gelu",
"test_tensorexpr_py_TestTensorExprFuser_test_int_output",
"test_tensorexpr_py_TestTensorExprFuser_test_le",
"test_tensorexpr_py_TestTensorExprFuser_test_loop",
"test_tensorexpr_py_TestTensorExprFuser_test_lt",
"test_tensorexpr_py_TestTensorExprFuser_test_mask",
"test_tensorexpr_py_TestTensorExprFuser_test_min_max",
"test_tensorexpr_py_TestTensorExprFuser_test_min_max_reduction",
"test_tensorexpr_py_TestTensorExprFuser_test_min_max_reduction2",
"test_tensorexpr_py_TestTensorExprFuser_test_min_max_reduction_dim1",
"test_tensorexpr_py_TestTensorExprFuser_test_min_max_reduction_dim1_2",
"test_tensorexpr_py_TestTensorExprFuser_test_multi_rand",
"test_tensorexpr_py_TestTensorExprFuser_test_multioutput",
"test_tensorexpr_py_TestTensorExprFuser_test_multiple_outputs",
"test_tensorexpr_py_TestTensorExprFuser_test_nans",
"test_tensorexpr_py_TestTensorExprFuser_test_ne",
"test_tensorexpr_py_TestTensorExprFuser_test_promotion",
"test_tensorexpr_py_TestTensorExprFuser_test_propagated_mem_layout",
"test_tensorexpr_py_TestTensorExprFuser_test_rand_like",
"test_tensorexpr_py_TestTensorExprFuser_test_rank_two",
"test_tensorexpr_py_TestTensorExprFuser_test_relu",
"test_tensorexpr_py_TestTensorExprFuser_test_remainder",
"test_tensorexpr_py_TestTensorExprFuser_test_reps",
"test_tensorexpr_py_TestTensorExprFuser_test_scalar",
"test_tensorexpr_py_TestTensorExprFuser_test_short",
"test_tensorexpr_py_TestTensorExprFuser_test_slice",
"test_tensorexpr_py_TestTensorExprFuser_test_sliced_stride",
"test_tensorexpr_py_TestTensorExprFuser_test_softmax_cpu",
"test_tensorexpr_py_TestTensorExprFuser_test_softmax_mlu",
"test_tensorexpr_py_TestTensorExprFuser_test_strided_output_preserved",
"test_tensorexpr_py_TestTensorExprFuser_test_three_arg",
"test_tensorexpr_py_TestTensorExprFuser_test_three_arg2",
"test_tensorexpr_py_TestTensorExprFuser_test_unary_ops",
"test_tensorexpr_py_TestTensorExprFuser_test_where",
"test_tensorexpr_pybind_py_TestTensorExprPyBind_test_alloc_in_loop",
"test_tensorexpr_pybind_py_TestTensorExprPyBind_test_call_raw",
"test_tensorexpr_pybind_py_TestTensorExprPyBind_test_dtype_error",
"test_tensorexpr_pybind_py_TestTensorExprPyBind_test_dynamic_shape",
"test_tensorexpr_pybind_py_TestTensorExprPyBind_test_dynamic_shape_2d",
"test_tensorexpr_pybind_py_TestTensorExprPyBind_test_external_calls",
"test_tensorexpr_pybind_py_TestTensorExprPyBind_test_kernel_shape_prop",
"test_tensorexpr_pybind_py_TestTensorExprPyBind_test_kernel_shape_prop_module",
"test_tensorexpr_pybind_py_TestTensorExprPyBind_test_kernel_with_custom_lowering",
"test_tensorexpr_pybind_py_TestTensorExprPyBind_test_kernel_with_scalar_inputs",
"test_tensorexpr_pybind_py_TestTensorExprPyBind_test_kernel_with_t",
"test_tensorexpr_pybind_py_TestTensorExprPyBind_test_kernel_with_tensor_inputs",
"test_tensorexpr_pybind_py_TestTensorExprPyBind_test_simple_sum",
"test_tensorexpr_pybind_py_TestExprHandlePyBind_test_unary_ops",
"test_testing_py_TestTestingMLU_test_assertEqual_longMessage_mlu",
"test_testing_py_TestTestingMLU_test_assertEqual_numpy_mlu_bool",
"test_testing_py_TestTestingMLU_test_assertEqual_numpy_mlu_complex64",
"test_testing_py_TestTestingMLU_test_assertEqual_numpy_mlu_float16",
"test_testing_py_TestTestingMLU_test_assertEqual_numpy_mlu_float32",
"test_testing_py_TestTestingMLU_test_assertEqual_numpy_mlu_int16",
"test_testing_py_TestTestingMLU_test_assertEqual_numpy_mlu_int32",
"test_testing_py_TestTestingMLU_test_assertEqual_numpy_mlu_int8",
"test_testing_py_TestTestingMLU_test_assertEqual_numpy_mlu_uint8",
"test_testing_py_TestTestingMLU_test_mlu_assert_should_not_stop_common_distributed_test_suite_mlu",
"test_testing_py_TestTestingMLU_test_mlu_assert_should_stop_common_device_type_test_suite_mlu",
"test_testing_py_TestTestingMLU_test_mlu_assert_should_stop_common_utils_test_suite_mlu",
"test_testing_py_TestTestingMLU_test_get_supported_dtypes_mlu",
"test_testing_py_TestTestingMLU_test_isclose_atol_rtol_greater_than_zero_mlu_bool",
"test_testing_py_TestTestingMLU_test_isclose_atol_rtol_greater_than_zero_mlu_float16",
"test_testing_py_TestTestingMLU_test_isclose_atol_rtol_greater_than_zero_mlu_float32",
"test_testing_py_TestTestingMLU_test_isclose_atol_rtol_greater_than_zero_mlu_int16",
"test_testing_py_TestTestingMLU_test_isclose_atol_rtol_greater_than_zero_mlu_int32",
"test_testing_py_TestTestingMLU_test_isclose_atol_rtol_greater_than_zero_mlu_int8",
"test_testing_py_TestTestingMLU_test_isclose_atol_rtol_greater_than_zero_mlu_uint8",
"test_testing_py_TestTestingMLU_test_isclose_bool_mlu",
"test_testing_py_TestTestingMLU_test_isclose_complex_mlu_complex64",
"test_testing_py_TestTestingMLU_test_isclose_equality_shortcut_mlu",
"test_testing_py_TestTestingMLU_test_isclose_float_mlu_float16",
"test_testing_py_TestTestingMLU_test_isclose_float_mlu_float32",
"test_testing_py_TestTestingMLU_test_isclose_integer_mlu_int16",
"test_testing_py_TestTestingMLU_test_isclose_integer_mlu_int32",
"test_testing_py_TestTestingMLU_test_isclose_integer_mlu_int8",
"test_testing_py_TestTestingMLU_test_isclose_integer_mlu_uint8",
"test_testing_py_TestTestingMLU_test_isclose_nan_equality_shortcut_mlu_complex64",
"test_testing_py_TestTestingMLU_test_isclose_nan_equality_shortcut_mlu_float16",
"test_testing_py_TestTestingMLU_test_isclose_nan_equality_shortcut_mlu_float32",
"test_testing_py_TestTestingMLU_test_make_tensor_complex32_mlu",
"test_testing_py_TestTestingMLU_test_make_tensor_mlu_bool",
"test_testing_py_TestTestingMLU_test_make_tensor_mlu_complex64",
"test_testing_py_TestTestingMLU_test_make_tensor_mlu_float32",
"test_testing_py_TestFrameworkUtils_test_filtering_env_var",
"test_testing_py_TestAssertClose_test_bool",
"test_testing_py_TestAssertClose_test_default_tolerance_selection_mismatching_dtypes",
"test_testing_py_TestAssertClose_test_docstring_examples",
"test_testing_py_TestAssertClose_test_matching",
"test_testing_py_TestAssertClose_test_matching_atol",
"test_testing_py_TestAssertClose_test_matching_conjugate_bit",
"test_testing_py_TestAssertClose_test_matching_nan",
"test_testing_py_TestAssertClose_test_matching_nan_with_equal_nan",
"test_testing_py_TestAssertClose_test_matching_rtol",
"test_testing_py_TestAssertClose_test_meta",
"test_testing_py_TestAssertClose_test_mismatching_dtype",
"test_testing_py_TestAssertClose_test_mismatching_dtype_no_check",
"test_testing_py_TestAssertClose_test_mismatching_layout",
"test_testing_py_TestAssertClose_test_mismatching_layout_no_check",
"test_testing_py_TestAssertClose_test_mismatching_shape",
"test_testing_py_TestAssertClose_test_mismatching_stride",
"test_testing_py_TestAssertClose_test_mismatching_stride_no_check",
"test_testing_py_TestAssertClose_test_mismatching_types",
"test_testing_py_TestAssertClose_test_mismatching_types_subclasses",
"test_testing_py_TestAssertClose_test_mismatching_types_type_equality",
"test_testing_py_TestAssertClose_test_mismatching_values",
"test_testing_py_TestAssertClose_test_mismatching_values_atol",
"test_testing_py_TestAssertClose_test_mismatching_values_rtol",
"test_testing_py_TestAssertClose_test_none",
"test_testing_py_TestAssertClose_test_none_mismatch",
"test_testing_py_TestAssertClose_test_numpy",
"test_testing_py_TestAssertClose_test_only_atol",
"test_testing_py_TestAssertClose_test_only_rtol",
"test_testing_py_TestAssertClose_test_scalar",
"test_testing_py_TestAssertClose_test_unexpected_error_compare",
"test_testing_py_TestAssertClose_test_unexpected_error_originate",
"test_testing_py_TestAssertClose_test_unknown_layout",
"test_testing_py_TestAssertClose_test_unknown_type",
"test_testing_py_TestAssertCloseMultiDeviceMLU_test_mismatching_device_mlu",
"test_testing_py_TestAssertCloseMultiDeviceMLU_test_mismatching_device_no_check_mlu",
"test_testing_py_TestAssertCloseErrorMessage_test_abs_diff",
"test_testing_py_TestAssertCloseErrorMessage_test_abs_diff_scalar",
"test_testing_py_TestAssertCloseErrorMessage_test_atol",
"test_testing_py_TestAssertCloseErrorMessage_test_identifier_scalars",
"test_testing_py_TestAssertCloseErrorMessage_test_identifier_tensor_likes",
"test_testing_py_TestAssertCloseErrorMessage_test_mismatched_elements",
"test_testing_py_TestAssertCloseErrorMessage_test_msg_callable",
"test_testing_py_TestAssertCloseErrorMessage_test_msg_str",
"test_testing_py_TestAssertCloseErrorMessage_test_not_close",
"test_testing_py_TestAssertCloseErrorMessage_test_not_equal",
"test_testing_py_TestAssertCloseErrorMessage_test_rel_diff",
"test_testing_py_TestAssertCloseErrorMessage_test_rel_diff_scalar",
"test_testing_py_TestAssertCloseErrorMessage_test_rtol",
"test_testing_py_TestAssertCloseContainer_test_mapping_mismatching_keys",
"test_testing_py_TestAssertCloseContainer_test_mapping_mismatching_values_msg",
"test_testing_py_TestAssertCloseContainer_test_sequence_mismatching_len",
"test_testing_py_TestAssertCloseContainer_test_sequence_mismatching_values_msg",
"test_testing_py_TestAssertCloseSparseCOO_test_matching_coalesced",
"test_testing_py_TestAssertCloseSparseCOO_test_matching_uncoalesced",
"test_testing_py_TestAssertCloseSparseCOO_test_mismatching_indices_msg",
"test_testing_py_TestAssertCloseSparseCOO_test_mismatching_nnz",
"test_testing_py_TestAssertCloseSparseCOO_test_mismatching_sparse_dims",
"test_testing_py_TestAssertCloseSparseCOO_test_mismatching_values_msg",
"test_testing_py_TestAssertCloseSparseCSR_test_matching",
"test_testing_py_TestAssertCloseSparseCSR_test_mismatching_col_indices_msg",
"test_testing_py_TestAssertCloseSparseCSR_test_mismatching_crow_indices_msg",
"test_testing_py_TestAssertCloseSparseCSR_test_mismatching_values_msg",
"test_testing_py_TestAssertCloseSparseCSC_test_matching",
"test_testing_py_TestAssertCloseSparseCSC_test_mismatching_ccol_indices_msg",
"test_testing_py_TestAssertCloseSparseCSC_test_mismatching_row_indices_msg",
"test_testing_py_TestAssertCloseSparseCSC_test_mismatching_values_msg",
"test_testing_py_TestAssertCloseSparseBSR_test_matching",
"test_testing_py_TestAssertCloseSparseBSR_test_mismatching_col_indices_msg",
"test_testing_py_TestAssertCloseSparseBSR_test_mismatching_crow_indices_msg",
"test_testing_py_TestAssertCloseSparseBSR_test_mismatching_values_msg",
"test_testing_py_TestAssertCloseSparseBSC_test_matching",
"test_testing_py_TestAssertCloseSparseBSC_test_mismatching_ccol_indices_msg",
"test_testing_py_TestAssertCloseSparseBSC_test_mismatching_row_indices_msg",
"test_testing_py_TestAssertCloseSparseBSC_test_mismatching_values_msg",
"test_testing_py_TestAssertCloseQuantized_test_matching_per_channel",
"test_testing_py_TestAssertCloseQuantized_test_matching_per_tensor",
"test_testing_py_TestAssertCloseQuantized_test_mismatching_is_quantized",
"test_testing_py_TestAssertCloseQuantized_test_mismatching_qscheme",
"test_testing_py_TestTestParametrization_test_default_names",
"test_testing_py_TestTestParametrization_test_modules_decorator_misuse_error",
"test_testing_py_TestTestParametrization_test_multiple_handling_of_same_param_error",
"test_testing_py_TestTestParametrization_test_name_fn",
"test_testing_py_TestTestParametrization_test_ops_decorator_misuse_error",
"test_testing_py_TestTestParametrization_test_subtest_expected_failure_x_1",
"test_testing_py_TestTestParametrization_test_subtest_expected_failure_x_2",
"test_testing_py_TestTestParametrization_test_subtest_expected_failure_x_3",
"test_testing_py_TestTestParametrization_test_subtest_names",
"test_testing_py_TestTestParametrization_test_two_things_subtest_expected_failure_x_1_y_4",
"test_testing_py_TestTestParametrization_test_two_things_subtest_expected_failure_x_1_y_5",
"test_testing_py_TestTestParametrization_test_two_things_subtest_expected_failure_x_1_y_6",
"test_testing_py_TestTestParametrization_test_two_things_subtest_expected_failure_x_2_y_4",
"test_testing_py_TestTestParametrization_test_two_things_subtest_expected_failure_x_2_y_5",
"test_testing_py_TestTestParametrization_test_two_things_subtest_expected_failure_x_2_y_6",
"test_testing_py_TestTestParametrization_test_two_things_subtest_expected_failure_x_3_y_4",
"test_testing_py_TestTestParametrization_test_two_things_subtest_expected_failure_x_3_y_5",
"test_testing_py_TestTestParametrization_test_two_things_subtest_expected_failure_x_3_y_6",
"test_testing_py_TestTestParametrizationDeviceTypeMLU_test_default_names_mlu",
"test_testing_py_TestTestParametrizationDeviceTypeMLU_test_dtypes_composition_invalid_mlu",
"test_testing_py_TestTestParametrizationDeviceTypeMLU_test_dtypes_composition_valid_mlu",
"test_testing_py_TestTestParametrizationDeviceTypeMLU_test_multiple_handling_of_same_param_error_mlu",
"test_testing_py_TestTestParametrizationDeviceTypeMLU_test_name_fn_mlu",
"test_testing_py_TestTestParametrizationDeviceTypeMLU_test_ops_composition_names_mlu",
"test_testing_py_TestTestParametrizationDeviceTypeMLU_test_subtest_expected_failure_x_1_mlu",
"test_testing_py_TestTestParametrizationDeviceTypeMLU_test_subtest_expected_failure_x_2_mlu",
"test_testing_py_TestTestParametrizationDeviceTypeMLU_test_subtest_expected_failure_x_3_mlu",
"test_testing_py_TestTestParametrizationDeviceTypeMLU_test_subtest_names_mlu",
"test_testing_py_TestTestParametrizationDeviceTypeMLU_test_two_things_subtest_expected_failure_x_1_y_4_mlu",
"test_testing_py_TestTestParametrizationDeviceTypeMLU_test_two_things_subtest_expected_failure_x_1_y_5_mlu",
"test_testing_py_TestTestParametrizationDeviceTypeMLU_test_two_things_subtest_expected_failure_x_1_y_6_mlu",
"test_testing_py_TestTestParametrizationDeviceTypeMLU_test_two_things_subtest_expected_failure_x_2_y_4_mlu",
"test_testing_py_TestTestParametrizationDeviceTypeMLU_test_two_things_subtest_expected_failure_x_2_y_5_mlu",
"test_testing_py_TestTestParametrizationDeviceTypeMLU_test_two_things_subtest_expected_failure_x_2_y_6_mlu",
"test_testing_py_TestTestParametrizationDeviceTypeMLU_test_two_things_subtest_expected_failure_x_3_y_4_mlu",
"test_testing_py_TestTestParametrizationDeviceTypeMLU_test_two_things_subtest_expected_failure_x_3_y_5_mlu",
"test_testing_py_TestTestParametrizationDeviceTypeMLU_test_two_things_subtest_expected_failure_x_3_y_6_mlu",
"test_testing_py_TestTestParametrizationDeviceTypeMLU_test_unparametrized_names_mlu",
"test_testing_py_TestImports_test_circular_dependencies",
"test_testing_py_TestImports_test_no_warning_on_import",
"test_testing_py_TestOpInfos_test_sample_input",
"test_testing_py_TestOpInfos_test_sample_input_metadata",
"test_throughput_benchmark_py_TestThroughputBenchmark_test_module",
"test_throughput_benchmark_py_TestThroughputBenchmark_test_profiling",
"test_throughput_benchmark_py_TestThroughputBenchmark_test_script_module",
"test_torch_py_TestBasicVitalSigns_test_basic_vitals",
"test_torch_py_TestBasicVitalSigns_test_basic_vitals_read_write",
"test_torch_py_TestBasicVitalSigns_test_dataloader_vitals",
"test_torch_py_TestTorch_test_RNGState",
"test_torch_py_TestTorch_test_RNGStateAliasing",
"test_torch_py_TestTorch_test_RNG_after_pickle",
"test_torch_py_TestTorch_test_Size",
"test_torch_py_TestTorch_test_Size_iter",
"test_torch_py_TestTorch_test_Size_scalar",
"test_torch_py_TestTorch_test_allow_tensor_metadata_change",
"test_torch_py_TestTorch_test_apply",
"test_torch_py_TestTorch_test_as_subclass",
"test_torch_py_TestTorch_test_assert_async",
"test_torch_py_TestTorch_test_backward_hooks_traverse",
"test_torch_py_TestTorch_test_batch_norm_cpu_inference",
"test_torch_py_TestTorch_test_bmm_multithreaded",
"test_torch_py_TestTorch_test_boxMullerState",
"test_torch_py_TestTorch_test_c10_layer_norm", # use torch.ops._caffe2.LayerNorm
"test_torch_py_TestTorch_test_contains",
"test_torch_py_TestTorch_test_copy_broadcast",
"test_torch_py_TestTorch_test_copy_dtypes",
"test_torch_py_TestTorch_test_copy_many_to_one",
"test_torch_py_TestTorch_test_copy_transpose",
"test_torch_py_TestTorch_test_cummax_neg_dim",
"test_torch_py_TestTorch_test_cxx_flags",
"test_torch_py_TestTorch_test_dead_weak_ref",
"test_torch_py_TestTorch_test_deepcopy_gradient",
"test_torch_py_TestTorch_test_deepcopy_parameter",
"test_torch_py_TestTorch_test_deterministic_flag",
"test_torch_py_TestTorch_test_device",
"test_torch_py_TestTorch_test_dir",
"test_torch_py_TestTorch_test_doc",
"test_torch_py_TestTorch_test_doc_template",
"test_torch_py_TestTorch_test_dtype_is_signed",
"test_torch_py_TestTorch_test_element_size",
"test_torch_py_TestTorch_test_empty_meta",
"test_torch_py_TestTorch_test_error_msg_type_translation",
"test_torch_py_TestTorch_test_fill_diagonal",
"test_torch_py_TestTorch_test_format_scalar_meta",
"test_torch_py_TestTorch_test_from_buffer",
"test_torch_py_TestTorch_test_from_file",
"test_torch_py_TestTorch_test_generator_cpu",
"test_torch_py_TestTorch_test_has_internal_overlap",
"test_torch_py_TestTorch_test_has_storage",
"test_torch_py_TestTorch_test_index_add",
"test_torch_py_TestTorch_test_index_add_all_dtypes",
"test_torch_py_TestTorch_test_index_add_neg_dim",
"test_torch_py_TestTorch_test_invalid_generator_raises",
"test_torch_py_TestTorch_test_is_nonzero",
"test_torch_py_TestTorch_test_is_same_size",
"test_torch_py_TestTorch_test_iter",
"test_torch_py_TestTorch_test_logcumsumexp_neg_dim",
"test_torch_py_TestTorch_test_manual_seed",
"test_torch_py_TestTorch_test_map",
"test_torch_py_TestTorch_test_map2",
"test_torch_py_TestTorch_test_memory_format",
"test_torch_py_TestTorch_test_memory_format_empty",
"test_torch_py_TestTorch_test_mode_neg_dim",
"test_torch_py_TestTorch_test_multinomial_invalid_probs", # slow test, cuda skip it by default
"test_torch_py_TestTorch_test_nanmedian_neg_dim",
"test_torch_py_TestTorch_test_ndim",
"test_torch_py_TestTorch_test_new",
"test_torch_py_TestTorch_test_newaxis_numpy_comparison",
"test_torch_py_TestTorch_test_numel",
"test_torch_py_TestTorch_test_parallel_info",
"test_torch_py_TestTorch_test_parsing_double",
"test_torch_py_TestTorch_test_parsing_int64",
"test_torch_py_TestTorch_test_parsing_intlist",
"test_torch_py_TestTorch_test_pickle",
"test_torch_py_TestTorch_test_pickle_dtype",
"test_torch_py_TestTorch_test_pickle_function",
"test_torch_py_TestTorch_test_pickle_parameter",
"test_torch_py_TestTorch_test_pickle_parameter_no_requires_grad",
"test_torch_py_TestTorch_test_pickle_size",
"test_torch_py_TestTorch_test_pin_memory",
"test_torch_py_TestTorch_test_print", # MLU _local_scalar_dense" not implemented for 'BFloat16'
"test_torch_py_TestTorch_test_prod_neg_dim",
"test_torch_py_TestTorch_test_pyobj_preserved",
"test_torch_py_TestTorch_test_pytorch_library_disabled_env",
"test_torch_py_TestTorch_test_qengine",
"test_torch_py_TestTorch_test_renorm_neg_dim",
"test_torch_py_TestTorch_test_resurrected_weak_ref",
"test_torch_py_TestTorch_test_reversed",
"test_torch_py_TestTorch_test_scatter_neg_dim",
"test_torch_py_TestTorch_test_set_flush_denormal",
"test_torch_py_TestTorch_test_setting_real_imag_to_a_number",
"test_torch_py_TestTorch_test_show_config",
"test_torch_py_TestTorch_test_size_neg_dim",
"test_torch_py_TestTorch_test_sizeof",
"test_torch_py_TestTorch_test_slow_test",
"test_torch_py_TestTorch_test_sobolengine_bounds",
"test_torch_py_TestTorch_test_sobolengine_bounds_scrambled",
"test_torch_py_TestTorch_test_sobolengine_continuing",
"test_torch_py_TestTorch_test_sobolengine_continuing_scrambled",
"test_torch_py_TestTorch_test_sobolengine_distribution",
"test_torch_py_TestTorch_test_sobolengine_distribution_scrambled",
"test_torch_py_TestTorch_test_sobolengine_draw",
"test_torch_py_TestTorch_test_sobolengine_draw_base2",
"test_torch_py_TestTorch_test_sobolengine_draw_base2_scrambled",
"test_torch_py_TestTorch_test_sobolengine_draw_scrambled",
"test_torch_py_TestTorch_test_sobolengine_fast_forward",
"test_torch_py_TestTorch_test_sobolengine_fast_forward_scrambled",
"test_torch_py_TestTorch_test_sobolengine_first_point",
"test_torch_py_TestTorch_test_sobolengine_high_dim",
"test_torch_py_TestTorch_test_sobolengine_raise",
"test_torch_py_TestTorch_test_sobolengine_reset",
"test_torch_py_TestTorch_test_sobolengine_reset_scrambled",
"test_torch_py_TestTorch_test_storage_casts",
"test_torch_py_TestTorch_test_structseq_repr",
"test_torch_py_TestTorch_test_sum_neg_dim",
"test_torch_py_TestTorch_test_tensor_base_init",
"test_torch_py_TestTorch_test_tensor_base_new",
"test_torch_py_TestTorch_test_tensor_ctor_scalar",
"test_torch_py_TestTorch_test_tensor_cycle_via_dict",
"test_torch_py_TestTorch_test_tensor_cycle_via_slots",
"test_torch_py_TestTorch_test_tensor_dict_dealloc",
"test_torch_py_TestTorch_test_tensor_finalizer_dealloc",
"test_torch_py_TestTorch_test_tensor_slot_dealloc",
"test_torch_py_TestTorch_test_tensor_weakref_dealloc",
"test_torch_py_TestTorch_test_tensoriterator_output_setup",
"test_torch_py_TestTorch_test_to",
"test_torch_py_TestTorch_test_to_with_tensor",
"test_torch_py_TestTorch_test_topk_neg_dim",
"test_torch_py_TestTorch_test_torch_from_file",
"test_torch_py_TestTorch_test_type",
"test_torch_py_TestTorch_test_type_alias",
"test_torch_py_TestTorch_test_type_conversion_via_dtype_name",
"test_torch_py_TestTorch_test_unflatten",
"test_torch_py_TestTorch_test_wildcard_import",
"test_torch_py_TestVitalSignsMluMLU_test_mlu_vitals_mlu_only_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_addcdiv_mlu_complex64",
"test_torch_py_TestTorchDeviceTypeMLU_test_addcmul_mlu_complex64",
"test_torch_py_TestTorchDeviceTypeMLU_test_addcmul_mlu_int16",
"test_torch_py_TestTorchDeviceTypeMLU_test_addcmul_mlu_int32",
"test_torch_py_TestTorchDeviceTypeMLU_test_addcmul_mlu_int8",
"test_torch_py_TestTorchDeviceTypeMLU_test_addcmul_mlu_uint8",
"test_torch_py_TestTorchDeviceTypeMLU_test_assertRaisesRegex_ignore_msg_non_native_device_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_bernoulli_self_mlu_bool", # TODO(PYTORCH-10285)
"test_torch_py_TestTorchDeviceTypeMLU_test_bernoulli_self_mlu_int16", # TODO(PYTORCH-10285)
"test_torch_py_TestTorchDeviceTypeMLU_test_bernoulli_self_mlu_int32", # TODO(PYTORCH-10285)
"test_torch_py_TestTorchDeviceTypeMLU_test_bernoulli_self_mlu_int8", # TODO(PYTORCH-10285)
"test_torch_py_TestTorchDeviceTypeMLU_test_bernoulli_self_mlu_uint8", # TODO(PYTORCH-10285)
"test_torch_py_TestTorchDeviceTypeMLU_test_bfloat16_float_copy_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_bool_tensor_value_change_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_bytes_to_scalar_mlu_bool",
"test_torch_py_TestTorchDeviceTypeMLU_test_bytes_to_scalar_mlu_complex64",
"test_torch_py_TestTorchDeviceTypeMLU_test_bytes_to_scalar_mlu_float32",
"test_torch_py_TestTorchDeviceTypeMLU_test_bytes_to_scalar_mlu_int16",
"test_torch_py_TestTorchDeviceTypeMLU_test_bytes_to_scalar_mlu_int32",
"test_torch_py_TestTorchDeviceTypeMLU_test_bytes_to_scalar_mlu_int8",
"test_torch_py_TestTorchDeviceTypeMLU_test_bytes_to_scalar_mlu_uint8",
"test_torch_py_TestTorchDeviceTypeMLU_test_cauchy_kstest_mlu_bfloat16",
"test_torch_py_TestTorchDeviceTypeMLU_test_cauchy_kstest_mlu_float16",
"test_torch_py_TestTorchDeviceTypeMLU_test_cauchy_kstest_mlu_float32",
"test_torch_py_TestTorchDeviceTypeMLU_test_cauchy_no_inf_mlu_bfloat16",
"test_torch_py_TestTorchDeviceTypeMLU_test_cauchy_no_inf_mlu_float32",
"test_torch_py_TestTorchDeviceTypeMLU_test_cdist_mlu_backward_mlu", #TODO(PYTORCH-8665): cdist only supports p=1 now.
"test_torch_py_TestTorchDeviceTypeMLU_test_cdist_grad_p_lt_1_no_nan_mlu", #TODO(PYTORCH-8665): cdist only supports p=1 now.
"test_torch_py_TestTorchDeviceTypeMLU_test_cdist_large_batch_mlu", #TODO(PYTORCH-8665): cdist only supports p=1 now.
"test_torch_py_TestTorchDeviceTypeMLU_test_cdist_large_mlu", #TODO(PYTORCH-8665): cdist only supports p=1 now.
"test_torch_py_TestTorchDeviceTypeMLU_test_cdist_non_contiguous_batch_mlu", #TODO(PYTORCH-8665): cdist only supports p=1 now.
"test_torch_py_TestTorchDeviceTypeMLU_test_cdist_non_contiguous_mlu", #TODO(PYTORCH-8665): cdist only supports p=1 now.
"test_torch_py_TestTorchDeviceTypeMLU_test_cdist_norm_batch_mlu", #TODO(PYTORCH-8665): cdist only supports p=1 now.
"test_torch_py_TestTorchDeviceTypeMLU_test_cdist_norm_mlu", #TODO(PYTORCH-8665): cdist only supports p=1 now.
"test_torch_py_TestTorchDeviceTypeMLU_test_complex_half_experimental_warning_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_constants_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_copy__mlu_bfloat16",
"test_torch_py_TestTorchDeviceTypeMLU_test_copy__mlu_bool",
"test_torch_py_TestTorchDeviceTypeMLU_test_copy__mlu_complex32",
"test_torch_py_TestTorchDeviceTypeMLU_test_copy__mlu_complex64",
"test_torch_py_TestTorchDeviceTypeMLU_test_copy_all_dtypes_and_devices_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_copy_math_view_mlu", # Neg does not support complex type
"test_torch_py_TestTorchDeviceTypeMLU_test_copy_transpose_math_view_mlu_complex64", # Neg does not support complex type
"test_torch_py_TestTorchDeviceTypeMLU_test_corrcoef_mlu_complex64",
"test_torch_py_TestTorchDeviceTypeMLU_test_corrcoef_mlu_float32",
"test_torch_py_TestTorchDeviceTypeMLU_test_corrcoef_mlu_int32",
"test_torch_py_TestTorchDeviceTypeMLU_test_cov_mlu_complex64",
"test_torch_py_TestTorchDeviceTypeMLU_test_cov_mlu_float16",
"test_torch_py_TestTorchDeviceTypeMLU_test_cov_mlu_float32",
"test_torch_py_TestTorchDeviceTypeMLU_test_cov_mlu_int32",
"test_torch_py_TestTorchDeviceTypeMLU_test_cpp_warnings_have_python_context_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_cublas_config_nondeterministic_alert_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_cummax_discontiguous_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_deepcopy_mlu_complex64", # add does not support complex
"test_torch_py_TestTorchDeviceTypeMLU_test_device_guard_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_diff_mlu_complex64", #  diff needs zeros_like does not support complex
"test_torch_py_TestTorchDeviceTypeMLU_test_diff_noncontig_mlu_complex64", # diff needs zeros_like does not support complex
"test_torch_py_TestTorchDeviceTypeMLU_test_dist_mlu", # torch_mlu only support L1-Norm as p=1.0 and L2-Norm as p=2.0, but got p=0.
"test_torch_py_TestTorchDeviceTypeMLU_test_expected_failure_xla_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_exponential_mlu_bfloat16", # MLU exponential don't support tensor dtype BFloat16.
"test_torch_py_TestTorchDeviceTypeMLU_test_exponential_kstest_mlu_bfloat16", # MLU exponential don't support tensor dtype BFloat16.
"test_torch_py_TestTorchDeviceTypeMLU_test_gather_backward_deterministic_path_mlu", #TODO(PYTORCH-10267)
"test_torch_py_TestTorchDeviceTypeMLU_test_gather_backward_one_dim_mlu", #TODO(PYTORCH-10267)
"test_torch_py_TestTorchDeviceTypeMLU_test_geometric_mlu_bfloat16",
"test_torch_py_TestTorchDeviceTypeMLU_test_geometric_mlu_float16",
"test_torch_py_TestTorchDeviceTypeMLU_test_geometric_mlu_float32",
"test_torch_py_TestTorchDeviceTypeMLU_test_geometric_mlu_int16",
"test_torch_py_TestTorchDeviceTypeMLU_test_geometric_mlu_int32",
"test_torch_py_TestTorchDeviceTypeMLU_test_geometric_mlu_int8",
"test_torch_py_TestTorchDeviceTypeMLU_test_geometric_mlu_uint8",
"test_torch_py_TestTorchDeviceTypeMLU_test_geometric_kstest_mlu_bfloat16",
"test_torch_py_TestTorchDeviceTypeMLU_test_geometric_kstest_mlu_float16",
"test_torch_py_TestTorchDeviceTypeMLU_test_geometric_kstest_mlu_float32",
"test_torch_py_TestTorchDeviceTypeMLU_test_geometric_kstest_mlu_int16",
"test_torch_py_TestTorchDeviceTypeMLU_test_geometric_kstest_mlu_int32",
"test_torch_py_TestTorchDeviceTypeMLU_test_geometric_kstest_mlu_int8",
"test_torch_py_TestTorchDeviceTypeMLU_test_geometric_kstest_mlu_uint8",
"test_torch_py_TestTorchDeviceTypeMLU_test_gradient_all_mlu_complex64",
"test_torch_py_TestTorchDeviceTypeMLU_test_gradient_all_mlu_float32",
"test_torch_py_TestTorchDeviceTypeMLU_test_gradient_extreme_cases_mlu_complex64",
"test_torch_py_TestTorchDeviceTypeMLU_test_gradient_extreme_cases_mlu_float32",
"test_torch_py_TestTorchDeviceTypeMLU_test_gradient_type_promotion_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_hook_remove_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_index_add_deterministic_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_index_add_mem_overlap_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_index_copy_mlu_bfloat16",
"test_torch_py_TestTorchDeviceTypeMLU_test_index_copy_mlu_complex64",
"test_torch_py_TestTorchDeviceTypeMLU_test_index_copy_deterministic_mlu", # [cnnlIndexCopy] Current scale is not supported yet.
"test_torch_py_TestTorchDeviceTypeMLU_test_index_copy_scalars_mlu_bfloat16",
"test_torch_py_TestTorchDeviceTypeMLU_test_index_copy_scalars_mlu_complex64",
"test_torch_py_TestTorchDeviceTypeMLU_test_index_fill_mlu_bfloat16",
"test_torch_py_TestTorchDeviceTypeMLU_test_index_fill_mlu_complex64",
"test_torch_py_TestTorchDeviceTypeMLU_test_index_fill_mem_overlap_mlu", # currently index_fill calls copy and copy calls at::assert_no_internal_overlap
"test_torch_py_TestTorchDeviceTypeMLU_test_index_put_mem_overlap_mlu", # currently index_put calls copy and copy calls at::assert_no_internal_overlap
"test_torch_py_TestTorchDeviceTypeMLU_test_index_put_non_accumulate_deterministic_mlu", # Deterministic Algorithm is not supported yet
"test_torch_py_TestTorchDeviceTypeMLU_test_index_reduce_reduce_amax_mlu_bfloat16",
"test_torch_py_TestTorchDeviceTypeMLU_test_index_reduce_reduce_amin_mlu_bfloat16",
"test_torch_py_TestTorchDeviceTypeMLU_test_index_reduce_reduce_amin_mlu_float16",
"test_torch_py_TestTorchDeviceTypeMLU_test_index_reduce_reduce_amin_mlu_float32",
"test_torch_py_TestTorchDeviceTypeMLU_test_index_reduce_reduce_amin_mlu_int16",
"test_torch_py_TestTorchDeviceTypeMLU_test_index_reduce_reduce_amin_mlu_int32",
"test_torch_py_TestTorchDeviceTypeMLU_test_index_reduce_reduce_amin_mlu_int8",
"test_torch_py_TestTorchDeviceTypeMLU_test_index_reduce_reduce_amin_mlu_uint8",
"test_torch_py_TestTorchDeviceTypeMLU_test_index_reduce_reduce_mean_mlu_bfloat16",
"test_torch_py_TestTorchDeviceTypeMLU_test_index_reduce_reduce_mean_mlu_float16",
"test_torch_py_TestTorchDeviceTypeMLU_test_index_reduce_reduce_mean_mlu_float32",
"test_torch_py_TestTorchDeviceTypeMLU_test_index_reduce_reduce_mean_mlu_int16",
"test_torch_py_TestTorchDeviceTypeMLU_test_index_reduce_reduce_mean_mlu_int32",
"test_torch_py_TestTorchDeviceTypeMLU_test_index_reduce_reduce_mean_mlu_int8",
"test_torch_py_TestTorchDeviceTypeMLU_test_index_reduce_reduce_mean_mlu_uint8",
"test_torch_py_TestTorchDeviceTypeMLU_test_index_reduce_reduce_prod_mlu_bfloat16",
# TODO(PYTORCH-9186): bfloat16 and complex64 is not support.
"test_torch_py_TestTorchDeviceTypeMLU_test_index_select_mlu_bfloat16",
"test_torch_py_TestTorchDeviceTypeMLU_test_index_select_mlu_complex64",
"test_torch_py_TestTorchDeviceTypeMLU_test_invalid_shapes_grid_sampler_mlu", # TODO(PYTORCH-10134)
"test_torch_py_TestTorchDeviceTypeMLU_test_is_signed_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_item_mlu_bfloat16",
"test_torch_py_TestTorchDeviceTypeMLU_test_item_mlu_complex32", # Depends on fill supports complex.
"test_torch_py_TestTorchDeviceTypeMLU_test_item_mlu_complex64", # Depends on fill supports complex.
"test_torch_py_TestTorchDeviceTypeMLU_test_log_normal_mlu_bfloat16",
"test_torch_py_TestTorchDeviceTypeMLU_test_log_normal_mlu_float16",
"test_torch_py_TestTorchDeviceTypeMLU_test_log_normal_mlu_float32",
"test_torch_py_TestTorchDeviceTypeMLU_test_logcumsumexp_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_lognormal_kstest_mlu_bfloat16",
"test_torch_py_TestTorchDeviceTypeMLU_test_lognormal_kstest_mlu_float16",
"test_torch_py_TestTorchDeviceTypeMLU_test_lognormal_kstest_mlu_float32",
"test_torch_py_TestTorchDeviceTypeMLU_test_masked_fill_mlu_bfloat16_bool",
"test_torch_py_TestTorchDeviceTypeMLU_test_masked_fill_mlu_bfloat16_uint8",
"test_torch_py_TestTorchDeviceTypeMLU_test_masked_fill_mlu_complex64_bool",
"test_torch_py_TestTorchDeviceTypeMLU_test_masked_fill_mlu_complex64_uint8",
"test_torch_py_TestTorchDeviceTypeMLU_test_masked_fill_mlu_float16_uint8",
"test_torch_py_TestTorchDeviceTypeMLU_test_masked_fill_mlu_uint8_bool",
"test_torch_py_TestTorchDeviceTypeMLU_test_masked_fill_mlu_uint8_uint8",
"test_torch_py_TestTorchDeviceTypeMLU_test_masked_scatter_bool_tensor_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_masked_scatter_mlu_bfloat16",
"test_torch_py_TestTorchDeviceTypeMLU_test_masked_scatter_mlu_bool",
"test_torch_py_TestTorchDeviceTypeMLU_test_masked_scatter_mlu_float16", # cnnl cast report UserWarning
"test_torch_py_TestTorchDeviceTypeMLU_test_masked_scatter_mlu_float32", # cnnl cast report UserWarning
"test_torch_py_TestTorchDeviceTypeMLU_test_masked_scatter_mlu_complex64",
"test_torch_py_TestTorchDeviceTypeMLU_test_masked_scatter_mlu_int16",
"test_torch_py_TestTorchDeviceTypeMLU_test_masked_scatter_mlu_int32",
"test_torch_py_TestTorchDeviceTypeMLU_test_masked_scatter_mlu_int8",
"test_torch_py_TestTorchDeviceTypeMLU_test_masked_scatter_mlu_uint8",
"test_torch_py_TestTorchDeviceTypeMLU_test_masked_select_mlu_bfloat16",
"test_torch_py_TestTorchDeviceTypeMLU_test_masked_select_mlu_bool", #PYTORCH-9421
"test_torch_py_TestTorchDeviceTypeMLU_test_masked_select_mlu_complex64",
#PYTORCH-9421 start
"test_torch_py_TestTorchDeviceTypeMLU_test_masked_select_mlu_float16",
"test_torch_py_TestTorchDeviceTypeMLU_test_masked_select_mlu_float32",
"test_torch_py_TestTorchDeviceTypeMLU_test_masked_select_mlu_int16",
"test_torch_py_TestTorchDeviceTypeMLU_test_masked_select_mlu_int32",
"test_torch_py_TestTorchDeviceTypeMLU_test_masked_select_mlu_int8",
"test_torch_py_TestTorchDeviceTypeMLU_test_masked_select_mlu_uint8",
#PYTORCH-9421 end
"test_torch_py_TestTorchDeviceTypeMLU_test_masked_select_discontiguous_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_memory_format_consistency_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_memory_format_cpu_and_mlu_ops_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_memory_format_factory_like_functions_preserve_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_memory_format_operators_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_memory_format_propagation_rules_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_memory_format_to_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_memory_format_type_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_memory_format_type_shortcuts_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_module_share_memory_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_multinomial_deterministic_mlu_float16", # deterministic is not support by MLU
"test_torch_py_TestTorchDeviceTypeMLU_test_multinomial_deterministic_mlu_float32", # deterministic is not support by MLU
"test_torch_py_TestTorchDeviceTypeMLU_test_multinomial_rng_state_advance_mlu_float32", # slow test, cuda skip it by default
"test_torch_py_TestTorchDeviceTypeMLU_test_nondeterministic_alert_AdaptiveAvgPool2d_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_nondeterministic_alert_AdaptiveAvgPool3d_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_nondeterministic_alert_AdaptiveMaxPool2d_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_nondeterministic_alert_AvgPool3d_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_nondeterministic_alert_CTCLoss_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_nondeterministic_alert_EmbeddingBag_max_mlu", # PYTORCH-10088
"test_torch_py_TestTorchDeviceTypeMLU_test_nondeterministic_alert_FractionalMaxPool2d_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_nondeterministic_alert_FractionalMaxPool3d_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_nondeterministic_alert_MaxPool3d_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_nondeterministic_alert_MaxUnpool1d_mlu_float16", # PYTORCH-10310
"test_torch_py_TestTorchDeviceTypeMLU_test_nondeterministic_alert_MaxUnpool1d_mlu_float32", # PYTORCH-10310
"test_torch_py_TestTorchDeviceTypeMLU_test_nondeterministic_alert_MaxUnpool2d_mlu_float16", # PYTORCH-10310
"test_torch_py_TestTorchDeviceTypeMLU_test_nondeterministic_alert_MaxUnpool2d_mlu_float32", # PYTORCH-10310
"test_torch_py_TestTorchDeviceTypeMLU_test_nondeterministic_alert_MaxUnpool3d_mlu_float16", # PYTORCH-10310
"test_torch_py_TestTorchDeviceTypeMLU_test_nondeterministic_alert_MaxUnpool3d_mlu_float32", # PYTORCH-10310
"test_torch_py_TestTorchDeviceTypeMLU_test_nondeterministic_alert_NLLLoss_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_nondeterministic_alert_ReflectionPad1d_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_nondeterministic_alert_ReflectionPad2d_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_nondeterministic_alert_ReflectionPad3d_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_nondeterministic_alert_ReplicationPad3d_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_nondeterministic_alert_bincount_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_nondeterministic_alert_cumsum_mlu_complex64", # cumsum op does not support complex64 on mlu
"test_torch_py_TestTorchDeviceTypeMLU_test_nondeterministic_alert_grid_sample_2d_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_nondeterministic_alert_grid_sample_3d_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_nondeterministic_alert_histc_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_normal_kstest_mlu_bfloat16", # TODO(PYTORCH-10242)
"test_torch_py_TestTorchDeviceTypeMLU_test_nullary_op_mem_overlap_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_pairwise_distance_empty_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_pdist_empty_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_pdist_norm_large_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_pin_memory_from_constructor_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_put_accumulate_mlu_bfloat16", # put op does not support bfloat16 on mlu
"test_torch_py_TestTorchDeviceTypeMLU_test_put_accumulate_mlu_complex64", # put op does not support complex64 on mlu
"test_torch_py_TestTorchDeviceTypeMLU_test_put_mlu_bfloat16", # put op does not support bfloat16 on mlu
"test_torch_py_TestTorchDeviceTypeMLU_test_put_mlu_complex64", # put op does not support complex64 on mlu
"test_torch_py_TestTorchDeviceTypeMLU_test_put_mlu_int8", # This case used index_add op, while index_add does not support int8
"test_torch_py_TestTorchDeviceTypeMLU_test_put_mlu_uint8", # This case used index_add op, while index_add does not support uint8
"test_torch_py_TestTorchDeviceTypeMLU_test_scalar_check_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_scatter_add_bool_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_scatter_add_non_unique_index_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_scatter_add_one_dim_deterministic_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_scatter_add_to_large_input_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_scatter_bool_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_scatter_mem_overlap_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_scatter_reduce_multiply_unsupported_dtypes_mlu_complex64",
"test_torch_py_TestTorchDeviceTypeMLU_test_scatter_reduce_non_unique_index_mlu_bfloat16",
"test_torch_py_TestTorchDeviceTypeMLU_test_scatter_reduce_non_unique_index_mlu_bool",
"test_torch_py_TestTorchDeviceTypeMLU_test_scatter_reduce_non_unique_index_mlu_complex64",
"test_torch_py_TestTorchDeviceTypeMLU_test_scatter_reduce_non_unique_index_mlu_int16",
"test_torch_py_TestTorchDeviceTypeMLU_test_scatter_reduce_non_unique_index_mlu_int8",
"test_torch_py_TestTorchDeviceTypeMLU_test_scatter_reduce_non_unique_index_mlu_uint8",
"test_torch_py_TestTorchDeviceTypeMLU_test_scatter_reduce_operations_to_large_input_mlu_bfloat16",
"test_torch_py_TestTorchDeviceTypeMLU_test_scatter_reduce_operations_to_large_input_mlu_bool",
"test_torch_py_TestTorchDeviceTypeMLU_test_scatter_reduce_operations_to_large_input_mlu_complex64",
"test_torch_py_TestTorchDeviceTypeMLU_test_scatter_reduce_operations_to_large_input_mlu_int16",
"test_torch_py_TestTorchDeviceTypeMLU_test_scatter_reduce_operations_to_large_input_mlu_int8",
"test_torch_py_TestTorchDeviceTypeMLU_test_scatter_reduce_operations_to_large_input_mlu_uint8",
"test_torch_py_TestTorchDeviceTypeMLU_test_scatter_reduce_scalar_mlu_bfloat16",
"test_torch_py_TestTorchDeviceTypeMLU_test_scatter_reduce_scalar_mlu_bool",
"test_torch_py_TestTorchDeviceTypeMLU_test_scatter_reduce_scalar_mlu_complex64",
"test_torch_py_TestTorchDeviceTypeMLU_test_scatter_reduce_scalar_mlu_int16",
"test_torch_py_TestTorchDeviceTypeMLU_test_scatter_reduce_scalar_mlu_int8",
"test_torch_py_TestTorchDeviceTypeMLU_test_scatter_reduce_scalar_mlu_uint8",
"test_torch_py_TestTorchDeviceTypeMLU_test_scatter_to_large_input_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_scatter_zero_size_index_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_serialization_mlu",
# TODO: Wait for disable fallback env variable
"test_torch_py_TestTorchDeviceTypeMLU_test_set_storage_mlu_complex64",
"test_torch_py_TestTorchDeviceTypeMLU_test_shift_mem_overlap_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_skip_xla_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_storage_all_devices_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_storage_mlu_bool",
"test_torch_py_TestTorchDeviceTypeMLU_test_storage_mlu_complex64",
"test_torch_py_TestTorchDeviceTypeMLU_test_storage_mlu_float32",
"test_torch_py_TestTorchDeviceTypeMLU_test_storage_mlu_int16",
"test_torch_py_TestTorchDeviceTypeMLU_test_storage_mlu_int32",
"test_torch_py_TestTorchDeviceTypeMLU_test_storage_mlu_int8",
"test_torch_py_TestTorchDeviceTypeMLU_test_storage_mlu_uint8",
"test_torch_py_TestTorchDeviceTypeMLU_test_storage_meta_errors_mlu_bfloat16",
"test_torch_py_TestTorchDeviceTypeMLU_test_storage_meta_errors_mlu_bool",
"test_torch_py_TestTorchDeviceTypeMLU_test_storage_meta_errors_mlu_complex64",
"test_torch_py_TestTorchDeviceTypeMLU_test_storage_meta_errors_mlu_float16",
"test_torch_py_TestTorchDeviceTypeMLU_test_storage_meta_errors_mlu_float32",
"test_torch_py_TestTorchDeviceTypeMLU_test_storage_meta_errors_mlu_int16",
"test_torch_py_TestTorchDeviceTypeMLU_test_storage_meta_errors_mlu_int32",
"test_torch_py_TestTorchDeviceTypeMLU_test_storage_meta_errors_mlu_int8",
"test_torch_py_TestTorchDeviceTypeMLU_test_storage_meta_errors_mlu_uint8",
"test_torch_py_TestTorchDeviceTypeMLU_test_storage_meta_from_tensor_mlu_bfloat16", # MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_storage_meta_from_tensor_mlu_bool", # MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_storage_meta_from_tensor_mlu_complex64", # MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_storage_meta_from_tensor_mlu_float16", # MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_storage_meta_from_tensor_mlu_float32", # MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_storage_meta_from_tensor_mlu_int16", # MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_storage_meta_from_tensor_mlu_int32", # MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_storage_meta_from_tensor_mlu_int8",# MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_storage_meta_from_tensor_mlu_uint8", # MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_storage_setitem_mlu_complex64", # fill does not support complex
"test_torch_py_TestTorchDeviceTypeMLU_test_strides_propagation_mlu", # PYTORCH-10325
"test_torch_py_TestTorchDeviceTypeMLU_test_sync_warning_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_take_mlu_bfloat16", # take op does not support bfloat16 on mlu
"test_torch_py_TestTorchDeviceTypeMLU_test_take_mlu_complex64", # take op does not support complex64 on mlu
"test_torch_py_TestTorchDeviceTypeMLU_test_tensor_from_storage_mlu_complex64",
"test_torch_py_TestTorchDeviceTypeMLU_test_tensor_shape_empty_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_tensor_storage_type_mlu_bfloat16", # MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_tensor_storage_type_mlu_bool", # MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_tensor_storage_type_mlu_complex64", # MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_tensor_storage_type_mlu_float16",  # MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_tensor_storage_type_mlu_float32",# MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_tensor_storage_type_mlu_int16",  # MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_tensor_storage_type_mlu_int32",  # MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_tensor_storage_type_mlu_int8",  # MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_tensor_storage_type_mlu_uint8",  # MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_typed_storage_meta_mlu_bfloat16", # MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_typed_storage_meta_mlu_bool", # MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_typed_storage_meta_mlu_complex64", # MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_typed_storage_meta_mlu_float16", # MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_typed_storage_meta_mlu_float32", # MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_typed_storage_meta_mlu_int16", # MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_typed_storage_meta_mlu_int32", # MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_typed_storage_meta_mlu_int8", # MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_typed_storage_meta_mlu_uint8", # MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_unfold_all_devices_and_dtypes_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_unfold_scalars_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_uniform_kstest_mlu_bfloat16", # TODO(PYTORCH-10262)
"test_torch_py_TestTorchDeviceTypeMLU_test_uniform_kstest_mlu_float16",
"test_torch_py_TestTorchDeviceTypeMLU_test_uniform_kstest_mlu_float32",
"test_torch_py_TestTorchDeviceTypeMLU_test_untyped_storage_meta_mlu", # MLU storage in torch_mlu not torch.
"test_torch_py_TestTorchDeviceTypeMLU_test_warn_always_caught_mlu",
"test_torch_py_TestTorchDeviceTypeMLU_test_where_scalar_handcrafted_values_mlu", # TODO(PYTORCH-10285)
"test_torch_py_TestDevicePrecisionMLU_test_clamp_mlu_float32", # PYTORCH-9208
"test_torch_py_TestDevicePrecisionMLU_test_copy_broadcast_mlu",
"test_torch_py_TestDevicePrecisionMLU_test_copy_noncontig_mlu",
"test_torch_py_TestDevicePrecisionMLU_test_mlu_device_idx_mlu",
"test_torch_py_TestDevicePrecisionMLU_test_device_serialization_mlu",
"test_torch_py_TestDevicePrecisionMLU_test_from_sequence_mlu_float16",
"test_torch_py_TestDevicePrecisionMLU_test_from_sequence_mlu_float32",
"test_torch_py_TestDevicePrecisionMLU_test_from_sequence_mlu_int16",
"test_torch_py_TestDevicePrecisionMLU_test_from_sequence_mlu_int32",
"test_torch_py_TestDevicePrecisionMLU_test_from_sequence_mlu_int8",
"test_torch_py_TestDevicePrecisionMLU_test_from_sequence_mlu_uint8",
"test_torch_py_TestDevicePrecisionMLU_test_index_add_bfloat16_mlu",
"test_torch_py_TestDevicePrecisionMLU_test_multidevice_serialization_mlu", # Need rebase
"test_torch_py_TestDevicePrecisionMLU_test_type_conversions_same_device_mlu",
"test_transformers_py_TestTransformers_test_bias_is_none",
"test_transformers_py_TestTransformers_test_decoder_only_layer",
"test_transformers_py_TestTransformers_test_mask_check_fastpath",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_2D_attn_mask_dropout_p_0_0_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_2D_attn_mask_dropout_p_0_0_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_2D_attn_mask_dropout_p_0_2_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_2D_attn_mask_dropout_p_0_2_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_2D_attn_mask_dropout_p_0_5_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_2D_attn_mask_dropout_p_0_5_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_2D_causal_attn_mask_dropout_p_0_0_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_2D_causal_attn_mask_dropout_p_0_0_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_2D_causal_attn_mask_dropout_p_0_2_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_2D_causal_attn_mask_dropout_p_0_2_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_2D_causal_attn_mask_dropout_p_0_5_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_2D_causal_attn_mask_dropout_p_0_5_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_3D_attn_mask_dropout_p_0_0_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_3D_attn_mask_dropout_p_0_0_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_3D_attn_mask_dropout_p_0_2_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_3D_attn_mask_dropout_p_0_2_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_3D_attn_mask_dropout_p_0_5_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_3D_attn_mask_dropout_p_0_5_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_3D_causal_attn_mask_dropout_p_0_0_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_3D_causal_attn_mask_dropout_p_0_0_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_3D_causal_attn_mask_dropout_p_0_2_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_3D_causal_attn_mask_dropout_p_0_2_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_3D_causal_attn_mask_dropout_p_0_5_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_3D_causal_attn_mask_dropout_p_0_5_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_no_attn_mask_dropout_p_0_0_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_no_attn_mask_dropout_p_0_0_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_no_attn_mask_dropout_p_0_2_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_no_attn_mask_dropout_p_0_2_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_no_attn_mask_dropout_p_0_5_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_3D_input_dim_no_attn_mask_dropout_p_0_5_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_2D_attn_mask_dropout_p_0_0_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_2D_attn_mask_dropout_p_0_0_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_2D_attn_mask_dropout_p_0_2_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_2D_attn_mask_dropout_p_0_2_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_2D_attn_mask_dropout_p_0_5_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_2D_attn_mask_dropout_p_0_5_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_2D_causal_attn_mask_dropout_p_0_0_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_2D_causal_attn_mask_dropout_p_0_0_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_2D_causal_attn_mask_dropout_p_0_2_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_2D_causal_attn_mask_dropout_p_0_2_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_2D_causal_attn_mask_dropout_p_0_5_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_2D_causal_attn_mask_dropout_p_0_5_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_4D_attn_mask_dropout_p_0_0_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_4D_attn_mask_dropout_p_0_0_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_4D_attn_mask_dropout_p_0_2_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_4D_attn_mask_dropout_p_0_2_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_4D_attn_mask_dropout_p_0_5_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_4D_attn_mask_dropout_p_0_5_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_4D_causal_attn_mask_dropout_p_0_0_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_4D_causal_attn_mask_dropout_p_0_0_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_4D_causal_attn_mask_dropout_p_0_2_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_4D_causal_attn_mask_dropout_p_0_2_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_4D_causal_attn_mask_dropout_p_0_5_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_4D_causal_attn_mask_dropout_p_0_5_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_no_attn_mask_dropout_p_0_0_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_no_attn_mask_dropout_p_0_0_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_no_attn_mask_dropout_p_0_2_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_no_attn_mask_dropout_p_0_2_device_mlu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_no_attn_mask_dropout_p_0_5_device_cpu",
"test_transformers_py_TestTransformers_test_scaled_dot_product_attention_4D_input_dim_no_attn_mask_dropout_p_0_5_device_mlu",
"test_transformers_py_TestTransformers_test_sdp_runtime_dispatch",
"test_transformers_py_TestTransformers_test_self_attn_TxT_attn_mask",
"test_transformers_py_TestTransformers_test_train_with_pad_and_catch_error_device_cpu",
"test_transformers_py_TestTransformers_test_train_with_pad_and_catch_error_device_mlu",
"test_transformers_py_TestTransformers_test_transformerencoder_batch_first_False_training_False_enable_nested_tensor_False_device_cpu",
"test_transformers_py_TestTransformers_test_transformerencoder_batch_first_False_training_False_enable_nested_tensor_False_device_mlu",
"test_transformers_py_TestTransformers_test_transformerencoder_batch_first_False_training_False_enable_nested_tensor_True_device_cpu",
"test_transformers_py_TestTransformers_test_transformerencoder_batch_first_False_training_False_enable_nested_tensor_True_device_mlu",
"test_transformers_py_TestTransformers_test_transformerencoder_batch_first_False_training_True_enable_nested_tensor_False_device_cpu",
"test_transformers_py_TestTransformers_test_transformerencoder_batch_first_False_training_True_enable_nested_tensor_False_device_mlu",
"test_transformers_py_TestTransformers_test_transformerencoder_batch_first_False_training_True_enable_nested_tensor_True_device_cpu",
"test_transformers_py_TestTransformers_test_transformerencoder_batch_first_False_training_True_enable_nested_tensor_True_device_mlu",
"test_transformers_py_TestTransformers_test_transformerencoder_batch_first_True_training_False_enable_nested_tensor_False_device_cpu",
"test_transformers_py_TestTransformers_test_transformerencoder_batch_first_True_training_False_enable_nested_tensor_False_device_mlu",
"test_transformers_py_TestTransformers_test_transformerencoder_batch_first_True_training_False_enable_nested_tensor_True_device_cpu",
"test_transformers_py_TestTransformers_test_transformerencoder_batch_first_True_training_False_enable_nested_tensor_True_device_mlu",
"test_transformers_py_TestTransformers_test_transformerencoder_batch_first_True_training_True_enable_nested_tensor_False_device_cpu",
"test_transformers_py_TestTransformers_test_transformerencoder_batch_first_True_training_True_enable_nested_tensor_False_device_mlu",
"test_transformers_py_TestTransformers_test_transformerencoder_batch_first_True_training_True_enable_nested_tensor_True_device_cpu",
"test_transformers_py_TestTransformers_test_transformerencoder_batch_first_True_training_True_enable_nested_tensor_True_device_mlu",
"test_transformers_py_TestTransformers_test_transformerencoder_fastpath_device_cpu_use_torchscript_False_enable_nested_tensor_False_use_autocast_False",
"test_transformers_py_TestTransformers_test_transformerencoder_fastpath_device_cpu_use_torchscript_False_enable_nested_tensor_False_use_autocast_True",
"test_transformers_py_TestTransformers_test_transformerencoder_fastpath_device_cpu_use_torchscript_False_enable_nested_tensor_True_use_autocast_False",
"test_transformers_py_TestTransformers_test_transformerencoder_fastpath_device_cpu_use_torchscript_False_enable_nested_tensor_True_use_autocast_True",
"test_transformers_py_TestTransformers_test_transformerencoder_fastpath_device_mlu_use_torchscript_False_enable_nested_tensor_False_use_autocast_False",
"test_transformers_py_TestTransformers_test_transformerencoder_fastpath_device_mlu_use_torchscript_False_enable_nested_tensor_False_use_autocast_True",
"test_transformers_py_TestTransformers_test_transformerencoder_fastpath_device_mlu_use_torchscript_False_enable_nested_tensor_True_use_autocast_False",
"test_transformers_py_TestTransformers_test_transformerencoder_fastpath_device_mlu_use_torchscript_False_enable_nested_tensor_True_use_autocast_True",
"test_transformers_py_TestTransformers_test_transformerencoder_square_input_with_no_grad_False_training_False_enable_nested_tensor_False_device_cpu",
"test_transformers_py_TestTransformers_test_transformerencoder_square_input_with_no_grad_False_training_False_enable_nested_tensor_False_device_mlu",
"test_transformers_py_TestTransformers_test_transformerencoder_square_input_with_no_grad_False_training_True_enable_nested_tensor_False_device_cpu",
"test_transformers_py_TestTransformers_test_transformerencoder_square_input_with_no_grad_False_training_True_enable_nested_tensor_False_device_mlu",
"test_transformers_py_TestTransformers_test_transformerencoder_square_input_with_no_grad_True_training_False_enable_nested_tensor_False_device_cpu",
"test_transformers_py_TestTransformers_test_transformerencoder_square_input_with_no_grad_True_training_False_enable_nested_tensor_False_device_mlu",
"test_transformers_py_TestTransformers_test_transformerencoder_square_input_with_no_grad_True_training_True_enable_nested_tensor_False_device_cpu",
"test_transformers_py_TestTransformers_test_transformerencoder_square_input_with_no_grad_True_training_True_enable_nested_tensor_False_device_mlu",
"test_transformers_py_TestTransformers_test_transformerencoderlayer_src_mask_device_cpu_nhead_1",
"test_transformers_py_TestTransformers_test_transformerencoderlayer_src_mask_device_cpu_nhead_4",
"test_transformers_py_TestTransformers_test_transformerencoderlayer_src_mask_device_cpu_nhead_8",
"test_transformers_py_TestTransformers_test_transformerencoderlayer_src_mask_device_mlu_nhead_1",
"test_transformers_py_TestTransformers_test_transformerencoderlayer_src_mask_device_mlu_nhead_4",
"test_transformers_py_TestTransformers_test_transformerencoderlayer_src_mask_device_mlu_nhead_8",
"test_type_hints_py_TestTypeHints_test_doc_examples",
"test_type_info_py_TestDTypeInfo_test_finfo",
"test_type_info_py_TestDTypeInfo_test_iinfo",
"test_type_info_py_TestDTypeInfo_test_invalid_input",
"test_type_promotion_py_TestTypePromotionMLU_test_add_wrapped_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_alpha_mismatch_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_alternate_result_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_bfloat16_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_booleans_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_can_cast_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_cat_different_dtypes_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_cat_out_different_dtypes_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_clamp_type_promotion_mlu_bool_bool_bool",
"test_type_promotion_py_TestTypePromotionMLU_test_clamp_type_promotion_mlu_bool_bool_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_clamp_type_promotion_mlu_bool_bool_int32",
"test_type_promotion_py_TestTypePromotionMLU_test_clamp_type_promotion_mlu_bool_float32_bool",
"test_type_promotion_py_TestTypePromotionMLU_test_clamp_type_promotion_mlu_bool_float32_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_clamp_type_promotion_mlu_bool_float32_int32",
"test_type_promotion_py_TestTypePromotionMLU_test_clamp_type_promotion_mlu_bool_int32_bool",
"test_type_promotion_py_TestTypePromotionMLU_test_clamp_type_promotion_mlu_bool_int32_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_clamp_type_promotion_mlu_bool_int32_int32",
"test_type_promotion_py_TestTypePromotionMLU_test_clamp_type_promotion_mlu_float32_bool_bool",
"test_type_promotion_py_TestTypePromotionMLU_test_clamp_type_promotion_mlu_float32_bool_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_clamp_type_promotion_mlu_float32_bool_int32",
"test_type_promotion_py_TestTypePromotionMLU_test_clamp_type_promotion_mlu_float32_float32_bool",
"test_type_promotion_py_TestTypePromotionMLU_test_clamp_type_promotion_mlu_float32_float32_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_clamp_type_promotion_mlu_float32_float32_int32",
"test_type_promotion_py_TestTypePromotionMLU_test_clamp_type_promotion_mlu_float32_int32_bool",
"test_type_promotion_py_TestTypePromotionMLU_test_clamp_type_promotion_mlu_float32_int32_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_clamp_type_promotion_mlu_float32_int32_int32",
"test_type_promotion_py_TestTypePromotionMLU_test_clamp_type_promotion_mlu_int32_bool_bool",
"test_type_promotion_py_TestTypePromotionMLU_test_clamp_type_promotion_mlu_int32_bool_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_clamp_type_promotion_mlu_int32_bool_int32",
"test_type_promotion_py_TestTypePromotionMLU_test_clamp_type_promotion_mlu_int32_float32_bool",
"test_type_promotion_py_TestTypePromotionMLU_test_clamp_type_promotion_mlu_int32_float32_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_clamp_type_promotion_mlu_int32_float32_int32",
"test_type_promotion_py_TestTypePromotionMLU_test_clamp_type_promotion_mlu_int32_int32_bool",
"test_type_promotion_py_TestTypePromotionMLU_test_clamp_type_promotion_mlu_int32_int32_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_clamp_type_promotion_mlu_int32_int32_int32",
"test_type_promotion_py_TestTypePromotionMLU_test_comparison_ops_with_type_promotion_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_complex_assertraises_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_complex_half_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_complex_promotion_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_complex_scalar_mult_tensor_promotion_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_computation_ignores_out_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_create_bool_tensors_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_float_promotion_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_from_issue_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_half_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_indexing_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_indexing_fail_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_inplace_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_int_promotion_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_int_to_float_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_integer_addcdiv_deprecated_mlu_int16",
"test_type_promotion_py_TestTypePromotionMLU_test_integer_addcdiv_deprecated_mlu_int32",
"test_type_promotion_py_TestTypePromotionMLU_test_integer_addcdiv_deprecated_mlu_int8",
"test_type_promotion_py_TestTypePromotionMLU_test_integer_addcdiv_deprecated_mlu_uint8",
"test_type_promotion_py_TestTypePromotionMLU_test_lt_with_type_promotion_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_many_promotions_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_mixed_type_backward_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_non_promoting_ops_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_bool_bool",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_bool_complex64",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_bool_float16",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_bool_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_bool_int16",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_bool_int32",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_bool_int8",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_bool_uint8",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_complex64_bool",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_complex64_complex64",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_complex64_float16",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_complex64_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_complex64_int16",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_complex64_int32",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_complex64_int8",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_complex64_uint8",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_float16_bool",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_float16_complex64",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_float16_float16",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_float16_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_float16_int16",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_float16_int32",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_float16_int8",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_float16_uint8",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_float32_bool",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_float32_complex64",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_float32_float16",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_float32_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_float32_int16",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_float32_int32",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_float32_int8",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_float32_uint8",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_int16_bool",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_int16_complex64",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_int16_float16",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_int16_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_int16_int16",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_int16_int32",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_int16_int8",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_int16_uint8",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_int32_bool",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_int32_complex64",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_int32_float16",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_int32_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_int32_int16",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_int32_int32",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_int32_int8",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_int32_uint8",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_int8_bool",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_int8_complex64",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_int8_float16",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_int8_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_int8_int16",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_int8_int32",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_int8_int8",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_int8_uint8",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_uint8_bool",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_uint8_complex64",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_uint8_float16",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_uint8_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_uint8_int16",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_uint8_int32",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_uint8_int8",
"test_type_promotion_py_TestTypePromotionMLU_test_numpy_array_binary_ufunc_promotion_mlu_uint8_uint8",
"test_type_promotion_py_TestTypePromotionMLU_test_promote_self_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_promote_types_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_bfloat16_bfloat16",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_bfloat16_bool",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_bfloat16_complex64",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_bfloat16_float16",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_bfloat16_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_bfloat16_int16",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_bfloat16_int32",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_bfloat16_int8",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_bfloat16_uint8",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_bool_bfloat16",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_bool_bool",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_bool_complex64",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_bool_float16",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_bool_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_bool_int16",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_bool_int32",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_bool_int8",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_bool_uint8",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_complex64_bfloat16",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_complex64_bool",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_complex64_complex64",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_complex64_float16",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_complex64_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_complex64_int16",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_complex64_int32",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_complex64_int8",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_complex64_uint8",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_float16_bfloat16",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_float16_bool",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_float16_complex64",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_float16_float16",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_float16_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_float16_int16",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_float16_int32",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_float16_int8",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_float16_uint8",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_float32_bfloat16",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_float32_bool",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_float32_complex64",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_float32_float16",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_float32_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_float32_int16",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_float32_int32",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_float32_int8",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_float32_uint8",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_int16_bfloat16",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_int16_bool",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_int16_complex64",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_int16_float16",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_int16_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_int16_int16",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_int16_int32",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_int16_int8",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_int16_uint8",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_int32_bfloat16",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_int32_bool",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_int32_complex64",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_int32_float16",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_int32_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_int32_int16",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_int32_int32",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_int32_int8",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_int32_uint8",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_int8_bfloat16",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_int8_bool",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_int8_complex64",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_int8_float16",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_int8_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_int8_int16",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_int8_int32",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_int8_int8",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_int8_uint8",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_uint8_bfloat16",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_uint8_bool",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_uint8_complex64",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_uint8_float16",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_uint8_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_uint8_int16",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_uint8_int32",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_uint8_int8",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_mlu_uint8_uint8",
"test_type_promotion_py_TestTypePromotionMLU_test_result_type_tensor_vs_scalar_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_sparse_add_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_sparse_div_mlu", # sparse MLU is not supported
"test_type_promotion_py_TestTypePromotionMLU_test_sparse_div_promotion_mlu_bool", # sparse MLU is not supported
"test_type_promotion_py_TestTypePromotionMLU_test_sparse_div_promotion_mlu_int16", # sparse MLU is not supported
"test_type_promotion_py_TestTypePromotionMLU_test_sparse_div_promotion_mlu_int32", # sparse MLU is not supported
"test_type_promotion_py_TestTypePromotionMLU_test_sparse_div_promotion_mlu_uint8", # sparse MLU is not supported
"test_type_promotion_py_TestTypePromotionMLU_test_sparse_mul_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_sparse_sub_mlu",
"test_type_promotion_py_TestTypePromotionMLU_test_unary_op_out_casting_mlu_complex64_complex64",
"test_type_promotion_py_TestTypePromotionMLU_test_unary_op_out_casting_mlu_complex64_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_unary_op_out_casting_mlu_float32_complex64",
"test_type_promotion_py_TestTypePromotionMLU_test_unary_op_out_casting_mlu_float32_float32",
"test_type_promotion_py_TestTypePromotionMLU_test_unsigned_mlu",
"test_typing_py_test_success[creation_ops_py]",
"test_typing_py_test_success[math_ops_py]",
"test_typing_py_test_fail[bitwise_ops_py]",
"test_typing_py_test_fail[creation_ops_py]",
"test_typing_py_test_fail[random_py]",
"test_typing_py_test_reveal[module_list_py]",
"test_typing_py_test_reveal[namedtuple_py]",
"test_typing_py_test_reveal[opt_size_py]",
"test_typing_py_test_reveal[size_py]",
"test_typing_py_test_reveal[tensor_constructors_py]",
"test_typing_py_test_reveal[tensor_copy_py]",
"test_typing_py_test_reveal[tensor_sampling_py]",
"test_typing_py_test_reveal[torch_optim_py]",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_abs_mlu_bfloat16", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_abs_mlu_bool", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_abs_mlu_complex32", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_abs_mlu_int16", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_abs_mlu_int8", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_abs_mlu_uint8", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_acos_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_acos_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_acos_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_acos_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_acos_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_acos_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_acos_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_acos_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_acos_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_acos_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_acosh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_acosh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_acosh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_acosh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_acosh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_acosh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_acosh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_acosh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_acosh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_acosh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_asin_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_asin_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_asin_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_asin_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_asin_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_asin_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_asin_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_asin_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_asin_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_asin_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_asinh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_asinh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_asinh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_asinh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_asinh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_asinh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_asinh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_asinh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_asinh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_asinh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_atan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_atan_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_atan_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_atan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_atan_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_atan_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_atan_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_atan_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_atan_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_atan_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_atanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_atanh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_atanh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_atanh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_atanh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_atanh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_atanh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_atanh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_atanh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_atanh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_bfloat16_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_bfloat16_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_bfloat16_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_bfloat16_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_bfloat16_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_bfloat16_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_bfloat16_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_bfloat16_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_bfloat16_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_bfloat16_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_bool_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_bool_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_bool_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_bool_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_bool_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_bool_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_bool_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_bool_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_bool_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_bool_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_byte_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_byte_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_byte_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_byte_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_byte_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_byte_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_byte_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_byte_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_byte_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_ceil_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_ceil_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_ceil_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_ceil_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_ceil_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_chalf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_chalf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_chalf_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_chalf_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_chalf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_chalf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_chalf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_chalf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_chalf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_chalf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_char_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_char_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_char_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_char_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_char_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_char_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_char_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_char_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_char_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_char_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_conj_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_conj_physical_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_cos_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_cos_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_cos_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_cos_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_cos_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_cos_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_cos_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_cos_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_cos_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_cos_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_cosh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_cosh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_cosh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_cosh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_cosh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_cosh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_cosh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_cosh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_cosh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_cosh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_deg2rad_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_deg2rad_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_deg2rad_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_deg2rad_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_deg2rad_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_deg2rad_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_deg2rad_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_deg2rad_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_digamma_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_digamma_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_digamma_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_digamma_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_digamma_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_digamma_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_digamma_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_double_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_double_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_double_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_double_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_double_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_double_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_double_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_double_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_double_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_double_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_erf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_erfc_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_erfc_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_erfc_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_erfc_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_erfc_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_erfc_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_erfc_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_erfc_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_exp2_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_exp2_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_exp2_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_exp2_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_exp2_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_exp2_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_exp2_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_exp2_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_exp_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_exp_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_exp_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_expm1_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_fill_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_fill_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_fill_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_float_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_float_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_float_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_float_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_float_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_float_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_float_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_float_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_float_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_float_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_floor_mlu_bfloat16", # TODO(PYTORCH-8724): floor not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_floor_mlu_int16", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_floor_mlu_int32", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_floor_mlu_int8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_floor_mlu_uint8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_frac_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_frexp_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_frexp_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_half_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_half_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_half_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_half_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_half_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_half_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_half_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_half_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_half_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_i0_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_i0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_i0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_i0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_i0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_i0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_i0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_i0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_imag_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_imag_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_int_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_int_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_int_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_int_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_int_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_int_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_int_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_int_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_int_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isfinite_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isinf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isinf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isinf_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isinf_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isinf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isinf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isinf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isinf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isinf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isinf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isnan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isnan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isneginf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isneginf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isneginf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isneginf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isneginf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isneginf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isneginf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isneginf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isposinf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isposinf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isposinf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isposinf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isposinf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isposinf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isposinf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isposinf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isreal_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isreal_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isreal_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isreal_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isreal_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isreal_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isreal_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isreal_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isreal_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_isreal_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_jiterator_unary_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_jiterator_unary_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_jiterator_unary_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_jiterator_unary_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_jiterator_unary_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_jiterator_unary_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_jiterator_unary_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_jiterator_unary_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_jiterator_unary_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_lgamma_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_lgamma_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_lgamma_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_lgamma_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_lgamma_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_lgamma_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_lgamma_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_log10_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_log10_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_log1p_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_log2_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_log2_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_log_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_log_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_log_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_logical_not_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_logical_not_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_logit_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_logit_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_logit_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_logit_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_logit_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_logit_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_logit_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_logit_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_long_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_long_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_long_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_long_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_long_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_long_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_long_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_long_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_long_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_long_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_mvlgamma_mvlgamma_p_1_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_mvlgamma_mvlgamma_p_1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_mvlgamma_mvlgamma_p_1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_mvlgamma_mvlgamma_p_1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_mvlgamma_mvlgamma_p_1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_mvlgamma_mvlgamma_p_1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_mvlgamma_mvlgamma_p_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_mvlgamma_mvlgamma_p_3_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_mvlgamma_mvlgamma_p_3_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_mvlgamma_mvlgamma_p_3_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_mvlgamma_mvlgamma_p_3_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_mvlgamma_mvlgamma_p_3_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_mvlgamma_mvlgamma_p_5_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_mvlgamma_mvlgamma_p_5_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_mvlgamma_mvlgamma_p_5_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_mvlgamma_mvlgamma_p_5_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_mvlgamma_mvlgamma_p_5_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_mvlgamma_mvlgamma_p_5_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nan_to_num_mlu_bfloat16", # TODO(PYTORCH-10157)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_neg_mlu_bfloat16",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_neg_mlu_complex32",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_neg_mlu_complex64",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_neg_mlu_int16",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_neg_mlu_int8",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_neg_mlu_uint8",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_celu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_celu_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_celu_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_elu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_hardshrink_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_hardshrink_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_hardshrink_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_hardsigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_hardtanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_logsigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_mish_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_mish_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_mish_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_prelu_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_prelu_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_relu6_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_relu6_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_relu6_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_relu6_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_relu6_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_relu6_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_relu6_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_relu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_rrelu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_selu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_silu_mlu_bfloat16",     #dtypes not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_softplus_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_softshrink_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_softshrink_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_softshrink_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_softsign_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_softsign_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_softsign_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_softsign_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_softsign_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_softsign_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_softsign_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_softsign_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_softsign_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_tanhshrink_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_tanhshrink_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_tanhshrink_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_tanhshrink_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_tanhshrink_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_tanhshrink_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_tanhshrink_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_tanhshrink_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_nn_functional_threshold_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_1_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_2_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_2_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_2_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_2_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_2_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_2_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_2_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_3_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_3_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_3_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_3_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_3_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_3_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_4_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_4_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_4_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_4_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_4_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_4_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_polygamma_polygamma_n_4_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_positive_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_positive_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_positive_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_positive_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_positive_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_positive_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_positive_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_positive_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_positive_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_rad2deg_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_rad2deg_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_rad2deg_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_rad2deg_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_rad2deg_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_rad2deg_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_rad2deg_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_rad2deg_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_real_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_real_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_real_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_real_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_real_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_real_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_real_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_real_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_real_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_real_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_reciprocal_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_reciprocal_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_round_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_round_decimals_0_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_round_decimals_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_round_decimals_3_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_round_decimals_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_round_decimals_neg_3_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_round_decimals_neg_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_rsqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu rsqrt not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_rsqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_rsqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sgn_mlu_bfloat16", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sgn_mlu_bool", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sgn_mlu_complex32", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sgn_mlu_int16", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sgn_mlu_int32", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sgn_mlu_int8", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sgn_mlu_uint8", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_short_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_short_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_short_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_short_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_short_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_short_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_short_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_short_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_short_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sigmoid_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sign_mlu_bfloat16", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sign_mlu_bool", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sign_mlu_int16", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sign_mlu_int32", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sign_mlu_int8", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sign_mlu_uint8", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_signbit_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_signbit_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_signbit_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_signbit_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_signbit_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_signbit_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_signbit_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_signbit_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sin_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sin_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sin_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sin_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sin_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sin_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sin_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sin_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sin_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sin_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sinc_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sinc_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sinc_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sinc_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sinc_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sinc_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sinc_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sinc_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sinc_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sinh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sinh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sinh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sinh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sinh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sinh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sinh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sinh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sinh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sinh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_airy_ai_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_airy_ai_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_airy_ai_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_airy_ai_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_airy_ai_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_airy_ai_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_bessel_j0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_bessel_j0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_bessel_j0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_bessel_j0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_bessel_j0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_bessel_j0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_bessel_j1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_bessel_j1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_bessel_j1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_bessel_j1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_bessel_j1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_bessel_j1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_bessel_y0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_bessel_y0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_bessel_y0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_bessel_y0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_bessel_y0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_bessel_y0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_bessel_y1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_bessel_y1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_bessel_y1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_bessel_y1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_bessel_y1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_bessel_y1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_entr_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_entr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_entr_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_entr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_entr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_entr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_entr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_entr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_erfcx_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_erfcx_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_erfcx_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_erfcx_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_erfcx_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_erfcx_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_i0e_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_i0e_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_i0e_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_i0e_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_i0e_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_i0e_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_i0e_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_i0e_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_i1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_i1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_i1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_i1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_i1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_i1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_i1e_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_i1e_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_i1e_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_i1e_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_i1e_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_i1e_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_log_ndtr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_log_ndtr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_log_ndtr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_log_ndtr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_log_ndtr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_log_ndtr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_modified_bessel_i0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_modified_bessel_i0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_modified_bessel_i0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_modified_bessel_i0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_modified_bessel_i0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_modified_bessel_i0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_modified_bessel_i1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_modified_bessel_i1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_modified_bessel_i1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_modified_bessel_i1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_modified_bessel_i1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_modified_bessel_i1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_modified_bessel_k0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_modified_bessel_k0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_modified_bessel_k0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_modified_bessel_k0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_modified_bessel_k0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_modified_bessel_k0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_modified_bessel_k1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_modified_bessel_k1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_modified_bessel_k1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_modified_bessel_k1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_modified_bessel_k1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_modified_bessel_k1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_ndtr_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_ndtr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_ndtr_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_ndtr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_ndtr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_ndtr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_ndtr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_ndtr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_ndtri_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_ndtri_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_ndtri_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_ndtri_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_ndtri_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_ndtri_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_polygamma_special_polygamma_n_0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_polygamma_special_polygamma_n_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_polygamma_special_polygamma_n_0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_polygamma_special_polygamma_n_0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_polygamma_special_polygamma_n_0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_polygamma_special_polygamma_n_0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_polygamma_special_polygamma_n_0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_scaled_modified_bessel_k0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_scaled_modified_bessel_k0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_scaled_modified_bessel_k0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_scaled_modified_bessel_k0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_scaled_modified_bessel_k0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_scaled_modified_bessel_k0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_scaled_modified_bessel_k1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_scaled_modified_bessel_k1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_scaled_modified_bessel_k1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_scaled_modified_bessel_k1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_scaled_modified_bessel_k1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_scaled_modified_bessel_k1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_spherical_bessel_j0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_spherical_bessel_j0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_spherical_bessel_j0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_spherical_bessel_j0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_spherical_bessel_j0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_special_spherical_bessel_j0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu sqrt not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_sqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_square_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_square_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_square_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_square_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_square_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_square_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_square_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_square_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_square_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_tan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_tan_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_tan_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_tan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_tan_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_tan_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_tan_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_tan_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_tan_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_tan_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_tanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_tanh_mlu_complex64", # tanh unsupport complex64
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_trunc_mlu_bfloat16", # TODO(PYTORCH-8724): trunc not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_trunc_mlu_int16", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_trunc_mlu_int32", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_trunc_mlu_int8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_batch_vs_slicing_trunc_mlu_uint8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_abs_mlu_bfloat16", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_abs_mlu_bool", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_abs_mlu_complex32", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_abs_mlu_int16", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_abs_mlu_int8", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_abs_mlu_uint8", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_acos_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_acos_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_acos_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_acos_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_acos_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_acos_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_acos_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_acos_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_acos_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_acos_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_acosh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_acosh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_acosh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_acosh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_acosh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_acosh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_acosh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_acosh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_acosh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_acosh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_asin_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_asin_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_asin_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_asin_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_asin_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_asin_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_asin_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_asin_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_asin_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_asin_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_asinh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_asinh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_asinh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_asinh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_asinh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_asinh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_asinh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_asinh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_asinh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_asinh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_atan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_atan_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_atan_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_atan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_atan_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_atan_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_atan_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_atan_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_atan_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_atan_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_atanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_atanh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_atanh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_atanh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_atanh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_atanh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_atanh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_atanh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_atanh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_atanh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_bfloat16_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_bfloat16_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_bfloat16_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_bfloat16_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_bfloat16_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_bfloat16_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_bfloat16_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_bfloat16_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_bfloat16_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_bfloat16_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_bool_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_bool_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_bool_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_bool_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_bool_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_bool_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_bool_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_bool_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_bool_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_bool_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_byte_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_byte_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_byte_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_byte_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_byte_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_byte_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_byte_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_byte_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_byte_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_ceil_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_ceil_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_ceil_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_ceil_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_ceil_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_chalf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_chalf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_chalf_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_chalf_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_chalf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_chalf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_chalf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_chalf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_chalf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_chalf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_char_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_char_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_char_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_char_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_char_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_char_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_char_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_char_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_char_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_char_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_conj_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_conj_physical_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_cos_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_cos_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_cos_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_cos_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_cos_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_cos_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_cos_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_cos_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_cos_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_cos_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_cosh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_cosh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_cosh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_cosh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_cosh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_cosh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_cosh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_cosh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_cosh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_cosh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_deg2rad_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_deg2rad_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_deg2rad_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_deg2rad_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_deg2rad_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_deg2rad_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_deg2rad_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_deg2rad_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_digamma_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_digamma_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_digamma_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_digamma_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_digamma_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_digamma_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_digamma_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_double_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_double_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_double_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_double_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_double_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_double_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_double_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_double_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_double_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_double_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_erf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_erfc_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_erfc_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_erfc_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_erfc_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_erfc_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_erfc_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_erfc_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_erfc_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_exp2_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_exp2_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_exp2_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_exp2_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_exp2_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_exp2_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_exp2_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_exp2_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_exp_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_exp_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_exp_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_expm1_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_fill_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_fill_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_fill_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_float_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_float_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_float_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_float_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_float_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_float_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_float_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_float_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_float_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_float_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_floor_mlu_bfloat16", # TODO(PYTORCH-8724): floor not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_floor_mlu_int16", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_floor_mlu_int32", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_floor_mlu_int8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_floor_mlu_uint8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_frac_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_frexp_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_frexp_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_half_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_half_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_half_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_half_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_half_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_half_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_half_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_half_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_half_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_i0_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_i0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_i0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_i0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_i0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_i0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_i0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_i0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_imag_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_imag_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_int_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_int_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_int_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_int_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_int_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_int_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_int_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_int_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_int_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isfinite_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isinf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isinf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isinf_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isinf_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isinf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isinf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isinf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isinf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isinf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isinf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isnan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isnan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isneginf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isneginf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isneginf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isneginf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isneginf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isneginf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isneginf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isneginf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isposinf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isposinf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isposinf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isposinf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isposinf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isposinf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isposinf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isposinf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isreal_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isreal_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isreal_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isreal_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isreal_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isreal_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isreal_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isreal_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isreal_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_isreal_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_jiterator_unary_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_jiterator_unary_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_jiterator_unary_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_jiterator_unary_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_jiterator_unary_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_jiterator_unary_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_jiterator_unary_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_jiterator_unary_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_jiterator_unary_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_abs_mlu_bfloat16", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_abs_mlu_bool", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_abs_mlu_complex32", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_abs_mlu_int16", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_abs_mlu_int8", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_abs_mlu_uint8", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_acos_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_acos_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_acos_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_acos_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_acos_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_acos_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_acos_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_acos_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_acos_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_acos_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_acosh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_acosh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_acosh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_acosh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_acosh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_acosh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_acosh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_acosh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_acosh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_acosh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_asin_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_asin_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_asin_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_asin_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_asin_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_asin_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_asin_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_asin_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_asin_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_asin_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_asinh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_asinh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_asinh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_asinh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_asinh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_asinh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_asinh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_asinh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_asinh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_asinh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_atan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_atan_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_atan_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_atan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_atan_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_atan_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_atan_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_atan_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_atan_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_atan_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_atanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_atanh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_atanh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_atanh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_atanh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_atanh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_atanh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_atanh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_atanh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_atanh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_bfloat16_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_bfloat16_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_bfloat16_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_bfloat16_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_bfloat16_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_bfloat16_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_bfloat16_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_bfloat16_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_bfloat16_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_bfloat16_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_bool_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_bool_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_bool_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_bool_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_bool_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_bool_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_bool_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_bool_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_bool_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_bool_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_byte_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_byte_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_byte_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_byte_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_byte_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_byte_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_byte_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_byte_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_byte_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_ceil_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_ceil_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_ceil_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_ceil_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_ceil_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_chalf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_chalf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_chalf_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_chalf_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_chalf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_chalf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_chalf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_chalf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_chalf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_chalf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_char_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_char_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_char_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_char_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_char_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_char_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_char_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_char_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_char_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_char_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_conj_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_conj_physical_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_cos_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_cos_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_cos_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_cos_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_cos_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_cos_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_cos_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_cos_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_cos_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_cos_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_cosh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_cosh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_cosh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_cosh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_cosh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_cosh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_cosh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_cosh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_cosh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_cosh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_deg2rad_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_deg2rad_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_deg2rad_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_deg2rad_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_deg2rad_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_deg2rad_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_deg2rad_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_deg2rad_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_digamma_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_digamma_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_digamma_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_digamma_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_digamma_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_digamma_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_digamma_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_double_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_double_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_double_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_double_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_double_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_double_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_double_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_double_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_double_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_double_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_erf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_erfc_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_erfc_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_erfc_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_erfc_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_erfc_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_erfc_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_erfc_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_erfc_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_exp2_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_exp2_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_exp2_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_exp2_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_exp2_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_exp2_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_exp2_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_exp2_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_exp_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_exp_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_exp_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_expm1_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_fill_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_fill_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_fill_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_float_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_float_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_float_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_float_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_float_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_float_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_float_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_float_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_float_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_float_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_floor_mlu_bfloat16", # TODO(PYTORCH-8724): floor not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_floor_mlu_int16", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_floor_mlu_int32", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_floor_mlu_int8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_floor_mlu_uint8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_frac_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_frexp_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_frexp_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_half_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_half_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_half_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_half_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_half_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_half_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_half_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_half_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_half_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_i0_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_i0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_i0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_i0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_i0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_i0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_i0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_i0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_imag_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_imag_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_int_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_int_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_int_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_int_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_int_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_int_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_int_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_int_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_int_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isfinite_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isinf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isinf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isinf_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isinf_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isinf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isinf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isinf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isinf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isinf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isinf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isnan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isnan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isneginf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isneginf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isneginf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isneginf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isneginf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isneginf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isneginf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isneginf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isposinf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isposinf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isposinf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isposinf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isposinf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isposinf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isposinf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isposinf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isreal_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isreal_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isreal_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isreal_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isreal_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isreal_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isreal_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isreal_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isreal_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_isreal_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_jiterator_unary_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_jiterator_unary_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_jiterator_unary_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_jiterator_unary_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_jiterator_unary_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_jiterator_unary_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_jiterator_unary_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_jiterator_unary_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_jiterator_unary_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_lgamma_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_lgamma_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_lgamma_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_lgamma_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_lgamma_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_lgamma_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_lgamma_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_log10_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_log10_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_log1p_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_log2_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_log2_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_log_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_log_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_log_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_logical_not_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_logical_not_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_logit_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_logit_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_logit_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_logit_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_logit_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_logit_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_logit_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_logit_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_long_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_long_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_long_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_long_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_long_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_long_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_long_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_long_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_long_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_long_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_mvlgamma_mvlgamma_p_1_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_mvlgamma_mvlgamma_p_1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_mvlgamma_mvlgamma_p_1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_mvlgamma_mvlgamma_p_1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_mvlgamma_mvlgamma_p_1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_mvlgamma_mvlgamma_p_1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_mvlgamma_mvlgamma_p_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_mvlgamma_mvlgamma_p_3_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_mvlgamma_mvlgamma_p_3_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_mvlgamma_mvlgamma_p_3_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_mvlgamma_mvlgamma_p_3_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_mvlgamma_mvlgamma_p_3_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_mvlgamma_mvlgamma_p_5_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_mvlgamma_mvlgamma_p_5_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_mvlgamma_mvlgamma_p_5_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_mvlgamma_mvlgamma_p_5_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_mvlgamma_mvlgamma_p_5_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_mvlgamma_mvlgamma_p_5_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nan_to_num_mlu_bfloat16", # TODO(PYTORCH-10157)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_neg_mlu_bfloat16",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_neg_mlu_complex32",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_neg_mlu_complex64",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_neg_mlu_int16",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_neg_mlu_int8",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_neg_mlu_uint8",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_celu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_celu_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_celu_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_elu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_hardshrink_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_hardshrink_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_hardshrink_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_hardsigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_hardtanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_logsigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_mish_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_mish_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_mish_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_prelu_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_prelu_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_relu6_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_relu6_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_relu6_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_relu6_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_relu6_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_relu6_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_relu6_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_relu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_rrelu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_selu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_silu_mlu_bfloat16",    #dtypes not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_softplus_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_softshrink_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_softshrink_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_softshrink_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_softsign_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_softsign_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_softsign_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_softsign_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_softsign_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_softsign_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_softsign_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_softsign_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_softsign_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_tanhshrink_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_tanhshrink_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_tanhshrink_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_tanhshrink_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_tanhshrink_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_tanhshrink_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_tanhshrink_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_tanhshrink_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_nn_functional_threshold_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_1_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_2_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_2_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_2_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_2_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_2_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_2_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_2_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_3_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_3_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_3_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_3_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_3_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_3_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_4_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_4_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_4_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_4_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_4_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_4_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_polygamma_polygamma_n_4_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_positive_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_positive_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_positive_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_positive_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_positive_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_positive_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_positive_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_positive_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_positive_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_rad2deg_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_rad2deg_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_rad2deg_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_rad2deg_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_rad2deg_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_rad2deg_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_rad2deg_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_rad2deg_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_real_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_real_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_real_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_real_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_real_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_real_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_real_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_real_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_real_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_real_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_reciprocal_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_reciprocal_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_round_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_round_decimals_0_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_round_decimals_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_round_decimals_3_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_round_decimals_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_round_decimals_neg_3_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_round_decimals_neg_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_rsqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu rsqrt not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_rsqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_rsqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sgn_mlu_bfloat16", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sgn_mlu_bool", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sgn_mlu_complex32", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sgn_mlu_int16", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sgn_mlu_int32", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sgn_mlu_int8", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sgn_mlu_uint8", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_short_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_short_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_short_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_short_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_short_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_short_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_short_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_short_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_short_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sigmoid_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sign_mlu_bfloat16", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sign_mlu_bool", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sign_mlu_int16", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sign_mlu_int32", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sign_mlu_int8", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sign_mlu_uint8", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_signbit_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_signbit_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_signbit_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_signbit_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_signbit_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_signbit_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_signbit_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_signbit_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sin_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sin_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sin_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sin_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sin_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sin_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sin_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sin_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sin_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sin_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sinc_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sinc_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sinc_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sinc_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sinc_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sinc_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sinc_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sinc_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sinc_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sinh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sinh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sinh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sinh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sinh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sinh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sinh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sinh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sinh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sinh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_airy_ai_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_airy_ai_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_airy_ai_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_airy_ai_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_airy_ai_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_airy_ai_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_bessel_j0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_bessel_j0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_bessel_j0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_bessel_j0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_bessel_j0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_bessel_j0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_bessel_j1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_bessel_j1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_bessel_j1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_bessel_j1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_bessel_j1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_bessel_j1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_bessel_y0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_bessel_y0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_bessel_y0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_bessel_y0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_bessel_y0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_bessel_y0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_bessel_y1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_bessel_y1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_bessel_y1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_bessel_y1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_bessel_y1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_bessel_y1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_entr_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_entr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_entr_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_entr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_entr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_entr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_entr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_entr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_erfcx_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_erfcx_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_erfcx_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_erfcx_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_erfcx_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_erfcx_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_i0e_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_i0e_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_i0e_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_i0e_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_i0e_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_i0e_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_i0e_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_i0e_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_i1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_i1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_i1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_i1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_i1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_i1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_i1e_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_i1e_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_i1e_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_i1e_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_i1e_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_i1e_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_log_ndtr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_log_ndtr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_log_ndtr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_log_ndtr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_log_ndtr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_log_ndtr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_modified_bessel_i0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_modified_bessel_i0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_modified_bessel_i0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_modified_bessel_i0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_modified_bessel_i0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_modified_bessel_i0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_modified_bessel_i1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_modified_bessel_i1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_modified_bessel_i1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_modified_bessel_i1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_modified_bessel_i1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_modified_bessel_i1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_modified_bessel_k0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_modified_bessel_k0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_modified_bessel_k0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_modified_bessel_k0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_modified_bessel_k0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_modified_bessel_k0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_modified_bessel_k1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_modified_bessel_k1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_modified_bessel_k1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_modified_bessel_k1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_modified_bessel_k1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_modified_bessel_k1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_ndtr_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_ndtr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_ndtr_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_ndtr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_ndtr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_ndtr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_ndtr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_ndtr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_ndtri_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_ndtri_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_ndtri_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_ndtri_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_ndtri_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_ndtri_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_polygamma_special_polygamma_n_0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_polygamma_special_polygamma_n_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_polygamma_special_polygamma_n_0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_polygamma_special_polygamma_n_0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_polygamma_special_polygamma_n_0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_polygamma_special_polygamma_n_0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_polygamma_special_polygamma_n_0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_scaled_modified_bessel_k0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_scaled_modified_bessel_k0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_scaled_modified_bessel_k0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_scaled_modified_bessel_k0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_scaled_modified_bessel_k0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_scaled_modified_bessel_k0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_scaled_modified_bessel_k1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_scaled_modified_bessel_k1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_scaled_modified_bessel_k1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_scaled_modified_bessel_k1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_scaled_modified_bessel_k1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_scaled_modified_bessel_k1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_spherical_bessel_j0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_spherical_bessel_j0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_spherical_bessel_j0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_spherical_bessel_j0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_spherical_bessel_j0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_special_spherical_bessel_j0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu sqrt not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_sqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_square_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_square_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_square_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_square_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_square_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_square_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_square_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_square_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_square_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_tan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_tan_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_tan_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_tan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_tan_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_tan_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_tan_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_tan_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_tan_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_tan_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_tanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_tanh_mlu_complex64", # tanh unsupport complex64
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_trunc_mlu_bfloat16", # TODO(PYTORCH-8724): trunc not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_trunc_mlu_int16", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_trunc_mlu_int32", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_trunc_mlu_int8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_large_dim_trunc_mlu_uint8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_lgamma_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_lgamma_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_lgamma_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_lgamma_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_lgamma_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_lgamma_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_lgamma_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_log10_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_log10_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_log1p_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_log2_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_log2_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_log_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_log_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_log_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_logical_not_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_logical_not_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_logit_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_logit_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_logit_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_logit_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_logit_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_logit_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_logit_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_logit_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_long_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_long_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_long_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_long_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_long_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_long_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_long_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_long_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_long_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_long_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_mvlgamma_mvlgamma_p_1_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_mvlgamma_mvlgamma_p_1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_mvlgamma_mvlgamma_p_1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_mvlgamma_mvlgamma_p_1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_mvlgamma_mvlgamma_p_1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_mvlgamma_mvlgamma_p_1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_mvlgamma_mvlgamma_p_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_mvlgamma_mvlgamma_p_3_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_mvlgamma_mvlgamma_p_3_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_mvlgamma_mvlgamma_p_3_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_mvlgamma_mvlgamma_p_3_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_mvlgamma_mvlgamma_p_3_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_mvlgamma_mvlgamma_p_5_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_mvlgamma_mvlgamma_p_5_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_mvlgamma_mvlgamma_p_5_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_mvlgamma_mvlgamma_p_5_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_mvlgamma_mvlgamma_p_5_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_mvlgamma_mvlgamma_p_5_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nan_to_num_mlu_bfloat16", # TODO(PYTORCH-10157)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_neg_mlu_bfloat16",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_neg_mlu_complex32",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_neg_mlu_complex64",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_neg_mlu_int16",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_neg_mlu_int8",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_neg_mlu_uint8",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_celu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_celu_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_celu_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_elu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_hardshrink_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_hardshrink_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_hardshrink_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_hardsigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_hardtanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_logsigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_mish_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_mish_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_mish_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_prelu_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_prelu_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_relu6_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_relu6_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_relu6_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_relu6_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_relu6_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_relu6_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_relu6_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_relu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_rrelu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_selu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_silu_mlu_bfloat16",    #dtypes not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_softplus_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_softshrink_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_softshrink_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_softshrink_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_softsign_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_softsign_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_softsign_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_softsign_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_softsign_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_softsign_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_softsign_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_softsign_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_softsign_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_tanhshrink_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_tanhshrink_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_tanhshrink_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_tanhshrink_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_tanhshrink_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_tanhshrink_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_tanhshrink_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_tanhshrink_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_nn_functional_threshold_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_1_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_2_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_2_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_2_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_2_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_2_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_2_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_2_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_3_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_3_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_3_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_3_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_3_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_3_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_4_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_4_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_4_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_4_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_4_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_4_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_polygamma_polygamma_n_4_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_positive_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_positive_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_positive_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_positive_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_positive_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_positive_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_positive_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_positive_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_positive_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_rad2deg_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_rad2deg_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_rad2deg_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_rad2deg_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_rad2deg_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_rad2deg_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_rad2deg_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_rad2deg_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_real_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_real_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_real_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_real_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_real_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_real_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_real_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_real_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_real_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_real_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_reciprocal_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_reciprocal_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_round_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_round_decimals_0_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_round_decimals_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_round_decimals_3_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_round_decimals_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_round_decimals_neg_3_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_round_decimals_neg_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_rsqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu rsqrt not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_rsqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_rsqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sgn_mlu_bfloat16", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sgn_mlu_bool", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sgn_mlu_complex32", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sgn_mlu_int16", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sgn_mlu_int32", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sgn_mlu_int8", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sgn_mlu_uint8", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_short_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_short_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_short_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_short_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_short_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_short_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_short_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_short_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_short_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sigmoid_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sign_mlu_bfloat16", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sign_mlu_bool", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sign_mlu_int16", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sign_mlu_int32", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sign_mlu_int8", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sign_mlu_uint8", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_signbit_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_signbit_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_signbit_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_signbit_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_signbit_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_signbit_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_signbit_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_signbit_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sin_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sin_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sin_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sin_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sin_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sin_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sin_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sin_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sin_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sin_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sinc_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sinc_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sinc_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sinc_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sinc_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sinc_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sinc_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sinc_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sinc_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sinh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sinh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sinh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sinh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sinh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sinh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sinh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sinh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sinh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sinh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_airy_ai_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_airy_ai_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_airy_ai_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_airy_ai_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_airy_ai_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_airy_ai_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_bessel_j0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_bessel_j0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_bessel_j0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_bessel_j0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_bessel_j0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_bessel_j0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_bessel_j1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_bessel_j1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_bessel_j1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_bessel_j1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_bessel_j1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_bessel_j1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_bessel_y0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_bessel_y0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_bessel_y0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_bessel_y0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_bessel_y0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_bessel_y0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_bessel_y1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_bessel_y1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_bessel_y1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_bessel_y1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_bessel_y1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_bessel_y1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_entr_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_entr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_entr_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_entr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_entr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_entr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_entr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_entr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_erfcx_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_erfcx_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_erfcx_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_erfcx_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_erfcx_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_erfcx_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_i0e_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_i0e_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_i0e_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_i0e_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_i0e_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_i0e_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_i0e_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_i0e_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_i1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_i1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_i1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_i1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_i1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_i1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_i1e_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_i1e_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_i1e_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_i1e_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_i1e_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_i1e_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_log_ndtr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_log_ndtr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_log_ndtr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_log_ndtr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_log_ndtr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_log_ndtr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_modified_bessel_i0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_modified_bessel_i0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_modified_bessel_i0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_modified_bessel_i0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_modified_bessel_i0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_modified_bessel_i0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_modified_bessel_i1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_modified_bessel_i1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_modified_bessel_i1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_modified_bessel_i1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_modified_bessel_i1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_modified_bessel_i1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_modified_bessel_k0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_modified_bessel_k0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_modified_bessel_k0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_modified_bessel_k0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_modified_bessel_k0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_modified_bessel_k0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_modified_bessel_k1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_modified_bessel_k1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_modified_bessel_k1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_modified_bessel_k1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_modified_bessel_k1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_modified_bessel_k1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_ndtr_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_ndtr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_ndtr_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_ndtr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_ndtr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_ndtr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_ndtr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_ndtr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_ndtri_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_ndtri_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_ndtri_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_ndtri_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_ndtri_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_ndtri_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_polygamma_special_polygamma_n_0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_polygamma_special_polygamma_n_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_polygamma_special_polygamma_n_0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_polygamma_special_polygamma_n_0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_polygamma_special_polygamma_n_0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_polygamma_special_polygamma_n_0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_polygamma_special_polygamma_n_0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_scaled_modified_bessel_k0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_scaled_modified_bessel_k0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_scaled_modified_bessel_k0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_scaled_modified_bessel_k0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_scaled_modified_bessel_k0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_scaled_modified_bessel_k0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_scaled_modified_bessel_k1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_scaled_modified_bessel_k1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_scaled_modified_bessel_k1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_scaled_modified_bessel_k1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_scaled_modified_bessel_k1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_scaled_modified_bessel_k1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_spherical_bessel_j0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_spherical_bessel_j0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_spherical_bessel_j0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_spherical_bessel_j0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_spherical_bessel_j0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_special_spherical_bessel_j0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu sqrt not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_sqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_square_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_square_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_square_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_square_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_square_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_square_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_square_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_square_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_square_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_tan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_tan_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_tan_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_tan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_tan_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_tan_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_tan_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_tan_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_tan_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_tan_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_tanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_tanh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_trunc_mlu_bfloat16", # TODO(PYTORCH-8724): trunc not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_trunc_mlu_int16", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_trunc_mlu_int32", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_trunc_mlu_int8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_size1_trunc_mlu_uint8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_abs_mlu_bfloat16", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_abs_mlu_bool", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_abs_mlu_complex32", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_abs_mlu_int16", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_abs_mlu_int8", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_abs_mlu_uint8", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_acos_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_acos_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_acos_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_acos_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_acos_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_acos_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_acos_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_acos_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_acos_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_acos_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_acosh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_acosh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_acosh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_acosh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_acosh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_acosh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_acosh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_acosh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_acosh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_acosh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_asin_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_asin_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_asin_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_asin_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_asin_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_asin_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_asin_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_asin_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_asin_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_asin_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_asinh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_asinh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_asinh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_asinh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_asinh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_asinh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_asinh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_asinh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_asinh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_asinh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_atan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_atan_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_atan_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_atan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_atan_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_atan_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_atan_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_atan_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_atan_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_atan_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_atanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_atanh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_atanh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_atanh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_atanh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_atanh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_atanh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_atanh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_atanh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_atanh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_bfloat16_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_bfloat16_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_bfloat16_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_bfloat16_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_bfloat16_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_bfloat16_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_bfloat16_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_bfloat16_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_bfloat16_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_bfloat16_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_bool_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_bool_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_bool_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_bool_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_bool_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_bool_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_bool_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_bool_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_bool_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_bool_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_byte_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_byte_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_byte_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_byte_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_byte_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_byte_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_byte_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_byte_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_byte_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_ceil_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_ceil_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_ceil_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_ceil_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_ceil_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_chalf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_chalf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_chalf_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_chalf_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_chalf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_chalf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_chalf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_chalf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_chalf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_chalf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_char_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_char_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_char_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_char_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_char_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_char_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_char_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_char_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_char_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_char_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_conj_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_conj_physical_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_cos_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_cos_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_cos_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_cos_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_cos_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_cos_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_cos_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_cos_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_cos_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_cos_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_cosh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_cosh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_cosh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_cosh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_cosh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_cosh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_cosh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_cosh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_cosh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_cosh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_deg2rad_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_deg2rad_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_deg2rad_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_deg2rad_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_deg2rad_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_deg2rad_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_deg2rad_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_deg2rad_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_digamma_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_digamma_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_digamma_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_digamma_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_digamma_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_digamma_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_digamma_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_double_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_double_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_double_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_double_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_double_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_double_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_double_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_double_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_double_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_double_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_erf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_erfc_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_erfc_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_erfc_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_erfc_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_erfc_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_erfc_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_erfc_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_erfc_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_exp2_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_exp2_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_exp2_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_exp2_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_exp2_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_exp2_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_exp2_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_exp2_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_exp_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_exp_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_exp_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_expm1_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_fill_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_fill_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_fill_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_float_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_float_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_float_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_float_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_float_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_float_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_float_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_float_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_float_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_float_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_floor_mlu_bfloat16", # TODO(PYTORCH-8724): floor not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_floor_mlu_int16", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_floor_mlu_int32", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_floor_mlu_int8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_floor_mlu_uint8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_frac_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_frexp_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_frexp_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_half_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_half_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_half_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_half_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_half_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_half_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_half_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_half_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_half_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_i0_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_i0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_i0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_i0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_i0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_i0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_i0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_i0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_imag_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_imag_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_int_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_int_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_int_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_int_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_int_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_int_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_int_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_int_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_int_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isfinite_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isinf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isinf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isinf_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isinf_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isinf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isinf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isinf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isinf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isinf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isinf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isnan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isnan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isneginf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isneginf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isneginf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isneginf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isneginf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isneginf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isneginf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isneginf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isposinf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isposinf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isposinf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isposinf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isposinf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isposinf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isposinf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isposinf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isreal_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isreal_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isreal_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isreal_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isreal_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isreal_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isreal_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isreal_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isreal_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_isreal_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_jiterator_unary_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_jiterator_unary_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_jiterator_unary_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_jiterator_unary_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_jiterator_unary_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_jiterator_unary_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_jiterator_unary_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_jiterator_unary_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_jiterator_unary_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_lgamma_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_lgamma_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_lgamma_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_lgamma_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_lgamma_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_lgamma_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_lgamma_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_log10_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_log10_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_log1p_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_log2_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_log2_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_log_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_log_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_log_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_logical_not_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_logical_not_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_logit_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_logit_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_logit_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_logit_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_logit_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_logit_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_logit_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_logit_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_long_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_long_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_long_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_long_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_long_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_long_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_long_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_long_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_long_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_long_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_mvlgamma_mvlgamma_p_1_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_mvlgamma_mvlgamma_p_1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_mvlgamma_mvlgamma_p_1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_mvlgamma_mvlgamma_p_1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_mvlgamma_mvlgamma_p_1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_mvlgamma_mvlgamma_p_1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_mvlgamma_mvlgamma_p_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_mvlgamma_mvlgamma_p_3_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_mvlgamma_mvlgamma_p_3_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_mvlgamma_mvlgamma_p_3_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_mvlgamma_mvlgamma_p_3_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_mvlgamma_mvlgamma_p_3_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_mvlgamma_mvlgamma_p_5_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_mvlgamma_mvlgamma_p_5_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_mvlgamma_mvlgamma_p_5_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_mvlgamma_mvlgamma_p_5_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_mvlgamma_mvlgamma_p_5_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_mvlgamma_mvlgamma_p_5_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nan_to_num_mlu_bfloat16", # TODO(PYTORCH-10157)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_neg_mlu_bfloat16",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_neg_mlu_complex32",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_neg_mlu_complex64",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_neg_mlu_int16",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_neg_mlu_int8",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_neg_mlu_uint8",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_celu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_celu_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_celu_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_elu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_hardshrink_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_hardshrink_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_hardshrink_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_hardsigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_hardtanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_logsigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_mish_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_mish_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_mish_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_prelu_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_prelu_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_relu6_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_relu6_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_relu6_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_relu6_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_relu6_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_relu6_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_relu6_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_relu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_rrelu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_selu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_silu_mlu_bfloat16",   #dtypes not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_softplus_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_softshrink_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_softshrink_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_softshrink_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_softsign_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_softsign_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_softsign_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_softsign_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_softsign_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_softsign_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_softsign_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_softsign_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_softsign_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_tanhshrink_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_tanhshrink_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_tanhshrink_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_tanhshrink_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_tanhshrink_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_tanhshrink_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_tanhshrink_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_tanhshrink_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_nn_functional_threshold_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_1_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_2_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_2_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_2_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_2_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_2_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_2_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_2_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_3_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_3_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_3_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_3_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_3_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_3_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_4_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_4_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_4_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_4_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_4_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_4_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_polygamma_polygamma_n_4_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_positive_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_positive_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_positive_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_positive_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_positive_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_positive_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_positive_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_positive_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_positive_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_rad2deg_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_rad2deg_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_rad2deg_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_rad2deg_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_rad2deg_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_rad2deg_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_rad2deg_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_rad2deg_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_real_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_real_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_real_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_real_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_real_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_real_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_real_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_real_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_real_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_real_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_reciprocal_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_reciprocal_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_round_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_round_decimals_0_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_round_decimals_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_round_decimals_3_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_round_decimals_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_round_decimals_neg_3_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_round_decimals_neg_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_rsqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu rsqrt not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_rsqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_rsqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sgn_mlu_bfloat16", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sgn_mlu_bool", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sgn_mlu_complex32", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sgn_mlu_int16", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sgn_mlu_int32", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sgn_mlu_int8", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sgn_mlu_uint8", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_short_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_short_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_short_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_short_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_short_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_short_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_short_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_short_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_short_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sigmoid_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sign_mlu_bfloat16", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sign_mlu_bool", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sign_mlu_int16", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sign_mlu_int32", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sign_mlu_int8", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sign_mlu_uint8", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_signbit_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_signbit_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_signbit_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_signbit_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_signbit_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_signbit_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_signbit_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_signbit_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sin_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sin_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sin_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sin_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sin_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sin_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sin_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sin_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sin_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sin_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sinc_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sinc_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sinc_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sinc_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sinc_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sinc_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sinc_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sinc_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sinc_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sinh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sinh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sinh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sinh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sinh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sinh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sinh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sinh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sinh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sinh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_airy_ai_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_airy_ai_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_airy_ai_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_airy_ai_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_airy_ai_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_airy_ai_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_bessel_j0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_bessel_j0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_bessel_j0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_bessel_j0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_bessel_j0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_bessel_j0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_bessel_j1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_bessel_j1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_bessel_j1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_bessel_j1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_bessel_j1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_bessel_j1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_bessel_y0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_bessel_y0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_bessel_y0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_bessel_y0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_bessel_y0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_bessel_y0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_bessel_y1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_bessel_y1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_bessel_y1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_bessel_y1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_bessel_y1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_bessel_y1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_entr_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_entr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_entr_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_entr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_entr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_entr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_entr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_entr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_erfcx_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_erfcx_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_erfcx_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_erfcx_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_erfcx_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_erfcx_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_i0e_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_i0e_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_i0e_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_i0e_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_i0e_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_i0e_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_i0e_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_i0e_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_i1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_i1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_i1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_i1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_i1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_i1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_i1e_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_i1e_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_i1e_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_i1e_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_i1e_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_i1e_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_log_ndtr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_log_ndtr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_log_ndtr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_log_ndtr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_log_ndtr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_log_ndtr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_modified_bessel_i0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_modified_bessel_i0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_modified_bessel_i0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_modified_bessel_i0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_modified_bessel_i0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_modified_bessel_i0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_modified_bessel_i1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_modified_bessel_i1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_modified_bessel_i1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_modified_bessel_i1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_modified_bessel_i1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_modified_bessel_i1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_modified_bessel_k0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_modified_bessel_k0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_modified_bessel_k0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_modified_bessel_k0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_modified_bessel_k0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_modified_bessel_k0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_modified_bessel_k1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_modified_bessel_k1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_modified_bessel_k1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_modified_bessel_k1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_modified_bessel_k1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_modified_bessel_k1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_ndtr_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_ndtr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_ndtr_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_ndtr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_ndtr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_ndtr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_ndtr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_ndtr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_ndtri_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_ndtri_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_ndtri_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_ndtri_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_ndtri_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_ndtri_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_polygamma_special_polygamma_n_0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_polygamma_special_polygamma_n_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_polygamma_special_polygamma_n_0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_polygamma_special_polygamma_n_0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_polygamma_special_polygamma_n_0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_polygamma_special_polygamma_n_0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_polygamma_special_polygamma_n_0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_scaled_modified_bessel_k0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_scaled_modified_bessel_k0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_scaled_modified_bessel_k0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_scaled_modified_bessel_k0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_scaled_modified_bessel_k0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_scaled_modified_bessel_k0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_scaled_modified_bessel_k1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_scaled_modified_bessel_k1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_scaled_modified_bessel_k1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_scaled_modified_bessel_k1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_scaled_modified_bessel_k1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_scaled_modified_bessel_k1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_spherical_bessel_j0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_spherical_bessel_j0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_spherical_bessel_j0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_spherical_bessel_j0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_spherical_bessel_j0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_special_spherical_bessel_j0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu sqrt not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_sqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_square_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_square_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_square_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_square_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_square_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_square_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_square_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_square_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_square_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_tan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_tan_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_tan_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_tan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_tan_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_tan_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_tan_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_tan_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_tan_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_tan_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_tanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_tanh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_trunc_mlu_bfloat16", # TODO(PYTORCH-8724): trunc not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_trunc_mlu_int16", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_trunc_mlu_int32", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_trunc_mlu_int8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_every_other_trunc_mlu_uint8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_abs_mlu_bfloat16", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_abs_mlu_bool", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_abs_mlu_complex32", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_abs_mlu_int16", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_abs_mlu_int8", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_abs_mlu_uint8", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_acos_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_acos_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_acos_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_acos_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_acos_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_acos_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_acos_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_acos_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_acos_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_acos_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_acosh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_acosh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_acosh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_acosh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_acosh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_acosh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_acosh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_acosh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_acosh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_acosh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_asin_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_asin_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_asin_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_asin_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_asin_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_asin_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_asin_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_asin_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_asin_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_asin_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_asinh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_asinh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_asinh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_asinh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_asinh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_asinh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_asinh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_asinh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_asinh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_asinh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_atan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_atan_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_atan_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_atan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_atan_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_atan_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_atan_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_atan_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_atan_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_atan_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_atanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_atanh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_atanh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_atanh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_atanh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_atanh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_atanh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_atanh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_atanh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_atanh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_bfloat16_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_bfloat16_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_bfloat16_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_bfloat16_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_bfloat16_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_bfloat16_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_bfloat16_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_bfloat16_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_bfloat16_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_bfloat16_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_bool_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_bool_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_bool_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_bool_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_bool_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_bool_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_bool_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_bool_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_bool_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_bool_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_byte_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_byte_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_byte_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_byte_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_byte_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_byte_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_byte_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_byte_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_byte_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_ceil_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_ceil_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_ceil_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_ceil_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_ceil_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_chalf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_chalf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_chalf_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_chalf_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_chalf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_chalf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_chalf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_chalf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_chalf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_chalf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_char_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_char_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_char_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_char_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_char_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_char_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_char_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_char_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_char_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_char_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_conj_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_conj_physical_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_cos_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_cos_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_cos_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_cos_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_cos_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_cos_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_cos_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_cos_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_cos_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_cos_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_cosh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_cosh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_cosh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_cosh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_cosh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_cosh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_cosh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_cosh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_cosh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_cosh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_deg2rad_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_deg2rad_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_deg2rad_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_deg2rad_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_deg2rad_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_deg2rad_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_deg2rad_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_deg2rad_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_digamma_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_digamma_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_digamma_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_digamma_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_digamma_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_digamma_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_digamma_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_double_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_double_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_double_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_double_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_double_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_double_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_double_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_double_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_double_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_double_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_erf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_erfc_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_erfc_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_erfc_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_erfc_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_erfc_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_erfc_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_erfc_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_erfc_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_exp2_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_exp2_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_exp2_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_exp2_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_exp2_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_exp2_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_exp2_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_exp2_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_exp_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_exp_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_exp_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_expm1_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_fill_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_fill_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_fill_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_float_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_float_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_float_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_float_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_float_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_float_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_float_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_float_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_float_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_float_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_floor_mlu_bfloat16", # TODO(PYTORCH-8724): floor not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_floor_mlu_int16", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_floor_mlu_int32", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_floor_mlu_int8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_floor_mlu_uint8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_frac_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_frexp_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_frexp_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_half_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_half_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_half_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_half_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_half_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_half_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_half_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_half_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_half_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_i0_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_i0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_i0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_i0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_i0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_i0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_i0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_i0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_imag_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_imag_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_int_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_int_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_int_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_int_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_int_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_int_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_int_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_int_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_int_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isfinite_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isinf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isinf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isinf_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isinf_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isinf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isinf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isinf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isinf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isinf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isinf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isnan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isnan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isneginf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isneginf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isneginf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isneginf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isneginf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isneginf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isneginf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isneginf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isposinf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isposinf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isposinf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isposinf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isposinf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isposinf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isposinf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isposinf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isreal_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isreal_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isreal_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isreal_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isreal_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isreal_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isreal_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isreal_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isreal_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_isreal_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_jiterator_unary_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_jiterator_unary_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_jiterator_unary_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_jiterator_unary_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_jiterator_unary_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_jiterator_unary_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_jiterator_unary_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_jiterator_unary_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_jiterator_unary_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_lgamma_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_lgamma_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_lgamma_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_lgamma_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_lgamma_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_lgamma_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_lgamma_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_log10_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_log10_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_log1p_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_log2_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_log2_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_log_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_log_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_log_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_logical_not_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_logical_not_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_logit_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_logit_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_logit_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_logit_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_logit_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_logit_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_logit_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_logit_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_long_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_long_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_long_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_long_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_long_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_long_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_long_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_long_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_long_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_long_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_mvlgamma_mvlgamma_p_1_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_mvlgamma_mvlgamma_p_1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_mvlgamma_mvlgamma_p_1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_mvlgamma_mvlgamma_p_1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_mvlgamma_mvlgamma_p_1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_mvlgamma_mvlgamma_p_1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_mvlgamma_mvlgamma_p_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_mvlgamma_mvlgamma_p_3_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_mvlgamma_mvlgamma_p_3_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_mvlgamma_mvlgamma_p_3_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_mvlgamma_mvlgamma_p_3_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_mvlgamma_mvlgamma_p_3_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_mvlgamma_mvlgamma_p_5_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_mvlgamma_mvlgamma_p_5_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_mvlgamma_mvlgamma_p_5_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_mvlgamma_mvlgamma_p_5_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_mvlgamma_mvlgamma_p_5_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_mvlgamma_mvlgamma_p_5_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nan_to_num_mlu_bfloat16", # TODO(PYTORCH-10157)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_neg_mlu_bfloat16",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_neg_mlu_complex32",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_neg_mlu_complex64",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_neg_mlu_int16",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_neg_mlu_int8",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_neg_mlu_uint8",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_celu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_celu_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_celu_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_elu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_hardshrink_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_hardshrink_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_hardshrink_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_hardsigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_hardtanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_logsigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_mish_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_mish_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_mish_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_prelu_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_prelu_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_relu6_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_relu6_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_relu6_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_relu6_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_relu6_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_relu6_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_relu6_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_relu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_rrelu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_selu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_silu_mlu_bfloat16",    #dtypes not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_softplus_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_softshrink_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_softshrink_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_softshrink_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_softsign_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_softsign_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_softsign_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_softsign_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_softsign_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_softsign_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_softsign_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_softsign_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_softsign_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_tanhshrink_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_tanhshrink_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_tanhshrink_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_tanhshrink_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_tanhshrink_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_tanhshrink_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_tanhshrink_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_tanhshrink_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_nn_functional_threshold_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_1_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_2_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_2_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_2_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_2_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_2_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_2_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_2_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_3_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_3_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_3_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_3_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_3_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_3_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_4_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_4_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_4_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_4_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_4_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_4_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_polygamma_polygamma_n_4_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_positive_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_positive_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_positive_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_positive_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_positive_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_positive_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_positive_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_positive_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_positive_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_rad2deg_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_rad2deg_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_rad2deg_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_rad2deg_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_rad2deg_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_rad2deg_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_rad2deg_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_rad2deg_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_real_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_real_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_real_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_real_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_real_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_real_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_real_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_real_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_real_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_real_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_reciprocal_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_reciprocal_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_round_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_round_decimals_0_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_round_decimals_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_round_decimals_3_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_round_decimals_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_round_decimals_neg_3_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_round_decimals_neg_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_rsqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu rsqrt not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_rsqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_rsqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sgn_mlu_bfloat16", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sgn_mlu_bool", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sgn_mlu_complex32", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sgn_mlu_int16", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sgn_mlu_int32", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sgn_mlu_int8", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sgn_mlu_uint8", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_short_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_short_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_short_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_short_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_short_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_short_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_short_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_short_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_short_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sigmoid_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sign_mlu_bfloat16", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sign_mlu_bool", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sign_mlu_int16", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sign_mlu_int32", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sign_mlu_int8", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sign_mlu_uint8", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_signbit_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_signbit_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_signbit_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_signbit_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_signbit_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_signbit_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_signbit_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_signbit_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sin_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sin_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sin_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sin_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sin_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sin_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sin_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sin_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sin_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sin_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sinc_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sinc_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sinc_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sinc_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sinc_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sinc_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sinc_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sinc_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sinc_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sinh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sinh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sinh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sinh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sinh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sinh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sinh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sinh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sinh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sinh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_airy_ai_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_airy_ai_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_airy_ai_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_airy_ai_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_airy_ai_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_airy_ai_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_bessel_j0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_bessel_j0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_bessel_j0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_bessel_j0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_bessel_j0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_bessel_j0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_bessel_j1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_bessel_j1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_bessel_j1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_bessel_j1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_bessel_j1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_bessel_j1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_bessel_y0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_bessel_y0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_bessel_y0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_bessel_y0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_bessel_y0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_bessel_y0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_bessel_y1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_bessel_y1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_bessel_y1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_bessel_y1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_bessel_y1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_bessel_y1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_entr_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_entr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_entr_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_entr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_entr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_entr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_entr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_entr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_erfcx_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_erfcx_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_erfcx_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_erfcx_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_erfcx_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_erfcx_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_i0e_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_i0e_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_i0e_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_i0e_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_i0e_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_i0e_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_i0e_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_i0e_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_i1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_i1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_i1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_i1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_i1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_i1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_i1e_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_i1e_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_i1e_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_i1e_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_i1e_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_i1e_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_log_ndtr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_log_ndtr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_log_ndtr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_log_ndtr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_log_ndtr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_log_ndtr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_modified_bessel_i0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_modified_bessel_i0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_modified_bessel_i0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_modified_bessel_i0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_modified_bessel_i0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_modified_bessel_i0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_modified_bessel_i1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_modified_bessel_i1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_modified_bessel_i1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_modified_bessel_i1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_modified_bessel_i1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_modified_bessel_i1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_modified_bessel_k0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_modified_bessel_k0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_modified_bessel_k0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_modified_bessel_k0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_modified_bessel_k0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_modified_bessel_k0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_modified_bessel_k1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_modified_bessel_k1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_modified_bessel_k1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_modified_bessel_k1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_modified_bessel_k1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_modified_bessel_k1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_ndtr_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_ndtr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_ndtr_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_ndtr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_ndtr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_ndtr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_ndtr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_ndtr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_ndtri_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_ndtri_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_ndtri_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_ndtri_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_ndtri_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_ndtri_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_polygamma_special_polygamma_n_0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_polygamma_special_polygamma_n_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_polygamma_special_polygamma_n_0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_polygamma_special_polygamma_n_0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_polygamma_special_polygamma_n_0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_polygamma_special_polygamma_n_0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_polygamma_special_polygamma_n_0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_scaled_modified_bessel_k0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_scaled_modified_bessel_k0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_scaled_modified_bessel_k0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_scaled_modified_bessel_k0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_scaled_modified_bessel_k0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_scaled_modified_bessel_k0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_scaled_modified_bessel_k1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_scaled_modified_bessel_k1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_scaled_modified_bessel_k1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_scaled_modified_bessel_k1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_scaled_modified_bessel_k1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_scaled_modified_bessel_k1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_spherical_bessel_j0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_spherical_bessel_j0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_spherical_bessel_j0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_spherical_bessel_j0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_spherical_bessel_j0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_special_spherical_bessel_j0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu sqrt not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_sqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_square_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_square_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_square_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_square_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_square_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_square_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_square_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_square_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_square_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_tan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_tan_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_tan_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_tan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_tan_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_tan_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_tan_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_tan_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_tan_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_tan_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_tanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_tanh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_trunc_mlu_bfloat16", # TODO(PYTORCH-8724): trunc not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_trunc_mlu_int16", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_trunc_mlu_int32", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_trunc_mlu_int8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_contig_vs_transposed_trunc_mlu_uint8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_exp_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_exp_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_exp_mlu_float32", # accuary not pass
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_exp_slow_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_acos_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_acos_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_acos_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_acosh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_acosh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_acosh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_asin_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_asin_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_asin_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_atanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_atanh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_atanh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_log10_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_log1p_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_log2_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_log_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_logit_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_logit_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_logit_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_mvlgamma_mvlgamma_p_1_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_mvlgamma_mvlgamma_p_1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_mvlgamma_mvlgamma_p_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_mvlgamma_mvlgamma_p_3_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_mvlgamma_mvlgamma_p_5_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_mvlgamma_mvlgamma_p_5_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_rsqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu rsqrt not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_special_ndtri_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_float_domains_sqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu sqrt not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_hardshrink_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_hardshrink_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_hardshrink_edge_cases_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_hardshrink_edge_cases_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_hardsigmoid_backward_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_hardsigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_hardswish_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_i0_range1_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_i0_range1_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_i0_range2_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_i0_range2_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_i0_special_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_i0_special_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_isposinf_isneginf_non_boolean_output_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_nan_to_num_bfloat16_mlu", # TODO(PYTORCH-10157)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_abs_mlu_bfloat16", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_abs_mlu_bool", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_abs_mlu_complex32", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_abs_mlu_int16", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_abs_mlu_int8", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_abs_mlu_uint8", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_acos_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_acos_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_acos_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_acos_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_acos_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_acos_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_acos_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_acos_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_acos_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_acos_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_acosh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_acosh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_acosh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_acosh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_acosh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_acosh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_acosh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_acosh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_acosh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_acosh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_asin_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_asin_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_asin_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_asin_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_asin_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_asin_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_asin_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_asin_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_asin_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_asin_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_asinh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_asinh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_asinh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_asinh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_asinh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_asinh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_asinh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_asinh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_asinh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_asinh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_atan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_atan_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_atan_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_atan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_atan_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_atan_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_atan_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_atan_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_atan_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_atan_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_atanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_atanh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_atanh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_atanh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_atanh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_atanh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_atanh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_atanh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_atanh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_atanh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_bfloat16_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_bfloat16_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_bfloat16_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_bfloat16_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_bfloat16_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_bfloat16_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_bfloat16_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_bfloat16_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_bfloat16_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_bfloat16_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_bool_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_bool_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_bool_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_bool_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_bool_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_bool_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_bool_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_bool_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_bool_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_bool_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_byte_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_byte_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_byte_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_byte_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_byte_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_byte_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_byte_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_byte_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_byte_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_ceil_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_ceil_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_ceil_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_ceil_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_ceil_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_chalf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_chalf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_chalf_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_chalf_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_chalf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_chalf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_chalf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_chalf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_chalf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_chalf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_char_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_char_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_char_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_char_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_char_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_char_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_char_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_char_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_char_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_char_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_conj_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_conj_physical_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_cos_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_cos_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_cos_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_cos_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_cos_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_cos_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_cos_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_cos_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_cos_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_cos_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_cosh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_cosh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_cosh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_cosh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_cosh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_cosh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_cosh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_cosh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_cosh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_cosh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_deg2rad_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_deg2rad_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_deg2rad_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_deg2rad_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_deg2rad_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_deg2rad_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_deg2rad_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_deg2rad_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_digamma_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_digamma_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_digamma_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_digamma_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_digamma_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_digamma_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_digamma_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_double_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_double_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_double_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_double_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_double_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_double_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_double_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_double_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_double_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_double_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_erf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_erfc_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_erfc_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_erfc_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_erfc_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_erfc_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_erfc_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_erfc_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_erfc_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_exp2_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_exp2_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_exp2_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_exp2_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_exp2_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_exp2_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_exp2_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_exp2_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_exp_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_exp_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_exp_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_abs_mlu_bfloat16", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_abs_mlu_bool", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_abs_mlu_complex32", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_abs_mlu_int16", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_abs_mlu_int8", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_abs_mlu_uint8", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_acos_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_acos_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_acos_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_acosh_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_acosh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_acosh_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_asin_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_asin_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_asin_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_asinh_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_asinh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_asinh_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_atan_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_atan_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_atan_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_atanh_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_atanh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_atanh_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_bfloat16_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_bfloat16_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_bool_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_bool_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_byte_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_ceil_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_ceil_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_ceil_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_ceil_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_ceil_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_chalf_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_chalf_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_chalf_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_chalf_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_chalf_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_chalf_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_chalf_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_chalf_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_chalf_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_chalf_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_char_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_char_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_conj_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_conj_physical_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_cos_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_cos_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_cos_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_cosh_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_cosh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_cosh_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_deg2rad_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_digamma_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_digamma_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_digamma_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_digamma_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_digamma_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_digamma_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_digamma_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_double_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_double_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_erf_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_erfc_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_erfc_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_erfc_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_erfc_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_erfc_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_erfc_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_erfc_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_erfc_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_exp2_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_exp2_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_exp2_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_exp2_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_exp2_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_exp2_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_exp2_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_exp2_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_exp_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_exp_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_exp_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_expm1_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_fill_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_fill_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_fill_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_float_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_float_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_floor_mlu_bfloat16", # TODO(PYTORCH-8724): floor not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_floor_mlu_int16", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_floor_mlu_int32", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_floor_mlu_int8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_floor_mlu_uint8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_frac_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_frexp_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_frexp_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_half_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_i0_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_i0_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_i0_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_i0_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_i0_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_i0_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_i0_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_i0_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_imag_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_int_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_isfinite_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_isinf_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_isinf_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_isnan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_isnan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_isneginf_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_isneginf_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_isneginf_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_isneginf_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_isneginf_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_isneginf_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_isneginf_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_isneginf_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_isposinf_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_isposinf_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_isposinf_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_isposinf_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_isposinf_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_isposinf_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_isposinf_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_isposinf_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_isreal_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_jiterator_unary_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_jiterator_unary_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_jiterator_unary_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_jiterator_unary_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_jiterator_unary_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_jiterator_unary_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_jiterator_unary_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_jiterator_unary_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_jiterator_unary_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_lgamma_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_lgamma_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_lgamma_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_lgamma_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_lgamma_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_lgamma_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_lgamma_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_log10_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_log10_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_log1p_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_log2_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_log2_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_log_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_log_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_log_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_logical_not_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_logical_not_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_logit_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_logit_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_logit_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_logit_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_logit_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_logit_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_logit_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_logit_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_long_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_long_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_mvlgamma_mvlgamma_p_1_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_mvlgamma_mvlgamma_p_1_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_mvlgamma_mvlgamma_p_1_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_mvlgamma_mvlgamma_p_1_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_mvlgamma_mvlgamma_p_1_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_mvlgamma_mvlgamma_p_1_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_mvlgamma_mvlgamma_p_3_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_mvlgamma_mvlgamma_p_3_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_mvlgamma_mvlgamma_p_3_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_mvlgamma_mvlgamma_p_3_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_mvlgamma_mvlgamma_p_3_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_mvlgamma_mvlgamma_p_3_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_mvlgamma_mvlgamma_p_5_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_mvlgamma_mvlgamma_p_5_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_mvlgamma_mvlgamma_p_5_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_mvlgamma_mvlgamma_p_5_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_mvlgamma_mvlgamma_p_5_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_mvlgamma_mvlgamma_p_5_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nan_to_num_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_neg_mlu_bfloat16",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_neg_mlu_complex32",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_neg_mlu_complex64",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_neg_mlu_int16",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_neg_mlu_int8",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_neg_mlu_uint8",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nn_functional_celu_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nn_functional_elu_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nn_functional_hardshrink_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nn_functional_hardshrink_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nn_functional_hardshrink_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nn_functional_hardsigmoid_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nn_functional_logsigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nn_functional_mish_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nn_functional_mish_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nn_functional_mish_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nn_functional_relu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nn_functional_rrelu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nn_functional_selu_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nn_functional_silu_mlu_bfloat16", # silu not support bf16, TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nn_functional_softplus_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nn_functional_softshrink_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nn_functional_softshrink_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nn_functional_softshrink_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nn_functional_softsign_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nn_functional_softsign_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nn_functional_softsign_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nn_functional_softsign_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nn_functional_softsign_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nn_functional_softsign_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nn_functional_tanhshrink_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nn_functional_tanhshrink_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_nn_functional_threshold_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_0_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_0_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_0_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_0_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_0_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_0_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_0_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_1_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_1_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_1_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_1_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_1_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_1_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_1_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_2_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_2_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_2_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_2_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_2_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_2_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_2_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_3_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_3_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_3_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_3_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_3_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_3_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_3_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_4_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_4_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_4_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_4_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_4_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_4_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_polygamma_polygamma_n_4_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_positive_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_rad2deg_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_real_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_reciprocal_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_reciprocal_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_round_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_round_decimals_0_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_round_decimals_0_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_round_decimals_0_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_round_decimals_3_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_round_decimals_neg_3_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_round_decimals_3_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_round_decimals_3_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_round_decimals_neg_3_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_round_decimals_neg_3_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_rsqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu rsqrt not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_rsqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_rsqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sgn_mlu_bfloat16", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sgn_mlu_bool", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sgn_mlu_complex32", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sgn_mlu_int16", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sgn_mlu_int32", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sgn_mlu_int8", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sgn_mlu_uint8", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_short_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sigmoid_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sign_mlu_bfloat16", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sign_mlu_bool", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sign_mlu_int16", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sign_mlu_int32", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sign_mlu_int8", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sign_mlu_uint8", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_signbit_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_signbit_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_signbit_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_signbit_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_signbit_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_signbit_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_signbit_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_signbit_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sin_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sin_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sin_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sinc_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sinc_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sinc_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sinc_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sinc_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sinc_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sinc_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sinc_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sinc_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sinh_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sinh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sinh_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_airy_ai_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_airy_ai_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_airy_ai_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_airy_ai_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_airy_ai_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_airy_ai_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_bessel_j0_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_bessel_j0_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_bessel_j0_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_bessel_j0_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_bessel_j0_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_bessel_j0_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_bessel_j1_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_bessel_j1_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_bessel_j1_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_bessel_j1_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_bessel_j1_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_bessel_j1_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_bessel_y0_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_bessel_y0_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_bessel_y0_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_bessel_y0_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_bessel_y0_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_bessel_y0_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_bessel_y1_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_bessel_y1_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_bessel_y1_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_bessel_y1_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_bessel_y1_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_bessel_y1_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_entr_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_entr_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_entr_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_entr_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_entr_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_entr_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_entr_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_entr_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_erfcx_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_erfcx_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_erfcx_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_erfcx_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_erfcx_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_erfcx_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_i0e_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_i0e_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_i0e_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_i0e_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_i0e_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_i0e_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_i0e_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_i0e_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_i1_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_i1_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_i1_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_i1_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_i1_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_i1_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_i1e_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_i1e_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_i1e_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_i1e_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_i1e_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_i1e_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_log_ndtr_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_log_ndtr_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_log_ndtr_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_log_ndtr_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_log_ndtr_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_log_ndtr_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_modified_bessel_i0_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_modified_bessel_i0_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_modified_bessel_i0_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_modified_bessel_i0_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_modified_bessel_i0_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_modified_bessel_i0_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_modified_bessel_i1_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_modified_bessel_i1_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_modified_bessel_i1_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_modified_bessel_i1_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_modified_bessel_i1_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_modified_bessel_i1_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_modified_bessel_k0_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_modified_bessel_k0_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_modified_bessel_k0_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_modified_bessel_k0_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_modified_bessel_k0_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_modified_bessel_k0_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_modified_bessel_k1_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_modified_bessel_k1_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_modified_bessel_k1_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_modified_bessel_k1_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_modified_bessel_k1_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_modified_bessel_k1_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_ndtr_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_ndtri_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_ndtri_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_ndtri_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_ndtri_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_ndtri_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_ndtri_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_polygamma_special_polygamma_n_0_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_polygamma_special_polygamma_n_0_mlu_float16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_polygamma_special_polygamma_n_0_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_polygamma_special_polygamma_n_0_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_polygamma_special_polygamma_n_0_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_polygamma_special_polygamma_n_0_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_polygamma_special_polygamma_n_0_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_scaled_modified_bessel_k0_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_scaled_modified_bessel_k0_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_scaled_modified_bessel_k0_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_scaled_modified_bessel_k0_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_scaled_modified_bessel_k0_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_scaled_modified_bessel_k0_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_scaled_modified_bessel_k1_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_scaled_modified_bessel_k1_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_scaled_modified_bessel_k1_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_scaled_modified_bessel_k1_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_scaled_modified_bessel_k1_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_scaled_modified_bessel_k1_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_spherical_bessel_j0_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_spherical_bessel_j0_mlu_float32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_spherical_bessel_j0_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_spherical_bessel_j0_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_spherical_bessel_j0_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_special_spherical_bessel_j0_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu sqrt not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_sqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_square_mlu_bool", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_square_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_square_mlu_int16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_square_mlu_int32", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_square_mlu_int8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_square_mlu_uint8", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_tan_mlu_bfloat16", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_tan_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_tan_mlu_complex64", #TODO(PYTORCH-10350): expand need other ops support about dtype and func.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_tanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_tanh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_trunc_mlu_bfloat16", # TODO(PYTORCH-8724): trunc not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_trunc_mlu_int16", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_trunc_mlu_int32", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_trunc_mlu_int8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expand_trunc_mlu_uint8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_expm1_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_fill_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_fill_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_fill_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_float_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_float_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_float_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_float_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_float_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_float_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_float_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_float_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_float_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_float_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_floor_mlu_bfloat16", # TODO(PYTORCH-8724): floor not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_floor_mlu_int16", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_floor_mlu_int32", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_floor_mlu_int8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_floor_mlu_uint8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_frac_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_frexp_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_frexp_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_half_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_half_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_half_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_half_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_half_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_half_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_half_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_half_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_half_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_i0_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_i0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_i0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_i0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_i0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_i0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_i0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_i0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_imag_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_imag_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_abs_mlu_bfloat16", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_abs_mlu_bool", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_abs_mlu_complex32", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_abs_mlu_int16", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_abs_mlu_int8", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_abs_mlu_uint8", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_acos_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_acos_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_acos_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_acos_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_acos_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_acos_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_acos_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_acos_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_acos_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_acos_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_acosh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_acosh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_acosh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_acosh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_acosh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_acosh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_acosh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_acosh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_acosh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_acosh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_asin_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_asin_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_asin_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_asin_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_asin_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_asin_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_asin_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_asin_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_asin_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_asin_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_asinh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_asinh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_asinh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_asinh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_asinh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_asinh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_asinh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_asinh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_asinh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_asinh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_atan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_atan_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_atan_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_atan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_atan_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_atan_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_atan_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_atan_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_atan_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_atan_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_atanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_atanh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_atanh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_atanh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_atanh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_atanh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_atanh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_atanh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_atanh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_atanh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_bfloat16_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_bfloat16_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_bfloat16_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_bfloat16_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_bfloat16_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_bfloat16_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_bfloat16_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_bfloat16_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_bfloat16_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_bfloat16_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_bool_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_bool_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_bool_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_bool_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_bool_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_bool_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_bool_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_bool_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_bool_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_bool_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_byte_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_byte_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_byte_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_byte_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_byte_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_byte_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_byte_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_byte_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_byte_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_ceil_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_ceil_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_ceil_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_ceil_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_ceil_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_chalf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_chalf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_chalf_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_chalf_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_chalf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_chalf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_chalf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_chalf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_chalf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_chalf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_char_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_char_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_char_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_char_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_char_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_char_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_char_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_char_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_char_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_char_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_conj_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_conj_physical_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_cos_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_cos_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_cos_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_cos_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_cos_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_cos_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_cos_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_cos_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_cos_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_cos_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_cosh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_cosh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_cosh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_cosh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_cosh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_cosh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_cosh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_cosh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_cosh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_cosh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_deg2rad_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_deg2rad_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_deg2rad_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_deg2rad_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_deg2rad_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_deg2rad_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_deg2rad_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_deg2rad_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_digamma_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_digamma_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_digamma_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_digamma_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_digamma_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_digamma_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_digamma_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_double_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_double_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_double_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_double_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_double_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_double_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_double_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_double_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_double_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_double_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_erf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_erfc_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_erfc_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_erfc_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_erfc_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_erfc_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_erfc_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_erfc_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_erfc_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_exp2_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_exp2_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_exp2_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_exp2_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_exp2_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_exp2_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_exp2_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_exp2_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_exp_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_exp_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_exp_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_expm1_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_fill_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_fill_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_fill_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_float_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_float_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_float_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_float_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_float_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_float_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_float_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_float_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_float_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_float_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_floor_mlu_bfloat16", # TODO(PYTORCH-8724): floor not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_floor_mlu_int16", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_floor_mlu_int32", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_floor_mlu_int8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_floor_mlu_uint8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_frac_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_frexp_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_frexp_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_half_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_half_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_half_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_half_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_half_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_half_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_half_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_half_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_half_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_i0_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_i0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_i0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_i0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_i0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_i0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_i0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_i0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_imag_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_imag_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_int_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_int_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_int_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_int_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_int_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_int_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_int_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_int_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_int_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isfinite_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isinf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isinf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isinf_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isinf_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isinf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isinf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isinf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isinf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isinf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isinf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isnan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isnan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isneginf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isneginf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isneginf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isneginf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isneginf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isneginf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isneginf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isneginf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isposinf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isposinf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isposinf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isposinf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isposinf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isposinf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isposinf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isposinf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isreal_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isreal_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isreal_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isreal_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isreal_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isreal_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isreal_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isreal_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isreal_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_isreal_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_jiterator_unary_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_jiterator_unary_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_jiterator_unary_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_jiterator_unary_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_jiterator_unary_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_jiterator_unary_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_jiterator_unary_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_jiterator_unary_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_jiterator_unary_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_lgamma_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_lgamma_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_lgamma_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_lgamma_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_lgamma_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_lgamma_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_lgamma_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_log10_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_log10_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_log1p_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_log2_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_log2_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_log_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_log_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_log_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_logical_not_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_logical_not_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_logit_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_logit_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_logit_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_logit_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_logit_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_logit_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_logit_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_logit_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_long_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_long_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_long_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_long_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_long_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_long_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_long_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_long_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_long_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_long_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_mvlgamma_mvlgamma_p_1_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_mvlgamma_mvlgamma_p_1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_mvlgamma_mvlgamma_p_1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_mvlgamma_mvlgamma_p_1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_mvlgamma_mvlgamma_p_1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_mvlgamma_mvlgamma_p_1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_mvlgamma_mvlgamma_p_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_mvlgamma_mvlgamma_p_3_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_mvlgamma_mvlgamma_p_3_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_mvlgamma_mvlgamma_p_3_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_mvlgamma_mvlgamma_p_3_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_mvlgamma_mvlgamma_p_3_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_mvlgamma_mvlgamma_p_5_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_mvlgamma_mvlgamma_p_5_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_mvlgamma_mvlgamma_p_5_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_mvlgamma_mvlgamma_p_5_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_mvlgamma_mvlgamma_p_5_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_mvlgamma_mvlgamma_p_5_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nan_to_num_mlu_bfloat16", # TODO(PYTORCH-10157)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_neg_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_neg_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_neg_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_neg_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_neg_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_neg_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_celu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_celu_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_celu_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_elu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_hardshrink_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_hardshrink_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_hardshrink_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_hardsigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_hardtanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_logsigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_mish_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_mish_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_mish_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_prelu_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_prelu_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_relu6_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_relu6_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_relu6_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_relu6_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_relu6_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_relu6_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_relu6_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_relu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_rrelu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_selu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_silu_mlu_bfloat16",     #dtypes not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_softplus_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_softshrink_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_softshrink_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_softshrink_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_softsign_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_softsign_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_softsign_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_softsign_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_softsign_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_softsign_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_softsign_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_softsign_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_softsign_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_tanhshrink_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_tanhshrink_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_tanhshrink_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_tanhshrink_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_tanhshrink_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_tanhshrink_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_tanhshrink_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_tanhshrink_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_nn_functional_threshold_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_1_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_2_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_2_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_2_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_2_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_2_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_2_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_2_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_3_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_3_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_3_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_3_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_3_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_3_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_4_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_4_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_4_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_4_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_4_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_4_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_polygamma_polygamma_n_4_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_positive_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_positive_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_positive_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_positive_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_positive_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_positive_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_positive_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_positive_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_positive_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_rad2deg_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_rad2deg_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_rad2deg_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_rad2deg_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_rad2deg_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_rad2deg_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_rad2deg_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_rad2deg_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_real_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_real_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_real_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_real_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_real_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_real_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_real_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_real_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_real_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_real_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_reciprocal_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_reciprocal_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_round_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_round_decimals_0_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_round_decimals_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_round_decimals_3_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_round_decimals_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_round_decimals_neg_3_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_round_decimals_neg_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_rsqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu rsqrt not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_rsqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_rsqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sgn_mlu_bfloat16", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sgn_mlu_bool", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sgn_mlu_complex32", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sgn_mlu_int16", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sgn_mlu_int32", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sgn_mlu_int8", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sgn_mlu_uint8", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_short_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_short_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_short_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_short_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_short_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_short_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_short_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_short_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_short_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sigmoid_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sign_mlu_bfloat16", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sign_mlu_bool", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sign_mlu_int16", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sign_mlu_int32", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sign_mlu_int8", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sign_mlu_uint8", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_signbit_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_signbit_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_signbit_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_signbit_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_signbit_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_signbit_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_signbit_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_signbit_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sin_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sin_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sin_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sin_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sin_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sin_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sin_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sin_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sin_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sin_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sinc_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sinc_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sinc_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sinc_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sinc_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sinc_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sinc_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sinc_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sinc_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sinh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sinh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sinh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sinh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sinh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sinh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sinh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sinh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sinh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sinh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_airy_ai_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_airy_ai_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_airy_ai_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_airy_ai_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_airy_ai_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_airy_ai_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_bessel_j0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_bessel_j0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_bessel_j0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_bessel_j0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_bessel_j0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_bessel_j0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_bessel_j1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_bessel_j1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_bessel_j1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_bessel_j1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_bessel_j1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_bessel_j1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_bessel_y0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_bessel_y0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_bessel_y0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_bessel_y0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_bessel_y0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_bessel_y0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_bessel_y1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_bessel_y1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_bessel_y1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_bessel_y1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_bessel_y1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_bessel_y1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_entr_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_entr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_entr_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_entr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_entr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_entr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_entr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_entr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_erfcx_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_erfcx_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_erfcx_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_erfcx_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_erfcx_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_erfcx_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_i0e_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_i0e_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_i0e_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_i0e_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_i0e_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_i0e_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_i0e_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_i0e_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_i1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_i1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_i1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_i1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_i1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_i1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_i1e_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_i1e_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_i1e_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_i1e_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_i1e_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_i1e_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_log_ndtr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_log_ndtr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_log_ndtr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_log_ndtr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_log_ndtr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_log_ndtr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_modified_bessel_i0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_modified_bessel_i0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_modified_bessel_i0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_modified_bessel_i0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_modified_bessel_i0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_modified_bessel_i0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_modified_bessel_i1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_modified_bessel_i1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_modified_bessel_i1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_modified_bessel_i1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_modified_bessel_i1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_modified_bessel_i1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_modified_bessel_k0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_modified_bessel_k0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_modified_bessel_k0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_modified_bessel_k0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_modified_bessel_k0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_modified_bessel_k0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_modified_bessel_k1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_modified_bessel_k1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_modified_bessel_k1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_modified_bessel_k1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_modified_bessel_k1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_modified_bessel_k1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_ndtr_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_ndtr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_ndtr_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_ndtr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_ndtr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_ndtr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_ndtr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_ndtr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_ndtri_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_ndtri_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_ndtri_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_ndtri_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_ndtri_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_ndtri_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_polygamma_special_polygamma_n_0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_polygamma_special_polygamma_n_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_polygamma_special_polygamma_n_0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_polygamma_special_polygamma_n_0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_polygamma_special_polygamma_n_0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_polygamma_special_polygamma_n_0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_polygamma_special_polygamma_n_0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_scaled_modified_bessel_k0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_scaled_modified_bessel_k0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_scaled_modified_bessel_k0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_scaled_modified_bessel_k0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_scaled_modified_bessel_k0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_scaled_modified_bessel_k0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_scaled_modified_bessel_k1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_scaled_modified_bessel_k1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_scaled_modified_bessel_k1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_scaled_modified_bessel_k1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_scaled_modified_bessel_k1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_scaled_modified_bessel_k1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_spherical_bessel_j0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_spherical_bessel_j0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_spherical_bessel_j0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_spherical_bessel_j0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_spherical_bessel_j0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_special_spherical_bessel_j0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu sqrt not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_sqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_square_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_square_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_square_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_square_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_square_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_square_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_square_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_square_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_square_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_tan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_tan_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_tan_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_tan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_tan_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_tan_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_tan_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_tan_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_tan_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_tan_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_tanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_tanh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_trunc_mlu_bfloat16", # TODO(PYTORCH-8724): trunc not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_trunc_mlu_int16", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_trunc_mlu_int32", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_trunc_mlu_int8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_index_trunc_mlu_uint8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_int_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_int_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_int_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_int_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_int_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_int_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_int_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_int_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_int_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isfinite_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isinf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isinf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isinf_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isinf_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isinf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isinf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isinf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isinf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isinf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isinf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isnan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isnan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isneginf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isneginf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isneginf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isneginf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isneginf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isneginf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isneginf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isneginf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isposinf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isposinf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isposinf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isposinf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isposinf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isposinf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isposinf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isposinf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isreal_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isreal_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isreal_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isreal_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isreal_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isreal_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isreal_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isreal_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isreal_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_isreal_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_jiterator_unary_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_jiterator_unary_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_jiterator_unary_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_jiterator_unary_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_jiterator_unary_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_jiterator_unary_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_jiterator_unary_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_jiterator_unary_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_jiterator_unary_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_lgamma_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_lgamma_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_lgamma_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_lgamma_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_lgamma_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_lgamma_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_lgamma_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_log10_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_log10_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_log1p_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_log2_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_log2_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_log_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_log_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_log_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_logical_not_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_logical_not_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_logit_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_logit_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_logit_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_logit_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_logit_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_logit_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_logit_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_logit_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_long_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_long_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_long_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_long_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_long_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_long_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_long_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_long_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_long_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_long_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_mvlgamma_mvlgamma_p_1_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_mvlgamma_mvlgamma_p_1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_mvlgamma_mvlgamma_p_1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_mvlgamma_mvlgamma_p_1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_mvlgamma_mvlgamma_p_1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_mvlgamma_mvlgamma_p_1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_mvlgamma_mvlgamma_p_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_mvlgamma_mvlgamma_p_3_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_mvlgamma_mvlgamma_p_3_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_mvlgamma_mvlgamma_p_3_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_mvlgamma_mvlgamma_p_3_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_mvlgamma_mvlgamma_p_3_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_mvlgamma_mvlgamma_p_5_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_mvlgamma_mvlgamma_p_5_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_mvlgamma_mvlgamma_p_5_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_mvlgamma_mvlgamma_p_5_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_mvlgamma_mvlgamma_p_5_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_mvlgamma_mvlgamma_p_5_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nan_to_num_mlu_bfloat16", # TODO(PYTORCH-10157)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_neg_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_neg_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_neg_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_neg_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_neg_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_neg_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_celu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_celu_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_celu_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_elu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_hardshrink_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_hardshrink_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_hardshrink_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_hardsigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_hardtanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_logsigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_mish_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_mish_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_mish_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_prelu_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_prelu_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_relu6_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_relu6_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_relu6_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_relu6_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_relu6_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_relu6_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_relu6_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_relu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_rrelu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_selu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_silu_mlu_bfloat16",      #dtypes not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_softplus_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_softshrink_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_softshrink_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_softshrink_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_softsign_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_softsign_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_softsign_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_softsign_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_softsign_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_softsign_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_softsign_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_softsign_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_softsign_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_tanhshrink_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_tanhshrink_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_tanhshrink_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_tanhshrink_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_tanhshrink_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_tanhshrink_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_tanhshrink_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_tanhshrink_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_nn_functional_threshold_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_1_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_2_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_2_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_2_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_2_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_2_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_2_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_2_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_3_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_3_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_3_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_3_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_3_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_3_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_4_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_4_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_4_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_4_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_4_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_4_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_polygamma_polygamma_n_4_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_positive_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_positive_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_positive_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_positive_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_positive_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_positive_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_positive_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_positive_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_positive_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_rad2deg_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_rad2deg_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_rad2deg_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_rad2deg_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_rad2deg_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_rad2deg_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_rad2deg_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_rad2deg_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_real_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_real_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_real_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_real_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_real_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_real_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_real_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_real_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_real_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_real_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_reciprocal_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_reciprocal_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_round_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_round_decimals_0_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_round_decimals_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_round_decimals_3_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_round_decimals_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_round_decimals_neg_3_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_round_decimals_neg_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_rsqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu rsqrt not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_rsqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_rsqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sgn_mlu_bfloat16", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sgn_mlu_bool", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sgn_mlu_complex32", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sgn_mlu_int16", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sgn_mlu_int32", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sgn_mlu_int8", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sgn_mlu_uint8", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_short_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_short_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_short_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_short_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_short_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_short_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_short_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_short_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_short_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sigmoid_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sign_mlu_bfloat16", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sign_mlu_bool", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sign_mlu_int16", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sign_mlu_int32", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sign_mlu_int8", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sign_mlu_uint8", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_signbit_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_signbit_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_signbit_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_signbit_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_signbit_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_signbit_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_signbit_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_signbit_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sin_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sin_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sin_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sin_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sin_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sin_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sin_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sin_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sin_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sin_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sinc_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sinc_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sinc_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sinc_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sinc_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sinc_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sinc_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sinc_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sinc_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sinh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sinh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sinh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sinh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sinh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sinh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sinh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sinh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sinh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sinh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_airy_ai_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_airy_ai_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_airy_ai_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_airy_ai_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_airy_ai_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_airy_ai_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_bessel_j0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_bessel_j0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_bessel_j0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_bessel_j0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_bessel_j0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_bessel_j0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_bessel_j1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_bessel_j1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_bessel_j1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_bessel_j1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_bessel_j1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_bessel_j1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_bessel_y0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_bessel_y0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_bessel_y0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_bessel_y0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_bessel_y0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_bessel_y0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_bessel_y1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_bessel_y1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_bessel_y1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_bessel_y1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_bessel_y1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_bessel_y1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_entr_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_entr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_entr_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_entr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_entr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_entr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_entr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_entr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_erfcx_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_erfcx_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_erfcx_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_erfcx_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_erfcx_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_erfcx_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_i0e_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_i0e_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_i0e_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_i0e_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_i0e_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_i0e_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_i0e_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_i0e_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_i1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_i1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_i1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_i1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_i1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_i1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_i1e_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_i1e_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_i1e_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_i1e_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_i1e_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_i1e_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_log_ndtr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_log_ndtr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_log_ndtr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_log_ndtr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_log_ndtr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_log_ndtr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_modified_bessel_i0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_modified_bessel_i0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_modified_bessel_i0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_modified_bessel_i0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_modified_bessel_i0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_modified_bessel_i0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_modified_bessel_i1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_modified_bessel_i1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_modified_bessel_i1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_modified_bessel_i1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_modified_bessel_i1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_modified_bessel_i1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_modified_bessel_k0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_modified_bessel_k0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_modified_bessel_k0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_modified_bessel_k0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_modified_bessel_k0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_modified_bessel_k0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_modified_bessel_k1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_modified_bessel_k1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_modified_bessel_k1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_modified_bessel_k1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_modified_bessel_k1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_modified_bessel_k1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_ndtr_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_ndtr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_ndtr_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_ndtr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_ndtr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_ndtr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_ndtr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_ndtr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_ndtri_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_ndtri_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_ndtri_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_ndtri_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_ndtri_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_ndtri_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_polygamma_special_polygamma_n_0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_polygamma_special_polygamma_n_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_polygamma_special_polygamma_n_0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_polygamma_special_polygamma_n_0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_polygamma_special_polygamma_n_0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_polygamma_special_polygamma_n_0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_polygamma_special_polygamma_n_0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_scaled_modified_bessel_k0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_scaled_modified_bessel_k0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_scaled_modified_bessel_k0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_scaled_modified_bessel_k0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_scaled_modified_bessel_k0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_scaled_modified_bessel_k0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_scaled_modified_bessel_k1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_scaled_modified_bessel_k1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_scaled_modified_bessel_k1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_scaled_modified_bessel_k1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_scaled_modified_bessel_k1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_scaled_modified_bessel_k1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_spherical_bessel_j0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_spherical_bessel_j0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_spherical_bessel_j0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_spherical_bessel_j0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_spherical_bessel_j0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_special_spherical_bessel_j0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu sqrt not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_sqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_square_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_square_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_square_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_square_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_square_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_square_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_square_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_square_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_square_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_tan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_tan_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_tan_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_tan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_tan_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_tan_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_tan_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_tan_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_tan_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_tan_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_tanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_tanh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_trunc_mlu_bfloat16", # TODO(PYTORCH-8724): trunc not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_trunc_mlu_int16", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_trunc_mlu_int32", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_trunc_mlu_int8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_non_contig_trunc_mlu_uint8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_op_invert_mlu",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_abs_mlu_bfloat16", # TODO(PYTORCH-8789)
# TODO(PYTORCH-9217): "fill" not implemented for ComplexFloat
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_abs_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_acos_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_acos_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_acos_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_acos_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_acosh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_acosh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_acosh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_acosh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_angle_mlu_complex64", # Depends on fill supports complex.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_asin_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_asin_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_asin_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_asin_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_asinh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_asinh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_asinh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_asinh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_atan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_atan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_atan_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_atan_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_atanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_atanh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_atanh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_atanh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_ceil_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_conj_mlu_complex64",           # TODO(PYTORCH-8738)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_conj_physical_mlu_complex64",  # TODO(PYTORCH-8738)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_cos_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_cos_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_cos_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_cos_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_cosh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_cosh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_cosh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_cosh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_deg2rad_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_deg2rad_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_deg2rad_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_digamma_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_digamma_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_erf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_erf_mlu_float32", # input inf/-inf, output 1/-1.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_erfc_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_erfc_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_erfc_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_exp2_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_exp2_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_exp2_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_exp_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_exp_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_expm1_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_fill_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_fill_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_floor_mlu_bfloat16", # TODO(PYTORCH-8724): floor not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_frac_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_frexp_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_frexp_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_i0_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_i0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_i0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_imag_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_isfinite_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_isfinite_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_isinf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_isinf_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_isinf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_isinf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_isnan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_isnan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_isneginf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_isneginf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_isneginf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_isposinf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_isposinf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_isposinf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_isreal_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_isreal_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_isreal_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_isreal_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_jiterator_unary_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_jiterator_unary_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_jiterator_unary_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_jiterator_unary_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_lgamma_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_lgamma_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_log10_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_log10_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_log1p_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_log1p_mlu_float16", # cnllLog1p return nan for input inf on MLU370.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_log1p_mlu_float32", # cnllLog1p return nan for input inf on MLU370.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_log2_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_log2_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_log_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_log_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_logical_not_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_logical_not_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_logit_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_logit_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_logit_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_mvlgamma_mvlgamma_p_1_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_mvlgamma_mvlgamma_p_1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_mvlgamma_mvlgamma_p_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_mvlgamma_mvlgamma_p_3_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_mvlgamma_mvlgamma_p_5_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_mvlgamma_mvlgamma_p_5_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nan_to_num_mlu_bfloat16", # TODO(PYTORCH-10157)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_neg_mlu_bfloat16",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_neg_mlu_complex64",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_celu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_celu_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_celu_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_elu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_elu_mlu_float16", # accuracy error, absolute difference: 0.000244140625 at index (0, 90) (up to 1e-05 allowed)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_hardsigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_hardsigmoid_mlu_float16", # accuracy error, absolute difference: 0.0002033710479736328 at index (7, 70) (up to 1e-05 allowed)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_logsigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_logsigmoid_mlu_float16", # [PYTORCH-9210]: input inf, output nan
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_logsigmoid_mlu_float32", # [PYTORCH-9210]: input inf, output nan
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_mish_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_mish_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_mish_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_prelu_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_prelu_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_relu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_selu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_selu_mlu_float16", # accuracy error, absolute difference: 0.001953125
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_silu_mlu_bfloat16",     #dtypes not supoort
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_softplus_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_softplus_mlu_float16", # CNNLCORE-14209
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_softplus_mlu_float32", # CNNLCORE-14209
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_softsign_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_softsign_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_softsign_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_softsign_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_tanhshrink_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_tanhshrink_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_tanhshrink_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_tanhshrink_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_threshold_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_threshold_mlu_float16",  # On MLU300 series, If input is negative infinity, then output is NaN
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_nn_functional_threshold_mlu_float32",  # On MLU300 series, If input is negative infinity, then output is NaN
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_polygamma_polygamma_n_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_polygamma_polygamma_n_0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_polygamma_polygamma_n_1_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_polygamma_polygamma_n_1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_polygamma_polygamma_n_2_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_polygamma_polygamma_n_2_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_polygamma_polygamma_n_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_polygamma_polygamma_n_3_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_polygamma_polygamma_n_4_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_polygamma_polygamma_n_4_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_positive_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_positive_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_positive_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_positive_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_rad2deg_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_rad2deg_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_rad2deg_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_real_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_real_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_real_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_real_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_reciprocal_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_reciprocal_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_round_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_round_decimals_0_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_round_decimals_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_round_decimals_3_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_round_decimals_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_round_decimals_neg_3_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_round_decimals_neg_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_rsqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu rsqrt not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_rsqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_sgn_mlu_bfloat16", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_sgn_mlu_complex64", # TODO(PYTORCH-9217): "fill" not implemented for ComplexFloat
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_sigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_sigmoid_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_sign_mlu_bfloat16", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_signbit_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_signbit_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_signbit_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_sin_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_sin_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_sin_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_sin_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_sinc_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_sinc_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_sinc_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_sinc_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_sinh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_sinh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_sinh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_sinh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_airy_ai_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_bessel_j0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_bessel_j1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_bessel_y0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_bessel_y1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_entr_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_entr_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_entr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_erfcx_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_i0e_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_i0e_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_i0e_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_i1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_i1e_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_log_ndtr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_modified_bessel_i0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_modified_bessel_i1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_modified_bessel_k0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_modified_bessel_k1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_ndtr_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_ndtr_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_ndtr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_ndtri_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_polygamma_special_polygamma_n_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_polygamma_special_polygamma_n_0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_scaled_modified_bessel_k0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_scaled_modified_bessel_k1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_special_spherical_bessel_j0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_sqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu sqrt not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_sqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_square_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_square_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_square_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_square_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_tan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_tan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_tan_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_tan_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_tanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_tanh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_extremal_trunc_mlu_bfloat16", # TODO(PYTORCH-8724): trunc not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_abs_mlu_bfloat16", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_abs_mlu_complex32", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_abs_mlu_int16", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_acos_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_acos_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_acos_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_acos_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_acos_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_acos_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_acos_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_acos_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_acos_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_acos_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_acosh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_acosh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_acosh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_acosh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_acosh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_acosh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_acosh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_acosh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_acosh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_acosh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_asin_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_asin_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_asin_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_asin_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_asin_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_asin_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_asin_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_asin_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_asin_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_asin_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_asinh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_asinh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_asinh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_asinh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_asinh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_asinh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_asinh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_asinh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_asinh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_asinh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_atan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_atan_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_atan_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_atan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_atan_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_atan_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_atan_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_atan_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_atan_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_atan_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_atanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_atanh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_atanh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_atanh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_atanh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_atanh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_atanh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_atanh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_atanh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_atanh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_bitwise_not_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_bitwise_not_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_bitwise_not_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_ceil_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_ceil_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_ceil_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_ceil_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_ceil_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_conj_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_conj_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_conj_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_conj_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_conj_physical_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_conj_physical_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_conj_physical_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_conj_physical_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_cos_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_cos_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_cos_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_cos_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_cos_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_cos_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_cos_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_cos_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_cos_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_cos_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_cosh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_cosh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_cosh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_cosh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_cosh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_cosh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_cosh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_cosh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_cosh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_cosh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_deg2rad_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_deg2rad_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_deg2rad_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_deg2rad_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_deg2rad_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_deg2rad_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_deg2rad_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_deg2rad_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_digamma_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_digamma_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_digamma_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_digamma_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_digamma_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_digamma_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_digamma_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_erf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_erfc_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_erfc_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_erfc_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_erfc_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_erfc_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_erfc_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_erfc_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_erfc_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_erfinv_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_erfinv_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_erfinv_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_exp2_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_exp2_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_exp2_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_exp2_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_exp2_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_exp2_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_exp2_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_exp2_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_exp_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_exp_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_exp_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_expm1_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_expm1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_expm1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_expm1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_fill_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_fill_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_fill_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_floor_mlu_bfloat16", # TODO(PYTORCH-8724): floor not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_floor_mlu_int16", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_floor_mlu_int32", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_floor_mlu_int8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_floor_mlu_uint8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_frac_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_frexp_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_frexp_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_i0_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_i0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_i0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_i0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_i0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_i0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_i0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_i0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_imag_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_imag_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isfinite_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isinf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isinf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isinf_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isinf_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isinf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isinf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isinf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isinf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isinf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isinf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isnan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isnan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isneginf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isneginf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isneginf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isneginf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isneginf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isneginf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isneginf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isneginf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isposinf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isposinf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isposinf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isposinf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isposinf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isposinf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isposinf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isposinf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isreal_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isreal_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isreal_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isreal_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isreal_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isreal_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isreal_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isreal_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isreal_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_isreal_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_jiterator_unary_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_jiterator_unary_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_jiterator_unary_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_jiterator_unary_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_jiterator_unary_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_jiterator_unary_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_jiterator_unary_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_jiterator_unary_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_jiterator_unary_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_lgamma_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_lgamma_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_lgamma_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_lgamma_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_lgamma_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_lgamma_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_lgamma_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_log10_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_log10_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_log1p_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_log2_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_log2_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_log_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_log_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_log_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_logical_not_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_logical_not_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_logit_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_logit_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_logit_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_logit_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_logit_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_logit_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_logit_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_logit_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_mvlgamma_mvlgamma_p_1_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_mvlgamma_mvlgamma_p_1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_mvlgamma_mvlgamma_p_1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_mvlgamma_mvlgamma_p_1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_mvlgamma_mvlgamma_p_1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_mvlgamma_mvlgamma_p_1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_mvlgamma_mvlgamma_p_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_mvlgamma_mvlgamma_p_3_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_mvlgamma_mvlgamma_p_3_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_mvlgamma_mvlgamma_p_3_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_mvlgamma_mvlgamma_p_3_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_mvlgamma_mvlgamma_p_3_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_mvlgamma_mvlgamma_p_5_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_mvlgamma_mvlgamma_p_5_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_mvlgamma_mvlgamma_p_5_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_mvlgamma_mvlgamma_p_5_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_mvlgamma_mvlgamma_p_5_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_mvlgamma_mvlgamma_p_5_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nan_to_num_mlu_bfloat16", # TODO(PYTORCH-10157)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_neg_mlu_bfloat16",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_neg_mlu_complex32",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_neg_mlu_complex64",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_neg_mlu_int16",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_neg_mlu_int8",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_neg_mlu_uint8",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_celu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_celu_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_celu_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_elu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_hardsigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_logsigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_mish_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_mish_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_mish_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_prelu_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_prelu_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_relu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_selu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_silu_mlu_bfloat16",    #dtypes not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_softplus_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_softsign_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_softsign_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_softsign_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_softsign_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_softsign_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_softsign_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_softsign_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_softsign_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_softsign_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_tanhshrink_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_tanhshrink_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_tanhshrink_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_tanhshrink_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_tanhshrink_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_tanhshrink_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_tanhshrink_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_tanhshrink_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_nn_functional_threshold_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_1_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_2_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_2_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_2_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_2_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_2_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_2_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_2_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_3_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_3_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_3_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_3_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_3_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_3_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_4_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_4_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_4_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_4_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_4_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_4_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_polygamma_polygamma_n_4_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_positive_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_positive_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_positive_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_positive_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_positive_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_positive_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_positive_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_positive_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_positive_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_rad2deg_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_rad2deg_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_rad2deg_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_rad2deg_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_rad2deg_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_rad2deg_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_rad2deg_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_rad2deg_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_real_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_real_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_real_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_real_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_real_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_real_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_real_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_real_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_real_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_real_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_reciprocal_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_reciprocal_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_round_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_round_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_round_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_round_decimals_0_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_round_decimals_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_round_decimals_3_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_round_decimals_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_round_decimals_neg_3_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_round_decimals_neg_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_rsqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu rsqrt not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_rsqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_rsqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sgn_mlu_bfloat16", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sgn_mlu_complex32", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sgn_mlu_complex64", # TODO(PYTORCH-10133): not align numpy when input large complex tensor
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sgn_mlu_int16", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sgn_mlu_int32", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sigmoid_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sign_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sign_mlu_int16", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sign_mlu_int32", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_signbit_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_signbit_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_signbit_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_signbit_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_signbit_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_signbit_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_signbit_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_signbit_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sin_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sin_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sin_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sin_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sin_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sin_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sin_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sin_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sin_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sin_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sinc_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sinc_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sinc_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sinc_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sinc_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sinc_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sinc_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sinc_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sinc_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sinh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sinh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sinh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sinh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sinh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sinh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sinh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sinh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sinh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sinh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_airy_ai_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_airy_ai_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_airy_ai_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_airy_ai_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_airy_ai_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_airy_ai_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_bessel_j0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_bessel_j0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_bessel_j0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_bessel_j0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_bessel_j0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_bessel_j0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_bessel_j1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_bessel_j1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_bessel_j1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_bessel_j1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_bessel_j1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_bessel_j1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_bessel_y0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_bessel_y0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_bessel_y0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_bessel_y0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_bessel_y0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_bessel_y0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_bessel_y1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_bessel_y1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_bessel_y1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_bessel_y1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_bessel_y1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_bessel_y1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_entr_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_entr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_entr_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_entr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_entr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_entr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_entr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_entr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_erfcx_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_erfcx_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_erfcx_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_erfcx_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_erfcx_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_erfcx_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_i0e_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_i0e_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_i0e_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_i0e_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_i0e_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_i0e_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_i0e_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_i0e_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_i1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_i1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_i1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_i1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_i1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_i1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_i1e_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_i1e_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_i1e_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_i1e_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_i1e_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_i1e_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_log_ndtr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_log_ndtr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_log_ndtr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_log_ndtr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_log_ndtr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_log_ndtr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_modified_bessel_i0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_modified_bessel_i0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_modified_bessel_i0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_modified_bessel_i0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_modified_bessel_i0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_modified_bessel_i0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_modified_bessel_i1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_modified_bessel_i1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_modified_bessel_i1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_modified_bessel_i1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_modified_bessel_i1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_modified_bessel_i1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_modified_bessel_k0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_modified_bessel_k0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_modified_bessel_k0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_modified_bessel_k0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_modified_bessel_k0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_modified_bessel_k0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_modified_bessel_k1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_modified_bessel_k1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_modified_bessel_k1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_modified_bessel_k1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_modified_bessel_k1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_modified_bessel_k1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_ndtr_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_ndtr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_ndtr_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_ndtr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_ndtr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_ndtr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_ndtr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_ndtr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_ndtri_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_ndtri_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_ndtri_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_ndtri_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_ndtri_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_ndtri_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_polygamma_special_polygamma_n_0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_polygamma_special_polygamma_n_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_polygamma_special_polygamma_n_0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_polygamma_special_polygamma_n_0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_polygamma_special_polygamma_n_0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_polygamma_special_polygamma_n_0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_polygamma_special_polygamma_n_0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_scaled_modified_bessel_k0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_scaled_modified_bessel_k0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_scaled_modified_bessel_k0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_scaled_modified_bessel_k0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_scaled_modified_bessel_k0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_scaled_modified_bessel_k0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_scaled_modified_bessel_k1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_scaled_modified_bessel_k1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_scaled_modified_bessel_k1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_scaled_modified_bessel_k1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_scaled_modified_bessel_k1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_scaled_modified_bessel_k1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_spherical_bessel_j0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_spherical_bessel_j0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_spherical_bessel_j0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_spherical_bessel_j0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_spherical_bessel_j0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_special_spherical_bessel_j0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu sqrt not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_sqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_square_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_square_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_square_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_square_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_square_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_square_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_square_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_square_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_square_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_tan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_tan_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_tan_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_tan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_tan_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_tan_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_tan_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_tan_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_tan_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_tan_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_tanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_tanh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_trunc_mlu_bfloat16", # TODO(PYTORCH-8724): trunc not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_trunc_mlu_int16", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_trunc_mlu_int32", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_trunc_mlu_int8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_large_trunc_mlu_uint8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_abs_mlu_bfloat16", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_abs_mlu_bool", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_abs_mlu_complex32", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_abs_mlu_int16", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_abs_mlu_int8", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_abs_mlu_uint8", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_acos_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_acos_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_acos_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_acos_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_acos_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_acos_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_acos_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_acos_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_acos_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_acos_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_acosh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_acosh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_acosh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_acosh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_acosh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_acosh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_acosh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_acosh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_acosh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_acosh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_asin_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_asin_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_asin_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_asin_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_asin_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_asin_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_asin_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_asin_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_asin_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_asin_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_asinh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_asinh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_asinh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_asinh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_asinh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_asinh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_asinh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_asinh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_asinh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_asinh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_atan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_atan_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_atan_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_atan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_atan_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_atan_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_atan_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_atan_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_atan_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_atan_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_atanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_atanh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_atanh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_atanh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_atanh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_atanh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_atanh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_atanh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_atanh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_atanh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_ceil_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_ceil_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_ceil_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_ceil_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_ceil_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_conj_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_conj_physical_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_cos_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_cos_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_cos_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_cos_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_cos_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_cos_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_cos_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_cos_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_cos_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_cos_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_cosh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_cosh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_cosh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_cosh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_cosh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_cosh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_cosh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_cosh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_cosh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_cosh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_deg2rad_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_deg2rad_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_deg2rad_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_deg2rad_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_deg2rad_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_deg2rad_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_deg2rad_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_deg2rad_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_digamma_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_digamma_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_digamma_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_digamma_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_digamma_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_digamma_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_digamma_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_erf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_erfc_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_erfc_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_erfc_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_erfc_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_erfc_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_erfc_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_erfc_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_erfc_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_exp2_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_exp2_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_exp2_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_exp2_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_exp2_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_exp2_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_exp2_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_exp2_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_exp_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_exp_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_exp_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_expm1_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_fill_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_fill_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_fill_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_floor_mlu_bfloat16", # TODO(PYTORCH-8724): floor not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_floor_mlu_int16", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_floor_mlu_int32", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_floor_mlu_int8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_floor_mlu_uint8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_frac_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_frexp_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_frexp_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_i0_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_i0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_i0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_i0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_i0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_i0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_i0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_i0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_imag_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_imag_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isfinite_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isinf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isinf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isinf_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isinf_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isinf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isinf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isinf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isinf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isinf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isinf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isnan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isnan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isneginf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isneginf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isneginf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isneginf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isneginf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isneginf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isneginf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isneginf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isposinf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isposinf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isposinf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isposinf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isposinf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isposinf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isposinf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isposinf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isreal_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isreal_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isreal_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isreal_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isreal_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isreal_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isreal_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isreal_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isreal_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_isreal_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_jiterator_unary_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_jiterator_unary_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_jiterator_unary_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_jiterator_unary_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_jiterator_unary_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_jiterator_unary_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_jiterator_unary_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_jiterator_unary_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_jiterator_unary_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_lgamma_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_lgamma_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_lgamma_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_lgamma_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_lgamma_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_lgamma_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_lgamma_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_log10_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_log10_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_log10_mlu_uint8", # masked_fill doesn't support uint8.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_log1p_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_log2_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_log2_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_log2_mlu_uint8", # masked_fill doesn't support uint8.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_log_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_log_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_log_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_log_mlu_uint8", # masked_fill doesn't support uint8.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_logical_not_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_logical_not_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_logit_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_logit_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_logit_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_logit_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_logit_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_logit_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_logit_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_logit_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_mvlgamma_mvlgamma_p_1_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_mvlgamma_mvlgamma_p_1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_mvlgamma_mvlgamma_p_1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_mvlgamma_mvlgamma_p_1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_mvlgamma_mvlgamma_p_1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_mvlgamma_mvlgamma_p_1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_mvlgamma_mvlgamma_p_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_mvlgamma_mvlgamma_p_3_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_mvlgamma_mvlgamma_p_3_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_mvlgamma_mvlgamma_p_3_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_mvlgamma_mvlgamma_p_3_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_mvlgamma_mvlgamma_p_3_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_mvlgamma_mvlgamma_p_5_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_mvlgamma_mvlgamma_p_5_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_mvlgamma_mvlgamma_p_5_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_mvlgamma_mvlgamma_p_5_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_mvlgamma_mvlgamma_p_5_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_mvlgamma_mvlgamma_p_5_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nan_to_num_mlu_bfloat16", # TODO(PYTORCH-10157)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_neg_mlu_bfloat16",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_neg_mlu_complex32",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_neg_mlu_complex64",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_neg_mlu_int16",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_neg_mlu_int8",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_neg_mlu_uint8",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_celu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_celu_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_celu_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_elu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_elu_mlu_float16", # accuracy error, absolute difference: 0.000244140625 at index (0, 90) (up to 1e-05 allowed)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_hardsigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_hardsigmoid_mlu_float16", # accuracy error, absolute difference: 0.0002033710479736328 at index (1, 49) (up to 1e-05 allowed)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_logsigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_mish_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_mish_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_mish_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_prelu_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_prelu_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_relu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_selu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_selu_mlu_float16", # accuracy not pass, absolute difference: 0.001953125
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_silu_mlu_bfloat16",     #dtypes not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_softplus_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_softplus_mlu_float16", # CNNLCORE-14209
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_softplus_mlu_float32", # CNNLCORE-14209
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_softsign_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_softsign_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_softsign_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_softsign_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_softsign_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_softsign_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_softsign_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_softsign_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_softsign_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_tanhshrink_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_tanhshrink_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_tanhshrink_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_tanhshrink_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_tanhshrink_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_tanhshrink_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_tanhshrink_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_tanhshrink_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_nn_functional_threshold_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_1_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_2_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_2_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_2_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_2_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_2_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_2_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_2_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_3_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_3_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_3_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_3_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_3_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_3_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_4_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_4_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_4_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_4_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_4_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_4_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_polygamma_polygamma_n_4_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_positive_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_positive_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_positive_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_positive_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_positive_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_positive_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_positive_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_positive_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_positive_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_rad2deg_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_rad2deg_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_rad2deg_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_rad2deg_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_rad2deg_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_rad2deg_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_rad2deg_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_rad2deg_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_real_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_real_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_real_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_real_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_real_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_real_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_real_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_real_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_real_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_real_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_reciprocal_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_reciprocal_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_round_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_round_decimals_0_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_round_decimals_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_round_decimals_3_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_round_decimals_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_round_decimals_neg_3_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_round_decimals_neg_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_rsqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu rsqrt not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_rsqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_rsqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu rsqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sgn_mlu_bfloat16", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sgn_mlu_bool", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sgn_mlu_complex32", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sgn_mlu_int16", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sgn_mlu_int32", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sgn_mlu_int8", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sgn_mlu_uint8", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sigmoid_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sigmoid_mlu_uint8", # masked_fill doesn't support uint8.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sign_mlu_bfloat16", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sign_mlu_bool", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sign_mlu_int16", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sign_mlu_int32", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sign_mlu_int8", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sign_mlu_uint8", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_signbit_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_signbit_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_signbit_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_signbit_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_signbit_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_signbit_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_signbit_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_signbit_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sin_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sin_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sin_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sin_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sin_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sin_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sin_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sin_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sin_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sin_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sinc_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sinc_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sinc_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sinc_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sinc_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sinc_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sinc_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sinc_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sinc_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sinh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sinh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sinh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sinh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sinh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sinh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sinh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sinh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sinh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sinh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_airy_ai_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_airy_ai_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_airy_ai_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_airy_ai_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_airy_ai_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_airy_ai_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_bessel_j0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_bessel_j0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_bessel_j0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_bessel_j0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_bessel_j0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_bessel_j0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_bessel_j1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_bessel_j1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_bessel_j1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_bessel_j1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_bessel_j1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_bessel_j1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_bessel_y0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_bessel_y0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_bessel_y0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_bessel_y0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_bessel_y0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_bessel_y0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_bessel_y1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_bessel_y1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_bessel_y1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_bessel_y1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_bessel_y1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_bessel_y1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_entr_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_entr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_entr_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_entr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_entr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_entr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_entr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_entr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_erfcx_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_erfcx_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_erfcx_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_erfcx_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_erfcx_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_erfcx_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_i0e_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_i0e_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_i0e_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_i0e_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_i0e_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_i0e_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_i0e_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_i0e_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_i1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_i1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_i1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_i1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_i1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_i1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_i1e_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_i1e_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_i1e_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_i1e_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_i1e_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_i1e_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_log_ndtr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_log_ndtr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_log_ndtr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_log_ndtr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_log_ndtr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_log_ndtr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_modified_bessel_i0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_modified_bessel_i0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_modified_bessel_i0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_modified_bessel_i0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_modified_bessel_i0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_modified_bessel_i0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_modified_bessel_i1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_modified_bessel_i1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_modified_bessel_i1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_modified_bessel_i1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_modified_bessel_i1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_modified_bessel_i1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_modified_bessel_k0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_modified_bessel_k0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_modified_bessel_k0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_modified_bessel_k0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_modified_bessel_k0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_modified_bessel_k0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_modified_bessel_k1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_modified_bessel_k1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_modified_bessel_k1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_modified_bessel_k1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_modified_bessel_k1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_modified_bessel_k1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_ndtr_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_ndtr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_ndtr_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_ndtr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_ndtr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_ndtr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_ndtr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_ndtr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_ndtri_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_ndtri_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_ndtri_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_ndtri_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_ndtri_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_ndtri_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_polygamma_special_polygamma_n_0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_polygamma_special_polygamma_n_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_polygamma_special_polygamma_n_0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_polygamma_special_polygamma_n_0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_polygamma_special_polygamma_n_0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_polygamma_special_polygamma_n_0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_polygamma_special_polygamma_n_0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_scaled_modified_bessel_k0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_scaled_modified_bessel_k0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_scaled_modified_bessel_k0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_scaled_modified_bessel_k0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_scaled_modified_bessel_k0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_scaled_modified_bessel_k0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_scaled_modified_bessel_k1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_scaled_modified_bessel_k1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_scaled_modified_bessel_k1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_scaled_modified_bessel_k1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_scaled_modified_bessel_k1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_scaled_modified_bessel_k1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_spherical_bessel_j0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_spherical_bessel_j0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_spherical_bessel_j0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_spherical_bessel_j0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_spherical_bessel_j0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_special_spherical_bessel_j0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu sqrt not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_sqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_square_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_square_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_square_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_square_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_square_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_square_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_square_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_square_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_square_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_tan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_tan_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_tan_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_tan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_tan_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_tan_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_tan_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_tan_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_tan_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_tan_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_tanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_tanh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_tanh_mlu_uint8", # masked_fill doesn't support uint8.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_trunc_mlu_bfloat16", # TODO(PYTORCH-8724): trunc not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_trunc_mlu_int16", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_trunc_mlu_int32", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_trunc_mlu_int8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_normal_trunc_mlu_uint8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_abs_mlu_bfloat16", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_abs_mlu_complex32", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_abs_mlu_int16", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_abs_mlu_int8", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_abs_mlu_uint8", # TODO(PYTORCH-8789)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_acos_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_acos_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_acos_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_acos_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_acos_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_acos_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_acos_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_acos_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_acos_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_acos_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_acosh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_acosh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_acosh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_acosh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_acosh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_acosh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_acosh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_acosh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_acosh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_acosh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_asin_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_asin_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_asin_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_asin_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_asin_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_asin_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_asin_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_asin_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_asin_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_asin_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_asinh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_asinh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_asinh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_asinh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_asinh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_asinh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_asinh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_asinh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_asinh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_asinh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_atan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_atan_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_atan_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_atan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_atan_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_atan_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_atan_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_atan_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_atan_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_atan_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_atanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_atanh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_atanh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_atanh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_atanh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_atanh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_atanh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_atanh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_atanh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_atanh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_bitwise_not_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_ceil_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_ceil_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_ceil_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_ceil_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_ceil_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_conj_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_conj_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_conj_physical_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_conj_physical_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_cos_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_cos_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_cos_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_cos_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_cos_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_cos_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_cos_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_cos_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_cos_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_cos_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_cosh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_cosh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_cosh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_cosh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_cosh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_cosh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_cosh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_cosh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_cosh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_cosh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_deg2rad_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_deg2rad_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_deg2rad_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_deg2rad_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_deg2rad_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_deg2rad_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_deg2rad_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_deg2rad_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_digamma_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_digamma_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_digamma_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_digamma_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_digamma_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_digamma_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_digamma_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_erf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_erfc_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_erfc_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_erfc_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_erfc_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_erfc_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_erfc_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_erfc_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_erfc_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_erfinv_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_exp2_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_exp2_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_exp2_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_exp2_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_exp2_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_exp2_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_exp2_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_exp2_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_exp_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_exp_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_exp_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_expm1_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_expm1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_fill_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_fill_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_fill_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_floor_mlu_bfloat16", # TODO(PYTORCH-8724): floor not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_floor_mlu_int16", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_floor_mlu_int32", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_floor_mlu_int8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_floor_mlu_uint8", # TODO(PYTORCH-8724): floor not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_frac_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_frexp_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_frexp_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_i0_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_i0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_i0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_i0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_i0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_i0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_i0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_i0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_imag_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_imag_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isfinite_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isinf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isinf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isinf_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isinf_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isinf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isinf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isinf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isinf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isinf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isinf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isnan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isnan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isneginf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isneginf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isneginf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isneginf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isneginf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isneginf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isneginf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isneginf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isposinf_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isposinf_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isposinf_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isposinf_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isposinf_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isposinf_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isposinf_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isposinf_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isreal_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isreal_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isreal_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isreal_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isreal_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isreal_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isreal_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isreal_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isreal_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_isreal_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_jiterator_unary_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_jiterator_unary_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_jiterator_unary_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_jiterator_unary_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_jiterator_unary_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_jiterator_unary_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_jiterator_unary_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_jiterator_unary_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_jiterator_unary_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_lgamma_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_lgamma_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_lgamma_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_lgamma_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_lgamma_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_lgamma_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_lgamma_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_log10_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_log10_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_log10_mlu_uint8", # masked_fill doesn't support uint8.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_log1p_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_log2_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_log2_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_log2_mlu_uint8", # masked_fill doesn't support uint8.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_log_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_log_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_log_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_log_mlu_uint8", # masked_fill doesn't support uint8.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_logical_not_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_logical_not_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_logit_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_logit_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_logit_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_logit_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_logit_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_logit_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_logit_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_logit_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_mvlgamma_mvlgamma_p_1_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_mvlgamma_mvlgamma_p_1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_mvlgamma_mvlgamma_p_1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_mvlgamma_mvlgamma_p_1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_mvlgamma_mvlgamma_p_1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_mvlgamma_mvlgamma_p_1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_mvlgamma_mvlgamma_p_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_mvlgamma_mvlgamma_p_3_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_mvlgamma_mvlgamma_p_3_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_mvlgamma_mvlgamma_p_3_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_mvlgamma_mvlgamma_p_3_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_mvlgamma_mvlgamma_p_3_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_mvlgamma_mvlgamma_p_5_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_mvlgamma_mvlgamma_p_5_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_mvlgamma_mvlgamma_p_5_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_mvlgamma_mvlgamma_p_5_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_mvlgamma_mvlgamma_p_5_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_mvlgamma_mvlgamma_p_5_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nan_to_num_mlu_bfloat16", # TODO(PYTORCH-10157)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_neg_mlu_bfloat16",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_neg_mlu_complex32",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_neg_mlu_complex64",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_neg_mlu_int16",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_neg_mlu_int8",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_neg_mlu_uint8",    #dtype not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_celu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_celu_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_celu_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_elu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_elu_mlu_float16", # accuracy error, absolute difference: 1.9073486328125e-05 at index (32,) (up to 1e-05 allowed)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_hardsigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_logsigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_mish_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_mish_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_mish_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_prelu_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_prelu_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_relu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_selu_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_selu_mlu_float16", # accuracy not pass, absolute difference: 4.100799560546875e-05
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_silu_mlu_bfloat16",    #dtypes not support
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_softplus_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_softplus_mlu_float16", # CNNLCORE-14209
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_softplus_mlu_float32", # CNNLCORE-14209
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_softsign_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_softsign_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_softsign_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_softsign_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_softsign_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_softsign_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_softsign_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_softsign_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_softsign_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_tanhshrink_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_tanhshrink_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_tanhshrink_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_tanhshrink_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_tanhshrink_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_tanhshrink_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_tanhshrink_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_tanhshrink_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_nn_functional_threshold_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_1_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_2_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_2_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_2_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_2_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_2_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_2_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_2_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_3_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_3_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_3_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_3_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_3_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_3_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_4_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_4_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_4_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_4_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_4_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_4_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_polygamma_polygamma_n_4_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_positive_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_positive_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_positive_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_positive_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_positive_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_positive_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_positive_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_positive_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_positive_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_rad2deg_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_rad2deg_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_rad2deg_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_rad2deg_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_rad2deg_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_rad2deg_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_rad2deg_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_rad2deg_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_real_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_real_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_real_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_real_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_real_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_real_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_real_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_real_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_real_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_real_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_reciprocal_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_reciprocal_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_round_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_round_decimals_0_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_round_decimals_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_round_decimals_3_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_round_decimals_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_round_decimals_neg_3_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_round_decimals_neg_3_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_rsqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu sqrt not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_rsqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_rsqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sgn_mlu_bfloat16", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sgn_mlu_complex32", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sgn_mlu_int16", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sgn_mlu_int32", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sgn_mlu_int8", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sgn_mlu_uint8", # TODO(PYTORCH-8948)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sigmoid_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sigmoid_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sigmoid_mlu_uint8", # masked_fill doesn't supp uint8.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sign_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sign_mlu_int16", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sign_mlu_int32", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sign_mlu_int8", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sign_mlu_uint8", # TODO(PYTORCH-8947)
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_signbit_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_signbit_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_signbit_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_signbit_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_signbit_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_signbit_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_signbit_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_signbit_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sin_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sin_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sin_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sin_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sin_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sin_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sin_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sin_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sin_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sin_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sinc_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sinc_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sinc_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sinc_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sinc_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sinc_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sinc_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sinc_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sinc_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sinh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sinh_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sinh_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sinh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sinh_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sinh_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sinh_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sinh_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sinh_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sinh_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_airy_ai_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_airy_ai_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_airy_ai_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_airy_ai_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_airy_ai_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_airy_ai_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_bessel_j0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_bessel_j0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_bessel_j0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_bessel_j0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_bessel_j0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_bessel_j0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_bessel_j1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_bessel_j1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_bessel_j1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_bessel_j1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_bessel_j1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_bessel_j1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_bessel_y0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_bessel_y0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_bessel_y0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_bessel_y0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_bessel_y0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_bessel_y0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_bessel_y1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_bessel_y1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_bessel_y1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_bessel_y1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_bessel_y1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_bessel_y1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_entr_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_entr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_entr_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_entr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_entr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_entr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_entr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_entr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_erfcx_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_erfcx_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_erfcx_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_erfcx_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_erfcx_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_erfcx_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_i0e_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_i0e_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_i0e_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_i0e_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_i0e_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_i0e_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_i0e_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_i0e_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_i1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_i1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_i1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_i1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_i1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_i1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_i1e_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_i1e_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_i1e_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_i1e_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_i1e_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_i1e_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_log_ndtr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_log_ndtr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_log_ndtr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_log_ndtr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_log_ndtr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_log_ndtr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_modified_bessel_i0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_modified_bessel_i0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_modified_bessel_i0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_modified_bessel_i0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_modified_bessel_i0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_modified_bessel_i0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_modified_bessel_i1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_modified_bessel_i1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_modified_bessel_i1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_modified_bessel_i1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_modified_bessel_i1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_modified_bessel_i1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_modified_bessel_k0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_modified_bessel_k0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_modified_bessel_k0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_modified_bessel_k0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_modified_bessel_k0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_modified_bessel_k0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_modified_bessel_k1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_modified_bessel_k1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_modified_bessel_k1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_modified_bessel_k1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_modified_bessel_k1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_modified_bessel_k1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_ndtr_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_ndtr_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_ndtr_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_ndtr_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_ndtr_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_ndtr_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_ndtr_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_ndtr_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_ndtri_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_ndtri_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_ndtri_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_ndtri_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_ndtri_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_ndtri_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_polygamma_special_polygamma_n_0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_polygamma_special_polygamma_n_0_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_polygamma_special_polygamma_n_0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_polygamma_special_polygamma_n_0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_polygamma_special_polygamma_n_0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_polygamma_special_polygamma_n_0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_polygamma_special_polygamma_n_0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_scaled_modified_bessel_k0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_scaled_modified_bessel_k0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_scaled_modified_bessel_k0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_scaled_modified_bessel_k0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_scaled_modified_bessel_k0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_scaled_modified_bessel_k0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_scaled_modified_bessel_k1_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_scaled_modified_bessel_k1_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_scaled_modified_bessel_k1_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_scaled_modified_bessel_k1_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_scaled_modified_bessel_k1_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_scaled_modified_bessel_k1_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_spherical_bessel_j0_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_spherical_bessel_j0_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_spherical_bessel_j0_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_spherical_bessel_j0_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_spherical_bessel_j0_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_special_spherical_bessel_j0_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sqrt_mlu_bfloat16", # TODO(PYTORCH-8966): mlu sqrt not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sqrt_mlu_complex32", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_sqrt_mlu_complex64", # TODO(PYTORCH-8966): mlu sqrt not support complex dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_square_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_square_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_square_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_square_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_square_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_square_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_square_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_square_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_square_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_tan_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_tan_mlu_bool",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_tan_mlu_complex32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_tan_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_tan_mlu_float16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_tan_mlu_float32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_tan_mlu_int16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_tan_mlu_int32",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_tan_mlu_int8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_tan_mlu_uint8",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_tanh_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_tanh_mlu_complex64",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_tanh_mlu_uint8", # masked_fill doesn't support uint8.
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_trunc_mlu_bfloat16", # TODO(PYTORCH-8724): trunc not support bf16
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_trunc_mlu_int16", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_trunc_mlu_int32", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_trunc_mlu_int8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_reference_numerics_small_trunc_mlu_uint8", # TODO(PYTORCH-8724): trunc not support integral dtypes
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_special_i0_i1_vs_scipy_mlu_bfloat16",
"test_unary_ufuncs_py_TestUnaryUfuncsMLU_test_special_i0_i1_vs_scipy_mlu_float16",
"test_utils_py_TestCheckpoint_test_checkpoint",
"test_utils_py_TestCheckpoint_test_checkpoint_module_list",
"test_utils_py_TestCheckpoint_test_checkpoint_no_tensors",
"test_utils_py_TestCheckpoint_test_checkpoint_non_tensor",
"test_utils_py_TestCheckpoint_test_checkpoint_non_tensor_inputs_outputs",
"test_utils_py_TestCheckpoint_test_checkpoint_not_preserve_rng_state_and_without_reentrant",
"test_utils_py_TestCheckpoint_test_checkpoint_partial_grad",
"test_utils_py_TestCheckpoint_test_checkpoint_rng_cpu",
"test_utils_py_TestCheckpoint_test_checkpoint_rng_mlu",
"test_utils_py_TestCheckpoint_test_checkpoint_sequential_deprecated_multiple_args",
"test_utils_py_TestCheckpoint_test_checkpoint_sequential_deprecated_no_args",
"test_utils_py_TestCheckpoint_test_checkpoint_trigger",
"test_utils_py_TestCheckpoint_test_checkpoint_valid",
"test_utils_py_TestCheckpoint_test_checkpointing_without_reentrant_early_free",
"test_utils_py_TestDataLoaderUtils_test_multi_drop",
"test_utils_py_TestDataLoaderUtils_test_multi_keep",
"test_utils_py_TestDataLoaderUtils_test_random_seed",
"test_utils_py_TestDataLoaderUtils_test_single_drop",
"test_utils_py_TestDataLoaderUtils_test_single_keep",
"test_utils_py_TestBottleneck_test_bottleneck_cpu_only",
"test_utils_py_TestBottleneck_test_bottleneck_mlu",
"test_utils_py_TestCollectEnv_test_smoke",
"test_utils_py_TestONNXUtils_test_check_onnx_broadcast",
"test_utils_py_TestONNXUtils_test_prepare_onnx_paddings",
"test_utils_py_TestHipify_test_import_hipify",
"test_utils_py_TestAssert_test_assert_scriptable",
"test_utils_py_TestAssert_test_assert_true",
"test_utils_py_TestStandaloneCPPJIT_test_load_standalone",
"test_utils_py_TestExtensionUtils_test_external_module_register",
"test_utils_py_TestCppExtensionUtils_test_cc_compiler_is_ok",
"test_utils_py_TestCppExtensionUtils_test_cpp_compiler_is_ok",
"test_view_ops_py_TestViewOpsMLU_test_as_strided_gradients_mlu",
"test_view_ops_py_TestViewOpsMLU_test_imag_noncomplex_mlu_bfloat16",
"test_view_ops_py_TestViewOpsMLU_test_imag_noncomplex_mlu_float16",
"test_view_ops_py_TestViewOpsMLU_test_imag_noncomplex_mlu_float32",
"test_view_ops_py_TestViewOpsMLU_test_imag_noncomplex_mlu_int16",
"test_view_ops_py_TestViewOpsMLU_test_imag_noncomplex_mlu_int32",
"test_view_ops_py_TestViewOpsMLU_test_imag_noncomplex_mlu_int8",
"test_view_ops_py_TestViewOpsMLU_test_imag_noncomplex_mlu_uint8",
"test_view_ops_py_TestViewOpsMLU_test_set_real_imag_mlu_complex64_bfloat16",
"test_view_ops_py_TestViewOpsMLU_test_set_real_imag_mlu_complex64_bool",
"test_view_ops_py_TestViewOpsMLU_test_set_real_imag_mlu_complex64_complex64",
"test_view_ops_py_TestViewOpsMLU_test_set_real_imag_mlu_complex64_float16",
"test_view_ops_py_TestViewOpsMLU_test_set_real_imag_mlu_complex64_float32",
"test_view_ops_py_TestViewOpsMLU_test_set_real_imag_mlu_complex64_int16",
"test_view_ops_py_TestViewOpsMLU_test_set_real_imag_mlu_complex64_int32",
"test_view_ops_py_TestViewOpsMLU_test_set_real_imag_mlu_complex64_int8",
"test_view_ops_py_TestViewOpsMLU_test_set_real_imag_mlu_complex64_uint8",
"test_view_ops_py_TestViewOpsMLU_test_transpose_invalid_mlu_float32", # PYTORCH-10061
"test_view_ops_py_TestViewOpsMLU_test_transpose_vs_numpy_mlu_float32", # PYTORCH-10061
# TODO(PYTORCH-9105): using mul in view_as_complex test, and mul op is not support complex
"test_view_ops_py_TestViewOpsMLU_test_view_as_complex_mlu",
# TODO(PYTORCH-9105): using add in test_conj_view_with_shared_memory test, and add op is not support complex
"test_view_ops_py_TestViewOpsMLU_test_conj_view_with_shared_memory_mlu",
"test_view_ops_py_TestViewOpsMLU_test_view_dtype_upsize_errors_mlu_bfloat16", # view_as_dtype op does not support bfloat16
"test_view_ops_py_TestViewOpsMLU_test_view_tensor_dsplit_mlu_bfloat16",
"test_view_ops_py_TestViewOpsMLU_test_view_tensor_dsplit_mlu_complex64", # (TODO)[PYTORCH-9217] fill op does not support complex.
"test_view_ops_py_TestViewOpsMLU_test_view_tensor_hsplit_mlu_bfloat16",
"test_view_ops_py_TestViewOpsMLU_test_view_tensor_hsplit_mlu_complex64", # (TODO)[PYTORCH-9217] fill op does not support complex.
"test_view_ops_py_TestViewOpsMLU_test_view_tensor_split_mlu_bfloat16",
"test_view_ops_py_TestViewOpsMLU_test_view_tensor_vsplit_mlu_bfloat16",
"test_view_ops_py_TestViewOpsMLU_test_view_tensor_vsplit_mlu_complex64", # (TODO)[PYTORCH-921# (TODO)[PYTORCH-9217] fill op does not support complex..
"test_view_ops_py_TestOldViewOpsMLU_test_T_mlu",
"test_view_ops_py_TestOldViewOpsMLU_test_atleast_mlu_complex64",
"test_view_ops_py_TestOldViewOpsMLU_test_atleast_mlu_float16",
"test_view_ops_py_TestOldViewOpsMLU_test_atleast_mlu_float32",
"test_view_ops_py_TestOldViewOpsMLU_test_atleast_mlu_int16",
"test_view_ops_py_TestOldViewOpsMLU_test_atleast_mlu_int32",
"test_view_ops_py_TestOldViewOpsMLU_test_atleast_mlu_int8",
"test_view_ops_py_TestOldViewOpsMLU_test_atleast_mlu_uint8",
"test_view_ops_py_TestOldViewOpsMLU_test_atleast_gradient_mlu",
"test_view_ops_py_TestOldViewOpsMLU_test_broadcast_shapes_mlu",
"test_view_ops_py_TestOldViewOpsMLU_test_broadcast_tensors_mlu_float32",
"test_view_ops_py_TestOldViewOpsMLU_test_broadcast_to_mlu_bool",
"test_view_ops_py_TestOldViewOpsMLU_test_broadcast_to_mlu_complex64",
"test_view_ops_py_TestOldViewOpsMLU_test_broadcast_to_mlu_float16",
"test_view_ops_py_TestOldViewOpsMLU_test_broadcast_to_mlu_float32",
"test_view_ops_py_TestOldViewOpsMLU_test_broadcast_to_mlu_int16",
"test_view_ops_py_TestOldViewOpsMLU_test_broadcast_to_mlu_int32",
"test_view_ops_py_TestOldViewOpsMLU_test_broadcast_to_mlu_int8",
"test_view_ops_py_TestOldViewOpsMLU_test_broadcast_to_mlu_uint8",
"test_view_ops_py_TestOldViewOpsMLU_test_conj_neg_view_numpy_error_mlu",
"test_view_ops_py_TestOldViewOpsMLU_test_crow_col_indices_mlu",
# TODO(PYTORCH-9187): alias_with_sizes_and_strides function is not support
# now.
"test_view_ops_py_TestOldViewOpsMLU_test_flatten_mlu",
"test_view_ops_py_TestOldViewOpsMLU_test_memory_format_resize__mlu",
"test_view_ops_py_TestOldViewOpsMLU_test_memory_format_resize_as_mlu",
"test_view_ops_py_TestOldViewOpsMLU_test_narrow_mlu",
"test_view_ops_py_TestOldViewOpsMLU_test_narrow_tensor_mlu",
"test_view_ops_py_TestOldViewOpsMLU_test_python_types_mlu",
"test_view_ops_py_TestOldViewOpsMLU_test_ravel_mlu",
"test_view_ops_py_TestOldViewOpsMLU_test_reshape_view_semantics_mlu_bfloat16", # bfloat16 is not supported yet
"test_view_ops_py_TestOldViewOpsMLU_test_resize_all_dtypes_and_devices_mlu",
"test_view_ops_py_TestOldViewOpsMLU_test_resize_as_all_dtypes_and_devices_mlu",
"test_view_ops_py_TestOldViewOpsMLU_test_resize_as_preserves_strides_mlu",
"test_view_ops_py_TestOldViewOpsMLU_test_resize_overflow_mlu",
"test_view_ops_py_TestOldViewOpsMLU_test_t_mlu",
"test_view_ops_py_TestOldViewOpsMLU_test_transpose_invalid_mlu_float32", # PYTORCH-10061
"test_view_ops_py_TestOldViewOpsMLU_test_transpose_vs_numpy_mlu_float32", # PYTORCH-10061
"test_view_ops_py_TestOldViewOpsMLU_test_view_mlu", # Test dim is too large (input_desc->dim > CNNL_DIM_MAX)
"test_vmap_py_TestVmapAPI_test_accepts_nested_inputs",
"test_vmap_py_TestVmapAPI_test_backward_unsupported_interaction",
"test_vmap_py_TestVmapAPI_test_batched_gradient_basic",
"test_vmap_py_TestVmapAPI_test_constant_function",
"test_vmap_py_TestVmapAPI_test_different_map_dim_size_raises",
"test_vmap_py_TestVmapAPI_test_fallback_atan2",
"test_vmap_py_TestVmapAPI_test_fallback_does_not_warn_by_default",
"test_vmap_py_TestVmapAPI_test_fallback_masked_fill",
"test_vmap_py_TestVmapAPI_test_fallback_multiple_returns",
"test_vmap_py_TestVmapAPI_test_fallback_warns_when_warnings_are_enabled",
"test_vmap_py_TestVmapAPI_test_fallback_with_undefined_grad",
"test_vmap_py_TestVmapAPI_test_fallback_zero_dim",
"test_vmap_py_TestVmapAPI_test_func_with_no_inputs",
"test_vmap_py_TestVmapAPI_test_functools_partial",
"test_vmap_py_TestVmapAPI_test_grad_unsupported_interaction",
"test_vmap_py_TestVmapAPI_test_in_dim_not_in_tensor_err_msg",
"test_vmap_py_TestVmapAPI_test_in_dims_wrong_type_err_msg",
"test_vmap_py_TestVmapAPI_test_inplace_fallback_nary_different_levels",
"test_vmap_py_TestVmapAPI_test_inplace_fallback_nary_same_levels",
"test_vmap_py_TestVmapAPI_test_inplace_fallback_unary",
"test_vmap_py_TestVmapAPI_test_integer_in_dim_but_not_tensor_input_err_msg",
"test_vmap_py_TestVmapAPI_test_multiple_inputs",
"test_vmap_py_TestVmapAPI_test_multiple_out_dims",
"test_vmap_py_TestVmapAPI_test_multiple_outputs",
"test_vmap_py_TestVmapAPI_test_multiple_outputs_error_cases",
"test_vmap_py_TestVmapAPI_test_nested_non_default_in_dims",
"test_vmap_py_TestVmapAPI_test_nested_out_dims",
"test_vmap_py_TestVmapAPI_test_nested_with_different_map_dim",
"test_vmap_py_TestVmapAPI_test_nested_with_same_map_dim",
"test_vmap_py_TestVmapAPI_test_nn_module",
"test_vmap_py_TestVmapAPI_test_non_default_in_dims_out_dims",
"test_vmap_py_TestVmapAPI_test_non_tensor_output_raises",
"test_vmap_py_TestVmapAPI_test_non_zero_in_dims",
"test_vmap_py_TestVmapAPI_test_none_in_dims",
"test_vmap_py_TestVmapAPI_test_nonzero_out_dims",
"test_vmap_py_TestVmapAPI_test_noop_in_inner_vmap",
"test_vmap_py_TestVmapAPI_test_not_enough_in_dims_err_msg",
"test_vmap_py_TestVmapAPI_test_out_dim_out_of_bounds_err_msg",
"test_vmap_py_TestVmapAPI_test_out_dims_and_num_outputs_mismatch_err_msg",
"test_vmap_py_TestVmapAPI_test_out_dims_edge_case",
"test_vmap_py_TestVmapAPI_test_out_dims_must_be_int_or_tuple_of_int_err_msg",
"test_vmap_py_TestVmapAPI_test_single_input",
"test_vmap_py_TestVmapAPI_test_unsupported_op_err_msg",
"test_vmap_py_TestVmapOperators_test_as_strided",
"test_vmap_py_TestVmapOperators_test_binary_pointwise_ops",
"test_vmap_py_TestVmapOperators_test_bmm",
"test_vmap_py_TestVmapOperators_test_cat",
"test_vmap_py_TestVmapOperators_test_chunk",
"test_vmap_py_TestVmapOperators_test_clamp",
"test_vmap_py_TestVmapOperators_test_clone",
"test_vmap_py_TestVmapOperators_test_comparison_ops",
"test_vmap_py_TestVmapOperators_test_conj",
"test_vmap_py_TestVmapOperators_test_contiguous",
"test_vmap_py_TestVmapOperators_test_diagonal",
"test_vmap_py_TestVmapOperators_test_fill_and_zero_inplace",
"test_vmap_py_TestVmapOperators_test_imag",
"test_vmap_py_TestVmapOperators_test_is_complex",
"test_vmap_py_TestVmapOperators_test_is_contiguous",
"test_vmap_py_TestVmapOperators_test_is_floating_point",
"test_vmap_py_TestVmapOperators_test_mm",
"test_vmap_py_TestVmapOperators_test_movedim",
"test_vmap_py_TestVmapOperators_test_mv",
"test_vmap_py_TestVmapOperators_test_narrow",
"test_vmap_py_TestVmapOperators_test_new_empty",
"test_vmap_py_TestVmapOperators_test_new_empty_strided",
"test_vmap_py_TestVmapOperators_test_new_zeros",
"test_vmap_py_TestVmapOperators_test_no_random_op_support",
"test_vmap_py_TestVmapOperators_test_real",
"test_vmap_py_TestVmapOperators_test_reshape",
"test_vmap_py_TestVmapOperators_test_reshape_as",
"test_vmap_py_TestVmapOperators_test_result_type",
"test_vmap_py_TestVmapOperators_test_select",
"test_vmap_py_TestVmapOperators_test_slice",
"test_vmap_py_TestVmapOperators_test_split",
"test_vmap_py_TestVmapOperators_test_squeeze",
"test_vmap_py_TestVmapOperators_test_stack",
"test_vmap_py_TestVmapOperators_test_stride",
"test_vmap_py_TestVmapOperators_test_sum_dim",
"test_vmap_py_TestVmapOperators_test_t",
"test_vmap_py_TestVmapOperators_test_tensor_split",
"test_vmap_py_TestVmapOperators_test_to",
"test_vmap_py_TestVmapOperators_test_trace",
"test_vmap_py_TestVmapOperators_test_transpose",
"test_vmap_py_TestVmapOperators_test_unary_pointwise_ops",
"test_vmap_py_TestVmapOperators_test_unbind",
"test_vmap_py_TestVmapOperators_test_view",
"test_vmap_py_TestVmapOperators_test_view_as",
"test_vmap_py_TestVmapOperators_test_view_as_complex",
"test_vmap_py_TestVmapOperators_test_view_as_real",
"test_vmap_py_TestVmapOperators_test_vmap_fallback_check",
"test_vmap_py_TestVmapOperators_test_vmap_fallback_check_ok",
"test_vmap_py_TestVmapBatchedGradientMLU_test_add_mlu",
"test_vmap_py_TestVmapBatchedGradientMLU_test_binary_cross_entropy_mlu",
"test_vmap_py_TestVmapBatchedGradientMLU_test_diagonal_mlu",
"test_vmap_py_TestVmapBatchedGradientMLU_test_expand_mlu",
"test_vmap_py_TestVmapBatchedGradientMLU_test_index_mlu",
"test_vmap_py_TestVmapBatchedGradientMLU_test_inplace_manyview_mlu",
"test_vmap_py_TestVmapBatchedGradientMLU_test_inplace_on_view_mlu",
"test_vmap_py_TestVmapBatchedGradientMLU_test_lgamma_mlu",
"test_vmap_py_TestVmapBatchedGradientMLU_test_log1p_mlu",
"test_vmap_py_TestVmapBatchedGradientMLU_test_log_mlu",
"test_vmap_py_TestVmapBatchedGradientMLU_test_logsumexp_mlu",
"test_vmap_py_TestVmapBatchedGradientMLU_test_max_mlu",
"test_vmap_py_TestVmapBatchedGradientMLU_test_median_mlu",
"test_vmap_py_TestVmapBatchedGradientMLU_test_min_mlu",
"test_vmap_py_TestVmapBatchedGradientMLU_test_mul_mlu",
"test_vmap_py_TestVmapBatchedGradientMLU_test_permute_mlu",
"test_vmap_py_TestVmapBatchedGradientMLU_test_reshape_mlu",
"test_vmap_py_TestVmapBatchedGradientMLU_test_select_mlu",
"test_vmap_py_TestVmapBatchedGradientMLU_test_sigmoid_mlu",
"test_vmap_py_TestVmapBatchedGradientMLU_test_slice_mlu",
"test_vmap_py_TestVmapBatchedGradientMLU_test_stack_mlu",
"test_vmap_py_TestVmapBatchedGradientMLU_test_sub_mlu",
"test_vmap_py_TestVmapBatchedGradientMLU_test_symeig_mlu",
"test_vmap_py_TestVmapBatchedGradientMLU_test_threshold_mlu",
"test_vmap_py_TestVmapBatchedGradientMLU_test_trace_mlu",
"test_vmap_py_TestVmapBatchedGradientMLU_test_unrelated_output_mlu",
"test_vmap_py_TestVmapBatchedGradientMLU_test_unrelated_output_multiple_grad_mlu",
"test_vmap_py_TestVmapBatchedGradientMLU_test_vmap_fallback_check",
"test_vmap_py_TestVmapBatchedGradientMLU_test_vmap_fallback_check_ok",
"test_dropout_py_TestDropoutNNDeviceTypeMLU_test_Dropout1d_mlu", # TODO(PYTORCH-10407): 'aten::count_nonzero.dim_IntList' is not currently implemented for the MLU device.
"test_dropout_py_TestDropoutNNDeviceTypeMLU_test_Dropout2d_mlu", # TODO(cnnl_strides): cnnl now not support strides.
"test_dropout_py_TestDropoutNNDeviceTypeMLU_test_Dropout3d_mlu", # TODO(cnnl_strides): cnnl now not support strides.
"test_dropout_py_TestDropoutNNDeviceTypeMLU_test_Dropout_mlu",  # TODO(cnnl_strides): cnnl now not support strides.
"test_embedding_py_TestEmbeddingNNDeviceTypeMLU_test_embedding_dense_grad_mlu", # PYTORCH-10155
"test_pooling_py_TestAvgPool_test_avg_pool1d_ceil_mode",
"test_pooling_py_TestAvgPool_test_avg_pool2d_ceil_mode",
"test_pooling_py_TestAvgPool_test_avg_pool3d_ceil_mode",
"test_pooling_py_TestAvgPool_test_doubletensor_avg_pool2d",
"test_pooling_py_TestAvgPool_test_doubletensor_avg_pool2d_with_divisor",
"test_pooling_py_TestAvgPool_test_doubletensor_avg_pool3d",
"test_pooling_py_TestAvgPool_test_doubletensor_avg_pool3d_with_divisor",
"test_pooling_py_TestPoolingNN_test_MaxUnpool2d_output_size",
"test_pooling_py_TestPoolingNN_test_adaptive_pooling_avg_nhwc",
"test_pooling_py_TestPoolingNN_test_adaptive_pooling_avg_nhwc_launch_config_backward",
"test_pooling_py_TestPoolingNN_test_adaptive_pooling_avg_nhwc_launch_config_forward",
"test_pooling_py_TestPoolingNN_test_adaptive_pooling_avg_nhwc_non_contiguous",
"test_pooling_py_TestPoolingNN_test_adaptive_pooling_bfloat16",
"test_pooling_py_TestPoolingNN_test_adaptive_pooling_input_size",
"test_pooling_py_TestPoolingNN_test_adaptive_pooling_size_none",
"test_pooling_py_TestPoolingNN_test_adaptive_pooling_size_overflow",
"test_pooling_py_TestPoolingNN_test_max_unpool",
"test_pooling_py_TestPoolingNN_test_max_unpool2d_nhwc_cpu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_AdaptiveMaxPool1d_indices_mlu_bfloat16",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_AdaptiveMaxPool1d_indices_mlu_float16",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_AdaptiveMaxPool1d_indices_mlu_float32",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_AdaptiveMaxPool2d_indices_mlu_bfloat16",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_AdaptiveMaxPool2d_indices_mlu_float16",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_AdaptiveMaxPool2d_indices_mlu_float32",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_AdaptiveMaxPool3d_indices_mlu_bfloat16",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_AdaptiveMaxPool3d_indices_mlu_float16",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_AdaptiveMaxPool3d_indices_mlu_float32",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_AdaptiveMaxPool_zero_batch_dim_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_AvgPool2d_empty_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_AvgPool3d_backward_after_cat_dim1_device_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_FractionalMaxPool2d_zero_batch_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_FractionalMaxPool2d_zero_out_size_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_FractionalMaxPool3d_zero_batch_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_FractionalMaxPool3d_zero_out_size_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_MaxPool1d_indices_mlu_bfloat16",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_MaxPool1d_indices_mlu_float16",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_MaxPool1d_indices_mlu_float32",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_MaxPool2d_indices_mlu_bfloat16",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_MaxPool2d_indices_mlu_float16",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_MaxPool2d_indices_mlu_float32",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_MaxPool3d_indices_mlu_bfloat16",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_MaxPool3d_indices_mlu_float16",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_MaxPool3d_indices_mlu_float32",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_MaxPool_zero_batch_dim_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_MaxUnpool_index_errors_case10_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_MaxUnpool_index_errors_case1_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_MaxUnpool_index_errors_case2_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_MaxUnpool_index_errors_case3_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_MaxUnpool_index_errors_case4_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_MaxUnpool_index_errors_case5_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_MaxUnpool_index_errors_case6_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_MaxUnpool_index_errors_case7_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_MaxUnpool_index_errors_case8_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_MaxUnpool_index_errors_case9_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_MaxUnpool_zero_batch_dim_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_adaptive_avg_pool2d_output_size_one_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_adaptive_avg_pool3d_output_size_one_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_adaptive_pool_invalid_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_adaptive_pool_odd_size_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_adaptive_pooling_max_nhwc_mlu_float32",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_adaptive_pooling_no_suppot_input_mlu_int16",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_adaptive_pooling_no_suppot_input_mlu_int32",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_adaptive_pooling_no_suppot_input_mlu_int8",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_adaptive_pooling_no_suppot_input_mlu_uint8",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_adaptive_pooling_zero_batch_mlu_float32",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_avg_pool2d_bfloat16_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_avg_pool2d_nhwc_mlu_float16",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_avg_pool2d_nhwc_mlu_float32",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_fractional_max_pool2d_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_fractional_max_pool3d_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_fractional_max_pool_nan_inf_mlu_float16",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_fractional_max_pool_nan_inf_mlu_float32",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_max_pool1d_corner_cases_mlu_float32",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_max_pool1d_mlu_float32",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_max_pool2d_bfloat16_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_max_pool2d_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_max_pool2d_indices_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_max_pool2d_nhwc_mlu_float16",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_max_pool2d_nhwc_mlu_float32",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_max_pool3d_ndhwc_mlu_float16",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_max_pool3d_ndhwc_mlu_float32",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_max_pool_nan_inf_mlu_float16",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_max_pool_nan_inf_mlu_float32",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_maxpool3d_non_square_backward_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_maxpool_indices_no_batch_dim_mlu_bfloat16",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_maxpool_indices_no_batch_dim_mlu_float16",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_maxpool_indices_no_batch_dim_mlu_float32",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_pool3d_size_one_feature_dim_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_pool_invalid_size_mlu_bfloat16",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_pool_invalid_size_mlu_float16",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_pool_invalid_size_mlu_float32",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_pool_large_size_mlu_bfloat16",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_pool_large_size_mlu_float16",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_pool_large_size_mlu_float32",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_pooling_bfloat16_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_pooling_large_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_pooling_max_nhwc_mlu_float32",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_pooling_shape_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_pooling_size_empty_mlu",
"test_pooling_py_TestPoolingNNDeviceTypeMLU_test_pooling_zero_stride_mlu",
"test_constraints_py_test_constraint[False-constraint_fn0-False-value0]",
"test_constraints_py_test_constraint[False-constraint_fn1-False-value1]",
"test_constraints_py_test_constraint[False-constraint_fn2-False-value2]",
"test_constraints_py_test_constraint[False-constraint_fn3-True-value3]",
"test_constraints_py_test_constraint[False-constraint_fn4-False-value4]",
"test_constraints_py_test_constraint[False-constraint_fn5-False-value5]",
"test_constraints_py_test_constraint[False-constraint_fn6-True-value6]",
"test_constraints_py_test_constraint[False-constraint_fn7-True-value7]",
"test_constraints_py_test_constraint[False-constraint_fn8-False-value8]",
"test_constraints_py_test_constraint[False-constraint_fn9-True-value9]",
"test_constraints_py_test_constraint[False-constraint_fn10-False-value10]",
"test_constraints_py_test_constraint[False-constraint_fn11-False-value11]",
"test_constraints_py_test_constraint[False-constraint_fn12-True-value12]",
"test_constraints_py_test_constraint[False-constraint_fn13-True-value13]",
"test_constraints_py_test_constraint[False-constraint_fn14-False-value14]",
"test_constraints_py_test_constraint[False-constraint_fn15-True-value15]",
"test_constraints_py_test_constraint[False-constraint_fn16-True-value16]",
"test_constraints_py_test_constraint[False-constraint_fn17-True-value17]",
"test_constraints_py_test_constraint[True-constraint_fn0-False-value0]",
"test_constraints_py_test_constraint[True-constraint_fn1-False-value1]",
"test_constraints_py_test_constraint[True-constraint_fn2-False-value2]",
"test_constraints_py_test_constraint[True-constraint_fn3-True-value3]",
"test_constraints_py_test_constraint[True-constraint_fn4-False-value4]",
"test_constraints_py_test_constraint[True-constraint_fn5-False-value5]",
"test_constraints_py_test_constraint[True-constraint_fn6-True-value6]",
"test_constraints_py_test_constraint[True-constraint_fn7-True-value7]",
"test_constraints_py_test_constraint[True-constraint_fn8-False-value8]",
"test_constraints_py_test_constraint[True-constraint_fn9-True-value9]",
"test_constraints_py_test_constraint[True-constraint_fn10-False-value10]",
"test_constraints_py_test_constraint[True-constraint_fn11-False-value11]",
"test_constraints_py_test_constraint[True-constraint_fn12-True-value12]",
"test_constraints_py_test_constraint[True-constraint_fn13-True-value13]",
"test_constraints_py_test_constraint[True-constraint_fn14-False-value14]",
"test_constraints_py_test_constraint[True-constraint_fn15-True-value15]",
"test_constraints_py_test_constraint[True-constraint_fn16-True-value16]",
"test_constraints_py_test_constraint[True-constraint_fn17-True-value17]",
"test_constraints_py_test_biject_to[False-constraint_fn0-args0]",
"test_constraints_py_test_biject_to[False-constraint_fn1-args1]",
"test_constraints_py_test_biject_to[False-constraint_fn2-args2]",
"test_constraints_py_test_biject_to[False-_GreaterThan-args3]",
"test_constraints_py_test_biject_to[False-_GreaterThan-args4]",
"test_constraints_py_test_biject_to[False-_GreaterThan-args5]",
"test_constraints_py_test_biject_to[False-_GreaterThan-args6]",
"test_constraints_py_test_biject_to[False-_GreaterThanEq-args7]",
"test_constraints_py_test_biject_to[False-_GreaterThanEq-args8]",
"test_constraints_py_test_biject_to[False-_GreaterThanEq-args9]",
"test_constraints_py_test_biject_to[False-_LessThan-args10]",
"test_constraints_py_test_biject_to[False-_LessThan-args11]",
"test_constraints_py_test_biject_to[False-_LessThan-args12]",
"test_constraints_py_test_biject_to[False-_LessThan-args13]",
"test_constraints_py_test_biject_to[False-constraint_fn14-args14]",
"test_constraints_py_test_biject_to[False-_Interval-args15]",
"test_constraints_py_test_biject_to[False-_Interval-args16]",
"test_constraints_py_test_biject_to[False-_Interval-args17]",
"test_constraints_py_test_biject_to[False-_HalfOpenInterval-args18]",
"test_constraints_py_test_biject_to[False-_HalfOpenInterval-args19]",
"test_constraints_py_test_biject_to[False-_HalfOpenInterval-args20]",
"test_constraints_py_test_biject_to[False-constraint_fn21-args21]",
"test_constraints_py_test_biject_to[False-constraint_fn22-args22]",
"test_constraints_py_test_biject_to[False-constraint_fn23-args23]",
"test_constraints_py_test_biject_to[True-constraint_fn0-args0]",
"test_constraints_py_test_biject_to[True-constraint_fn1-args1]",
"test_constraints_py_test_biject_to[True-constraint_fn2-args2]",
"test_constraints_py_test_biject_to[True-_GreaterThan-args3]",
"test_constraints_py_test_biject_to[True-_GreaterThan-args4]",
"test_constraints_py_test_biject_to[True-_GreaterThan-args5]",
"test_constraints_py_test_biject_to[True-_GreaterThan-args6]",
"test_constraints_py_test_biject_to[True-_GreaterThanEq-args7]",
"test_constraints_py_test_biject_to[True-_GreaterThanEq-args8]",
"test_constraints_py_test_biject_to[True-_GreaterThanEq-args9]",
"test_constraints_py_test_biject_to[True-_LessThan-args10]",
"test_constraints_py_test_biject_to[True-_LessThan-args11]",
"test_constraints_py_test_biject_to[True-_LessThan-args12]",
"test_constraints_py_test_biject_to[True-_LessThan-args13]",
"test_constraints_py_test_biject_to[True-constraint_fn14-args14]",
"test_constraints_py_test_biject_to[True-_Interval-args15]",
"test_constraints_py_test_biject_to[True-_Interval-args16]",
"test_constraints_py_test_biject_to[True-_Interval-args17]",
"test_constraints_py_test_biject_to[True-_HalfOpenInterval-args18]",
"test_constraints_py_test_biject_to[True-_HalfOpenInterval-args19]",
"test_constraints_py_test_biject_to[True-_HalfOpenInterval-args20]",
"test_constraints_py_test_biject_to[True-constraint_fn21-args21]",
"test_constraints_py_test_biject_to[True-constraint_fn22-args22]",
"test_constraints_py_test_biject_to[True-constraint_fn23-args23]",
"test_constraints_py_test_transform_to[False-constraint_fn0-args0]",
"test_constraints_py_test_transform_to[False-constraint_fn1-args1]",
"test_constraints_py_test_transform_to[False-constraint_fn2-args2]",
"test_constraints_py_test_transform_to[False-_GreaterThan-args3]",
"test_constraints_py_test_transform_to[False-_GreaterThan-args4]",
"test_constraints_py_test_transform_to[False-_GreaterThan-args5]",
"test_constraints_py_test_transform_to[False-_GreaterThan-args6]",
"test_constraints_py_test_transform_to[False-_GreaterThanEq-args7]",
"test_constraints_py_test_transform_to[False-_GreaterThanEq-args8]",
"test_constraints_py_test_transform_to[False-_GreaterThanEq-args9]",
"test_constraints_py_test_transform_to[False-_LessThan-args10]",
"test_constraints_py_test_transform_to[False-_LessThan-args11]",
"test_constraints_py_test_transform_to[False-_LessThan-args12]",
"test_constraints_py_test_transform_to[False-_LessThan-args13]",
"test_constraints_py_test_transform_to[False-constraint_fn14-args14]",
"test_constraints_py_test_transform_to[False-_Interval-args15]",
"test_constraints_py_test_transform_to[False-_Interval-args16]",
"test_constraints_py_test_transform_to[False-_Interval-args17]",
"test_constraints_py_test_transform_to[False-_HalfOpenInterval-args18]",
"test_constraints_py_test_transform_to[False-_HalfOpenInterval-args19]",
"test_constraints_py_test_transform_to[False-_HalfOpenInterval-args20]",
"test_constraints_py_test_transform_to[False-constraint_fn21-args21]",
"test_constraints_py_test_transform_to[False-constraint_fn22-args22]",
"test_constraints_py_test_transform_to[False-constraint_fn23-args23]",
"test_constraints_py_test_transform_to[True-constraint_fn0-args0]",
"test_constraints_py_test_transform_to[True-constraint_fn1-args1]",
"test_constraints_py_test_transform_to[True-constraint_fn2-args2]",
"test_constraints_py_test_transform_to[True-_GreaterThan-args3]",
"test_constraints_py_test_transform_to[True-_GreaterThan-args4]",
"test_constraints_py_test_transform_to[True-_GreaterThan-args5]",
"test_constraints_py_test_transform_to[True-_GreaterThan-args6]",
"test_constraints_py_test_transform_to[True-_GreaterThanEq-args7]",
"test_constraints_py_test_transform_to[True-_GreaterThanEq-args8]",
"test_constraints_py_test_transform_to[True-_GreaterThanEq-args9]",
"test_constraints_py_test_transform_to[True-_LessThan-args10]",
"test_constraints_py_test_transform_to[True-_LessThan-args11]",
"test_constraints_py_test_transform_to[True-_LessThan-args12]",
"test_constraints_py_test_transform_to[True-_LessThan-args13]",
"test_constraints_py_test_transform_to[True-constraint_fn14-args14]",
"test_constraints_py_test_transform_to[True-_Interval-args15]",
"test_constraints_py_test_transform_to[True-_Interval-args16]",
"test_constraints_py_test_transform_to[True-_Interval-args17]",
"test_constraints_py_test_transform_to[True-_HalfOpenInterval-args18]",
"test_constraints_py_test_transform_to[True-_HalfOpenInterval-args19]",
"test_constraints_py_test_transform_to[True-_HalfOpenInterval-args20]",
"test_constraints_py_test_transform_to[True-constraint_fn21-args21]",
"test_constraints_py_test_transform_to[True-constraint_fn22-args22]",
"test_constraints_py_test_transform_to[True-constraint_fn23-args23]",
"test_distributions_py_TestDistributions_test_argmax_relaxed_categorical",
"test_distributions_py_TestDistributions_test_bernoulli",
"test_distributions_py_TestDistributions_test_bernoulli_3d",
"test_distributions_py_TestDistributions_test_bernoulli_enumerate_support",
"test_distributions_py_TestDistributions_test_beta_log_prob",
"test_distributions_py_TestDistributions_test_beta_sample",
"test_distributions_py_TestDistributions_test_beta_shape",
"test_distributions_py_TestDistributions_test_beta_underflow",
"test_distributions_py_TestDistributions_test_beta_underflow_mlu",
"test_distributions_py_TestDistributions_test_binomial",
"test_distributions_py_TestDistributions_test_binomial_enumerate_support",
"test_distributions_py_TestDistributions_test_binomial_extreme_vals",
"test_distributions_py_TestDistributions_test_binomial_log_prob_and_entropy",
"test_distributions_py_TestDistributions_test_binomial_log_prob_vectorized_count",
"test_distributions_py_TestDistributions_test_binomial_sample",
"test_distributions_py_TestDistributions_test_binomial_stable",
"test_distributions_py_TestDistributions_test_binomial_vectorized_count",
"test_distributions_py_TestDistributions_test_categorical_1d",
"test_distributions_py_TestDistributions_test_categorical_2d",
"test_distributions_py_TestDistributions_test_categorical_enumerate_support",
"test_distributions_py_TestDistributions_test_cauchy",
"test_distributions_py_TestDistributions_test_cdf_icdf_inverse",
"test_distributions_py_TestDistributions_test_cdf_log_prob",
"test_distributions_py_TestDistributions_test_chi2_sample",
"test_distributions_py_TestDistributions_test_chi2_shape",
"test_distributions_py_TestDistributions_test_continuous_bernoulli",
"test_distributions_py_TestDistributions_test_continuous_bernoulli_3d",
"test_distributions_py_TestDistributions_test_dirichlet_log_prob",
"test_distributions_py_TestDistributions_test_dirichlet_mode",
"test_distributions_py_TestDistributions_test_dirichlet_sample",
"test_distributions_py_TestDistributions_test_dirichlet_shape",
"test_distributions_py_TestDistributions_test_distribution_expand",
"test_distributions_py_TestDistributions_test_distribution_subclass_expand",
"test_distributions_py_TestDistributions_test_enumerate_support_type",
"test_distributions_py_TestDistributions_test_fishersnedecor",
"test_distributions_py_TestDistributions_test_fishersnedecor_sample",
"test_distributions_py_TestDistributions_test_gamma_mlu_sample",
"test_distributions_py_TestDistributions_test_gamma_mlu_shape",
"test_distributions_py_TestDistributions_test_gamma_log_prob_at_boundary",
"test_distributions_py_TestDistributions_test_gamma_sample",
"test_distributions_py_TestDistributions_test_gamma_shape",
"test_distributions_py_TestDistributions_test_geometric",
"test_distributions_py_TestDistributions_test_geometric_log_prob_and_entropy",
"test_distributions_py_TestDistributions_test_geometric_sample",
"test_distributions_py_TestDistributions_test_gumbel",
"test_distributions_py_TestDistributions_test_gumbel_sample",
"test_distributions_py_TestDistributions_test_halfcauchy",
"test_distributions_py_TestDistributions_test_halfnormal",
"test_distributions_py_TestDistributions_test_halfnormal_logprob",
"test_distributions_py_TestDistributions_test_halfnormal_sample",
"test_distributions_py_TestDistributions_test_has_examples",
"test_distributions_py_TestDistributions_test_independent_expand",
"test_distributions_py_TestDistributions_test_independent_shape",
"test_distributions_py_TestDistributions_test_invalid_parameter_broadcasting",
"test_distributions_py_TestDistributions_test_kumaraswamy_mean_variance",
"test_distributions_py_TestDistributions_test_kumaraswamy_shape",
"test_distributions_py_TestDistributions_test_laplace",
"test_distributions_py_TestDistributions_test_laplace_sample",
"test_distributions_py_TestDistributions_test_lazy_property_grad",
"test_distributions_py_TestDistributions_test_lkj_cholesky_log_prob",
"test_distributions_py_TestDistributions_test_logisticnormal",
"test_distributions_py_TestDistributions_test_logisticnormal_logprob",
"test_distributions_py_TestDistributions_test_logisticnormal_sample",
"test_distributions_py_TestDistributions_test_lognormal",
"test_distributions_py_TestDistributions_test_lognormal_logprob",
"test_distributions_py_TestDistributions_test_lognormal_sample",
"test_distributions_py_TestDistributions_test_lowrank_multivariate_normal_log_prob",
"test_distributions_py_TestDistributions_test_lowrank_multivariate_normal_moments",
"test_distributions_py_TestDistributions_test_lowrank_multivariate_normal_properties",
"test_distributions_py_TestDistributions_test_lowrank_multivariate_normal_sample",
"test_distributions_py_TestDistributions_test_lowrank_multivariate_normal_shape",
"test_distributions_py_TestDistributions_test_mixture_same_family_log_prob",
"test_distributions_py_TestDistributions_test_mixture_same_family_sample",
"test_distributions_py_TestDistributions_test_mixture_same_family_shape",
"test_distributions_py_TestDistributions_test_mode",
"test_distributions_py_TestDistributions_test_multivariate_normal_log_prob",
"test_distributions_py_TestDistributions_test_multivariate_normal_moments",
"test_distributions_py_TestDistributions_test_multivariate_normal_properties",
"test_distributions_py_TestDistributions_test_multivariate_normal_sample",
"test_distributions_py_TestDistributions_test_multivariate_normal_shape",
"test_distributions_py_TestDistributions_test_multivariate_normal_stable_with_precision_matrix",
"test_distributions_py_TestDistributions_test_negative_binomial",
"test_distributions_py_TestDistributions_test_negative_binomial_log_prob",
"test_distributions_py_TestDistributions_test_negative_binomial_log_prob_vectorized_count",
"test_distributions_py_TestDistributions_test_normal",
"test_distributions_py_TestDistributions_test_normal_sample",
"test_distributions_py_TestDistributions_test_one_hot_categorical_1d",
"test_distributions_py_TestDistributions_test_one_hot_categorical_2d",
"test_distributions_py_TestDistributions_test_one_hot_categorical_enumerate_support",
"test_distributions_py_TestDistributions_test_pareto",
"test_distributions_py_TestDistributions_test_pareto_sample",
"test_distributions_py_TestDistributions_test_poisson_forward_ad",
"test_distributions_py_TestDistributions_test_poisson_mlu_sample",
"test_distributions_py_TestDistributions_test_poisson_log_prob",
"test_distributions_py_TestDistributions_test_poisson_sample",
"test_distributions_py_TestDistributions_test_poisson_shape",
"test_distributions_py_TestDistributions_test_relaxed_bernoulli",
"test_distributions_py_TestDistributions_test_relaxed_one_hot_categorical_1d",
"test_distributions_py_TestDistributions_test_relaxed_one_hot_categorical_2d",
"test_distributions_py_TestDistributions_test_repr",
"test_distributions_py_TestDistributions_test_rounded_relaxed_bernoulli",
"test_distributions_py_TestDistributions_test_rsample_requires_grad",
"test_distributions_py_TestDistributions_test_sample_detached",
"test_distributions_py_TestDistributions_test_studentT",
"test_distributions_py_TestDistributions_test_studentT_log_prob",
"test_distributions_py_TestDistributions_test_studentT_sample",
"test_distributions_py_TestDistributions_test_support_attributes",
"test_distributions_py_TestDistributions_test_uniform",
"test_distributions_py_TestDistributions_test_valid_parameter_broadcasting",
"test_distributions_py_TestDistributions_test_vonmises_logprob",
"test_distributions_py_TestDistributions_test_vonmises_sample",
"test_distributions_py_TestDistributions_test_wishart_log_prob",
"test_distributions_py_TestDistributions_test_wishart_moments",
"test_distributions_py_TestDistributions_test_wishart_properties",
"test_distributions_py_TestDistributions_test_wishart_sample",
"test_distributions_py_TestDistributions_test_wishart_shape",
"test_distributions_py_TestDistributions_test_wishart_stable_with_precision_matrix",
"test_distributions_py_TestDistributions_test_zero_excluded_binomial",
"test_distributions_py_TestRsample_test_beta_wrt_alpha",
"test_distributions_py_TestRsample_test_beta_wrt_beta",
"test_distributions_py_TestRsample_test_chi2",
"test_distributions_py_TestRsample_test_dirichlet_multivariate",
"test_distributions_py_TestRsample_test_dirichlet_on_diagonal",
"test_distributions_py_TestRsample_test_dirichlet_tangent_field",
"test_distributions_py_TestRsample_test_gamma",
"test_distributions_py_TestDistributionShapes_test_bernoulli_shape_scalar_params",
"test_distributions_py_TestDistributionShapes_test_bernoulli_shape_tensor_params",
"test_distributions_py_TestDistributionShapes_test_beta_shape_scalar_params",
"test_distributions_py_TestDistributionShapes_test_beta_shape_tensor_params",
"test_distributions_py_TestDistributionShapes_test_binomial_shape",
"test_distributions_py_TestDistributionShapes_test_binomial_shape_vectorized_n",
"test_distributions_py_TestDistributionShapes_test_categorical_shape",
"test_distributions_py_TestDistributionShapes_test_cauchy_shape_scalar_params",
"test_distributions_py_TestDistributionShapes_test_cauchy_shape_tensor_params",
"test_distributions_py_TestDistributionShapes_test_chi2_shape_scalar_params",
"test_distributions_py_TestDistributionShapes_test_chi2_shape_tensor_params",
"test_distributions_py_TestDistributionShapes_test_continuous_bernoulli_shape_scalar_params",
"test_distributions_py_TestDistributionShapes_test_continuous_bernoulli_shape_tensor_params",
"test_distributions_py_TestDistributionShapes_test_dirichlet_shape",
"test_distributions_py_TestDistributionShapes_test_entropy_shape",
"test_distributions_py_TestDistributionShapes_test_gamma_shape_scalar_params",
"test_distributions_py_TestDistributionShapes_test_gamma_shape_tensor_params",
"test_distributions_py_TestDistributionShapes_test_geometric_shape_scalar_params",
"test_distributions_py_TestDistributionShapes_test_geometric_shape_tensor_params",
"test_distributions_py_TestDistributionShapes_test_gumbel_shape_scalar_params",
"test_distributions_py_TestDistributionShapes_test_halfcauchy_shape_scalar_params",
"test_distributions_py_TestDistributionShapes_test_halfcauchy_shape_tensor_params",
"test_distributions_py_TestDistributionShapes_test_kumaraswamy_shape_scalar_params",
"test_distributions_py_TestDistributionShapes_test_laplace_shape_scalar_params",
"test_distributions_py_TestDistributionShapes_test_laplace_shape_tensor_params",
"test_distributions_py_TestDistributionShapes_test_mixture_same_family_shape",
"test_distributions_py_TestDistributionShapes_test_normal_shape_scalar_params",
"test_distributions_py_TestDistributionShapes_test_normal_shape_tensor_params",
"test_distributions_py_TestDistributionShapes_test_one_hot_categorical_shape",
"test_distributions_py_TestDistributionShapes_test_pareto_shape_scalar_params",
"test_distributions_py_TestDistributionShapes_test_studentT_shape_scalar_params",
"test_distributions_py_TestDistributionShapes_test_studentT_shape_tensor_params",
"test_distributions_py_TestDistributionShapes_test_uniform_shape_scalar_params",
"test_distributions_py_TestDistributionShapes_test_uniform_shape_tensor_params",
"test_distributions_py_TestDistributionShapes_test_vonmises_shape_scalar_params",
"test_distributions_py_TestDistributionShapes_test_vonmises_shape_tensor_params",
"test_distributions_py_TestDistributionShapes_test_weibull_scale_scalar_params",
"test_distributions_py_TestDistributionShapes_test_wishart_shape_scalar_params",
"test_distributions_py_TestDistributionShapes_test_wishart_shape_tensor_params",
"test_distributions_py_TestKL_test_entropy_exponential_family",
"test_distributions_py_TestKL_test_entropy_monte_carlo",
"test_distributions_py_TestKL_test_kl_edgecases",
"test_distributions_py_TestKL_test_kl_exponential_family",
"test_distributions_py_TestKL_test_kl_infinite",
"test_distributions_py_TestKL_test_kl_lowrank_multivariate_normal",
"test_distributions_py_TestKL_test_kl_lowrank_multivariate_normal_batched",
"test_distributions_py_TestKL_test_kl_monte_carlo",
"test_distributions_py_TestKL_test_kl_multivariate_normal",
"test_distributions_py_TestKL_test_kl_multivariate_normal_batched",
"test_distributions_py_TestKL_test_kl_multivariate_normal_batched_broadcasted",
"test_distributions_py_TestKL_test_kl_shape",
"test_distributions_py_TestKL_test_kl_transformed",
"test_distributions_py_TestConstraints_test_params_constraints",
"test_distributions_py_TestConstraints_test_support_constraints",
"test_distributions_py_TestNumericalStability_test_bernoulli_gradient",
"test_distributions_py_TestNumericalStability_test_bernoulli_with_logits_overflow",
"test_distributions_py_TestNumericalStability_test_bernoulli_with_logits_underflow",
"test_distributions_py_TestNumericalStability_test_categorical_log_prob",
"test_distributions_py_TestNumericalStability_test_categorical_log_prob_with_logits",
"test_distributions_py_TestNumericalStability_test_continuous_bernoulli_gradient",
"test_distributions_py_TestNumericalStability_test_continuous_bernoulli_with_logits_overflow",
"test_distributions_py_TestNumericalStability_test_continuous_bernoulli_with_logits_underflow",
"test_distributions_py_TestLazyLogitsInitialization_test_lazy_logits_initialization",
"test_distributions_py_TestLazyLogitsInitialization_test_lazy_probs_initialization",
"test_distributions_py_TestAgainstScipy_test_cdf",
"test_distributions_py_TestAgainstScipy_test_icdf",
"test_distributions_py_TestAgainstScipy_test_mean",
"test_distributions_py_TestAgainstScipy_test_variance_stddev",
"test_distributions_py_TestFunctors_test_cat_event_dim",
"test_distributions_py_TestFunctors_test_cat_transform",
"test_distributions_py_TestFunctors_test_cat_transform_non_uniform",
"test_distributions_py_TestFunctors_test_stack_transform",
"test_distributions_py_TestValidation_test_invalid",
"test_distributions_py_TestValidation_test_invalid_log_probs_arg",
"test_distributions_py_TestValidation_test_valid",
"test_distributions_py_TestValidation_test_warning_unimplemented_constraints",
"test_distributions_py_TestJit_test_cdf",
"test_distributions_py_TestJit_test_entropy",
"test_distributions_py_TestJit_test_enumerate_support",
"test_distributions_py_TestJit_test_log_prob",
"test_distributions_py_TestJit_test_mean",
"test_distributions_py_TestJit_test_rsample",
"test_distributions_py_TestJit_test_sample",
"test_distributions_py_TestJit_test_variance",
"test_transforms_py_test_inv_inv[AbsTransform(cache_size=1)]",
"test_transforms_py_test_inv_inv[ExpTransform(cache_size=1)]",
"test_transforms_py_test_inv_inv[PowerTransform(cache_size=1)0]",
"test_transforms_py_test_inv_inv[PowerTransform(cache_size=1)1]",
"test_transforms_py_test_inv_inv[PowerTransform(cache_size=1)2]",
"test_transforms_py_test_inv_inv[SigmoidTransform(cache_size=1)]",
"test_transforms_py_test_inv_inv[TanhTransform(cache_size=1)]",
"test_transforms_py_test_inv_inv[AffineTransform(cache_size=1)0]",
"test_transforms_py_test_inv_inv[AffineTransform(cache_size=1)1]",
"test_transforms_py_test_inv_inv[AffineTransform(cache_size=1)2]",
"test_transforms_py_test_inv_inv[AffineTransform(cache_size=1)3]",
"test_transforms_py_test_inv_inv[SoftmaxTransform(cache_size=1)]",
"test_transforms_py_test_inv_inv[SoftplusTransform(cache_size=1)]",
"test_transforms_py_test_inv_inv[StickBreakingTransform(cache_size=1)]",
"test_transforms_py_test_inv_inv[LowerCholeskyTransform(cache_size=1)]",
"test_transforms_py_test_inv_inv[CorrCholeskyTransform(cache_size=1)]",
"test_transforms_py_test_inv_inv[ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_inv_inv[ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_inv_inv[ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_inv_inv[ReshapeTransform(cache_size=0)0]",
"test_transforms_py_test_inv_inv[IndependentTransform(cache_size=0)0]",
"test_transforms_py_test_inv_inv[CumulativeDistributionTransform(cache_size=0)0]",
"test_transforms_py_test_inv_inv[Inv(AbsTransform)(cache_size=1)]",
"test_transforms_py_test_inv_inv[Inv(ExpTransform)(cache_size=1)]",
"test_transforms_py_test_inv_inv[Inv(PowerTransform)(cache_size=1)0]",
"test_transforms_py_test_inv_inv[Inv(PowerTransform)(cache_size=1)1]",
"test_transforms_py_test_inv_inv[Inv(PowerTransform)(cache_size=1)2]",
"test_transforms_py_test_inv_inv[Inv(SigmoidTransform)(cache_size=1)]",
"test_transforms_py_test_inv_inv[Inv(TanhTransform)(cache_size=1)]",
"test_transforms_py_test_inv_inv[Inv(AffineTransform)(cache_size=1)0]",
"test_transforms_py_test_inv_inv[Inv(AffineTransform)(cache_size=1)1]",
"test_transforms_py_test_inv_inv[Inv(AffineTransform)(cache_size=1)2]",
"test_transforms_py_test_inv_inv[Inv(AffineTransform)(cache_size=1)3]",
"test_transforms_py_test_inv_inv[Inv(SoftmaxTransform)(cache_size=1)]",
"test_transforms_py_test_inv_inv[Inv(SoftplusTransform)(cache_size=1)]",
"test_transforms_py_test_inv_inv[Inv(StickBreakingTransform)(cache_size=1)]",
"test_transforms_py_test_inv_inv[Inv(LowerCholeskyTransform)(cache_size=1)]",
"test_transforms_py_test_inv_inv[Inv(CorrCholeskyTransform)(cache_size=1)]",
"test_transforms_py_test_inv_inv[ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_inv_inv[ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_inv_inv[ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_inv_inv[Inv(ReshapeTransform)(cache_size=0)0]",
"test_transforms_py_test_inv_inv[Inv(IndependentTransform)(cache_size=0)0]",
"test_transforms_py_test_inv_inv[Inv(CumulativeDistributionTransform)(cache_size=0)0]",
"test_transforms_py_test_inv_inv[AbsTransform(cache_size=0)]",
"test_transforms_py_test_inv_inv[ExpTransform(cache_size=0)]",
"test_transforms_py_test_inv_inv[PowerTransform(cache_size=0)0]",
"test_transforms_py_test_inv_inv[PowerTransform(cache_size=0)1]",
"test_transforms_py_test_inv_inv[PowerTransform(cache_size=0)2]",
"test_transforms_py_test_inv_inv[SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_inv_inv[TanhTransform(cache_size=0)]",
"test_transforms_py_test_inv_inv[AffineTransform(cache_size=0)0]",
"test_transforms_py_test_inv_inv[AffineTransform(cache_size=0)1]",
"test_transforms_py_test_inv_inv[AffineTransform(cache_size=0)2]",
"test_transforms_py_test_inv_inv[AffineTransform(cache_size=0)3]",
"test_transforms_py_test_inv_inv[SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_inv_inv[SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_inv_inv[StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_inv_inv[LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_inv_inv[CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_inv_inv[ComposeTransform(cache_size=0)6]",
"test_transforms_py_test_inv_inv[ComposeTransform(cache_size=0)7]",
"test_transforms_py_test_inv_inv[ComposeTransform(cache_size=0)8]",
"test_transforms_py_test_inv_inv[ReshapeTransform(cache_size=0)1]",
"test_transforms_py_test_inv_inv[IndependentTransform(cache_size=0)1]",
"test_transforms_py_test_inv_inv[CumulativeDistributionTransform(cache_size=0)1]",
"test_transforms_py_test_inv_inv[Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_inv_inv[Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_inv_inv[Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_inv_inv[Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_inv_inv[Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_inv_inv[Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_inv_inv[Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_inv_inv[Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_inv_inv[Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_inv_inv[Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_inv_inv[Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_inv_inv[Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_inv_inv[Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_inv_inv[Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_inv_inv[Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_inv_inv[Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_inv_inv[ComposeTransform(cache_size=0)9]",
"test_transforms_py_test_inv_inv[ComposeTransform(cache_size=0)10]",
"test_transforms_py_test_inv_inv[ComposeTransform(cache_size=0)11]",
"test_transforms_py_test_inv_inv[Inv(ReshapeTransform)(cache_size=0)1]",
"test_transforms_py_test_inv_inv[Inv(IndependentTransform)(cache_size=0)1]",
"test_transforms_py_test_inv_inv[Inv(CumulativeDistributionTransform)(cache_size=0)1]",
"test_transforms_py_test_inv_inv[ComposeTransform(cache_size=0)12]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AbsTransform(cache_size=0)-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ExpTransform(cache_size=0)-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)0-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)1-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[PowerTransform(cache_size=0)2-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SigmoidTransform(cache_size=0)-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[TanhTransform(cache_size=0)-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)0-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)1-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)2-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[AffineTransform(cache_size=0)3-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SoftmaxTransform(cache_size=0)-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[SoftplusTransform(cache_size=0)-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[StickBreakingTransform(cache_size=0)-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[LowerCholeskyTransform(cache_size=0)-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[CorrCholeskyTransform(cache_size=0)-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)0-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)1-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)2-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ReshapeTransform(cache_size=0)-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[IndependentTransform(cache_size=0)-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[CumulativeDistributionTransform(cache_size=0)-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AbsTransform)(cache_size=0)-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ExpTransform)(cache_size=0)-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)0-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)1-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(PowerTransform)(cache_size=0)2-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SigmoidTransform)(cache_size=0)-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(TanhTransform)(cache_size=0)-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)0-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)1-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)2-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(AffineTransform)(cache_size=0)3-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftmaxTransform)(cache_size=0)-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(SoftplusTransform)(cache_size=0)-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(StickBreakingTransform)(cache_size=0)-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(LowerCholeskyTransform)(cache_size=0)-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CorrCholeskyTransform)(cache_size=0)-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)3-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)4-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[ComposeTransform(cache_size=0)5-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(ReshapeTransform)(cache_size=0)-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(IndependentTransform)(cache_size=0)-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-AbsTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-ExpTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-TanhTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-IndependentTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_equality[Inv(CumulativeDistributionTransform)(cache_size=0)-Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_with_cache[AbsTransform(cache_size=1)]",
"test_transforms_py_test_with_cache[ExpTransform(cache_size=1)]",
"test_transforms_py_test_with_cache[PowerTransform(cache_size=1)0]",
"test_transforms_py_test_with_cache[PowerTransform(cache_size=1)1]",
"test_transforms_py_test_with_cache[PowerTransform(cache_size=1)2]",
"test_transforms_py_test_with_cache[SigmoidTransform(cache_size=1)]",
"test_transforms_py_test_with_cache[TanhTransform(cache_size=1)]",
"test_transforms_py_test_with_cache[AffineTransform(cache_size=1)0]",
"test_transforms_py_test_with_cache[AffineTransform(cache_size=1)1]",
"test_transforms_py_test_with_cache[AffineTransform(cache_size=1)2]",
"test_transforms_py_test_with_cache[AffineTransform(cache_size=1)3]",
"test_transforms_py_test_with_cache[SoftmaxTransform(cache_size=1)]",
"test_transforms_py_test_with_cache[SoftplusTransform(cache_size=1)]",
"test_transforms_py_test_with_cache[StickBreakingTransform(cache_size=1)]",
"test_transforms_py_test_with_cache[LowerCholeskyTransform(cache_size=1)]",
"test_transforms_py_test_with_cache[CorrCholeskyTransform(cache_size=1)]",
"test_transforms_py_test_with_cache[ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_with_cache[ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_with_cache[ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_with_cache[ReshapeTransform(cache_size=0)0]",
"test_transforms_py_test_with_cache[IndependentTransform(cache_size=0)0]",
"test_transforms_py_test_with_cache[CumulativeDistributionTransform(cache_size=0)0]",
"test_transforms_py_test_with_cache[Inv(AbsTransform)(cache_size=1)]",
"test_transforms_py_test_with_cache[Inv(ExpTransform)(cache_size=1)]",
"test_transforms_py_test_with_cache[Inv(PowerTransform)(cache_size=1)0]",
"test_transforms_py_test_with_cache[Inv(PowerTransform)(cache_size=1)1]",
"test_transforms_py_test_with_cache[Inv(PowerTransform)(cache_size=1)2]",
"test_transforms_py_test_with_cache[Inv(SigmoidTransform)(cache_size=1)]",
"test_transforms_py_test_with_cache[Inv(TanhTransform)(cache_size=1)]",
"test_transforms_py_test_with_cache[Inv(AffineTransform)(cache_size=1)0]",
"test_transforms_py_test_with_cache[Inv(AffineTransform)(cache_size=1)1]",
"test_transforms_py_test_with_cache[Inv(AffineTransform)(cache_size=1)2]",
"test_transforms_py_test_with_cache[Inv(AffineTransform)(cache_size=1)3]",
"test_transforms_py_test_with_cache[Inv(SoftmaxTransform)(cache_size=1)]",
"test_transforms_py_test_with_cache[Inv(SoftplusTransform)(cache_size=1)]",
"test_transforms_py_test_with_cache[Inv(StickBreakingTransform)(cache_size=1)]",
"test_transforms_py_test_with_cache[Inv(LowerCholeskyTransform)(cache_size=1)]",
"test_transforms_py_test_with_cache[Inv(CorrCholeskyTransform)(cache_size=1)]",
"test_transforms_py_test_with_cache[ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_with_cache[ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_with_cache[ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_with_cache[Inv(ReshapeTransform)(cache_size=0)0]",
"test_transforms_py_test_with_cache[Inv(IndependentTransform)(cache_size=0)0]",
"test_transforms_py_test_with_cache[Inv(CumulativeDistributionTransform)(cache_size=0)0]",
"test_transforms_py_test_with_cache[AbsTransform(cache_size=0)]",
"test_transforms_py_test_with_cache[ExpTransform(cache_size=0)]",
"test_transforms_py_test_with_cache[PowerTransform(cache_size=0)0]",
"test_transforms_py_test_with_cache[PowerTransform(cache_size=0)1]",
"test_transforms_py_test_with_cache[PowerTransform(cache_size=0)2]",
"test_transforms_py_test_with_cache[SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_with_cache[TanhTransform(cache_size=0)]",
"test_transforms_py_test_with_cache[AffineTransform(cache_size=0)0]",
"test_transforms_py_test_with_cache[AffineTransform(cache_size=0)1]",
"test_transforms_py_test_with_cache[AffineTransform(cache_size=0)2]",
"test_transforms_py_test_with_cache[AffineTransform(cache_size=0)3]",
"test_transforms_py_test_with_cache[SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_with_cache[SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_with_cache[StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_with_cache[LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_with_cache[CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_with_cache[ComposeTransform(cache_size=0)6]",
"test_transforms_py_test_with_cache[ComposeTransform(cache_size=0)7]",
"test_transforms_py_test_with_cache[ComposeTransform(cache_size=0)8]",
"test_transforms_py_test_with_cache[ReshapeTransform(cache_size=0)1]",
"test_transforms_py_test_with_cache[IndependentTransform(cache_size=0)1]",
"test_transforms_py_test_with_cache[CumulativeDistributionTransform(cache_size=0)1]",
"test_transforms_py_test_with_cache[Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_with_cache[Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_with_cache[Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_with_cache[Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_with_cache[Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_with_cache[Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_with_cache[Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_with_cache[Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_with_cache[Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_with_cache[Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_with_cache[Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_with_cache[Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_with_cache[Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_with_cache[Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_with_cache[Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_with_cache[Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_with_cache[ComposeTransform(cache_size=0)9]",
"test_transforms_py_test_with_cache[ComposeTransform(cache_size=0)10]",
"test_transforms_py_test_with_cache[ComposeTransform(cache_size=0)11]",
"test_transforms_py_test_with_cache[Inv(ReshapeTransform)(cache_size=0)1]",
"test_transforms_py_test_with_cache[Inv(IndependentTransform)(cache_size=0)1]",
"test_transforms_py_test_with_cache[Inv(CumulativeDistributionTransform)(cache_size=0)1]",
"test_transforms_py_test_with_cache[ComposeTransform(cache_size=0)12]",
"test_transforms_py_test_forward_inverse[True-AbsTransform(cache_size=1)]",
"test_transforms_py_test_forward_inverse[True-ExpTransform(cache_size=1)]",
"test_transforms_py_test_forward_inverse[True-PowerTransform(cache_size=1)0]",
"test_transforms_py_test_forward_inverse[True-PowerTransform(cache_size=1)1]",
"test_transforms_py_test_forward_inverse[True-PowerTransform(cache_size=1)2]",
"test_transforms_py_test_forward_inverse[True-SigmoidTransform(cache_size=1)]",
"test_transforms_py_test_forward_inverse[True-TanhTransform(cache_size=1)]",
"test_transforms_py_test_forward_inverse[True-AffineTransform(cache_size=1)0]",
"test_transforms_py_test_forward_inverse[True-AffineTransform(cache_size=1)1]",
"test_transforms_py_test_forward_inverse[True-AffineTransform(cache_size=1)2]",
"test_transforms_py_test_forward_inverse[True-AffineTransform(cache_size=1)3]",
"test_transforms_py_test_forward_inverse[True-SoftmaxTransform(cache_size=1)]",
"test_transforms_py_test_forward_inverse[True-SoftplusTransform(cache_size=1)]",
"test_transforms_py_test_forward_inverse[True-StickBreakingTransform(cache_size=1)]",
"test_transforms_py_test_forward_inverse[True-LowerCholeskyTransform(cache_size=1)]",
"test_transforms_py_test_forward_inverse[True-CorrCholeskyTransform(cache_size=1)]",
"test_transforms_py_test_forward_inverse[True-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_forward_inverse[True-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_forward_inverse[True-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_forward_inverse[True-ReshapeTransform(cache_size=0)0]",
"test_transforms_py_test_forward_inverse[True-IndependentTransform(cache_size=0)0]",
"test_transforms_py_test_forward_inverse[True-CumulativeDistributionTransform(cache_size=0)0]",
"test_transforms_py_test_forward_inverse[True-Inv(AbsTransform)(cache_size=1)]",
"test_transforms_py_test_forward_inverse[True-Inv(ExpTransform)(cache_size=1)]",
"test_transforms_py_test_forward_inverse[True-Inv(PowerTransform)(cache_size=1)0]",
"test_transforms_py_test_forward_inverse[True-Inv(PowerTransform)(cache_size=1)1]",
"test_transforms_py_test_forward_inverse[True-Inv(PowerTransform)(cache_size=1)2]",
"test_transforms_py_test_forward_inverse[True-Inv(SigmoidTransform)(cache_size=1)]",
"test_transforms_py_test_forward_inverse[True-Inv(TanhTransform)(cache_size=1)]",
"test_transforms_py_test_forward_inverse[True-Inv(AffineTransform)(cache_size=1)0]",
"test_transforms_py_test_forward_inverse[True-Inv(AffineTransform)(cache_size=1)1]",
"test_transforms_py_test_forward_inverse[True-Inv(AffineTransform)(cache_size=1)2]",
"test_transforms_py_test_forward_inverse[True-Inv(AffineTransform)(cache_size=1)3]",
"test_transforms_py_test_forward_inverse[True-Inv(SoftmaxTransform)(cache_size=1)]",
"test_transforms_py_test_forward_inverse[True-Inv(SoftplusTransform)(cache_size=1)]",
"test_transforms_py_test_forward_inverse[True-Inv(StickBreakingTransform)(cache_size=1)]",
"test_transforms_py_test_forward_inverse[True-Inv(LowerCholeskyTransform)(cache_size=1)]",
"test_transforms_py_test_forward_inverse[True-Inv(CorrCholeskyTransform)(cache_size=1)]",
"test_transforms_py_test_forward_inverse[True-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_forward_inverse[True-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_forward_inverse[True-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_forward_inverse[True-Inv(ReshapeTransform)(cache_size=0)0]",
"test_transforms_py_test_forward_inverse[True-Inv(IndependentTransform)(cache_size=0)0]",
"test_transforms_py_test_forward_inverse[True-Inv(CumulativeDistributionTransform)(cache_size=0)0]",
"test_transforms_py_test_forward_inverse[True-AbsTransform(cache_size=0)]",
"test_transforms_py_test_forward_inverse[True-ExpTransform(cache_size=0)]",
"test_transforms_py_test_forward_inverse[True-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_forward_inverse[True-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_forward_inverse[True-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_forward_inverse[True-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_forward_inverse[True-TanhTransform(cache_size=0)]",
"test_transforms_py_test_forward_inverse[True-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_forward_inverse[True-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_forward_inverse[True-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_forward_inverse[True-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_forward_inverse[True-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_forward_inverse[True-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_forward_inverse[True-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_forward_inverse[True-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_forward_inverse[True-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_forward_inverse[True-ComposeTransform(cache_size=0)6]",
"test_transforms_py_test_forward_inverse[True-ComposeTransform(cache_size=0)7]",
"test_transforms_py_test_forward_inverse[True-ComposeTransform(cache_size=0)8]",
"test_transforms_py_test_forward_inverse[True-ReshapeTransform(cache_size=0)1]",
"test_transforms_py_test_forward_inverse[True-IndependentTransform(cache_size=0)1]",
"test_transforms_py_test_forward_inverse[True-CumulativeDistributionTransform(cache_size=0)1]",
"test_transforms_py_test_forward_inverse[True-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_forward_inverse[True-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_forward_inverse[True-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_forward_inverse[True-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_forward_inverse[True-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_forward_inverse[True-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_forward_inverse[True-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_forward_inverse[True-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_forward_inverse[True-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_forward_inverse[True-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_forward_inverse[True-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_forward_inverse[True-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_forward_inverse[True-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_forward_inverse[True-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_forward_inverse[True-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_forward_inverse[True-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_forward_inverse[True-ComposeTransform(cache_size=0)9]",
"test_transforms_py_test_forward_inverse[True-ComposeTransform(cache_size=0)10]",
"test_transforms_py_test_forward_inverse[True-ComposeTransform(cache_size=0)11]",
"test_transforms_py_test_forward_inverse[True-Inv(ReshapeTransform)(cache_size=0)1]",
"test_transforms_py_test_forward_inverse[True-Inv(IndependentTransform)(cache_size=0)1]",
"test_transforms_py_test_forward_inverse[True-Inv(CumulativeDistributionTransform)(cache_size=0)1]",
"test_transforms_py_test_forward_inverse[True-ComposeTransform(cache_size=0)12]",
"test_transforms_py_test_forward_inverse[False-AbsTransform(cache_size=1)]",
"test_transforms_py_test_forward_inverse[False-ExpTransform(cache_size=1)]",
"test_transforms_py_test_forward_inverse[False-PowerTransform(cache_size=1)0]",
"test_transforms_py_test_forward_inverse[False-PowerTransform(cache_size=1)1]",
"test_transforms_py_test_forward_inverse[False-PowerTransform(cache_size=1)2]",
"test_transforms_py_test_forward_inverse[False-SigmoidTransform(cache_size=1)]",
"test_transforms_py_test_forward_inverse[False-TanhTransform(cache_size=1)]",
"test_transforms_py_test_forward_inverse[False-AffineTransform(cache_size=1)0]",
"test_transforms_py_test_forward_inverse[False-AffineTransform(cache_size=1)1]",
"test_transforms_py_test_forward_inverse[False-AffineTransform(cache_size=1)2]",
"test_transforms_py_test_forward_inverse[False-AffineTransform(cache_size=1)3]",
"test_transforms_py_test_forward_inverse[False-SoftmaxTransform(cache_size=1)]",
"test_transforms_py_test_forward_inverse[False-SoftplusTransform(cache_size=1)]",
"test_transforms_py_test_forward_inverse[False-StickBreakingTransform(cache_size=1)]",
"test_transforms_py_test_forward_inverse[False-LowerCholeskyTransform(cache_size=1)]",
"test_transforms_py_test_forward_inverse[False-CorrCholeskyTransform(cache_size=1)]",
"test_transforms_py_test_forward_inverse[False-ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_forward_inverse[False-ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_forward_inverse[False-ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_forward_inverse[False-ReshapeTransform(cache_size=0)0]",
"test_transforms_py_test_forward_inverse[False-IndependentTransform(cache_size=0)0]",
"test_transforms_py_test_forward_inverse[False-CumulativeDistributionTransform(cache_size=0)0]",
"test_transforms_py_test_forward_inverse[False-Inv(AbsTransform)(cache_size=1)]",
"test_transforms_py_test_forward_inverse[False-Inv(ExpTransform)(cache_size=1)]",
"test_transforms_py_test_forward_inverse[False-Inv(PowerTransform)(cache_size=1)0]",
"test_transforms_py_test_forward_inverse[False-Inv(PowerTransform)(cache_size=1)1]",
"test_transforms_py_test_forward_inverse[False-Inv(PowerTransform)(cache_size=1)2]",
"test_transforms_py_test_forward_inverse[False-Inv(SigmoidTransform)(cache_size=1)]",
"test_transforms_py_test_forward_inverse[False-Inv(TanhTransform)(cache_size=1)]",
"test_transforms_py_test_forward_inverse[False-Inv(AffineTransform)(cache_size=1)0]",
"test_transforms_py_test_forward_inverse[False-Inv(AffineTransform)(cache_size=1)1]",
"test_transforms_py_test_forward_inverse[False-Inv(AffineTransform)(cache_size=1)2]",
"test_transforms_py_test_forward_inverse[False-Inv(AffineTransform)(cache_size=1)3]",
"test_transforms_py_test_forward_inverse[False-Inv(SoftmaxTransform)(cache_size=1)]",
"test_transforms_py_test_forward_inverse[False-Inv(SoftplusTransform)(cache_size=1)]",
"test_transforms_py_test_forward_inverse[False-Inv(StickBreakingTransform)(cache_size=1)]",
"test_transforms_py_test_forward_inverse[False-Inv(LowerCholeskyTransform)(cache_size=1)]",
"test_transforms_py_test_forward_inverse[False-Inv(CorrCholeskyTransform)(cache_size=1)]",
"test_transforms_py_test_forward_inverse[False-ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_forward_inverse[False-ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_forward_inverse[False-ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_forward_inverse[False-Inv(ReshapeTransform)(cache_size=0)0]",
"test_transforms_py_test_forward_inverse[False-Inv(IndependentTransform)(cache_size=0)0]",
"test_transforms_py_test_forward_inverse[False-Inv(CumulativeDistributionTransform)(cache_size=0)0]",
"test_transforms_py_test_forward_inverse[False-AbsTransform(cache_size=0)]",
"test_transforms_py_test_forward_inverse[False-ExpTransform(cache_size=0)]",
"test_transforms_py_test_forward_inverse[False-PowerTransform(cache_size=0)0]",
"test_transforms_py_test_forward_inverse[False-PowerTransform(cache_size=0)1]",
"test_transforms_py_test_forward_inverse[False-PowerTransform(cache_size=0)2]",
"test_transforms_py_test_forward_inverse[False-SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_forward_inverse[False-TanhTransform(cache_size=0)]",
"test_transforms_py_test_forward_inverse[False-AffineTransform(cache_size=0)0]",
"test_transforms_py_test_forward_inverse[False-AffineTransform(cache_size=0)1]",
"test_transforms_py_test_forward_inverse[False-AffineTransform(cache_size=0)2]",
"test_transforms_py_test_forward_inverse[False-AffineTransform(cache_size=0)3]",
"test_transforms_py_test_forward_inverse[False-SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_forward_inverse[False-SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_forward_inverse[False-StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_forward_inverse[False-LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_forward_inverse[False-CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_forward_inverse[False-ComposeTransform(cache_size=0)6]",
"test_transforms_py_test_forward_inverse[False-ComposeTransform(cache_size=0)7]",
"test_transforms_py_test_forward_inverse[False-ComposeTransform(cache_size=0)8]",
"test_transforms_py_test_forward_inverse[False-ReshapeTransform(cache_size=0)1]",
"test_transforms_py_test_forward_inverse[False-IndependentTransform(cache_size=0)1]",
"test_transforms_py_test_forward_inverse[False-CumulativeDistributionTransform(cache_size=0)1]",
"test_transforms_py_test_forward_inverse[False-Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_forward_inverse[False-Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_forward_inverse[False-Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_forward_inverse[False-Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_forward_inverse[False-Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_forward_inverse[False-Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_forward_inverse[False-Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_forward_inverse[False-Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_forward_inverse[False-Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_forward_inverse[False-Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_forward_inverse[False-Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_forward_inverse[False-Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_forward_inverse[False-Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_forward_inverse[False-Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_forward_inverse[False-Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_forward_inverse[False-Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_forward_inverse[False-ComposeTransform(cache_size=0)9]",
"test_transforms_py_test_forward_inverse[False-ComposeTransform(cache_size=0)10]",
"test_transforms_py_test_forward_inverse[False-ComposeTransform(cache_size=0)11]",
"test_transforms_py_test_forward_inverse[False-Inv(ReshapeTransform)(cache_size=0)1]",
"test_transforms_py_test_forward_inverse[False-Inv(IndependentTransform)(cache_size=0)1]",
"test_transforms_py_test_forward_inverse[False-Inv(CumulativeDistributionTransform)(cache_size=0)1]",
"test_transforms_py_test_forward_inverse[False-ComposeTransform(cache_size=0)12]",
"test_transforms_py_test_compose_transform_shapes",
"test_transforms_py_test_transformed_distribution_shapes[batch_shape0-event_shape0-dist0]",
"test_transforms_py_test_transformed_distribution_shapes[batch_shape1-event_shape1-dist1]",
"test_transforms_py_test_transformed_distribution_shapes[batch_shape2-event_shape2-dist2]",
"test_transforms_py_test_transformed_distribution_shapes[batch_shape3-event_shape3-dist3]",
"test_transforms_py_test_transformed_distribution_shapes[batch_shape4-event_shape4-dist4]",
"test_transforms_py_test_transformed_distribution_shapes[batch_shape5-event_shape5-dist5]",
"test_transforms_py_test_transformed_distribution_shapes[batch_shape6-event_shape6-dist6]",
"test_transforms_py_test_transformed_distribution_shapes[batch_shape7-event_shape7-dist7]",
"test_transforms_py_test_transformed_distribution_shapes[batch_shape8-event_shape8-dist8]",
"test_transforms_py_test_transformed_distribution_shapes[batch_shape9-event_shape9-dist9]",
"test_transforms_py_test_transformed_distribution_shapes[batch_shape10-event_shape10-dist10]",
"test_transforms_py_test_transformed_distribution_shapes[batch_shape11-event_shape11-dist11]",
"test_transforms_py_test_transformed_distribution_shapes[batch_shape12-event_shape12-dist12]",
"test_transforms_py_test_transformed_distribution_shapes[batch_shape13-event_shape13-dist13]",
"test_transforms_py_test_transformed_distribution_shapes[batch_shape14-event_shape14-dist14]",
"test_transforms_py_test_transformed_distribution_shapes[batch_shape15-event_shape15-dist15]",
"test_transforms_py_test_transformed_distribution_shapes[batch_shape16-event_shape16-dist16]",
"test_transforms_py_test_transformed_distribution_shapes[batch_shape17-event_shape17-dist17]",
"test_transforms_py_test_transformed_distribution_shapes[batch_shape18-event_shape18-dist18]",
"test_transforms_py_test_transformed_distribution_shapes[batch_shape19-event_shape19-dist19]",
"test_transforms_py_test_transformed_distribution_shapes[batch_shape20-event_shape20-dist20]",
"test_transforms_py_test_transformed_distribution_shapes[batch_shape21-event_shape21-dist21]",
"test_transforms_py_test_transformed_distribution_shapes[batch_shape22-event_shape22-dist22]",
"test_transforms_py_test_transformed_distribution_shapes[batch_shape23-event_shape23-dist23]",
"test_transforms_py_test_transformed_distribution_shapes[batch_shape24-event_shape24-dist24]",
"test_transforms_py_test_jit_fwd[AbsTransform(cache_size=0)]",
"test_transforms_py_test_jit_fwd[ExpTransform(cache_size=0)]",
"test_transforms_py_test_jit_fwd[PowerTransform(cache_size=0)0]",
"test_transforms_py_test_jit_fwd[PowerTransform(cache_size=0)1]",
"test_transforms_py_test_jit_fwd[PowerTransform(cache_size=0)2]",
"test_transforms_py_test_jit_fwd[SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_jit_fwd[TanhTransform(cache_size=0)]",
"test_transforms_py_test_jit_fwd[AffineTransform(cache_size=0)0]",
"test_transforms_py_test_jit_fwd[AffineTransform(cache_size=0)1]",
"test_transforms_py_test_jit_fwd[AffineTransform(cache_size=0)2]",
"test_transforms_py_test_jit_fwd[AffineTransform(cache_size=0)3]",
"test_transforms_py_test_jit_fwd[SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_jit_fwd[SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_jit_fwd[StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_jit_fwd[LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_jit_fwd[CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_jit_fwd[ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_jit_fwd[ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_jit_fwd[ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_jit_fwd[ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_jit_fwd[IndependentTransform(cache_size=0)]",
"test_transforms_py_test_jit_fwd[CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_jit_fwd[Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_jit_fwd[Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_jit_fwd[Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_jit_fwd[Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_jit_fwd[Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_jit_fwd[Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_jit_fwd[Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_jit_fwd[Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_jit_fwd[Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_jit_fwd[Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_jit_fwd[Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_jit_fwd[Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_jit_fwd[Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_jit_fwd[Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_jit_fwd[Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_jit_fwd[Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_jit_fwd[ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_jit_fwd[ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_jit_fwd[ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_jit_fwd[Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_jit_fwd[Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_jit_fwd[Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_jit_inv[AbsTransform(cache_size=0)]",
"test_transforms_py_test_jit_inv[ExpTransform(cache_size=0)]",
"test_transforms_py_test_jit_inv[PowerTransform(cache_size=0)0]",
"test_transforms_py_test_jit_inv[PowerTransform(cache_size=0)1]",
"test_transforms_py_test_jit_inv[PowerTransform(cache_size=0)2]",
"test_transforms_py_test_jit_inv[SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_jit_inv[TanhTransform(cache_size=0)]",
"test_transforms_py_test_jit_inv[AffineTransform(cache_size=0)0]",
"test_transforms_py_test_jit_inv[AffineTransform(cache_size=0)1]",
"test_transforms_py_test_jit_inv[AffineTransform(cache_size=0)2]",
"test_transforms_py_test_jit_inv[AffineTransform(cache_size=0)3]",
"test_transforms_py_test_jit_inv[SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_jit_inv[SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_jit_inv[StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_jit_inv[LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_jit_inv[CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_jit_inv[ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_jit_inv[ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_jit_inv[ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_jit_inv[ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_jit_inv[IndependentTransform(cache_size=0)]",
"test_transforms_py_test_jit_inv[CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_jit_inv[Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_jit_inv[Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_jit_inv[Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_jit_inv[Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_jit_inv[Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_jit_inv[Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_jit_inv[Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_jit_inv[Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_jit_inv[Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_jit_inv[Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_jit_inv[Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_jit_inv[Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_jit_inv[Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_jit_inv[Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_jit_inv[Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_jit_inv[Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_jit_inv[ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_jit_inv[ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_jit_inv[ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_jit_inv[Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_jit_inv[Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_jit_inv[Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_jit_jacobian[AbsTransform(cache_size=0)]",
"test_transforms_py_test_jit_jacobian[ExpTransform(cache_size=0)]",
"test_transforms_py_test_jit_jacobian[PowerTransform(cache_size=0)0]",
"test_transforms_py_test_jit_jacobian[PowerTransform(cache_size=0)1]",
"test_transforms_py_test_jit_jacobian[PowerTransform(cache_size=0)2]",
"test_transforms_py_test_jit_jacobian[SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_jit_jacobian[TanhTransform(cache_size=0)]",
"test_transforms_py_test_jit_jacobian[AffineTransform(cache_size=0)0]",
"test_transforms_py_test_jit_jacobian[AffineTransform(cache_size=0)1]",
"test_transforms_py_test_jit_jacobian[AffineTransform(cache_size=0)2]",
"test_transforms_py_test_jit_jacobian[AffineTransform(cache_size=0)3]",
"test_transforms_py_test_jit_jacobian[SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_jit_jacobian[SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_jit_jacobian[StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_jit_jacobian[LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_jit_jacobian[CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_jit_jacobian[ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_jit_jacobian[ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_jit_jacobian[ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_jit_jacobian[ReshapeTransform(cache_size=0)]",
"test_transforms_py_test_jit_jacobian[IndependentTransform(cache_size=0)]",
"test_transforms_py_test_jit_jacobian[CumulativeDistributionTransform(cache_size=0)]",
"test_transforms_py_test_jit_jacobian[Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_jit_jacobian[Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_jit_jacobian[Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_jit_jacobian[Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_jit_jacobian[Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_jit_jacobian[Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_jit_jacobian[Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_jit_jacobian[Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_jit_jacobian[Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_jit_jacobian[Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_jit_jacobian[Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_jit_jacobian[Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_jit_jacobian[Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_jit_jacobian[Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_jit_jacobian[Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_jit_jacobian[Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_jit_jacobian[ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_jit_jacobian[ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_jit_jacobian[ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_jit_jacobian[Inv(ReshapeTransform)(cache_size=0)]",
"test_transforms_py_test_jit_jacobian[Inv(IndependentTransform)(cache_size=0)]",
"test_transforms_py_test_jit_jacobian[Inv(CumulativeDistributionTransform)(cache_size=0)]",
"test_transforms_py_test_jacobian[AbsTransform(cache_size=1)]",
"test_transforms_py_test_jacobian[ExpTransform(cache_size=1)]",
"test_transforms_py_test_jacobian[PowerTransform(cache_size=1)0]",
"test_transforms_py_test_jacobian[PowerTransform(cache_size=1)1]",
"test_transforms_py_test_jacobian[PowerTransform(cache_size=1)2]",
"test_transforms_py_test_jacobian[SigmoidTransform(cache_size=1)]",
"test_transforms_py_test_jacobian[TanhTransform(cache_size=1)]",
"test_transforms_py_test_jacobian[AffineTransform(cache_size=1)0]",
"test_transforms_py_test_jacobian[AffineTransform(cache_size=1)1]",
"test_transforms_py_test_jacobian[AffineTransform(cache_size=1)2]",
"test_transforms_py_test_jacobian[AffineTransform(cache_size=1)3]",
"test_transforms_py_test_jacobian[SoftmaxTransform(cache_size=1)]",
"test_transforms_py_test_jacobian[SoftplusTransform(cache_size=1)]",
"test_transforms_py_test_jacobian[StickBreakingTransform(cache_size=1)]",
"test_transforms_py_test_jacobian[LowerCholeskyTransform(cache_size=1)]",
"test_transforms_py_test_jacobian[CorrCholeskyTransform(cache_size=1)]",
"test_transforms_py_test_jacobian[ComposeTransform(cache_size=0)0]",
"test_transforms_py_test_jacobian[ComposeTransform(cache_size=0)1]",
"test_transforms_py_test_jacobian[ComposeTransform(cache_size=0)2]",
"test_transforms_py_test_jacobian[ReshapeTransform(cache_size=0)0]",
"test_transforms_py_test_jacobian[IndependentTransform(cache_size=0)0]",
"test_transforms_py_test_jacobian[CumulativeDistributionTransform(cache_size=0)0]",
"test_transforms_py_test_jacobian[Inv(AbsTransform)(cache_size=1)]",
"test_transforms_py_test_jacobian[Inv(ExpTransform)(cache_size=1)]",
"test_transforms_py_test_jacobian[Inv(PowerTransform)(cache_size=1)0]",
"test_transforms_py_test_jacobian[Inv(PowerTransform)(cache_size=1)1]",
"test_transforms_py_test_jacobian[Inv(PowerTransform)(cache_size=1)2]",
"test_transforms_py_test_jacobian[Inv(SigmoidTransform)(cache_size=1)]",
"test_transforms_py_test_jacobian[Inv(TanhTransform)(cache_size=1)]",
"test_transforms_py_test_jacobian[Inv(AffineTransform)(cache_size=1)0]",
"test_transforms_py_test_jacobian[Inv(AffineTransform)(cache_size=1)1]",
"test_transforms_py_test_jacobian[Inv(AffineTransform)(cache_size=1)2]",
"test_transforms_py_test_jacobian[Inv(AffineTransform)(cache_size=1)3]",
"test_transforms_py_test_jacobian[Inv(SoftmaxTransform)(cache_size=1)]",
"test_transforms_py_test_jacobian[Inv(SoftplusTransform)(cache_size=1)]",
"test_transforms_py_test_jacobian[Inv(StickBreakingTransform)(cache_size=1)]",
"test_transforms_py_test_jacobian[Inv(LowerCholeskyTransform)(cache_size=1)]",
"test_transforms_py_test_jacobian[Inv(CorrCholeskyTransform)(cache_size=1)]",
"test_transforms_py_test_jacobian[ComposeTransform(cache_size=0)3]",
"test_transforms_py_test_jacobian[ComposeTransform(cache_size=0)4]",
"test_transforms_py_test_jacobian[ComposeTransform(cache_size=0)5]",
"test_transforms_py_test_jacobian[Inv(ReshapeTransform)(cache_size=0)0]",
"test_transforms_py_test_jacobian[Inv(IndependentTransform)(cache_size=0)0]",
"test_transforms_py_test_jacobian[Inv(CumulativeDistributionTransform)(cache_size=0)0]",
"test_transforms_py_test_jacobian[AbsTransform(cache_size=0)]",
"test_transforms_py_test_jacobian[ExpTransform(cache_size=0)]",
"test_transforms_py_test_jacobian[PowerTransform(cache_size=0)0]",
"test_transforms_py_test_jacobian[PowerTransform(cache_size=0)1]",
"test_transforms_py_test_jacobian[PowerTransform(cache_size=0)2]",
"test_transforms_py_test_jacobian[SigmoidTransform(cache_size=0)]",
"test_transforms_py_test_jacobian[TanhTransform(cache_size=0)]",
"test_transforms_py_test_jacobian[AffineTransform(cache_size=0)0]",
"test_transforms_py_test_jacobian[AffineTransform(cache_size=0)1]",
"test_transforms_py_test_jacobian[AffineTransform(cache_size=0)2]",
"test_transforms_py_test_jacobian[AffineTransform(cache_size=0)3]",
"test_transforms_py_test_jacobian[SoftmaxTransform(cache_size=0)]",
"test_transforms_py_test_jacobian[SoftplusTransform(cache_size=0)]",
"test_transforms_py_test_jacobian[StickBreakingTransform(cache_size=0)]",
"test_transforms_py_test_jacobian[LowerCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_jacobian[CorrCholeskyTransform(cache_size=0)]",
"test_transforms_py_test_jacobian[ComposeTransform(cache_size=0)6]",
"test_transforms_py_test_jacobian[ComposeTransform(cache_size=0)7]",
"test_transforms_py_test_jacobian[ComposeTransform(cache_size=0)8]",
"test_transforms_py_test_jacobian[ReshapeTransform(cache_size=0)1]",
"test_transforms_py_test_jacobian[IndependentTransform(cache_size=0)1]",
"test_transforms_py_test_jacobian[CumulativeDistributionTransform(cache_size=0)1]",
"test_transforms_py_test_jacobian[Inv(AbsTransform)(cache_size=0)]",
"test_transforms_py_test_jacobian[Inv(ExpTransform)(cache_size=0)]",
"test_transforms_py_test_jacobian[Inv(PowerTransform)(cache_size=0)0]",
"test_transforms_py_test_jacobian[Inv(PowerTransform)(cache_size=0)1]",
"test_transforms_py_test_jacobian[Inv(PowerTransform)(cache_size=0)2]",
"test_transforms_py_test_jacobian[Inv(SigmoidTransform)(cache_size=0)]",
"test_transforms_py_test_jacobian[Inv(TanhTransform)(cache_size=0)]",
"test_transforms_py_test_jacobian[Inv(AffineTransform)(cache_size=0)0]",
"test_transforms_py_test_jacobian[Inv(AffineTransform)(cache_size=0)1]",
"test_transforms_py_test_jacobian[Inv(AffineTransform)(cache_size=0)2]",
"test_transforms_py_test_jacobian[Inv(AffineTransform)(cache_size=0)3]",
"test_transforms_py_test_jacobian[Inv(SoftmaxTransform)(cache_size=0)]",
"test_transforms_py_test_jacobian[Inv(SoftplusTransform)(cache_size=0)]",
"test_transforms_py_test_jacobian[Inv(StickBreakingTransform)(cache_size=0)]",
"test_transforms_py_test_jacobian[Inv(LowerCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_jacobian[Inv(CorrCholeskyTransform)(cache_size=0)]",
"test_transforms_py_test_jacobian[ComposeTransform(cache_size=0)9]",
"test_transforms_py_test_jacobian[ComposeTransform(cache_size=0)10]",
"test_transforms_py_test_jacobian[ComposeTransform(cache_size=0)11]",
"test_transforms_py_test_jacobian[Inv(ReshapeTransform)(cache_size=0)1]",
"test_transforms_py_test_jacobian[Inv(IndependentTransform)(cache_size=0)1]",
"test_transforms_py_test_jacobian[Inv(CumulativeDistributionTransform)(cache_size=0)1]",
"test_transforms_py_test_jacobian[ComposeTransform(cache_size=0)12]",
"test_transforms_py_test_compose_affine[(0,)]",
"test_transforms_py_test_compose_affine[(1,)]",
"test_transforms_py_test_compose_affine[(2, 3)]",
"test_transforms_py_test_compose_affine[(0, 1, 2)]",
"test_transforms_py_test_compose_affine[(1, 2, 0)]",
"test_transforms_py_test_compose_affine[(2, 0, 1)]",
"test_transforms_py_test_compose_reshape[()]",
"test_transforms_py_test_compose_reshape[(6,)]",
"test_transforms_py_test_compose_reshape[(5, 4)]",
"test_transforms_py_test_transformed_distribution[0-0-0-0-()]",
"test_transforms_py_test_transformed_distribution[0-0-0-0-(7,)]",
"test_transforms_py_test_transformed_distribution[0-0-0-1-()]",
"test_transforms_py_test_transformed_distribution[0-0-0-1-(7,)]",
"test_transforms_py_test_transformed_distribution[0-0-0-2-()]",
"test_transforms_py_test_transformed_distribution[0-0-0-2-(7,)]",
"test_transforms_py_test_transformed_distribution[0-0-1-0-()]",
"test_transforms_py_test_transformed_distribution[0-0-1-0-(7,)]",
"test_transforms_py_test_transformed_distribution[0-0-1-1-()]",
"test_transforms_py_test_transformed_distribution[0-0-1-1-(7,)]",
"test_transforms_py_test_transformed_distribution[0-0-1-2-()]",
"test_transforms_py_test_transformed_distribution[0-0-1-2-(7,)]",
"test_transforms_py_test_transformed_distribution[0-0-2-0-()]",
"test_transforms_py_test_transformed_distribution[0-0-2-0-(7,)]",
"test_transforms_py_test_transformed_distribution[0-0-2-1-()]",
"test_transforms_py_test_transformed_distribution[0-0-2-1-(7,)]",
"test_transforms_py_test_transformed_distribution[0-0-2-2-()]",
"test_transforms_py_test_transformed_distribution[0-0-2-2-(7,)]",
"test_transforms_py_test_transformed_distribution[0-1-0-0-()]",
"test_transforms_py_test_transformed_distribution[0-1-0-0-(7,)]",
"test_transforms_py_test_transformed_distribution[0-1-0-1-()]",
"test_transforms_py_test_transformed_distribution[0-1-0-1-(7,)]",
"test_transforms_py_test_transformed_distribution[0-1-0-2-()]",
"test_transforms_py_test_transformed_distribution[0-1-0-2-(7,)]",
"test_transforms_py_test_transformed_distribution[0-1-1-0-()]",
"test_transforms_py_test_transformed_distribution[0-1-1-0-(7,)]",
"test_transforms_py_test_transformed_distribution[0-1-1-1-()]",
"test_transforms_py_test_transformed_distribution[0-1-1-1-(7,)]",
"test_transforms_py_test_transformed_distribution[0-1-1-2-()]",
"test_transforms_py_test_transformed_distribution[0-1-1-2-(7,)]",
"test_transforms_py_test_transformed_distribution[0-1-2-0-()]",
"test_transforms_py_test_transformed_distribution[0-1-2-0-(7,)]",
"test_transforms_py_test_transformed_distribution[0-1-2-1-()]",
"test_transforms_py_test_transformed_distribution[0-1-2-1-(7,)]",
"test_transforms_py_test_transformed_distribution[0-1-2-2-()]",
"test_transforms_py_test_transformed_distribution[0-1-2-2-(7,)]",
"test_transforms_py_test_transformed_distribution[0-2-0-0-()]",
"test_transforms_py_test_transformed_distribution[0-2-0-0-(7,)]",
"test_transforms_py_test_transformed_distribution[0-2-0-1-()]",
"test_transforms_py_test_transformed_distribution[0-2-0-1-(7,)]",
"test_transforms_py_test_transformed_distribution[0-2-0-2-()]",
"test_transforms_py_test_transformed_distribution[0-2-0-2-(7,)]",
"test_transforms_py_test_transformed_distribution[0-2-1-0-()]",
"test_transforms_py_test_transformed_distribution[0-2-1-0-(7,)]",
"test_transforms_py_test_transformed_distribution[0-2-1-1-()]",
"test_transforms_py_test_transformed_distribution[0-2-1-1-(7,)]",
"test_transforms_py_test_transformed_distribution[0-2-1-2-()]",
"test_transforms_py_test_transformed_distribution[0-2-1-2-(7,)]",
"test_transforms_py_test_transformed_distribution[0-2-2-0-()]",
"test_transforms_py_test_transformed_distribution[0-2-2-0-(7,)]",
"test_transforms_py_test_transformed_distribution[0-2-2-1-()]",
"test_transforms_py_test_transformed_distribution[0-2-2-1-(7,)]",
"test_transforms_py_test_transformed_distribution[0-2-2-2-()]",
"test_transforms_py_test_transformed_distribution[0-2-2-2-(7,)]",
"test_transforms_py_test_transformed_distribution[1-0-0-0-()]",
"test_transforms_py_test_transformed_distribution[1-0-0-0-(7,)]",
"test_transforms_py_test_transformed_distribution[1-0-0-1-()]",
"test_transforms_py_test_transformed_distribution[1-0-0-1-(7,)]",
"test_transforms_py_test_transformed_distribution[1-0-0-2-()]",
"test_transforms_py_test_transformed_distribution[1-0-0-2-(7,)]",
"test_transforms_py_test_transformed_distribution[1-0-1-0-()]",
"test_transforms_py_test_transformed_distribution[1-0-1-0-(7,)]",
"test_transforms_py_test_transformed_distribution[1-0-1-1-()]",
"test_transforms_py_test_transformed_distribution[1-0-1-1-(7,)]",
"test_transforms_py_test_transformed_distribution[1-0-1-2-()]",
"test_transforms_py_test_transformed_distribution[1-0-1-2-(7,)]",
"test_transforms_py_test_transformed_distribution[1-0-2-0-()]",
"test_transforms_py_test_transformed_distribution[1-0-2-0-(7,)]",
"test_transforms_py_test_transformed_distribution[1-0-2-1-()]",
"test_transforms_py_test_transformed_distribution[1-0-2-1-(7,)]",
"test_transforms_py_test_transformed_distribution[1-0-2-2-()]",
"test_transforms_py_test_transformed_distribution[1-0-2-2-(7,)]",
"test_transforms_py_test_transformed_distribution[1-1-0-0-()]",
"test_transforms_py_test_transformed_distribution[1-1-0-0-(7,)]",
"test_transforms_py_test_transformed_distribution[1-1-0-1-()]",
"test_transforms_py_test_transformed_distribution[1-1-0-1-(7,)]",
"test_transforms_py_test_transformed_distribution[1-1-0-2-()]",
"test_transforms_py_test_transformed_distribution[1-1-0-2-(7,)]",
"test_transforms_py_test_transformed_distribution[1-1-1-0-()]",
"test_transforms_py_test_transformed_distribution[1-1-1-0-(7,)]",
"test_transforms_py_test_transformed_distribution[1-1-1-1-()]",
"test_transforms_py_test_transformed_distribution[1-1-1-1-(7,)]",
"test_transforms_py_test_transformed_distribution[1-1-1-2-()]",
"test_transforms_py_test_transformed_distribution[1-1-1-2-(7,)]",
"test_transforms_py_test_transformed_distribution[1-1-2-0-()]",
"test_transforms_py_test_transformed_distribution[1-1-2-0-(7,)]",
"test_transforms_py_test_transformed_distribution[1-1-2-1-()]",
"test_transforms_py_test_transformed_distribution[1-1-2-1-(7,)]",
"test_transforms_py_test_transformed_distribution[1-1-2-2-()]",
"test_transforms_py_test_transformed_distribution[1-1-2-2-(7,)]",
"test_transforms_py_test_transformed_distribution[1-2-0-0-()]",
"test_transforms_py_test_transformed_distribution[1-2-0-0-(7,)]",
"test_transforms_py_test_transformed_distribution[1-2-0-1-()]",
"test_transforms_py_test_transformed_distribution[1-2-0-1-(7,)]",
"test_transforms_py_test_transformed_distribution[1-2-0-2-()]",
"test_transforms_py_test_transformed_distribution[1-2-0-2-(7,)]",
"test_transforms_py_test_transformed_distribution[1-2-1-0-()]",
"test_transforms_py_test_transformed_distribution[1-2-1-0-(7,)]",
"test_transforms_py_test_transformed_distribution[1-2-1-1-()]",
"test_transforms_py_test_transformed_distribution[1-2-1-1-(7,)]",
"test_transforms_py_test_transformed_distribution[1-2-1-2-()]",
"test_transforms_py_test_transformed_distribution[1-2-1-2-(7,)]",
"test_transforms_py_test_transformed_distribution[1-2-2-0-()]",
"test_transforms_py_test_transformed_distribution[1-2-2-0-(7,)]",
"test_transforms_py_test_transformed_distribution[1-2-2-1-()]",
"test_transforms_py_test_transformed_distribution[1-2-2-1-(7,)]",
"test_transforms_py_test_transformed_distribution[1-2-2-2-()]",
"test_transforms_py_test_transformed_distribution[1-2-2-2-(7,)]",
"test_transforms_py_test_transformed_distribution[2-0-0-0-()]",
"test_transforms_py_test_transformed_distribution[2-0-0-0-(7,)]",
"test_transforms_py_test_transformed_distribution[2-0-0-1-()]",
"test_transforms_py_test_transformed_distribution[2-0-0-1-(7,)]",
"test_transforms_py_test_transformed_distribution[2-0-0-2-()]",
"test_transforms_py_test_transformed_distribution[2-0-0-2-(7,)]",
"test_transforms_py_test_transformed_distribution[2-0-1-0-()]",
"test_transforms_py_test_transformed_distribution[2-0-1-0-(7,)]",
"test_transforms_py_test_transformed_distribution[2-0-1-1-()]",
"test_transforms_py_test_transformed_distribution[2-0-1-1-(7,)]",
"test_transforms_py_test_transformed_distribution[2-0-1-2-()]",
"test_transforms_py_test_transformed_distribution[2-0-1-2-(7,)]",
"test_transforms_py_test_transformed_distribution[2-0-2-0-()]",
"test_transforms_py_test_transformed_distribution[2-0-2-0-(7,)]",
"test_transforms_py_test_transformed_distribution[2-0-2-1-()]",
"test_transforms_py_test_transformed_distribution[2-0-2-1-(7,)]",
"test_transforms_py_test_transformed_distribution[2-0-2-2-()]",
"test_transforms_py_test_transformed_distribution[2-0-2-2-(7,)]",
"test_transforms_py_test_transformed_distribution[2-1-0-0-()]",
"test_transforms_py_test_transformed_distribution[2-1-0-0-(7,)]",
"test_transforms_py_test_transformed_distribution[2-1-0-1-()]",
"test_transforms_py_test_transformed_distribution[2-1-0-1-(7,)]",
"test_transforms_py_test_transformed_distribution[2-1-0-2-()]",
"test_transforms_py_test_transformed_distribution[2-1-0-2-(7,)]",
"test_transforms_py_test_transformed_distribution[2-1-1-0-()]",
"test_transforms_py_test_transformed_distribution[2-1-1-0-(7,)]",
"test_transforms_py_test_transformed_distribution[2-1-1-1-()]",
"test_transforms_py_test_transformed_distribution[2-1-1-1-(7,)]",
"test_transforms_py_test_transformed_distribution[2-1-1-2-()]",
"test_transforms_py_test_transformed_distribution[2-1-1-2-(7,)]",
"test_transforms_py_test_transformed_distribution[2-1-2-0-()]",
"test_transforms_py_test_transformed_distribution[2-1-2-0-(7,)]",
"test_transforms_py_test_transformed_distribution[2-1-2-1-()]",
"test_transforms_py_test_transformed_distribution[2-1-2-1-(7,)]",
"test_transforms_py_test_transformed_distribution[2-1-2-2-()]",
"test_transforms_py_test_transformed_distribution[2-1-2-2-(7,)]",
"test_transforms_py_test_transformed_distribution[2-2-0-0-()]",
"test_transforms_py_test_transformed_distribution[2-2-0-0-(7,)]",
"test_transforms_py_test_transformed_distribution[2-2-0-1-()]",
"test_transforms_py_test_transformed_distribution[2-2-0-1-(7,)]",
"test_transforms_py_test_transformed_distribution[2-2-0-2-()]",
"test_transforms_py_test_transformed_distribution[2-2-0-2-(7,)]",
"test_transforms_py_test_transformed_distribution[2-2-1-0-()]",
"test_transforms_py_test_transformed_distribution[2-2-1-0-(7,)]",
"test_transforms_py_test_transformed_distribution[2-2-1-1-()]",
"test_transforms_py_test_transformed_distribution[2-2-1-1-(7,)]",
"test_transforms_py_test_transformed_distribution[2-2-1-2-()]",
"test_transforms_py_test_transformed_distribution[2-2-1-2-(7,)]",
"test_transforms_py_test_transformed_distribution[2-2-2-0-()]",
"test_transforms_py_test_transformed_distribution[2-2-2-0-(7,)]",
"test_transforms_py_test_transformed_distribution[2-2-2-1-()]",
"test_transforms_py_test_transformed_distribution[2-2-2-1-(7,)]",
"test_transforms_py_test_transformed_distribution[2-2-2-2-()]",
"test_transforms_py_test_transformed_distribution[2-2-2-2-(7,)]",
"test_transforms_py_test_transformed_distribution[3-0-0-0-()]",
"test_transforms_py_test_transformed_distribution[3-0-0-0-(7,)]",
"test_transforms_py_test_transformed_distribution[3-0-0-1-()]",
"test_transforms_py_test_transformed_distribution[3-0-0-1-(7,)]",
"test_transforms_py_test_transformed_distribution[3-0-0-2-()]",
"test_transforms_py_test_transformed_distribution[3-0-0-2-(7,)]",
"test_transforms_py_test_transformed_distribution[3-0-1-0-()]",
"test_transforms_py_test_transformed_distribution[3-0-1-0-(7,)]",
"test_transforms_py_test_transformed_distribution[3-0-1-1-()]",
"test_transforms_py_test_transformed_distribution[3-0-1-1-(7,)]",
"test_transforms_py_test_transformed_distribution[3-0-1-2-()]",
"test_transforms_py_test_transformed_distribution[3-0-1-2-(7,)]",
"test_transforms_py_test_transformed_distribution[3-0-2-0-()]",
"test_transforms_py_test_transformed_distribution[3-0-2-0-(7,)]",
"test_transforms_py_test_transformed_distribution[3-0-2-1-()]",
"test_transforms_py_test_transformed_distribution[3-0-2-1-(7,)]",
"test_transforms_py_test_transformed_distribution[3-0-2-2-()]",
"test_transforms_py_test_transformed_distribution[3-0-2-2-(7,)]",
"test_transforms_py_test_transformed_distribution[3-1-0-0-()]",
"test_transforms_py_test_transformed_distribution[3-1-0-0-(7,)]",
"test_transforms_py_test_transformed_distribution[3-1-0-1-()]",
"test_transforms_py_test_transformed_distribution[3-1-0-1-(7,)]",
"test_transforms_py_test_transformed_distribution[3-1-0-2-()]",
"test_transforms_py_test_transformed_distribution[3-1-0-2-(7,)]",
"test_transforms_py_test_transformed_distribution[3-1-1-0-()]",
"test_transforms_py_test_transformed_distribution[3-1-1-0-(7,)]",
"test_transforms_py_test_transformed_distribution[3-1-1-1-()]",
"test_transforms_py_test_transformed_distribution[3-1-1-1-(7,)]",
"test_transforms_py_test_transformed_distribution[3-1-1-2-()]",
"test_transforms_py_test_transformed_distribution[3-1-1-2-(7,)]",
"test_transforms_py_test_transformed_distribution[3-1-2-0-()]",
"test_transforms_py_test_transformed_distribution[3-1-2-0-(7,)]",
"test_transforms_py_test_transformed_distribution[3-1-2-1-()]",
"test_transforms_py_test_transformed_distribution[3-1-2-1-(7,)]",
"test_transforms_py_test_transformed_distribution[3-1-2-2-()]",
"test_transforms_py_test_transformed_distribution[3-1-2-2-(7,)]",
"test_transforms_py_test_transformed_distribution[3-2-0-0-()]",
"test_transforms_py_test_transformed_distribution[3-2-0-0-(7,)]",
"test_transforms_py_test_transformed_distribution[3-2-0-1-()]",
"test_transforms_py_test_transformed_distribution[3-2-0-1-(7,)]",
"test_transforms_py_test_transformed_distribution[3-2-0-2-()]",
"test_transforms_py_test_transformed_distribution[3-2-0-2-(7,)]",
"test_transforms_py_test_transformed_distribution[3-2-1-0-()]",
"test_transforms_py_test_transformed_distribution[3-2-1-0-(7,)]",
"test_transforms_py_test_transformed_distribution[3-2-1-1-()]",
"test_transforms_py_test_transformed_distribution[3-2-1-1-(7,)]",
"test_transforms_py_test_transformed_distribution[3-2-1-2-()]",
"test_transforms_py_test_transformed_distribution[3-2-1-2-(7,)]",
"test_transforms_py_test_transformed_distribution[3-2-2-0-()]",
"test_transforms_py_test_transformed_distribution[3-2-2-0-(7,)]",
"test_transforms_py_test_transformed_distribution[3-2-2-1-()]",
"test_transforms_py_test_transformed_distribution[3-2-2-1-(7,)]",
"test_transforms_py_test_transformed_distribution[3-2-2-2-()]",
"test_transforms_py_test_transformed_distribution[3-2-2-2-(7,)]",
"test_transforms_py_test_save_load_transform",

# TODO: [PYTORCH-9249]
"test_c10d_cncl_py_DistributedDataParallelTest_test_ddp_checkpointing_dynamic_module",
"test_c10d_cncl_py_DistributedDataParallelTest_test_ddp_checkpointing_dynamic_weight_sharing",
"test_c10d_cncl_py_DistributedDataParallelTest_test_ddp_checkpointing_once_use_reentrant_False",
"test_c10d_cncl_py_DistributedDataParallelTest_test_ddp_checkpointing_once_use_reentrant_True",
"test_c10d_cncl_py_DistributedDataParallelTest_test_ddp_checkpointing_twice_static_graph_use_reentrant_False",
"test_c10d_cncl_py_DistributedDataParallelTest_test_ddp_checkpointing_twice_static_graph_use_reentrant_True",
"test_c10d_cncl_py_DistributedDataParallelTest_test_ddp_checkpointing_twice_use_reentrant_False",
"test_c10d_cncl_py_DistributedDataParallelTest_test_ddp_checkpointing_twice_use_reentrant_True",
"test_c10d_cncl_py_DistributedDataParallelTest_test_ddp_checkpointing_twice_weight_sharing",
"test_c10d_cncl_py_DistributedDataParallelTest_test_ddp_checkpointing_unused_params_use_reentrant_False",
"test_c10d_cncl_py_DistributedDataParallelTest_test_ddp_checkpointing_unused_params_use_reentrant_True",
"test_c10d_cncl_py_DistributedDataParallelTest_test_ddp_checkpointing_weight_sharing_use_reentrant_False",
"test_c10d_cncl_py_DistributedDataParallelTest_test_ddp_checkpointing_weight_sharing_use_reentrant_True",
#TODO:[PYTORCH-9250]
"test_c10d_cncl_py_ProcessGroupCNCLTest_test_gather_ops",
"test_c10d_cncl_py_ProcessGroupCNCLTest_test_gather_checks",
"test_c10d_cncl_py_ProcessGroupCNCLTest_test_gather_stress",
"test_c10d_object_collectives_py_TestObjectCollectives_test_gather_object",

#TODO:[PYTORCH-9251]
"test_c10d_cncl_py_ProcessGroupCNCLTest_test_reduce_scatter_base_ops",
"test_c10d_cncl_py_ProcessGroupCNCLTest_test_reduce_scatter_base_basics",
"test_c10d_cncl_py_ProcessGroupCNCLTest_test_reduce_scatter_ops",

# TODO:[PYTORCH-9252]
"test_c10d_cncl_py_ProcessGroupCNCLTest_test_scatter_checks",
"test_c10d_cncl_py_ProcessGroupCNCLTest_test_scatter_ops",
"test_c10d_cncl_py_ProcessGroupCNCLTest_test_scatter_stress",
"test_c10d_cncl_py_CompilerTest_test_scatter_work_wait_mlu",
"test_c10d_object_collectives_py_TestObjectCollectives_test_scatter_object_list",

# TODO:[PYTORCH-9234]
"test_c10d_cncl_py_DistributedDataParallelTest_test_cncl_propagate_error_reason",
"test_c10d_cncl_py_CnclErrorHandlingTest_test_cncl_blocking_wait_with_barrier",
"test_c10d_cncl_py_CnclErrorHandlingTest_test_cncl_errors_blocking_clean_exit",
"test_c10d_cncl_py_CnclErrorHandlingTest_test_cncl_errors_blocking_nonzero_exit",
"test_c10d_cncl_py_CnclErrorHandlingTest_test_cncl_errors_blocking_sigkill",
"test_c10d_cncl_py_CnclErrorHandlingTest_test_cncl_errors_blocking_sigterm",
"test_c10d_cncl_py_CnclErrorHandlingTest_test_cncl_timeout",

# TODO: [PYTORCH-9236]
"test_c10d_cncl_py_CommTest_test_cncl_barrier_timeout",
"test_c10d_cncl_py_CommTest_test_cncl_barrier_timeout_new_group",
"test_c10d_cncl_py_CommTest_test_cncl_barrier_timeout_new_group_non_member",

# TODO: [PYTORCH-9232]
"test_c10d_cncl_py_DistributedDataParallelTest_test_cncl_backend_2mlu_module",
"test_c10d_cncl_py_DistributedDataParallelTest_test_cncl_backend_4mlu_module",
"test_c10d_cncl_py_DistributedDataParallelTest_test_cncl_backend_multi_device_module_device_ids_None",

# TODO: [PYTORCH-9243]
"test_c10d_cncl_py_DistributedDataParallelTest_test_fp16",
"test_c10d_cncl_py_DistributedDataParallelTest_test_fp16_grad_is_view",
"test_c10d_cncl_py_DistributedDataParallelTest_test_grad_layout_2devicemodule",

# TODO:[PYTORCH-9238]
"test_c10d_cncl_py_CommTest_test_pass_cncl_options_high_priority_stream",

# TODO: [PYTORCH-9240]
"test_c10d_cncl_py_CommTest_test_sequence_num_incremented_cncl_default",
"test_c10d_cncl_py_CommTest_test_sequence_num_set_cncl_new_group",
"test_c10d_cncl_py_CommTest_test_sequence_num_set_default_pg_cncl",

# TODO:[PYTORCH-9241]
"test_c10d_cncl_py_CommTest_test_cncl_barrier_device_ids",
"test_c10d_cncl_py_CommTest_test_cncl_barrier_device_ids_function_argument",

# TODO:[PYTORCH-9254]
"test_c10d_cncl_py_DistributedDataParallelTest_test_grad_layout_1devicemodule_1replicaperprocess",
"test_c10d_cncl_py_DistributedDataParallelTest_test_sync_batch_norm_empty_input",
"test_c10d_cncl_py_DistributedDataParallelTest_test_sync_batch_norm_only_empty_input",

# TODO:[PYTORCH-9258]
"test_c10d_cncl_py_CommTest_test_all_reduce_coalesced_cncl",

# TODO:[PYTORCH-9271]
"test_c10d_common_py_ReduceOpTest_test_op_isinstance_of_reduceop",

# TODO:[PYTORCH-9284]
"test_ddp_hooks_py_DistributedDataParallelCommHookTest_test_ddp_comm_hook_quantize_per_channel_hook",
"test_ddp_hooks_py_DistributedDataParallelCommHookTest_test_ddp_comm_hook_quantize_per_tensor_hook",

"test_c10d_spawn_cncl_py_TestDistributedNNFunctionsCncl_test_all_gather_base",

]
